import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest5 {

    public static boolean debug = false;

    @Test
    public void test2501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2501");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.transform.FastFourierTransformer.verifyInterval(10.0d, (double) 10L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [10.0, 10.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2502");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer23 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer23.transform2(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray32 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray30, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray30);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer22.inversetransform(complexArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer35 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer35.transform2(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray44 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer22.transform(complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer0.transform(complexArray50);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer52 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray57 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray57);
        double[] doubleArray60 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray57, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray60);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer52.transform(doubleArray60);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer63 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray68 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray70 = fastFourierTransformer63.transform2(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray72 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray70, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray70);
        org.apache.commons.math.complex.Complex[] complexArray75 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray70, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray77 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray70, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer52.inversetransform2(complexArray77);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer0.inversetransform2(complexArray77);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer80 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray85 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray85);
        org.apache.commons.math.complex.Complex[] complexArray87 = fastFourierTransformer80.transform2(doubleArray85);
        double[] doubleArray89 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray85, (double) (short) -1);
        double[] doubleArray91 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray85, (double) (-1.0f));
        org.apache.commons.math.complex.Complex[] complexArray92 = fastFourierTransformer0.inversetransform2(doubleArray85);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction93 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray97 = fastFourierTransformer0.inversetransform2(univariateRealFunction93, (double) 100.0f, (double) 100.0f, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [100.0, 100.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(complexArray77);
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray79);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray87);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray92);
    }

    @Test
    public void test2503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2503");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer22.transform2(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer30 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray35 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer30.transform2(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray39 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray37, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray37);
        org.apache.commons.math.complex.Complex[] complexArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray37, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer22.transform2(complexArray42);
        double[] doubleArray48 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray48);
        double[] doubleArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray48, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer22.transform2(doubleArray51);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer0.inversetransform2(doubleArray51);
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        double[] doubleArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray58, (double) (byte) 100);
        double[] doubleArray63 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray58, (double) 0);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray65 = fastFourierTransformer0.inversetransform2(doubleArray58);
        double[] doubleArray70 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray70);
        double[] doubleArray73 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray70, (double) 10.0f);
        double[] doubleArray75 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray73, (double) 10L);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray75);
        double[] doubleArray78 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray75, 100.0d);
        double[] doubleArray80 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray75, (double) (byte) 0);
        org.apache.commons.math.complex.Complex[] complexArray81 = fastFourierTransformer0.transform(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray81);
    }

    @Test
    public void test2504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2504");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray18);
        org.apache.commons.math.complex.Complex[] complexArray23 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray26 = fastFourierTransformer0.inversetransform2(complexArray25);
        double[] doubleArray31 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        double[] doubleArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, (double) 10.0f);
        double[] doubleArray36 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer0.transform(doubleArray34);
        double[] doubleArray42 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray42);
        double[] doubleArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray42, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray45);
        double[] doubleArray48 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray45, 10.0d);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer0.transform2(doubleArray48);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer50 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray55 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer50.transform2(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray59 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray57, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray57);
        org.apache.commons.math.complex.Complex[] complexArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray57, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray64 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray57, (double) '#');
        org.apache.commons.math.complex.Complex[] complexArray65 = fastFourierTransformer0.inversetransform(complexArray57);
        double[] doubleArray66 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray67 = fastFourierTransformer0.inversetransform2(doubleArray66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray26);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(complexArray65);
    }

    @Test
    public void test2505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2505");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer16 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray21 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer16.transform2(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray23);
        org.apache.commons.math.complex.Complex[] complexArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer8.transform2(complexArray28);
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        double[] doubleArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer8.transform(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer0.transform(complexArray38);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer40 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray45 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray45);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer40.transform2(doubleArray45);
        org.apache.commons.math.complex.Complex[] complexArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray47, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray49, (double) (byte) 100);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer0.inversetransform(complexArray49);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer53 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer53.transform2(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray60, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray60);
        org.apache.commons.math.complex.Complex[] complexArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray60, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray67 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray60, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer0.inversetransform(complexArray60);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer69 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer70 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray75 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray75);
        org.apache.commons.math.complex.Complex[] complexArray77 = fastFourierTransformer70.transform2(doubleArray75);
        org.apache.commons.math.complex.Complex[] complexArray79 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray77, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray77);
        org.apache.commons.math.complex.Complex[] complexArray81 = fastFourierTransformer69.inversetransform(complexArray77);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer82 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray87 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray87);
        org.apache.commons.math.complex.Complex[] complexArray89 = fastFourierTransformer82.transform2(doubleArray87);
        double[] doubleArray91 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray87, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray92 = fastFourierTransformer69.inversetransform(doubleArray87);
        org.apache.commons.math.complex.Complex[] complexArray93 = fastFourierTransformer0.transform2(complexArray92);
        org.apache.commons.math.complex.Complex[] complexArray95 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray93, 0.0d);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray67);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray77);
        org.junit.Assert.assertNotNull(complexArray79);
        org.junit.Assert.assertNotNull(complexArray81);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray89);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray92);
        org.junit.Assert.assertNotNull(complexArray93);
        org.junit.Assert.assertNotNull(complexArray95);
    }

    @Test
    public void test2506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2506");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer16 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray21 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer16.transform2(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray23);
        org.apache.commons.math.complex.Complex[] complexArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer8.transform2(complexArray28);
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        double[] doubleArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer8.transform(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer0.transform(complexArray38);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer40 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray45 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray45);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer40.transform2(doubleArray45);
        double[] doubleArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray45, (double) (short) -1);
        double[] doubleArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray45, (double) (-1.0f));
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer0.transform2(doubleArray45);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer53 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer54 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray59 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray59);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer54.transform2(doubleArray59);
        org.apache.commons.math.complex.Complex[] complexArray63 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray61, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer53.inversetransform(complexArray61);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer65 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray70 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray70);
        double[] doubleArray73 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray70, (double) 10.0f);
        double[] doubleArray75 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray73, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray76 = fastFourierTransformer65.inversetransform(doubleArray75);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer77 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray82 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray82);
        org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer77.transform2(doubleArray82);
        org.apache.commons.math.complex.Complex[] complexArray86 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray84, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray87 = fastFourierTransformer65.inversetransform2(complexArray86);
        org.apache.commons.math.complex.Complex[] complexArray88 = fastFourierTransformer53.inversetransform2(complexArray87);
        org.apache.commons.math.complex.Complex[] complexArray89 = fastFourierTransformer0.transform(complexArray87);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction90 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray94 = fastFourierTransformer0.transform(univariateRealFunction90, (double) 0L, (double) 0, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [0.0, 0.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray76);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray84);
        org.junit.Assert.assertNotNull(complexArray86);
        org.junit.Assert.assertNotNull(complexArray87);
        org.junit.Assert.assertNotNull(complexArray88);
        org.junit.Assert.assertNotNull(complexArray89);
    }

    @Test
    public void test2507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2507");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray2 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray0, (double) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2508");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray20);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray27 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray28 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer29 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray36 = fastFourierTransformer29.transform2(doubleArray34);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer37 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray42 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray42);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer37.transform2(doubleArray42);
        org.apache.commons.math.complex.Complex[] complexArray46 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray44, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray44);
        org.apache.commons.math.complex.Complex[] complexArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray44, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer29.transform2(complexArray49);
        double[] doubleArray55 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray55);
        double[] doubleArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray55, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray59 = fastFourierTransformer29.transform(doubleArray55);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer60 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer61 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray66 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray66);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer61.transform2(doubleArray66);
        org.apache.commons.math.complex.Complex[] complexArray70 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray68, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray68);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer60.inversetransform(complexArray68);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer73 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray78 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray78);
        org.apache.commons.math.complex.Complex[] complexArray80 = fastFourierTransformer73.transform2(doubleArray78);
        org.apache.commons.math.complex.Complex[] complexArray81 = fastFourierTransformer60.transform(complexArray80);
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer29.transform2(complexArray81);
        double[] doubleArray87 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray87);
        double[] doubleArray90 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray87, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray90);
        org.apache.commons.math.complex.Complex[] complexArray92 = fastFourierTransformer29.inversetransform2(doubleArray90);
        org.apache.commons.math.complex.Complex[] complexArray93 = fastFourierTransformer0.transform2(doubleArray90);
        double[] doubleArray95 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray90, (double) (byte) 1);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray90);
        double[] doubleArray98 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray90, (double) 1.0f);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray27);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray36);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray80);
        org.junit.Assert.assertNotNull(complexArray81);
        org.junit.Assert.assertNotNull(complexArray82);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray92);
        org.junit.Assert.assertNotNull(complexArray93);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray95), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray98), "[-10.0, 970.0, 10.0, 100.0]");
    }

    @Test
    public void test2509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2509");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        double[] doubleArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray38, (double) 10.0f);
        double[] doubleArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray41, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer0.inversetransform(doubleArray43);
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        double[] doubleArray52 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray49, 0.0d);
        double[] doubleArray54 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray52, (double) (byte) 100);
        double[] doubleArray56 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray52, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer0.transform2(doubleArray56);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer58 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray63 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray63);
        double[] doubleArray66 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray63, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray66);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer58.transform(doubleArray66);
        double[] doubleArray73 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray73);
        double[] doubleArray76 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray73, (double) 10.0f);
        double[] doubleArray78 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray73, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer58.transform2(doubleArray73);
        org.apache.commons.math.complex.Complex[] complexArray80 = fastFourierTransformer0.transform(doubleArray73);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction81 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray85 = fastFourierTransformer0.inversetransform2(univariateRealFunction81, (double) 1.0f, (double) ' ', (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray79);
        org.junit.Assert.assertNotNull(complexArray80);
    }

    @Test
    public void test2510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2510");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer16 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray21 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer16.transform2(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray23);
        org.apache.commons.math.complex.Complex[] complexArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer8.transform2(complexArray28);
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        double[] doubleArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer8.transform(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer0.transform(complexArray38);
        double[] doubleArray44 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray44);
        double[] doubleArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray44, (double) 10.0f);
        double[] doubleArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray47, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer0.transform2(doubleArray47);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer51 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray56 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray56);
        org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer51.transform2(doubleArray56);
        double[] doubleArray60 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray56, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer0.transform(doubleArray56);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray61);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray61);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray61);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray61);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray61);
    }

    @Test
    public void test2511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2511");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray36 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray36);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer31.transform2(doubleArray36);
        org.apache.commons.math.complex.Complex[] complexArray40 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray38, (double) 'a');
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer0.transform2(complexArray40);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer42 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray47 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer42.transform2(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray49, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray53 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray51, (double) (byte) 100);
        org.apache.commons.math.complex.Complex[] complexArray55 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray53, (double) 0);
        org.apache.commons.math.complex.Complex[] complexArray57 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray53, (double) 'a');
        org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer0.transform(complexArray53);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction59 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer0.transform(univariateRealFunction59, (double) (byte) -1, 0.0d, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(complexArray40);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(complexArray58);
    }

    @Test
    public void test2512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2512");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        double[] doubleArray9 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray6, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray9);
        org.apache.commons.math.complex.Complex[] complexArray11 = fastFourierTransformer1.inversetransform(doubleArray9);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.transform2(complexArray11);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer14 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray19 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray19);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer14.transform2(doubleArray19);
        org.apache.commons.math.complex.Complex[] complexArray23 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray21, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray21);
        org.apache.commons.math.complex.Complex[] complexArray25 = fastFourierTransformer13.inversetransform(complexArray21);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer26 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray31 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer26.transform2(doubleArray31);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer13.transform(complexArray33);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer35 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer35.transform2(doubleArray40);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer43 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray48 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray48);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer43.transform2(doubleArray48);
        org.apache.commons.math.complex.Complex[] complexArray52 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray50, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray50);
        org.apache.commons.math.complex.Complex[] complexArray55 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray50, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray56 = fastFourierTransformer35.transform2(complexArray55);
        double[] doubleArray61 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        double[] doubleArray64 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray61, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray65 = fastFourierTransformer35.transform2(doubleArray64);
        org.apache.commons.math.complex.Complex[] complexArray66 = fastFourierTransformer13.inversetransform2(doubleArray64);
        org.apache.commons.math.complex.Complex[] complexArray68 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray66, (double) (byte) 0);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer0.inversetransform2(complexArray66);
        double[] doubleArray74 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray74);
        double[] doubleArray77 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray74, (double) (byte) 100);
        double[] doubleArray79 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray74, (double) 0);
        double[] doubleArray81 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray74, 10.0d);
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer0.transform(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray11);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray82);
    }

    @Test
    public void test2513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2513");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer22.transform2(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer30 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray35 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer30.transform2(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray39 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray37, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray37);
        org.apache.commons.math.complex.Complex[] complexArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray37, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer22.transform2(complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) (byte) 1);
        org.apache.commons.math.complex.Complex[] complexArray46 = fastFourierTransformer0.transform(complexArray42);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer47 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray52 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray52);
        double[] doubleArray55 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray52, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer47.transform(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer0.inversetransform2(doubleArray55);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer59 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray64 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray64);
        double[] doubleArray67 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray64, (double) 10.0f);
        double[] doubleArray69 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray67, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray70 = fastFourierTransformer59.inversetransform(doubleArray69);
        double[] doubleArray72 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray69, (double) (short) 0);
        org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer0.transform2(doubleArray72);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer74 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray79 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray79);
        double[] doubleArray82 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray79, (double) 10.0f);
        double[] doubleArray84 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray82, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray85 = fastFourierTransformer74.inversetransform(doubleArray84);
        org.apache.commons.math.complex.Complex[] complexArray86 = fastFourierTransformer0.transform2(complexArray85);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction87 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray91 = fastFourierTransformer0.inversetransform2(univariateRealFunction87, (double) 1L, (double) 100.0f, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray85);
        org.junit.Assert.assertNotNull(complexArray86);
    }

    @Test
    public void test2514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2514");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer23 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer23.transform2(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray32 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray30, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray30);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer22.inversetransform(complexArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer35 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer35.transform2(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray44 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer22.transform(complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer0.transform(complexArray50);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer52 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray57 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray57);
        org.apache.commons.math.complex.Complex[] complexArray59 = fastFourierTransformer52.transform2(doubleArray57);
        org.apache.commons.math.complex.Complex[] complexArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray59, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray59);
        org.apache.commons.math.complex.Complex[] complexArray64 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray59, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray65 = fastFourierTransformer0.transform(complexArray64);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer66 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer67 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray72 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray72);
        org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer67.transform2(doubleArray72);
        org.apache.commons.math.complex.Complex[] complexArray76 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray74, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray74);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer66.inversetransform(complexArray74);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer0.transform(complexArray78);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction80 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer0.inversetransform(univariateRealFunction80, 1.0d, (double) 10, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(complexArray76);
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray79);
    }

    @Test
    public void test2515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2515");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        double[] doubleArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray38, (double) 10.0f);
        double[] doubleArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray41, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer0.inversetransform(doubleArray43);
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        double[] doubleArray52 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray49, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer0.inversetransform2(doubleArray49);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer54 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray59 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray59);
        double[] doubleArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray59, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray62);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer54.transform(doubleArray62);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer65 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray70 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray70);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer65.transform2(doubleArray70);
        org.apache.commons.math.complex.Complex[] complexArray74 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray72, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray72);
        org.apache.commons.math.complex.Complex[] complexArray77 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray72, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray79 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray72, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray80 = fastFourierTransformer54.inversetransform2(complexArray79);
        org.apache.commons.math.complex.Complex[] complexArray82 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray80, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray83 = fastFourierTransformer0.transform2(complexArray82);
        org.apache.commons.math.complex.Complex[] complexArray85 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray83, (-1.0d));
        org.apache.commons.math.complex.Complex[] complexArray87 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray83, 0.0d);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(complexArray77);
        org.junit.Assert.assertNotNull(complexArray79);
        org.junit.Assert.assertNotNull(complexArray80);
        org.junit.Assert.assertNotNull(complexArray82);
        org.junit.Assert.assertNotNull(complexArray83);
        org.junit.Assert.assertNotNull(complexArray85);
        org.junit.Assert.assertNotNull(complexArray87);
    }

    @Test
    public void test2516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2516");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) 10L, (double) (-1L), 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [10.0, -1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2517");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer9 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray14 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray14);
        org.apache.commons.math.complex.Complex[] complexArray16 = fastFourierTransformer9.transform2(doubleArray14);
        org.apache.commons.math.complex.Complex[] complexArray18 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray16, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray16);
        org.apache.commons.math.complex.Complex[] complexArray21 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray16, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray22 = fastFourierTransformer1.transform2(complexArray21);
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray31 = fastFourierTransformer1.transform(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray31);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform2(complexArray31);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer42 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray47 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer42.transform2(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray49, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray49);
        org.apache.commons.math.complex.Complex[] complexArray54 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray49, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer34.transform2(complexArray54);
        double[] doubleArray60 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray60);
        double[] doubleArray63 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray60, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer34.transform(doubleArray60);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer65 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray70 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray70);
        double[] doubleArray73 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray70, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray73);
        org.apache.commons.math.complex.Complex[] complexArray75 = fastFourierTransformer65.transform(doubleArray73);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer76 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray81 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray81);
        org.apache.commons.math.complex.Complex[] complexArray83 = fastFourierTransformer76.transform2(doubleArray81);
        double[] doubleArray85 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray81, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray86 = fastFourierTransformer65.inversetransform(doubleArray81);
        org.apache.commons.math.complex.Complex[] complexArray87 = fastFourierTransformer34.transform2(doubleArray81);
        double[] doubleArray89 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray81, (double) (short) 100);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray81);
        org.apache.commons.math.complex.Complex[] complexArray91 = fastFourierTransformer0.transform(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray16);
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray31);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray83);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray86);
        org.junit.Assert.assertNotNull(complexArray87);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray91);
    }

    @Test
    public void test2518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2518");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer22.transform2(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer30 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray35 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer30.transform2(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray39 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray37, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray37);
        org.apache.commons.math.complex.Complex[] complexArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray37, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer22.transform2(complexArray42);
        double[] doubleArray48 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray48);
        double[] doubleArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray48, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer22.transform2(doubleArray51);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer0.inversetransform2(doubleArray51);
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        double[] doubleArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray58, (double) (byte) 100);
        double[] doubleArray63 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray58, (double) 0);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray65 = fastFourierTransformer0.inversetransform2(doubleArray58);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction66 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray70 = fastFourierTransformer0.inversetransform2(univariateRealFunction66, (double) 10L, (double) (short) -1, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray65);
    }

    @Test
    public void test2519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2519");
        double[] doubleArray4 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray4);
        double[] doubleArray7 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray4, 0.0d);
        double[] doubleArray9 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray7, (double) (byte) 100);
        double[] doubleArray11 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray9, (double) ' ');
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    public void test2520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2520");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer23 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer23.transform2(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray32 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray30, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray30);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer22.inversetransform(complexArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer35 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer35.transform2(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer22.transform(complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer0.inversetransform(complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray46 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray44, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray48 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray46, (double) '4');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray46);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(complexArray48);
    }

    @Test
    public void test2521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2521");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer32.transform2(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray39, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer31.inversetransform(complexArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer44.transform2(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer31.transform(complexArray51);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer0.transform2(complexArray52);
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        double[] doubleArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray58, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer0.inversetransform2(doubleArray61);
        double[] doubleArray68 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray68);
        double[] doubleArray71 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray68, 0.0d);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer0.inversetransform(doubleArray71);
        double[] doubleArray74 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray71, (double) 100L);
        double[] doubleArray76 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray74, (double) (short) 10);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    public void test2522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2522");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer0.inversetransform2(complexArray18);
        double[] doubleArray24 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray24);
        double[] doubleArray27 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray24, (double) 10.0f);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10L);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray29);
        org.apache.commons.math.complex.Complex[] complexArray31 = fastFourierTransformer0.inversetransform2(doubleArray29);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer32.transform2(doubleArray37);
        double[] doubleArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray37, 100.0d);
        double[] doubleArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray41, 0.0d);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer0.inversetransform(doubleArray43);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction45 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer0.transform(univariateRealFunction45, (double) 1.0f, (double) (-1.0f), 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray31);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray44);
    }

    @Test
    public void test2523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2523");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray29);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray29);
        double[] doubleArray33 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray29, (double) (byte) 10);
        double[] doubleArray35 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray33, (double) (byte) 0);
        org.apache.commons.math.complex.Complex[] complexArray36 = fastFourierTransformer0.transform2(doubleArray33);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer37 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer38 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray43 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray43);
        org.apache.commons.math.complex.Complex[] complexArray45 = fastFourierTransformer38.transform2(doubleArray43);
        org.apache.commons.math.complex.Complex[] complexArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray45, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray45);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer37.inversetransform(complexArray45);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer50 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray55 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer50.transform2(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer37.transform(complexArray57);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer59 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray64 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray64);
        org.apache.commons.math.complex.Complex[] complexArray66 = fastFourierTransformer59.transform2(doubleArray64);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer67 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray72 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray72);
        org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer67.transform2(doubleArray72);
        org.apache.commons.math.complex.Complex[] complexArray76 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray74, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray74);
        org.apache.commons.math.complex.Complex[] complexArray79 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray74, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray80 = fastFourierTransformer59.transform2(complexArray79);
        double[] doubleArray85 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray85);
        double[] doubleArray88 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray85, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray89 = fastFourierTransformer59.transform2(doubleArray88);
        org.apache.commons.math.complex.Complex[] complexArray90 = fastFourierTransformer37.inversetransform2(doubleArray88);
        double[] doubleArray92 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray88, (double) (short) -1);
        org.apache.commons.math.complex.Complex[] complexArray93 = fastFourierTransformer0.inversetransform(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray36);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(complexArray76);
        org.junit.Assert.assertNotNull(complexArray79);
        org.junit.Assert.assertNotNull(complexArray80);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(complexArray89);
        org.junit.Assert.assertNotNull(complexArray90);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(complexArray93);
    }

    @Test
    public void test2524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2524");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        double[] doubleArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray38, (double) 10.0f);
        double[] doubleArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray41, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer0.inversetransform(doubleArray43);
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        double[] doubleArray52 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray49, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer0.inversetransform2(doubleArray49);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer54 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer55 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray60 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray60);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer55.transform2(doubleArray60);
        org.apache.commons.math.complex.Complex[] complexArray64 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray62, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray62);
        org.apache.commons.math.complex.Complex[] complexArray66 = fastFourierTransformer54.inversetransform(complexArray62);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer67 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray72 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray72);
        org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer67.transform2(doubleArray72);
        org.apache.commons.math.complex.Complex[] complexArray76 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray74, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray74);
        org.apache.commons.math.complex.Complex[] complexArray79 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray74, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray81 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray74, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer54.transform(complexArray74);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer83 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray88 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray88);
        org.apache.commons.math.complex.Complex[] complexArray90 = fastFourierTransformer83.transform2(doubleArray88);
        org.apache.commons.math.complex.Complex[] complexArray91 = fastFourierTransformer54.transform2(doubleArray88);
        org.apache.commons.math.complex.Complex[] complexArray92 = fastFourierTransformer0.inversetransform(complexArray91);
        org.apache.commons.math.complex.Complex[] complexArray94 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray91, (double) 1.0f);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(complexArray76);
        org.junit.Assert.assertNotNull(complexArray79);
        org.junit.Assert.assertNotNull(complexArray81);
        org.junit.Assert.assertNotNull(complexArray82);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray90);
        org.junit.Assert.assertNotNull(complexArray91);
        org.junit.Assert.assertNotNull(complexArray92);
        org.junit.Assert.assertNotNull(complexArray94);
    }

    @Test
    public void test2525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2525");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray11 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer12 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray20);
        org.apache.commons.math.complex.Complex[] complexArray24 = fastFourierTransformer12.inversetransform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer25 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray30 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer25.transform2(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer12.transform(complexArray32);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer42 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray47 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer42.transform2(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray49, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray49);
        org.apache.commons.math.complex.Complex[] complexArray54 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray49, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer34.transform2(complexArray54);
        double[] doubleArray60 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray60);
        double[] doubleArray63 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray60, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer34.transform2(doubleArray63);
        org.apache.commons.math.complex.Complex[] complexArray65 = fastFourierTransformer12.inversetransform2(doubleArray63);
        double[] doubleArray67 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray63, (double) (short) -1);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer0.inversetransform(doubleArray63);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer69 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray74 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray74);
        org.apache.commons.math.complex.Complex[] complexArray76 = fastFourierTransformer69.transform2(doubleArray74);
        org.apache.commons.math.complex.Complex[] complexArray78 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray76, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray80 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray78, (double) (byte) 100);
        org.apache.commons.math.complex.Complex[] complexArray82 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray80, (double) 0);
        org.apache.commons.math.complex.Complex[] complexArray83 = fastFourierTransformer0.inversetransform(complexArray82);
        double[] doubleArray84 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray85 = fastFourierTransformer0.transform2(doubleArray84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray11);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(complexArray24);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray76);
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray80);
        org.junit.Assert.assertNotNull(complexArray82);
        org.junit.Assert.assertNotNull(complexArray83);
    }

    @Test
    public void test2526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2526");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer32.transform2(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray39, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer31.inversetransform(complexArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer44.transform2(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer31.transform(complexArray51);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer0.transform2(complexArray52);
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        double[] doubleArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray58, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer0.inversetransform2(doubleArray61);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer64 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer65 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray70 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray70);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer65.transform2(doubleArray70);
        org.apache.commons.math.complex.Complex[] complexArray74 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray72, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray72);
        org.apache.commons.math.complex.Complex[] complexArray76 = fastFourierTransformer64.inversetransform(complexArray72);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer77 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray82 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray82);
        org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer77.transform2(doubleArray82);
        double[] doubleArray86 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray82, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray87 = fastFourierTransformer64.inversetransform(doubleArray82);
        org.apache.commons.math.complex.Complex[] complexArray88 = fastFourierTransformer0.transform(doubleArray82);
        double[] doubleArray90 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray82, (double) (short) -1);
        double[] doubleArray92 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray82, (double) 10.0f);
        double[] doubleArray94 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray82, (double) '#');
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(complexArray76);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[35000.0, -3395000.0, -35000.0, -350000.0]");
        org.junit.Assert.assertNotNull(complexArray84);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[35000.0, -3395000.0, -35000.0, -350000.0]");
        org.junit.Assert.assertNotNull(complexArray87);
        org.junit.Assert.assertNotNull(complexArray88);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[35000.0, -3395000.0, -35000.0, -350000.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[35000.0, -3395000.0, -35000.0, -350000.0]");
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[35000.0, -3395000.0, -35000.0, -350000.0]");
    }

    @Test
    public void test2527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2527");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer22.transform2(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer30 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray35 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer30.transform2(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray39 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray37, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray37);
        org.apache.commons.math.complex.Complex[] complexArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray37, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer22.transform2(complexArray42);
        double[] doubleArray48 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray48);
        double[] doubleArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray48, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer22.transform2(doubleArray51);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer0.inversetransform2(doubleArray51);
        double[] doubleArray55 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray51, (double) (short) -1);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray51);
        double[] doubleArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray51, (double) (-1.0f));
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-10.0, 970.0, 10.0, 100.0]");
    }

    @Test
    public void test2528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2528");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.transform.FastFourierTransformer.verifyInterval((-1.0d), (double) (-1.0f));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [-1.0, -1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2529");
        org.apache.commons.math.transform.FastFourierTransformer.verifyInterval((double) 0L, (double) 100L);
    }

    @Test
    public void test2530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2530");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.transform.FastFourierTransformer.verifyInterval((double) 100.0f, (double) 10L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [100.0, 10.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2531");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray41, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray41);
        org.apache.commons.math.complex.Complex[] complexArray46 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray41, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer0.inversetransform2(complexArray41);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer48 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray53 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray53);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer48.transform2(doubleArray53);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer56 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray61 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer56.transform2(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray63);
        org.apache.commons.math.complex.Complex[] complexArray68 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer48.transform2(complexArray68);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer70 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray75 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray75);
        double[] doubleArray78 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray75, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray78);
        org.apache.commons.math.complex.Complex[] complexArray80 = fastFourierTransformer70.transform(doubleArray78);
        org.apache.commons.math.complex.Complex[] complexArray81 = fastFourierTransformer48.transform(doubleArray78);
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer0.inversetransform2(doubleArray78);
        double[] doubleArray87 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray87);
        double[] doubleArray90 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray87, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray90);
        org.apache.commons.math.complex.Complex[] complexArray92 = fastFourierTransformer0.inversetransform2(doubleArray90);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray92);
        java.lang.Class<?> wildcardClass94 = complexArray92.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray80);
        org.junit.Assert.assertNotNull(complexArray81);
        org.junit.Assert.assertNotNull(complexArray82);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray92);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test2532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2532");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer42 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray47 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer42.transform2(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray49, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray49);
        org.apache.commons.math.complex.Complex[] complexArray54 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray49, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer34.transform2(complexArray54);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer56 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray61 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        double[] doubleArray64 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray61, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray64);
        org.apache.commons.math.complex.Complex[] complexArray66 = fastFourierTransformer56.transform(doubleArray64);
        org.apache.commons.math.complex.Complex[] complexArray67 = fastFourierTransformer34.transform(doubleArray64);
        double[] doubleArray72 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray72);
        double[] doubleArray75 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray72, (double) 10.0f);
        double[] doubleArray77 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray75, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer34.inversetransform(doubleArray77);
        double[] doubleArray83 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray83);
        double[] doubleArray86 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray83, (double) 10.0f);
        double[] doubleArray88 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray83, (double) (short) 100);
        org.apache.commons.math.complex.Complex[] complexArray89 = fastFourierTransformer34.inversetransform(doubleArray83);
        org.apache.commons.math.complex.Complex[] complexArray90 = fastFourierTransformer0.inversetransform(doubleArray83);
        double[] doubleArray92 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray83, (double) (-1.0f));
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(complexArray67);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[1000.0, -97000.0, -1000.0, -10000.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[1000.0, -97000.0, -1000.0, -10000.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[1000.0, -97000.0, -1000.0, -10000.0]");
        org.junit.Assert.assertNotNull(complexArray89);
        org.junit.Assert.assertNotNull(complexArray90);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[1000.0, -97000.0, -1000.0, -10000.0]");
    }

    @Test
    public void test2533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2533");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray18, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer0.inversetransform(doubleArray18);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer24 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray29 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray29);
        double[] doubleArray32 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray29, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray32);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer24.inversetransform(doubleArray32);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer0.inversetransform(doubleArray32);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer36 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray41 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray41);
        double[] doubleArray44 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray41, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray44);
        org.apache.commons.math.complex.Complex[] complexArray46 = fastFourierTransformer36.transform(doubleArray44);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer47 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray52 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray52);
        org.apache.commons.math.complex.Complex[] complexArray54 = fastFourierTransformer47.transform2(doubleArray52);
        org.apache.commons.math.complex.Complex[] complexArray56 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray54, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray54);
        org.apache.commons.math.complex.Complex[] complexArray59 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray54, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray54, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer36.inversetransform2(complexArray61);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray61);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer0.inversetransform2(complexArray61);
        double[] doubleArray69 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray69);
        double[] doubleArray72 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray69, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray72);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray72);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray72);
        double[] doubleArray77 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray72, (double) (short) 10);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray77);
        double[] doubleArray80 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray77, (double) 100.0f);
        org.apache.commons.math.complex.Complex[] complexArray81 = fastFourierTransformer0.inversetransform(doubleArray80);
        double[] doubleArray86 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray86);
        double[] doubleArray89 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray86, (double) (byte) 100);
        double[] doubleArray91 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray86, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray92 = fastFourierTransformer0.transform(doubleArray91);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction93 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray97 = fastFourierTransformer0.inversetransform2(univariateRealFunction93, 0.0d, (double) 0.0f, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(complexArray35);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray81);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray92);
    }

    @Test
    public void test2534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2534");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray11 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer12 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        double[] doubleArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray17, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray20);
        org.apache.commons.math.complex.Complex[] complexArray22 = fastFourierTransformer12.transform(doubleArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer23 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer23.transform2(doubleArray28);
        double[] doubleArray32 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray28, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer12.inversetransform(doubleArray28);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        double[] doubleArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray39, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray42);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer34.transform(doubleArray42);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer45 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray50 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer45.transform2(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray54 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray52, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray52);
        org.apache.commons.math.complex.Complex[] complexArray57 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray52, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray59 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray52, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer34.inversetransform2(complexArray59);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray59);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer12.transform2(complexArray59);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer0.transform(complexArray59);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray59);
        java.lang.Class<?> wildcardClass65 = complexArray59.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray11);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test2535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2535");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer9 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray14 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray14);
        org.apache.commons.math.complex.Complex[] complexArray16 = fastFourierTransformer9.transform2(doubleArray14);
        org.apache.commons.math.complex.Complex[] complexArray18 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray16, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray16);
        org.apache.commons.math.complex.Complex[] complexArray21 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray16, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray22 = fastFourierTransformer1.transform2(complexArray21);
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray31 = fastFourierTransformer1.transform(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray31);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform2(complexArray31);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer42 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray47 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer42.transform2(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray49, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray49);
        org.apache.commons.math.complex.Complex[] complexArray54 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray49, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer34.transform2(complexArray54);
        double[] doubleArray60 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray60);
        double[] doubleArray63 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray60, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer34.transform2(doubleArray63);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer65 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer66 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray71 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray71);
        org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer66.transform2(doubleArray71);
        org.apache.commons.math.complex.Complex[] complexArray75 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray73, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray73);
        org.apache.commons.math.complex.Complex[] complexArray77 = fastFourierTransformer65.inversetransform(complexArray73);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer78 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray83 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray83);
        org.apache.commons.math.complex.Complex[] complexArray85 = fastFourierTransformer78.transform2(doubleArray83);
        double[] doubleArray87 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray83, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray88 = fastFourierTransformer65.inversetransform(doubleArray83);
        org.apache.commons.math.complex.Complex[] complexArray89 = fastFourierTransformer34.transform2(complexArray88);
        org.apache.commons.math.complex.Complex[] complexArray91 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray89, (double) 100.0f);
        org.apache.commons.math.complex.Complex[] complexArray92 = fastFourierTransformer0.transform(complexArray89);
        java.lang.Class<?> wildcardClass93 = complexArray92.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray16);
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray31);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(complexArray77);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray85);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray88);
        org.junit.Assert.assertNotNull(complexArray89);
        org.junit.Assert.assertNotNull(complexArray91);
        org.junit.Assert.assertNotNull(complexArray92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2536");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer0.inversetransform2(complexArray18);
        double[] doubleArray24 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray24);
        double[] doubleArray27 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray24, (double) 10.0f);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10L);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray29);
        org.apache.commons.math.complex.Complex[] complexArray31 = fastFourierTransformer0.inversetransform2(doubleArray29);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer32.transform2(doubleArray37);
        double[] doubleArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray37, 100.0d);
        double[] doubleArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray41, 0.0d);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer0.inversetransform(doubleArray43);
        double[] doubleArray46 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray43, (double) 0L);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray31);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    public void test2537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2537");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray36 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray36);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer31.transform2(doubleArray36);
        org.apache.commons.math.complex.Complex[] complexArray40 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray38, (double) 'a');
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer0.transform2(complexArray40);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction42 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray46 = fastFourierTransformer0.inversetransform2(univariateRealFunction42, 0.0d, (double) (-1), 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [0.0, -1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(complexArray40);
        org.junit.Assert.assertNotNull(complexArray41);
    }

    @Test
    public void test2538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2538");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer0.inversetransform2(complexArray18);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer20 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer21 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        org.apache.commons.math.complex.Complex[] complexArray28 = fastFourierTransformer21.transform2(doubleArray26);
        org.apache.commons.math.complex.Complex[] complexArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray28, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray28);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer20.inversetransform(complexArray28);
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        double[] doubleArray40 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray37, (double) 10.0f);
        double[] doubleArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray40, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer20.transform(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray43, (-1.0d));
        org.apache.commons.math.complex.Complex[] complexArray46 = fastFourierTransformer0.transform2(complexArray43);
        double[] doubleArray51 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray51);
        double[] doubleArray54 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray51, (double) 10.0f);
        double[] doubleArray56 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray51, (double) (short) 100);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer0.inversetransform2(doubleArray51);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer58 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray63 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray63);
        org.apache.commons.math.complex.Complex[] complexArray65 = fastFourierTransformer58.transform2(doubleArray63);
        double[] doubleArray67 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray63, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer0.transform2(doubleArray67);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction69 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer0.transform(univariateRealFunction69, (double) 10, 0.0d, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [10.0, 0.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray68);
    }

    @Test
    public void test2539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2539");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) (-1.0f), (double) (byte) 10, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2540");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        double[] doubleArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray38, (double) 10.0f);
        double[] doubleArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray41, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer0.inversetransform(doubleArray43);
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        double[] doubleArray52 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray49, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer0.inversetransform2(doubleArray49);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer54 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray59 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray59);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer54.transform2(doubleArray59);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer62 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray67 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray67);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer62.transform2(doubleArray67);
        org.apache.commons.math.complex.Complex[] complexArray71 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray69, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray69);
        org.apache.commons.math.complex.Complex[] complexArray74 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray69, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray75 = fastFourierTransformer54.transform2(complexArray74);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer76 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray81 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray81);
        double[] doubleArray84 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray81, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray84);
        org.apache.commons.math.complex.Complex[] complexArray86 = fastFourierTransformer76.transform(doubleArray84);
        org.apache.commons.math.complex.Complex[] complexArray87 = fastFourierTransformer54.transform(doubleArray84);
        org.apache.commons.math.complex.Complex[] complexArray88 = fastFourierTransformer0.inversetransform(doubleArray84);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction89 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray93 = fastFourierTransformer0.inversetransform(univariateRealFunction89, (double) (short) 1, (double) 100, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(complexArray71);
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray86);
        org.junit.Assert.assertNotNull(complexArray87);
        org.junit.Assert.assertNotNull(complexArray88);
    }

    @Test
    public void test2541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2541");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer0.transform(complexArray15);
        double[] doubleArray23 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray23);
        double[] doubleArray26 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray23, (double) 10.0f);
        double[] doubleArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) (byte) -1);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray36 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray36);
        double[] doubleArray39 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray36, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer31.inversetransform(doubleArray39);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray41);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer0.transform2(complexArray41);
        double[] doubleArray48 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray48);
        double[] doubleArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray48, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray51);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray51);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray51);
        double[] doubleArray56 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray51, (double) (short) 10);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer0.inversetransform2(doubleArray56);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction58 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer0.transform2(univariateRealFunction58, (double) 0L, (double) 0L, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [0.0, 0.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray57);
    }

    @Test
    public void test2542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2542");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        double[] doubleArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray17, (double) 10.0f);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray20, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer0.transform(doubleArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer24 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer25 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray30 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer25.transform2(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray32, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray32);
        org.apache.commons.math.complex.Complex[] complexArray36 = fastFourierTransformer24.inversetransform(complexArray32);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer37 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray42 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray42);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer37.transform2(doubleArray42);
        double[] doubleArray46 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray42, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer24.inversetransform(doubleArray42);
        org.apache.commons.math.complex.Complex[] complexArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray47, (-1.0d));
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer0.inversetransform(complexArray49);
        double[] doubleArray55 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray55);
        double[] doubleArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray55, 0.0d);
        double[] doubleArray60 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray58, (double) (byte) 100);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray60);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer0.transform2(doubleArray60);
        double[] doubleArray67 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray67);
        double[] doubleArray70 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray67, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray70);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray70);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray70);
        org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer0.inversetransform2(doubleArray70);
        org.apache.commons.math.complex.Complex[] complexArray76 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray74, 0.0d);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(complexArray36);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(complexArray76);
    }

    @Test
    public void test2543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2543");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        double[] doubleArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray17, (double) 10.0f);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray20, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer0.transform(doubleArray20);
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray28, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        double[] doubleArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, 10.0d);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer0.transform2(doubleArray31);
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        double[] doubleArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray40, (double) 10.0f);
        double[] doubleArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray43, (double) (byte) -1);
        org.apache.commons.math.complex.Complex[] complexArray46 = fastFourierTransformer0.inversetransform(doubleArray43);
        java.lang.Class<?> wildcardClass47 = complexArray46.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray35);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test2544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2544");
        double[] doubleArray4 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray4);
        double[] doubleArray7 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray4, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray7);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray7);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray7);
        double[] doubleArray12 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray7, (double) (-1L));
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray7);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, -970.0, -10.0, -100.0]");
    }

    @Test
    public void test2545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2545");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        double[] doubleArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray8, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray11 = fastFourierTransformer0.inversetransform(doubleArray10);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer12 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer12.transform2(doubleArray17);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer20 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray25 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray25);
        org.apache.commons.math.complex.Complex[] complexArray27 = fastFourierTransformer20.transform2(doubleArray25);
        org.apache.commons.math.complex.Complex[] complexArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray27, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray27);
        org.apache.commons.math.complex.Complex[] complexArray32 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray27, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer12.transform2(complexArray32);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        double[] doubleArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray39, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray42);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer34.transform(doubleArray42);
        org.apache.commons.math.complex.Complex[] complexArray45 = fastFourierTransformer12.transform(doubleArray42);
        double[] doubleArray50 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray50);
        double[] doubleArray53 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray50, (double) 10.0f);
        double[] doubleArray55 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray53, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray56 = fastFourierTransformer12.inversetransform(doubleArray55);
        double[] doubleArray61 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        double[] doubleArray64 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray61, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray65 = fastFourierTransformer12.inversetransform2(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray67 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray65, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer0.transform(complexArray65);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction69 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer0.inversetransform(univariateRealFunction69, (double) 100L, (double) 'a', 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [100.0, 97.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray11);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray27);
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray67);
        org.junit.Assert.assertNotNull(complexArray68);
    }

    @Test
    public void test2546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2546");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray20);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray27 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray28 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer29 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray36 = fastFourierTransformer29.transform2(doubleArray34);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer37 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray42 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray42);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer37.transform2(doubleArray42);
        org.apache.commons.math.complex.Complex[] complexArray46 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray44, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray44);
        org.apache.commons.math.complex.Complex[] complexArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray44, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer29.transform2(complexArray49);
        double[] doubleArray55 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray55);
        double[] doubleArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray55, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray59 = fastFourierTransformer29.transform(doubleArray55);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer60 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer61 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray66 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray66);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer61.transform2(doubleArray66);
        org.apache.commons.math.complex.Complex[] complexArray70 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray68, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray68);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer60.inversetransform(complexArray68);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer73 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray78 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray78);
        org.apache.commons.math.complex.Complex[] complexArray80 = fastFourierTransformer73.transform2(doubleArray78);
        org.apache.commons.math.complex.Complex[] complexArray81 = fastFourierTransformer60.transform(complexArray80);
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer29.transform2(complexArray81);
        double[] doubleArray87 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray87);
        double[] doubleArray90 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray87, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray90);
        org.apache.commons.math.complex.Complex[] complexArray92 = fastFourierTransformer29.inversetransform2(doubleArray90);
        org.apache.commons.math.complex.Complex[] complexArray93 = fastFourierTransformer0.transform2(doubleArray90);
        double[] doubleArray95 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray90, (double) (byte) 1);
        double[] doubleArray97 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray95, (double) 0.0f);
        java.lang.Class<?> wildcardClass98 = doubleArray95.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray27);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray36);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray80);
        org.junit.Assert.assertNotNull(complexArray81);
        org.junit.Assert.assertNotNull(complexArray82);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray92);
        org.junit.Assert.assertNotNull(complexArray93);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray95), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray97), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2547");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.inversetransform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer19 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray24 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray24);
        org.apache.commons.math.complex.Complex[] complexArray26 = fastFourierTransformer19.transform2(doubleArray24);
        org.apache.commons.math.complex.Complex[] complexArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray26, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray26);
        org.apache.commons.math.complex.Complex[] complexArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray26, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer11.transform2(complexArray31);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer33 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray41, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray41);
        org.apache.commons.math.complex.Complex[] complexArray45 = fastFourierTransformer33.inversetransform(complexArray41);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer46 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray51 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray51);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer46.transform2(doubleArray51);
        org.apache.commons.math.complex.Complex[] complexArray54 = fastFourierTransformer33.transform(complexArray53);
        double[] doubleArray59 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray59);
        double[] doubleArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray59, (double) 10.0f);
        double[] doubleArray64 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray62, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray65 = fastFourierTransformer33.inversetransform2(doubleArray64);
        org.apache.commons.math.complex.Complex[] complexArray66 = fastFourierTransformer11.transform(doubleArray64);
        org.apache.commons.math.complex.Complex[] complexArray67 = fastFourierTransformer0.inversetransform2(doubleArray64);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray64);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray26);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray31);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(complexArray67);
    }

    @Test
    public void test2548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2548");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray29, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer0.inversetransform2(doubleArray31);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer33 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        double[] doubleArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray38, (double) 10.0f);
        double[] doubleArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray41, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer33.inversetransform(doubleArray43);
        double[] doubleArray46 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray43, (double) (byte) 0);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer0.inversetransform2(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray47);
    }

    @Test
    public void test2549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2549");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer32.transform2(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray39, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer31.inversetransform(complexArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer44.transform2(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer31.transform(complexArray51);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer0.transform2(complexArray52);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction54 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer0.inversetransform(univariateRealFunction54, (double) (byte) 100, 10.0d, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [100.0, 10.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray53);
    }

    @Test
    public void test2550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2550");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray36 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray36);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer31.transform2(doubleArray36);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer39 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray44 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray44);
        org.apache.commons.math.complex.Complex[] complexArray46 = fastFourierTransformer39.transform2(doubleArray44);
        org.apache.commons.math.complex.Complex[] complexArray48 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray46, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray46);
        org.apache.commons.math.complex.Complex[] complexArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray46, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer31.transform2(complexArray51);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer53 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        double[] doubleArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray58, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer53.transform(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer31.transform(doubleArray61);
        double[] doubleArray69 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray69);
        double[] doubleArray72 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray69, (double) 10.0f);
        double[] doubleArray74 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray72, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray75 = fastFourierTransformer31.inversetransform(doubleArray74);
        double[] doubleArray80 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray80);
        double[] doubleArray83 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray80, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer31.inversetransform2(doubleArray80);
        org.apache.commons.math.complex.Complex[] complexArray85 = fastFourierTransformer0.inversetransform2(complexArray84);
        org.apache.commons.math.complex.Complex[] complexArray87 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray85, 100.0d);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray84);
        org.junit.Assert.assertNotNull(complexArray85);
        org.junit.Assert.assertNotNull(complexArray87);
    }

    @Test
    public void test2551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2551");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer22.transform2(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer30 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray35 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer30.transform2(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray39 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray37, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray37);
        org.apache.commons.math.complex.Complex[] complexArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray37, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer22.transform2(complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) (byte) 1);
        org.apache.commons.math.complex.Complex[] complexArray46 = fastFourierTransformer0.transform(complexArray42);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer47 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer48 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray53 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray53);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer48.transform2(doubleArray53);
        org.apache.commons.math.complex.Complex[] complexArray57 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray55, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray55);
        org.apache.commons.math.complex.Complex[] complexArray59 = fastFourierTransformer47.inversetransform(complexArray55);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer60 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray65 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray65);
        org.apache.commons.math.complex.Complex[] complexArray67 = fastFourierTransformer60.transform2(doubleArray65);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer47.transform(complexArray67);
        double[] doubleArray73 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray73);
        double[] doubleArray76 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray73, (double) 10.0f);
        double[] doubleArray78 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray76, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer47.inversetransform2(doubleArray78);
        org.apache.commons.math.complex.Complex[] complexArray80 = fastFourierTransformer0.inversetransform2(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray67);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray79);
        org.junit.Assert.assertNotNull(complexArray80);
    }

    @Test
    public void test2552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2552");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray18);
        org.apache.commons.math.complex.Complex[] complexArray23 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray26 = fastFourierTransformer0.inversetransform2(complexArray25);
        double[] doubleArray31 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        double[] doubleArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, (double) 10.0f);
        double[] doubleArray36 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer0.transform(doubleArray34);
        double[] doubleArray42 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray42);
        double[] doubleArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray42, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray45);
        double[] doubleArray48 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray45, 10.0d);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer0.transform2(doubleArray48);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer50 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer51 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray56 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray56);
        org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer51.transform2(doubleArray56);
        org.apache.commons.math.complex.Complex[] complexArray60 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray58, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray58);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer50.inversetransform(complexArray58);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer63 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray68 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray70 = fastFourierTransformer63.transform2(doubleArray68);
        double[] doubleArray72 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray68, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer50.inversetransform(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray75 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray73, (-1.0d));
        org.apache.commons.math.complex.Complex[] complexArray76 = fastFourierTransformer0.transform2(complexArray73);
        double[] doubleArray81 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray81);
        double[] doubleArray84 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray81, (double) 10.0f);
        double[] doubleArray86 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray84, (double) 10L);
        double[] doubleArray88 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray84, (double) (byte) 100);
        double[] doubleArray90 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray88, (double) (byte) 1);
        org.apache.commons.math.complex.Complex[] complexArray91 = fastFourierTransformer0.inversetransform(doubleArray90);
        org.apache.commons.math.complex.Complex[] complexArray93 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray91, (double) 10);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray26);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(complexArray76);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray91);
        org.junit.Assert.assertNotNull(complexArray93);
    }

    @Test
    public void test2553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2553");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.inversetransform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer19 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray24 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray24);
        org.apache.commons.math.complex.Complex[] complexArray26 = fastFourierTransformer19.transform2(doubleArray24);
        org.apache.commons.math.complex.Complex[] complexArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray26, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray26);
        org.apache.commons.math.complex.Complex[] complexArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray26, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer11.transform2(complexArray31);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer33 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray41, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray41);
        org.apache.commons.math.complex.Complex[] complexArray45 = fastFourierTransformer33.inversetransform(complexArray41);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer46 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray51 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray51);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer46.transform2(doubleArray51);
        org.apache.commons.math.complex.Complex[] complexArray54 = fastFourierTransformer33.transform(complexArray53);
        double[] doubleArray59 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray59);
        double[] doubleArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray59, (double) 10.0f);
        double[] doubleArray64 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray62, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray65 = fastFourierTransformer33.inversetransform2(doubleArray64);
        org.apache.commons.math.complex.Complex[] complexArray66 = fastFourierTransformer11.transform(doubleArray64);
        org.apache.commons.math.complex.Complex[] complexArray67 = fastFourierTransformer0.inversetransform2(doubleArray64);
        double[] doubleArray72 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray72);
        double[] doubleArray75 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray72, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray75);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray75);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray75);
        double[] doubleArray80 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray75, (double) (short) 10);
        org.apache.commons.math.complex.Complex[] complexArray81 = fastFourierTransformer0.inversetransform(doubleArray80);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction82 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray86 = fastFourierTransformer0.inversetransform2(univariateRealFunction82, (double) (-1), 0.0d, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray26);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray31);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(complexArray67);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray81);
    }

    @Test
    public void test2554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2554");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer16 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray21 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer16.transform2(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray23);
        org.apache.commons.math.complex.Complex[] complexArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer8.transform2(complexArray28);
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        double[] doubleArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer8.transform(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer0.transform(complexArray38);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer40 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray45 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray45);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer40.transform2(doubleArray45);
        org.apache.commons.math.complex.Complex[] complexArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray47, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray49, (double) (byte) 100);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer0.inversetransform(complexArray49);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer53 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer53.transform2(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray60, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray60);
        org.apache.commons.math.complex.Complex[] complexArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray60, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray67 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray60, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer0.inversetransform(complexArray60);
        double[] doubleArray73 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray73);
        double[] doubleArray76 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray73, (double) 10.0f);
        double[] doubleArray78 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray76, (double) 10L);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray76);
        org.apache.commons.math.complex.Complex[] complexArray80 = fastFourierTransformer0.inversetransform(doubleArray76);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer81 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer82 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray87 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray87);
        org.apache.commons.math.complex.Complex[] complexArray89 = fastFourierTransformer82.transform2(doubleArray87);
        org.apache.commons.math.complex.Complex[] complexArray91 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray89, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray89);
        org.apache.commons.math.complex.Complex[] complexArray93 = fastFourierTransformer81.inversetransform(complexArray89);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray89);
        org.apache.commons.math.complex.Complex[] complexArray95 = fastFourierTransformer0.transform2(complexArray89);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray67);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray80);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray89);
        org.junit.Assert.assertNotNull(complexArray91);
        org.junit.Assert.assertNotNull(complexArray93);
        org.junit.Assert.assertNotNull(complexArray95);
    }

    @Test
    public void test2555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2555");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.inversetransform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer12 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer12.transform2(doubleArray17);
        org.apache.commons.math.complex.Complex[] complexArray21 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray19, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray19);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer11.inversetransform(complexArray19);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer24 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray29 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray29);
        org.apache.commons.math.complex.Complex[] complexArray31 = fastFourierTransformer24.transform2(doubleArray29);
        double[] doubleArray33 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray29, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer11.inversetransform(doubleArray29);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer35 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer36 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray41 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer36.transform2(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray43, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray43);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer35.inversetransform(complexArray43);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer48 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray53 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray53);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer48.transform2(doubleArray53);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer56 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray61 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer56.transform2(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray63);
        org.apache.commons.math.complex.Complex[] complexArray68 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer48.transform2(complexArray68);
        double[] doubleArray74 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray74);
        double[] doubleArray77 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray74, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer48.transform(doubleArray74);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer35.transform(doubleArray74);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray74);
        org.apache.commons.math.complex.Complex[] complexArray81 = fastFourierTransformer11.inversetransform2(doubleArray74);
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer0.transform2(complexArray81);
        org.apache.commons.math.complex.Complex[] complexArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer0.inversetransform(complexArray83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray31);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray79);
        org.junit.Assert.assertNotNull(complexArray81);
        org.junit.Assert.assertNotNull(complexArray82);
    }

    @Test
    public void test2556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2556");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (-1.0d), 1.0d, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2557");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer0.inversetransform2(complexArray18);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer20 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray25 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray25);
        double[] doubleArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray25, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer20.inversetransform(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray31 = fastFourierTransformer0.transform(doubleArray28);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer33 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        org.apache.commons.math.complex.Complex[] complexArray40 = fastFourierTransformer33.transform2(doubleArray38);
        org.apache.commons.math.complex.Complex[] complexArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray40, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray40);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer32.inversetransform(complexArray40);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer45 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray50 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer45.transform2(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer32.transform(complexArray52);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer54 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray59 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray59);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer54.transform2(doubleArray59);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer62 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray67 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray67);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer62.transform2(doubleArray67);
        org.apache.commons.math.complex.Complex[] complexArray71 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray69, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray69);
        org.apache.commons.math.complex.Complex[] complexArray74 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray69, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray75 = fastFourierTransformer54.transform2(complexArray74);
        double[] doubleArray80 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray80);
        double[] doubleArray83 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray80, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer54.transform2(doubleArray83);
        org.apache.commons.math.complex.Complex[] complexArray85 = fastFourierTransformer32.inversetransform2(doubleArray83);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray83);
        double[] doubleArray88 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray83, (double) 0);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray83);
        org.apache.commons.math.complex.Complex[] complexArray90 = fastFourierTransformer0.transform(doubleArray83);
        org.apache.commons.math.complex.Complex[] complexArray92 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray90, (double) (byte) 100);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray92);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(complexArray31);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray40);
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(complexArray71);
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray84);
        org.junit.Assert.assertNotNull(complexArray85);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray90);
        org.junit.Assert.assertNotNull(complexArray92);
    }

    @Test
    public void test2558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2558");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray29, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer0.inversetransform2(doubleArray31);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer33 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        org.apache.commons.math.complex.Complex[] complexArray40 = fastFourierTransformer33.transform2(doubleArray38);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer41 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray46 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray46);
        org.apache.commons.math.complex.Complex[] complexArray48 = fastFourierTransformer41.transform2(doubleArray46);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer49 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray54 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray54);
        org.apache.commons.math.complex.Complex[] complexArray56 = fastFourierTransformer49.transform2(doubleArray54);
        org.apache.commons.math.complex.Complex[] complexArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray56, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray56);
        org.apache.commons.math.complex.Complex[] complexArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray56, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer41.transform2(complexArray61);
        double[] doubleArray67 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray67);
        double[] doubleArray70 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray67, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray71 = fastFourierTransformer41.transform(doubleArray67);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer33.transform(complexArray71);
        double[] doubleArray77 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray77);
        double[] doubleArray80 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray77, (double) 10.0f);
        double[] doubleArray82 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray80, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray83 = fastFourierTransformer33.transform2(doubleArray80);
        double[] doubleArray85 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray80, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray86 = fastFourierTransformer0.inversetransform(doubleArray80);
        double[] doubleArray91 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray91);
        double[] doubleArray94 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray91, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray91);
        org.apache.commons.math.complex.Complex[] complexArray96 = fastFourierTransformer0.inversetransform2(doubleArray91);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray96);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray40);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray71);
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray83);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray86);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray96);
    }

    @Test
    public void test2559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2559");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer16 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray21 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer16.transform2(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray23);
        org.apache.commons.math.complex.Complex[] complexArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer8.transform2(complexArray28);
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        double[] doubleArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer8.transform(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer0.transform(complexArray38);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer40 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer41 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray46 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray46);
        org.apache.commons.math.complex.Complex[] complexArray48 = fastFourierTransformer41.transform2(doubleArray46);
        org.apache.commons.math.complex.Complex[] complexArray50 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray48, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray48);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer40.inversetransform(complexArray48);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer53 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer53.transform2(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer40.transform(complexArray60);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer62 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray67 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray67);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer62.transform2(doubleArray67);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer70 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray75 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray75);
        org.apache.commons.math.complex.Complex[] complexArray77 = fastFourierTransformer70.transform2(doubleArray75);
        org.apache.commons.math.complex.Complex[] complexArray79 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray77, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray77);
        org.apache.commons.math.complex.Complex[] complexArray82 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray77, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray83 = fastFourierTransformer62.transform2(complexArray82);
        double[] doubleArray88 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray88);
        double[] doubleArray91 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray88, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray92 = fastFourierTransformer62.transform2(doubleArray91);
        org.apache.commons.math.complex.Complex[] complexArray93 = fastFourierTransformer40.inversetransform2(doubleArray91);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray91);
        double[] doubleArray96 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray91, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray97 = fastFourierTransformer0.inversetransform(doubleArray91);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray77);
        org.junit.Assert.assertNotNull(complexArray79);
        org.junit.Assert.assertNotNull(complexArray82);
        org.junit.Assert.assertNotNull(complexArray83);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray92);
        org.junit.Assert.assertNotNull(complexArray93);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray96), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray97);
    }

    @Test
    public void test2560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2560");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer0.transform(complexArray15);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer19 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray24 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray24);
        org.apache.commons.math.complex.Complex[] complexArray26 = fastFourierTransformer19.transform2(doubleArray24);
        double[] doubleArray31 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        double[] doubleArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, (double) 10.0f);
        double[] doubleArray36 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10L);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray36);
        double[] doubleArray39 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray36, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray40 = fastFourierTransformer19.transform2(doubleArray36);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer0.inversetransform2(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray26);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray40);
        org.junit.Assert.assertNotNull(complexArray41);
    }

    @Test
    public void test2561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2561");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.transform.FastFourierTransformer.verifyInterval(0.0d, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [0.0, 0.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2562");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray18);
        org.apache.commons.math.complex.Complex[] complexArray23 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray26 = fastFourierTransformer0.inversetransform2(complexArray25);
        double[] doubleArray31 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        double[] doubleArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, (double) 10.0f);
        double[] doubleArray36 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer0.transform(doubleArray34);
        double[] doubleArray42 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray42);
        double[] doubleArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray42, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray45);
        double[] doubleArray48 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray45, 10.0d);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer0.transform2(doubleArray48);
        java.lang.Class<?> wildcardClass50 = complexArray49.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray26);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test2563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2563");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer22.transform2(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer30 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray35 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer30.transform2(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray39 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray37, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray37);
        org.apache.commons.math.complex.Complex[] complexArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray37, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer22.transform2(complexArray42);
        double[] doubleArray48 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray48);
        double[] doubleArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray48, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer22.transform2(doubleArray51);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer0.inversetransform2(doubleArray51);
        double[] doubleArray55 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray51, (double) (short) -1);
        double[] doubleArray57 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray55, (double) (byte) -1);
        double[] doubleArray59 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray55, (double) 100L);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1000.0, 97000.0, 1000.0, 10000.0]");
    }

    @Test
    public void test2564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2564");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer9 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray14 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray14);
        org.apache.commons.math.complex.Complex[] complexArray16 = fastFourierTransformer9.transform2(doubleArray14);
        org.apache.commons.math.complex.Complex[] complexArray18 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray16, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray16);
        org.apache.commons.math.complex.Complex[] complexArray21 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray16, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray22 = fastFourierTransformer1.transform2(complexArray21);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer23 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray28, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer23.transform(doubleArray31);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer1.transform(doubleArray31);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer35 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer35.transform2(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray44 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray48 = fastFourierTransformer1.inversetransform2(complexArray42);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer49 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray54 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray54);
        org.apache.commons.math.complex.Complex[] complexArray56 = fastFourierTransformer49.transform2(doubleArray54);
        org.apache.commons.math.complex.Complex[] complexArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray56, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray56);
        org.apache.commons.math.complex.Complex[] complexArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray56, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray63 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray56, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer1.inversetransform(complexArray63);
        org.apache.commons.math.complex.Complex[] complexArray66 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) (byte) 1);
        org.apache.commons.math.complex.Complex[] complexArray67 = fastFourierTransformer0.inversetransform2(complexArray66);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer68 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray73 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray73);
        double[] doubleArray76 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray73, (double) 10.0f);
        double[] doubleArray78 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray76, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer68.inversetransform(doubleArray78);
        double[] doubleArray81 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray78, (double) (byte) 0);
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer0.transform(doubleArray81);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction83 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray87 = fastFourierTransformer0.inversetransform2(univariateRealFunction83, 0.0d, 10.0d, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray16);
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(complexArray67);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray79);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray82);
    }

    @Test
    public void test2565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2565");
        double[] doubleArray4 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray4);
        double[] doubleArray7 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray4, (double) 10.0f);
        double[] doubleArray9 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray7, (double) 10L);
        double[] doubleArray11 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray7, (double) (byte) 100);
        double[] doubleArray13 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray11, (double) 0L);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray11);
        double[] doubleArray16 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray11, (double) 10.0f);
        double[] doubleArray18 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray16, (double) 10);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    public void test2566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2566");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        double[] doubleArray16 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray13, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer8.transform(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer0.transform2(doubleArray16);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer20 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray25 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray25);
        org.apache.commons.math.complex.Complex[] complexArray27 = fastFourierTransformer20.transform2(doubleArray25);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer28 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray33 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray33);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer28.transform2(doubleArray33);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer36 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray41 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer36.transform2(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray43, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray43);
        org.apache.commons.math.complex.Complex[] complexArray48 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray43, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer28.transform2(complexArray48);
        double[] doubleArray54 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray54);
        double[] doubleArray57 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray54, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer28.transform(doubleArray54);
        org.apache.commons.math.complex.Complex[] complexArray59 = fastFourierTransformer20.transform(complexArray58);
        double[] doubleArray64 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray64);
        double[] doubleArray67 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray64, (double) 10.0f);
        double[] doubleArray69 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray67, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray70 = fastFourierTransformer20.transform2(doubleArray67);
        double[] doubleArray72 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray67, 100.0d);
        double[] doubleArray74 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray67, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray75 = fastFourierTransformer0.transform2(doubleArray74);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer76 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray81 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray81);
        org.apache.commons.math.complex.Complex[] complexArray83 = fastFourierTransformer76.transform2(doubleArray81);
        org.apache.commons.math.complex.Complex[] complexArray85 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray83, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray83);
        org.apache.commons.math.complex.Complex[] complexArray88 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray83, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray90 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray83, (double) '#');
        org.apache.commons.math.complex.Complex[] complexArray91 = fastFourierTransformer0.inversetransform(complexArray83);
        java.lang.Class<?> wildcardClass92 = complexArray91.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray27);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray35);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray83);
        org.junit.Assert.assertNotNull(complexArray85);
        org.junit.Assert.assertNotNull(complexArray88);
        org.junit.Assert.assertNotNull(complexArray90);
        org.junit.Assert.assertNotNull(complexArray91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test2567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2567");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer32.transform2(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray39, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer31.inversetransform(complexArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer44.transform2(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer31.transform(complexArray51);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer0.transform2(complexArray52);
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        double[] doubleArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray58, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer0.inversetransform2(doubleArray61);
        double[] doubleArray68 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray68);
        double[] doubleArray71 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray68, 0.0d);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer0.inversetransform(doubleArray71);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction73 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray77 = fastFourierTransformer0.inversetransform2(univariateRealFunction73, (double) 0, (-1.0d), 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [0.0, -1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray72);
    }

    @Test
    public void test2568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2568");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer22.transform2(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer30 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray35 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer30.transform2(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray39 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray37, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray37);
        org.apache.commons.math.complex.Complex[] complexArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray37, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer22.transform2(complexArray42);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        double[] doubleArray52 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray49, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray52);
        org.apache.commons.math.complex.Complex[] complexArray54 = fastFourierTransformer44.transform(doubleArray52);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer22.transform(doubleArray52);
        double[] doubleArray60 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray60);
        double[] doubleArray63 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray60, (double) 10.0f);
        double[] doubleArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray63, (double) 10L);
        double[] doubleArray67 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray63, (double) (byte) 100);
        double[] doubleArray69 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray67, (double) 0L);
        org.apache.commons.math.complex.Complex[] complexArray70 = fastFourierTransformer22.transform(doubleArray69);
        double[] doubleArray72 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray69, (double) ' ');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray69);
        org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer0.inversetransform2(doubleArray69);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction75 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer0.inversetransform(univariateRealFunction75, (double) (-1.0f), (double) (short) 0, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray74);
    }

    @Test
    public void test2569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2569");
        org.apache.commons.math.transform.FastFourierTransformer.verifyInterval((double) 1L, (double) 10L);
    }

    @Test
    public void test2570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2570");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        double[] doubleArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray17, (double) 10.0f);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray20, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer0.transform(doubleArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer24 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer25 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray30 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer25.transform2(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray32, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray32);
        org.apache.commons.math.complex.Complex[] complexArray36 = fastFourierTransformer24.inversetransform(complexArray32);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer37 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray42 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray42);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer37.transform2(doubleArray42);
        double[] doubleArray46 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray42, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer24.inversetransform(doubleArray42);
        org.apache.commons.math.complex.Complex[] complexArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray47, (-1.0d));
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer0.inversetransform(complexArray49);
        double[] doubleArray55 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray55);
        double[] doubleArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray55, 0.0d);
        double[] doubleArray60 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray58, (double) (byte) 100);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray60);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer0.transform2(doubleArray60);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer63 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer64 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray69 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray69);
        org.apache.commons.math.complex.Complex[] complexArray71 = fastFourierTransformer64.transform2(doubleArray69);
        org.apache.commons.math.complex.Complex[] complexArray73 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray71, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray71);
        org.apache.commons.math.complex.Complex[] complexArray75 = fastFourierTransformer63.inversetransform(complexArray71);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray71);
        org.apache.commons.math.complex.Complex[] complexArray78 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray71, 0.0d);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer0.inversetransform2(complexArray71);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction80 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer0.inversetransform2(univariateRealFunction80, 0.0d, 10.0d, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(complexArray36);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray71);
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray79);
    }

    @Test
    public void test2571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2571");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer22.transform2(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer30 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray35 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer30.transform2(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray39 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray37, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray37);
        org.apache.commons.math.complex.Complex[] complexArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray37, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer22.transform2(complexArray42);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        double[] doubleArray52 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray49, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray52);
        org.apache.commons.math.complex.Complex[] complexArray54 = fastFourierTransformer44.transform(doubleArray52);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer22.transform(doubleArray52);
        double[] doubleArray60 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray60);
        double[] doubleArray63 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray60, (double) 10.0f);
        double[] doubleArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray63, (double) 10L);
        double[] doubleArray67 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray63, (double) (byte) 100);
        double[] doubleArray69 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray67, (double) 0L);
        org.apache.commons.math.complex.Complex[] complexArray70 = fastFourierTransformer22.transform(doubleArray69);
        double[] doubleArray72 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray69, (double) ' ');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray69);
        org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer0.inversetransform2(doubleArray69);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction75 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer0.transform(univariateRealFunction75, (double) '#', (double) (byte) 10, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [35.0, 10.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray74);
    }

    @Test
    public void test2572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2572");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer0.inversetransform2(complexArray18);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer20 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray25 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray25);
        double[] doubleArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray25, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer20.inversetransform(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray31 = fastFourierTransformer0.transform(doubleArray28);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer32.transform2(doubleArray37);
        double[] doubleArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray37, (double) 10.0f);
        double[] doubleArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray37, (double) 10L);
        double[] doubleArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray43, (double) (byte) 0);
        org.apache.commons.math.complex.Complex[] complexArray46 = fastFourierTransformer0.transform2(doubleArray45);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer47 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray52 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray52);
        org.apache.commons.math.complex.Complex[] complexArray54 = fastFourierTransformer47.transform2(doubleArray52);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer55 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray60 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray60);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer55.transform2(doubleArray60);
        org.apache.commons.math.complex.Complex[] complexArray64 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray62, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray62);
        org.apache.commons.math.complex.Complex[] complexArray67 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray62, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer47.transform2(complexArray67);
        double[] doubleArray73 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray73);
        double[] doubleArray76 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray73, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray77 = fastFourierTransformer47.transform(doubleArray73);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer0.transform(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(complexArray31);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(complexArray67);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray77);
        org.junit.Assert.assertNotNull(complexArray78);
    }

    @Test
    public void test2573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2573");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.transform.FastFourierTransformer.verifyInterval(0.0d, (double) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [0.0, 0.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2574");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer23 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer23.transform2(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray32 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray30, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray30);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer22.inversetransform(complexArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer35 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer35.transform2(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray44 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer22.transform(complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer0.transform(complexArray50);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer52 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray57 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray57);
        org.apache.commons.math.complex.Complex[] complexArray59 = fastFourierTransformer52.transform2(doubleArray57);
        org.apache.commons.math.complex.Complex[] complexArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray59, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray59);
        org.apache.commons.math.complex.Complex[] complexArray64 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray59, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray65 = fastFourierTransformer0.transform(complexArray64);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer66 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer67 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray72 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray72);
        org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer67.transform2(doubleArray72);
        org.apache.commons.math.complex.Complex[] complexArray76 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray74, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray74);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer66.inversetransform(complexArray74);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer0.transform(complexArray78);
        double[] doubleArray84 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray84);
        double[] doubleArray87 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray84, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray87);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray87);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray87);
        double[] doubleArray92 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray87, (double) (-1L));
        org.apache.commons.math.complex.Complex[] complexArray93 = fastFourierTransformer0.inversetransform2(doubleArray92);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction94 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray98 = fastFourierTransformer0.transform2(univariateRealFunction94, (double) '#', 100.0d, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(complexArray76);
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray79);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(complexArray93);
    }

    @Test
    public void test2575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2575");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.inversetransform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer19 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray24 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray24);
        org.apache.commons.math.complex.Complex[] complexArray26 = fastFourierTransformer19.transform2(doubleArray24);
        org.apache.commons.math.complex.Complex[] complexArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray26, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray26);
        org.apache.commons.math.complex.Complex[] complexArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray26, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer11.transform2(complexArray31);
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        double[] doubleArray40 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray37, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer11.transform2(doubleArray40);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer0.inversetransform2(doubleArray40);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer45 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray50 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer45.transform2(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray54 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray52, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer44.inversetransform(complexArray52);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer56 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray61 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        double[] doubleArray64 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray61, (double) 10.0f);
        double[] doubleArray66 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray64, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray67 = fastFourierTransformer56.inversetransform(doubleArray66);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer68 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray73 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray73);
        org.apache.commons.math.complex.Complex[] complexArray75 = fastFourierTransformer68.transform2(doubleArray73);
        org.apache.commons.math.complex.Complex[] complexArray77 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray75, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer56.inversetransform2(complexArray77);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer44.inversetransform2(complexArray78);
        org.apache.commons.math.complex.Complex[] complexArray80 = fastFourierTransformer0.inversetransform2(complexArray79);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray26);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray31);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray67);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(complexArray77);
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray79);
        org.junit.Assert.assertNotNull(complexArray80);
    }

    @Test
    public void test2576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2576");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer19 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray24 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray24);
        org.apache.commons.math.complex.Complex[] complexArray26 = fastFourierTransformer19.transform2(doubleArray24);
        org.apache.commons.math.complex.Complex[] complexArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray26, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray26);
        org.apache.commons.math.complex.Complex[] complexArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray26, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer11.transform2(complexArray31);
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        double[] doubleArray40 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray37, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer11.transform(doubleArray37);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer42 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray47 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray47);
        double[] doubleArray50 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray47, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer42.transform(doubleArray50);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer53 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer53.transform2(doubleArray58);
        double[] doubleArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray58, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer42.inversetransform(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer11.transform2(doubleArray58);
        double[] doubleArray66 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray58, (double) (short) 100);
        org.apache.commons.math.complex.Complex[] complexArray67 = fastFourierTransformer0.inversetransform2(doubleArray58);
        double[] doubleArray68 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer0.inversetransform(doubleArray68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray26);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray31);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray67);
    }

    @Test
    public void test2577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2577");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray18);
        org.apache.commons.math.complex.Complex[] complexArray23 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray26 = fastFourierTransformer0.inversetransform2(complexArray25);
        double[] doubleArray31 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        double[] doubleArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, (double) 10.0f);
        double[] doubleArray36 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer0.transform(doubleArray34);
        double[] doubleArray42 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray42);
        double[] doubleArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray42, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray45);
        double[] doubleArray48 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray45, 10.0d);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer0.transform2(doubleArray48);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer50 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer51 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray56 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray56);
        org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer51.transform2(doubleArray56);
        org.apache.commons.math.complex.Complex[] complexArray60 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray58, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray58);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer50.inversetransform(complexArray58);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer63 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray68 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray70 = fastFourierTransformer63.transform2(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray71 = fastFourierTransformer50.transform(complexArray70);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer72 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer73 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray78 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray78);
        org.apache.commons.math.complex.Complex[] complexArray80 = fastFourierTransformer73.transform2(doubleArray78);
        org.apache.commons.math.complex.Complex[] complexArray82 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray80, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray80);
        org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer72.inversetransform(complexArray80);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer85 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray90 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray90);
        org.apache.commons.math.complex.Complex[] complexArray92 = fastFourierTransformer85.transform2(doubleArray90);
        org.apache.commons.math.complex.Complex[] complexArray93 = fastFourierTransformer72.transform(complexArray92);
        org.apache.commons.math.complex.Complex[] complexArray94 = fastFourierTransformer50.inversetransform(complexArray92);
        org.apache.commons.math.complex.Complex[] complexArray96 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray92, 100.0d);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray92);
        org.apache.commons.math.complex.Complex[] complexArray98 = fastFourierTransformer0.transform2(complexArray92);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray26);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(complexArray71);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray80);
        org.junit.Assert.assertNotNull(complexArray82);
        org.junit.Assert.assertNotNull(complexArray84);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray92);
        org.junit.Assert.assertNotNull(complexArray93);
        org.junit.Assert.assertNotNull(complexArray94);
        org.junit.Assert.assertNotNull(complexArray96);
        org.junit.Assert.assertNotNull(complexArray98);
    }

    @Test
    public void test2578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2578");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) '4', (-1.0d), (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2579");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray18, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer0.inversetransform(doubleArray18);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer24 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray29 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray29);
        org.apache.commons.math.complex.Complex[] complexArray31 = fastFourierTransformer24.transform2(doubleArray29);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer32.transform2(doubleArray37);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer40 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray45 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray45);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer40.transform2(doubleArray45);
        org.apache.commons.math.complex.Complex[] complexArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray47, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray47);
        org.apache.commons.math.complex.Complex[] complexArray52 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray47, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer32.transform2(complexArray52);
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        double[] doubleArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray58, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer32.transform(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer24.transform(complexArray62);
        double[] doubleArray68 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray68);
        double[] doubleArray71 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray68, (double) 10.0f);
        double[] doubleArray73 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray71, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer24.transform2(doubleArray71);
        double[] doubleArray76 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray71, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray77 = fastFourierTransformer0.transform2(doubleArray71);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction78 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer0.inversetransform(univariateRealFunction78, (double) 100.0f, (double) (-1L), (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [100.0, -1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray31);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray77);
    }

    @Test
    public void test2580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2580");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) (byte) 100, (double) '#', (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2581");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer23 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer23.transform2(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray32 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray30, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray30);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer22.inversetransform(complexArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer35 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer35.transform2(doubleArray40);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer43 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray48 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray48);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer43.transform2(doubleArray48);
        org.apache.commons.math.complex.Complex[] complexArray52 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray50, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray50);
        org.apache.commons.math.complex.Complex[] complexArray55 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray50, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray56 = fastFourierTransformer35.transform2(complexArray55);
        double[] doubleArray61 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        double[] doubleArray64 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray61, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray65 = fastFourierTransformer35.transform(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray66 = fastFourierTransformer22.transform(doubleArray61);
        double[] doubleArray71 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray71);
        double[] doubleArray74 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray71, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray74);
        double[] doubleArray77 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray74, 10.0d);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer22.transform(doubleArray74);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer0.inversetransform(doubleArray74);
        org.apache.commons.math.complex.Complex[] complexArray81 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray79, 0.0d);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray79);
        org.junit.Assert.assertNotNull(complexArray81);
    }

    @Test
    public void test2582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2582");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer22.transform2(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer30 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray35 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer30.transform2(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray39 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray37, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray37);
        org.apache.commons.math.complex.Complex[] complexArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray37, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer22.transform2(complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) (byte) 1);
        org.apache.commons.math.complex.Complex[] complexArray46 = fastFourierTransformer0.transform(complexArray42);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer47 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray52 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray52);
        double[] doubleArray55 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray52, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer47.transform(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer0.inversetransform2(doubleArray55);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer59 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray64 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray64);
        double[] doubleArray67 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray64, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray67);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer59.inversetransform(doubleArray67);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray69);
        org.apache.commons.math.complex.Complex[] complexArray72 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray69, (double) (byte) 100);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray69);
        org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer0.transform2(complexArray69);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer75 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray80 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray80);
        double[] doubleArray83 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray80, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray83);
        org.apache.commons.math.complex.Complex[] complexArray85 = fastFourierTransformer75.transform(doubleArray83);
        double[] doubleArray87 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray83, (double) (byte) 100);
        double[] doubleArray89 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray87, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray90 = fastFourierTransformer0.transform(doubleArray87);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction91 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray95 = fastFourierTransformer0.inversetransform(univariateRealFunction91, (double) (byte) 10, (double) (-1L), (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray85);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray90);
    }

    @Test
    public void test2583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2583");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer0.inversetransform2(complexArray18);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer20 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer21 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        org.apache.commons.math.complex.Complex[] complexArray28 = fastFourierTransformer21.transform2(doubleArray26);
        org.apache.commons.math.complex.Complex[] complexArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray28, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray28);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer20.inversetransform(complexArray28);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer33 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        org.apache.commons.math.complex.Complex[] complexArray40 = fastFourierTransformer33.transform2(doubleArray38);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer20.transform(complexArray40);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer42 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer43 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray48 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray48);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer43.transform2(doubleArray48);
        org.apache.commons.math.complex.Complex[] complexArray52 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray50, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray50);
        org.apache.commons.math.complex.Complex[] complexArray54 = fastFourierTransformer42.inversetransform(complexArray50);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer55 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray60 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray60);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer55.transform2(doubleArray60);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer42.transform(complexArray62);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer20.inversetransform(complexArray62);
        org.apache.commons.math.complex.Complex[] complexArray66 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray62, (double) (short) 100);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray66);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer0.inversetransform(complexArray66);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction69 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer0.inversetransform2(univariateRealFunction69, 0.0d, (double) (-1), (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray40);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(complexArray68);
    }

    @Test
    public void test2584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2584");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        double[] doubleArray9 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray6, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray9);
        org.apache.commons.math.complex.Complex[] complexArray11 = fastFourierTransformer1.inversetransform(doubleArray9);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.transform2(complexArray11);
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        double[] doubleArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray17, (double) 10.0f);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray20, (double) 10L);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray22);
        double[] doubleArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray22, 100.0d);
        double[] doubleArray27 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray22, (double) ' ');
        org.apache.commons.math.complex.Complex[] complexArray28 = fastFourierTransformer0.inversetransform2(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer29 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        double[] doubleArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer29.transform(doubleArray37);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer40 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer41 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray46 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray46);
        org.apache.commons.math.complex.Complex[] complexArray48 = fastFourierTransformer41.transform2(doubleArray46);
        org.apache.commons.math.complex.Complex[] complexArray50 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray48, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray48);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer40.inversetransform(complexArray48);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer53 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer53.transform2(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer40.transform(complexArray60);
        double[] doubleArray66 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray66);
        double[] doubleArray69 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray66, (double) 10.0f);
        double[] doubleArray71 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray69, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer40.inversetransform2(doubleArray71);
        org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer29.inversetransform2(doubleArray71);
        double[] doubleArray75 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray71, (double) 1.0f);
        org.apache.commons.math.complex.Complex[] complexArray76 = fastFourierTransformer0.transform2(doubleArray71);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray11);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-320000.0, 3.104E7, 320000.0, 3200000.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-320000.0, 3.104E7, 320000.0, 3200000.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-320000.0, 3.104E7, 320000.0, 3200000.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-320000.0, 3.104E7, 320000.0, 3200000.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-320000.0, 3.104E7, 320000.0, 3200000.0]");
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray76);
    }

    @Test
    public void test2585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2585");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform2(doubleArray29);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer32.transform2(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray39, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer31.inversetransform(complexArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer44.transform2(doubleArray49);
        double[] doubleArray53 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray49, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray54 = fastFourierTransformer31.inversetransform(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer0.transform2(complexArray54);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer56 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer57 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray62 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray62);
        double[] doubleArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray62, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray65);
        org.apache.commons.math.complex.Complex[] complexArray67 = fastFourierTransformer57.inversetransform(doubleArray65);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer56.transform2(complexArray67);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer0.transform2(complexArray67);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer70 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray75 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray75);
        org.apache.commons.math.complex.Complex[] complexArray77 = fastFourierTransformer70.transform2(doubleArray75);
        double[] doubleArray79 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray75, (double) 10.0f);
        double[] doubleArray81 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray75, (double) 10L);
        double[] doubleArray83 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray81, (double) (byte) 0);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray83);
        double[] doubleArray86 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray83, (double) (-1));
        org.apache.commons.math.complex.Complex[] complexArray87 = fastFourierTransformer0.transform2(doubleArray86);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction88 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray92 = fastFourierTransformer0.transform(univariateRealFunction88, (double) 100L, 100.0d, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [100.0, 100.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray67);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(complexArray77);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(complexArray87);
    }

    @Test
    public void test2586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2586");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer23 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer23.transform2(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray32 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray30, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray30);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer22.inversetransform(complexArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer35 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer35.transform2(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer22.transform(complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer0.inversetransform(complexArray42);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer45 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray50 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer45.transform2(doubleArray50);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer53 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer53.transform2(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray60, (double) 'a');
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer45.transform(complexArray60);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer0.inversetransform(complexArray60);
        double[] doubleArray69 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray69);
        double[] doubleArray72 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray69, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray72);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray72);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray72);
        double[] doubleArray77 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray72, (double) (-1L));
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray77);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer0.inversetransform2(doubleArray77);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction80 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer0.transform2(univariateRealFunction80, 10.0d, (double) 0, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(complexArray79);
    }

    @Test
    public void test2587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2587");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray18);
        org.apache.commons.math.complex.Complex[] complexArray23 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray26 = fastFourierTransformer0.inversetransform2(complexArray25);
        double[] doubleArray31 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        double[] doubleArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, (double) 10.0f);
        double[] doubleArray36 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer0.transform(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray39 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray37, (double) (short) 1);
        org.apache.commons.math.complex.Complex[] complexArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray39, (double) 1L);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray41);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray41);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray26);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
    }

    @Test
    public void test2588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2588");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray33 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 100);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        java.lang.Class<?> wildcardClass35 = doubleArray26.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test2589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2589");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray36 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray36);
        double[] doubleArray39 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray36, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer31.transform(doubleArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer42 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray47 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer42.transform2(doubleArray47);
        double[] doubleArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray47, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer31.inversetransform(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer0.transform2(doubleArray47);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer54 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray59 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray59);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer54.transform2(doubleArray59);
        double[] doubleArray63 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray59, (double) 10.0f);
        double[] doubleArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray59, 0.0d);
        org.apache.commons.math.complex.Complex[] complexArray66 = fastFourierTransformer0.inversetransform(doubleArray65);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer67 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer68 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray73 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray73);
        org.apache.commons.math.complex.Complex[] complexArray75 = fastFourierTransformer68.transform2(doubleArray73);
        org.apache.commons.math.complex.Complex[] complexArray77 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray75, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray75);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer67.inversetransform(complexArray75);
        double[] doubleArray84 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray84);
        double[] doubleArray87 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray84, (double) 10.0f);
        double[] doubleArray89 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray87, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray90 = fastFourierTransformer67.transform(doubleArray87);
        org.apache.commons.math.complex.Complex[] complexArray92 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray90, (-1.0d));
        org.apache.commons.math.complex.Complex[] complexArray93 = fastFourierTransformer0.inversetransform(complexArray92);
        java.lang.Class<?> wildcardClass94 = complexArray93.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(complexArray77);
        org.junit.Assert.assertNotNull(complexArray79);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray90);
        org.junit.Assert.assertNotNull(complexArray92);
        org.junit.Assert.assertNotNull(complexArray93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test2590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2590");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        double[] doubleArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray16, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.inversetransform(doubleArray16);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray29, (double) (-1.0f));
        double[] doubleArray33 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer0.transform2(doubleArray33);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction35 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer0.transform(univariateRealFunction35, (double) (short) 10, 0.0d, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [10.0, 0.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1000.0, -97000.0, -1000.0, -10000.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1000.0, -97000.0, -1000.0, -10000.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1000.0, -97000.0, -1000.0, -10000.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1000.0, -97000.0, -1000.0, -10000.0]");
        org.junit.Assert.assertNotNull(complexArray34);
    }

    @Test
    public void test2591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2591");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform2(doubleArray29);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer32.transform2(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray39, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer31.inversetransform(complexArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer44.transform2(doubleArray49);
        double[] doubleArray53 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray49, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray54 = fastFourierTransformer31.inversetransform(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer0.transform2(complexArray54);
        double[] doubleArray60 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray60);
        double[] doubleArray63 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray60, (double) 10.0f);
        double[] doubleArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray60, 0.0d);
        org.apache.commons.math.complex.Complex[] complexArray66 = fastFourierTransformer0.transform2(doubleArray60);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction67 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray71 = fastFourierTransformer0.inversetransform2(univariateRealFunction67, (double) (short) 1, (-1.0d), 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [1.0, -1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray66);
    }

    @Test
    public void test2592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2592");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer16 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray21 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer16.transform2(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray23);
        org.apache.commons.math.complex.Complex[] complexArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer8.transform2(complexArray28);
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        double[] doubleArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer8.transform(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer0.transform(complexArray38);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer40 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer41 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray46 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray46);
        org.apache.commons.math.complex.Complex[] complexArray48 = fastFourierTransformer41.transform2(doubleArray46);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer49 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray54 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray54);
        org.apache.commons.math.complex.Complex[] complexArray56 = fastFourierTransformer49.transform2(doubleArray54);
        org.apache.commons.math.complex.Complex[] complexArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray56, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray56);
        org.apache.commons.math.complex.Complex[] complexArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray56, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer41.transform2(complexArray61);
        double[] doubleArray67 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray67);
        double[] doubleArray70 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray67, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray71 = fastFourierTransformer41.transform(doubleArray67);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray71);
        org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer40.transform2(complexArray71);
        double[] doubleArray78 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray78);
        double[] doubleArray81 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray78, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray81);
        org.apache.commons.math.complex.Complex[] complexArray83 = fastFourierTransformer40.inversetransform2(doubleArray81);
        double[] doubleArray88 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray88);
        double[] doubleArray91 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray88, (double) 10.0f);
        double[] doubleArray93 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray91, (double) 10L);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray91);
        org.apache.commons.math.complex.Complex[] complexArray95 = fastFourierTransformer40.transform(doubleArray91);
        org.apache.commons.math.complex.Complex[] complexArray96 = fastFourierTransformer0.inversetransform2(complexArray95);
        java.lang.Class<?> wildcardClass97 = complexArray96.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray71);
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray83);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray95);
        org.junit.Assert.assertNotNull(complexArray96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2593");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer19 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray24 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray24);
        org.apache.commons.math.complex.Complex[] complexArray26 = fastFourierTransformer19.transform2(doubleArray24);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer27 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray32 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray32);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer27.transform2(doubleArray32);
        org.apache.commons.math.complex.Complex[] complexArray36 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray34, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray34);
        org.apache.commons.math.complex.Complex[] complexArray39 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray34, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray40 = fastFourierTransformer19.transform2(complexArray39);
        double[] doubleArray45 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray45);
        double[] doubleArray48 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray45, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer19.transform(doubleArray45);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer11.transform(complexArray49);
        org.apache.commons.math.complex.Complex[] complexArray52 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray49, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray54 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray49, (double) (-1L));
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer0.inversetransform2(complexArray49);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer56 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray61 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        double[] doubleArray64 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray61, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray64);
        org.apache.commons.math.complex.Complex[] complexArray66 = fastFourierTransformer56.transform(doubleArray64);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer67 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray72 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray72);
        org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer67.transform2(doubleArray72);
        org.apache.commons.math.complex.Complex[] complexArray76 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray74, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray74);
        org.apache.commons.math.complex.Complex[] complexArray79 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray74, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray81 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray74, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer56.inversetransform2(complexArray81);
        org.apache.commons.math.complex.Complex[] complexArray83 = fastFourierTransformer0.transform(complexArray81);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray26);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(complexArray36);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray40);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(complexArray76);
        org.junit.Assert.assertNotNull(complexArray79);
        org.junit.Assert.assertNotNull(complexArray81);
        org.junit.Assert.assertNotNull(complexArray82);
        org.junit.Assert.assertNotNull(complexArray83);
    }

    @Test
    public void test2594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2594");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray41, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray41);
        org.apache.commons.math.complex.Complex[] complexArray46 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray41, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer0.inversetransform2(complexArray41);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer48 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray53 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray53);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer48.transform2(doubleArray53);
        org.apache.commons.math.complex.Complex[] complexArray57 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray55, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray55);
        org.apache.commons.math.complex.Complex[] complexArray60 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray55, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray55, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer0.inversetransform(complexArray62);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer64 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer65 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray70 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray70);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer65.transform2(doubleArray70);
        org.apache.commons.math.complex.Complex[] complexArray74 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray72, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray72);
        org.apache.commons.math.complex.Complex[] complexArray76 = fastFourierTransformer64.inversetransform(complexArray72);
        org.apache.commons.math.complex.Complex[] complexArray77 = fastFourierTransformer0.inversetransform2(complexArray72);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer78 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray83 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray83);
        org.apache.commons.math.complex.Complex[] complexArray85 = fastFourierTransformer78.transform2(doubleArray83);
        double[] doubleArray87 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray83, (double) (short) -1);
        double[] doubleArray89 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray83, (double) (short) 10);
        org.apache.commons.math.complex.Complex[] complexArray90 = fastFourierTransformer0.transform(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(complexArray76);
        org.junit.Assert.assertNotNull(complexArray77);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(complexArray85);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(complexArray90);
    }

    @Test
    public void test2595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2595");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) 'a', (double) 0.0f, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [97.0, 0.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2596");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.inversetransform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.inversetransform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer22.transform2(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer30 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray35 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer30.transform2(doubleArray35);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer38 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray43 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray43);
        org.apache.commons.math.complex.Complex[] complexArray45 = fastFourierTransformer38.transform2(doubleArray43);
        org.apache.commons.math.complex.Complex[] complexArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray45, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray45);
        org.apache.commons.math.complex.Complex[] complexArray50 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray45, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer30.transform2(complexArray50);
        double[] doubleArray56 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray56);
        double[] doubleArray59 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray56, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer30.transform(doubleArray56);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer22.transform(complexArray60);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer62 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray67 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray67);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer62.transform2(doubleArray67);
        double[] doubleArray71 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray67, (double) (short) -1);
        double[] doubleArray73 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray67, (double) (-1.0f));
        org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer22.transform2(doubleArray67);
        org.apache.commons.math.complex.Complex[] complexArray76 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray74, (double) (-1L));
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray74);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer0.transform2(complexArray74);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction79 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray83 = fastFourierTransformer0.inversetransform2(univariateRealFunction79, (double) 100, (double) (-1L), 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [100.0, -1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(complexArray76);
        org.junit.Assert.assertNotNull(complexArray78);
    }

    @Test
    public void test2597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2597");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform2(doubleArray29);
        double[] doubleArray35 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        double[] doubleArray38 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray35, (double) (byte) 100);
        double[] doubleArray40 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray35, (double) 0);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer0.transform2(doubleArray35);
        java.lang.Class<?> wildcardClass43 = fastFourierTransformer0.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test2598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2598");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer0.inversetransform2(complexArray18);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer20 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray25 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray25);
        double[] doubleArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray25, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer20.inversetransform(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray31 = fastFourierTransformer0.transform(doubleArray28);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer33 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        org.apache.commons.math.complex.Complex[] complexArray40 = fastFourierTransformer33.transform2(doubleArray38);
        org.apache.commons.math.complex.Complex[] complexArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray40, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray40);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer32.inversetransform(complexArray40);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer45 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray50 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer45.transform2(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer32.transform(complexArray52);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer54 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray59 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray59);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer54.transform2(doubleArray59);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer62 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray67 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray67);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer62.transform2(doubleArray67);
        org.apache.commons.math.complex.Complex[] complexArray71 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray69, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray69);
        org.apache.commons.math.complex.Complex[] complexArray74 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray69, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray75 = fastFourierTransformer54.transform2(complexArray74);
        double[] doubleArray80 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray80);
        double[] doubleArray83 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray80, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer54.transform2(doubleArray83);
        org.apache.commons.math.complex.Complex[] complexArray85 = fastFourierTransformer32.inversetransform2(doubleArray83);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray83);
        double[] doubleArray88 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray83, (double) 0);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray83);
        org.apache.commons.math.complex.Complex[] complexArray90 = fastFourierTransformer0.transform(doubleArray83);
        org.apache.commons.math.complex.Complex[] complexArray92 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray90, (double) (byte) 100);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray90);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(complexArray31);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray40);
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(complexArray71);
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray84);
        org.junit.Assert.assertNotNull(complexArray85);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray90);
        org.junit.Assert.assertNotNull(complexArray92);
    }

    @Test
    public void test2599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2599");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        double[] doubleArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray38, (double) 10.0f);
        double[] doubleArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray41, (double) (byte) -1);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray43);
        org.apache.commons.math.complex.Complex[] complexArray45 = fastFourierTransformer0.transform(doubleArray43);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer46 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer47 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray52 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray52);
        org.apache.commons.math.complex.Complex[] complexArray54 = fastFourierTransformer47.transform2(doubleArray52);
        org.apache.commons.math.complex.Complex[] complexArray56 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray54, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray54);
        org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer46.inversetransform(complexArray54);
        double[] doubleArray63 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray63);
        double[] doubleArray66 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray63, (double) 10.0f);
        double[] doubleArray68 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray66, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer46.transform(doubleArray66);
        org.apache.commons.math.complex.Complex[] complexArray70 = fastFourierTransformer0.inversetransform(complexArray69);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction71 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray75 = fastFourierTransformer0.inversetransform(univariateRealFunction71, (double) '#', (double) ' ', 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [35.0, 32.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(complexArray70);
    }

    @Test
    public void test2600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2600");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        double[] doubleArray9 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray6, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray9);
        org.apache.commons.math.complex.Complex[] complexArray11 = fastFourierTransformer1.inversetransform(doubleArray9);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.transform2(complexArray11);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer21 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        org.apache.commons.math.complex.Complex[] complexArray28 = fastFourierTransformer21.transform2(doubleArray26);
        org.apache.commons.math.complex.Complex[] complexArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray28, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray28);
        org.apache.commons.math.complex.Complex[] complexArray33 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray28, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer13.transform2(complexArray33);
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        double[] doubleArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray39, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer13.transform(doubleArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer45 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray50 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer45.transform2(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray54 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray52, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray52);
        org.apache.commons.math.complex.Complex[] complexArray56 = fastFourierTransformer44.inversetransform(complexArray52);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer57 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray62 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray62);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer57.transform2(doubleArray62);
        org.apache.commons.math.complex.Complex[] complexArray66 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray64, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray64);
        org.apache.commons.math.complex.Complex[] complexArray69 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray64, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray71 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray64, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer44.transform(complexArray64);
        org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer13.inversetransform2(complexArray72);
        org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer0.inversetransform(complexArray73);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer75 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray80 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray80);
        double[] doubleArray83 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray80, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray83);
        org.apache.commons.math.complex.Complex[] complexArray85 = fastFourierTransformer75.inversetransform(doubleArray83);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray85);
        org.apache.commons.math.complex.Complex[] complexArray88 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray85, (double) (byte) 100);
        org.apache.commons.math.complex.Complex[] complexArray89 = fastFourierTransformer0.transform2(complexArray88);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction90 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray94 = fastFourierTransformer0.inversetransform(univariateRealFunction90, (double) (byte) 10, (double) 1L, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [10.0, 1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray11);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(complexArray71);
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray85);
        org.junit.Assert.assertNotNull(complexArray88);
        org.junit.Assert.assertNotNull(complexArray89);
    }

    @Test
    public void test2601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2601");
        org.apache.commons.math.transform.FastFourierTransformer.verifyInterval((-1.0d), (double) 1.0f);
    }

    @Test
    public void test2602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2602");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform2(doubleArray29);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer32.transform2(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray39, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer31.inversetransform(complexArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer44.transform2(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer31.transform(complexArray51);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer53 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer53.transform2(doubleArray58);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer61 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray66 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray66);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer61.transform2(doubleArray66);
        org.apache.commons.math.complex.Complex[] complexArray70 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray68, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray68);
        org.apache.commons.math.complex.Complex[] complexArray73 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray68, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer53.transform2(complexArray73);
        double[] doubleArray79 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray79);
        double[] doubleArray82 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray79, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray83 = fastFourierTransformer53.transform2(doubleArray82);
        org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer31.inversetransform2(doubleArray82);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray82);
        double[] doubleArray87 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray82, (double) 0);
        org.apache.commons.math.complex.Complex[] complexArray88 = fastFourierTransformer0.inversetransform(doubleArray87);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction89 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray93 = fastFourierTransformer0.transform(univariateRealFunction89, (double) 10.0f, (double) 10, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [10.0, 10.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray83);
        org.junit.Assert.assertNotNull(complexArray84);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray88);
    }

    @Test
    public void test2603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2603");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer16 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray21 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer16.transform2(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray23);
        org.apache.commons.math.complex.Complex[] complexArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer8.transform2(complexArray28);
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        double[] doubleArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer8.transform(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer0.transform(complexArray38);
        org.apache.commons.math.complex.Complex[] complexArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray38, (double) (-1.0f));
        java.lang.Class<?> wildcardClass42 = complexArray41.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test2604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2604");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer9 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray14 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray14);
        org.apache.commons.math.complex.Complex[] complexArray16 = fastFourierTransformer9.transform2(doubleArray14);
        org.apache.commons.math.complex.Complex[] complexArray18 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray16, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray16);
        org.apache.commons.math.complex.Complex[] complexArray21 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray16, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray22 = fastFourierTransformer1.transform2(complexArray21);
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray31 = fastFourierTransformer1.transform2(doubleArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer33 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        org.apache.commons.math.complex.Complex[] complexArray40 = fastFourierTransformer33.transform2(doubleArray38);
        org.apache.commons.math.complex.Complex[] complexArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray40, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray40);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer32.inversetransform(complexArray40);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer45 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray50 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer45.transform2(doubleArray50);
        double[] doubleArray54 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray50, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer32.inversetransform(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray56 = fastFourierTransformer1.transform2(complexArray55);
        org.apache.commons.math.complex.Complex[] complexArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray56, 10.0d);
        org.apache.commons.math.complex.Complex[] complexArray60 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray56, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer0.inversetransform(complexArray60);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer62 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray67 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray67);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer62.transform2(doubleArray67);
        org.apache.commons.math.complex.Complex[] complexArray70 = fastFourierTransformer0.inversetransform2(complexArray69);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction71 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray75 = fastFourierTransformer0.inversetransform2(univariateRealFunction71, (double) (byte) 1, (double) (byte) 1, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [1.0, 1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray16);
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray31);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray40);
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(complexArray70);
    }

    @Test
    public void test2605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2605");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray36 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray36);
        double[] doubleArray39 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray36, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer31.transform(doubleArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer42 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray47 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer42.transform2(doubleArray47);
        double[] doubleArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray47, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer31.inversetransform(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer0.transform2(doubleArray47);
        double[] doubleArray55 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray47, (double) (short) 100);
        double[] doubleArray57 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray47, (double) (-1L));
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray57);
        double[] doubleArray60 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray57, (double) (byte) 1);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10000.0, -970000.0, -10000.0, -100000.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10000.0, -970000.0, -10000.0, -100000.0]");
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[10000.0, -970000.0, -10000.0, -100000.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10000.0, -970000.0, -10000.0, -100000.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[10000.0, -970000.0, -10000.0, -100000.0]");
    }

    @Test
    public void test2606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2606");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) 1.0f, 100.0d, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2607");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray36 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray36);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer31.transform2(doubleArray36);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer39 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray44 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray44);
        org.apache.commons.math.complex.Complex[] complexArray46 = fastFourierTransformer39.transform2(doubleArray44);
        org.apache.commons.math.complex.Complex[] complexArray48 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray46, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray46);
        org.apache.commons.math.complex.Complex[] complexArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray46, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer31.transform2(complexArray51);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer53 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        double[] doubleArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray58, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer53.transform(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer31.transform(doubleArray61);
        double[] doubleArray69 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray69);
        double[] doubleArray72 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray69, (double) 10.0f);
        double[] doubleArray74 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray72, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray75 = fastFourierTransformer31.inversetransform(doubleArray74);
        double[] doubleArray80 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray80);
        double[] doubleArray83 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray80, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer31.inversetransform2(doubleArray80);
        org.apache.commons.math.complex.Complex[] complexArray85 = fastFourierTransformer0.inversetransform2(complexArray84);
        org.apache.commons.math.complex.Complex[] complexArray87 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray85, (double) '#');
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray84);
        org.junit.Assert.assertNotNull(complexArray85);
        org.junit.Assert.assertNotNull(complexArray87);
    }

    @Test
    public void test2608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2608");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.transform.FastFourierTransformer.verifyInterval((double) 'a', (double) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [97.0, 32.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2609");
        org.apache.commons.math.transform.FastFourierTransformer.verifyInterval(0.0d, (double) 'a');
    }

    @Test
    public void test2610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2610");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) 10.0f, (double) '4', (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2611");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.transform.FastFourierTransformer.verifyInterval(100.0d, (double) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [100.0, 1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2612");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, 1.0d, (double) 10, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2613");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        double[] doubleArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray17, (double) 10.0f);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray20, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer0.transform(doubleArray20);
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray28, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        double[] doubleArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, 10.0d);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer0.transform2(doubleArray31);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer36 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray41 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer36.transform2(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray43, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray43);
        org.apache.commons.math.complex.Complex[] complexArray48 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray43, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer0.transform2(complexArray43);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer50 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray55 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer50.transform2(doubleArray55);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer58 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray63 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray63);
        org.apache.commons.math.complex.Complex[] complexArray65 = fastFourierTransformer58.transform2(doubleArray63);
        org.apache.commons.math.complex.Complex[] complexArray67 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray65, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray65);
        org.apache.commons.math.complex.Complex[] complexArray70 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray65, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray71 = fastFourierTransformer50.transform2(complexArray70);
        org.apache.commons.math.complex.Complex[] complexArray73 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray70, (double) (byte) 1);
        org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer0.inversetransform(complexArray73);
        double[] doubleArray79 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray79);
        double[] doubleArray82 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray79, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray79);
        org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer0.transform(doubleArray79);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray79);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray35);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray67);
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(complexArray71);
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray84);
    }

    @Test
    public void test2614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2614");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) ' ', (double) ' ', (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [32.0, 32.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2615");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        double[] doubleArray16 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray13, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer8.transform(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer0.transform2(doubleArray16);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer20 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray25 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray25);
        org.apache.commons.math.complex.Complex[] complexArray27 = fastFourierTransformer20.transform2(doubleArray25);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer28 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray33 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray33);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer28.transform2(doubleArray33);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer36 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray41 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer36.transform2(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray43, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray43);
        org.apache.commons.math.complex.Complex[] complexArray48 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray43, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer28.transform2(complexArray48);
        double[] doubleArray54 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray54);
        double[] doubleArray57 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray54, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer28.transform(doubleArray54);
        org.apache.commons.math.complex.Complex[] complexArray59 = fastFourierTransformer20.transform(complexArray58);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer60 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray65 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray65);
        org.apache.commons.math.complex.Complex[] complexArray67 = fastFourierTransformer60.transform2(doubleArray65);
        double[] doubleArray69 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray65, (double) (short) -1);
        double[] doubleArray71 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray65, (double) (-1.0f));
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer20.transform2(doubleArray65);
        org.apache.commons.math.complex.Complex[] complexArray74 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray72, (double) (-1L));
        org.apache.commons.math.complex.Complex[] complexArray75 = fastFourierTransformer0.inversetransform2(complexArray72);
        double[] doubleArray80 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray80);
        double[] doubleArray83 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray80, (double) (byte) 100);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray80);
        double[] doubleArray86 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray80, (double) ' ');
        org.apache.commons.math.complex.Complex[] complexArray87 = fastFourierTransformer0.transform2(doubleArray80);
        double[] doubleArray89 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray80, (double) 0L);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray80);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray27);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray35);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray67);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray87);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    public void test2616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2616");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer12 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer12.transform2(doubleArray17);
        org.apache.commons.math.complex.Complex[] complexArray21 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray19, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray19);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer11.inversetransform(complexArray19);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer24 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray29 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray29);
        org.apache.commons.math.complex.Complex[] complexArray31 = fastFourierTransformer24.transform2(doubleArray29);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer11.transform(complexArray31);
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        double[] doubleArray40 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray37, (double) 10.0f);
        double[] doubleArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray40, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer11.inversetransform2(doubleArray42);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer0.inversetransform2(doubleArray42);
        org.apache.commons.math.complex.Complex[] complexArray46 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray44, (double) (-1.0f));
        org.apache.commons.math.complex.Complex[] complexArray48 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray46, 100.0d);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray31);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(complexArray48);
    }

    @Test
    public void test2617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2617");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray11 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer12 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray20);
        org.apache.commons.math.complex.Complex[] complexArray24 = fastFourierTransformer12.inversetransform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer25 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray30 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer25.transform2(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer12.transform(complexArray32);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer0.transform2(complexArray32);
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        double[] doubleArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray39, (double) (byte) 100);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer0.inversetransform(doubleArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer45 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray50 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray50);
        double[] doubleArray53 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray50, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray53);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer45.transform(doubleArray53);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray55);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray55);
        org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer0.inversetransform2(complexArray55);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction59 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer0.transform2(univariateRealFunction59, (double) 10.0f, (double) (short) 100, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray11);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(complexArray24);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(complexArray58);
    }

    @Test
    public void test2618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2618");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray29, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer0.inversetransform2(doubleArray31);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer33 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray41, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray41);
        org.apache.commons.math.complex.Complex[] complexArray45 = fastFourierTransformer33.inversetransform(complexArray41);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer46 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray51 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray51);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer46.transform2(doubleArray51);
        org.apache.commons.math.complex.Complex[] complexArray55 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray53, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray53);
        org.apache.commons.math.complex.Complex[] complexArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray53, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray60 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray53, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer33.transform(complexArray53);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer0.inversetransform2(complexArray61);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(complexArray62);
    }

    @Test
    public void test2619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2619");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray29, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer0.inversetransform2(doubleArray31);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction33 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer0.inversetransform2(univariateRealFunction33, 100.0d, (double) (-1.0f), (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [100.0, -1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray32);
    }

    @Test
    public void test2620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2620");
        double[] doubleArray4 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray4);
        double[] doubleArray7 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray4, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray7);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray7);
        double[] doubleArray11 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray7, (double) (byte) 10);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray11);
        double[] doubleArray14 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray11, (double) (byte) 0);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-0.0, 0.0, 0.0, 0.0]");
    }

    @Test
    public void test2621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2621");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        double[] doubleArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray38, (double) 10.0f);
        double[] doubleArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray41, (double) (byte) -1);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray43);
        org.apache.commons.math.complex.Complex[] complexArray45 = fastFourierTransformer0.transform(doubleArray43);
        double[] doubleArray50 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray50);
        double[] doubleArray53 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray50, (double) (byte) 100);
        double[] doubleArray55 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray50, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray56 = fastFourierTransformer0.transform2(doubleArray50);
        double[] doubleArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray50, (double) (-1.0f));
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10000.0, -970000.0, -10000.0, -100000.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[10000.0, -970000.0, -10000.0, -100000.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[10000.0, -970000.0, -10000.0, -100000.0]");
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10000.0, -970000.0, -10000.0, -100000.0]");
    }

    @Test
    public void test2622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2622");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        double[] doubleArray9 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray6, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray9);
        org.apache.commons.math.complex.Complex[] complexArray11 = fastFourierTransformer1.inversetransform(doubleArray9);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.transform2(complexArray11);
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        double[] doubleArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray17, (double) 10.0f);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray20, (double) 10L);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray22);
        double[] doubleArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray22, 100.0d);
        double[] doubleArray27 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray22, (double) ' ');
        org.apache.commons.math.complex.Complex[] complexArray28 = fastFourierTransformer0.inversetransform2(doubleArray27);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction29 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(univariateRealFunction29, (double) '4', 0.0d, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [52.0, 0.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray11);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-320000.0, 3.104E7, 320000.0, 3200000.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-320000.0, 3.104E7, 320000.0, 3200000.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-320000.0, 3.104E7, 320000.0, 3200000.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-320000.0, 3.104E7, 320000.0, 3200000.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-320000.0, 3.104E7, 320000.0, 3200000.0]");
        org.junit.Assert.assertNotNull(complexArray28);
    }

    @Test
    public void test2623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2623");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) (short) -1, (double) '4', (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2624");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray41, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray41);
        org.apache.commons.math.complex.Complex[] complexArray46 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray41, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer0.inversetransform2(complexArray41);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer48 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray53 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray53);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer48.transform2(doubleArray53);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer56 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray61 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer56.transform2(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray63);
        org.apache.commons.math.complex.Complex[] complexArray68 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer48.transform2(complexArray68);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer70 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray75 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray75);
        double[] doubleArray78 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray75, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray78);
        org.apache.commons.math.complex.Complex[] complexArray80 = fastFourierTransformer70.transform(doubleArray78);
        org.apache.commons.math.complex.Complex[] complexArray81 = fastFourierTransformer48.transform(doubleArray78);
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer0.inversetransform2(doubleArray78);
        double[] doubleArray87 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray87);
        double[] doubleArray90 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray87, (double) 10.0f);
        double[] doubleArray92 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray90, (double) 10L);
        double[] doubleArray94 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray90, (double) (byte) 100);
        org.apache.commons.math.complex.Complex[] complexArray95 = fastFourierTransformer0.transform(doubleArray94);
        double[] doubleArray97 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray94, (double) (short) 100);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray80);
        org.junit.Assert.assertNotNull(complexArray81);
        org.junit.Assert.assertNotNull(complexArray82);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-1000000.0, 9.7E7, 1000000.0, 1.0E7]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-1000000.0, 9.7E7, 1000000.0, 1.0E7]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[-1000000.0, 9.7E7, 1000000.0, 1.0E7]");
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[-1000000.0, 9.7E7, 1000000.0, 1.0E7]");
        org.junit.Assert.assertNotNull(complexArray95);
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray97), "[-1000000.0, 9.7E7, 1000000.0, 1.0E7]");
    }

    @Test
    public void test2625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2625");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform2(doubleArray29);
        double[] doubleArray35 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        double[] doubleArray38 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray35, (double) (byte) 100);
        double[] doubleArray40 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray35, (double) 0);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer0.transform2(doubleArray35);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer43 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray48 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray48);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer43.transform2(doubleArray48);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer51 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray56 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray56);
        org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer51.transform2(doubleArray56);
        org.apache.commons.math.complex.Complex[] complexArray60 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray58, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray58);
        org.apache.commons.math.complex.Complex[] complexArray63 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray58, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer43.transform2(complexArray63);
        double[] doubleArray69 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray69);
        double[] doubleArray72 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray69, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray72);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray72);
        double[] doubleArray76 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray72, (double) (byte) 10);
        double[] doubleArray78 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray76, (double) (byte) 0);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer43.transform2(doubleArray76);
        double[] doubleArray81 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray76, (double) (short) 0);
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer0.inversetransform(doubleArray81);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction83 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray87 = fastFourierTransformer0.transform2(univariateRealFunction83, (double) '#', (-1.0d), (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray79);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray82);
    }

    @Test
    public void test2626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2626");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray11 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer12 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray20);
        org.apache.commons.math.complex.Complex[] complexArray24 = fastFourierTransformer12.inversetransform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer25 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray30 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer25.transform2(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer12.transform(complexArray32);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer0.transform2(complexArray32);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer35 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer35.transform2(doubleArray40);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer43 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray48 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray48);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer43.transform2(doubleArray48);
        org.apache.commons.math.complex.Complex[] complexArray52 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray50, (double) 'a');
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer35.transform(complexArray50);
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        double[] doubleArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray58, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        double[] doubleArray66 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray61, (double) (short) 1);
        org.apache.commons.math.complex.Complex[] complexArray67 = fastFourierTransformer35.inversetransform2(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer0.inversetransform(doubleArray61);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray11);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(complexArray24);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray67);
        org.junit.Assert.assertNotNull(complexArray68);
    }

    @Test
    public void test2627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2627");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer35 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer35.transform2(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray44 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray46 = fastFourierTransformer34.inversetransform(complexArray42);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer47 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray52 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray52);
        org.apache.commons.math.complex.Complex[] complexArray54 = fastFourierTransformer47.transform2(doubleArray52);
        org.apache.commons.math.complex.Complex[] complexArray56 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray54, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray54);
        org.apache.commons.math.complex.Complex[] complexArray59 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray54, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray54, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer34.transform(complexArray54);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer63 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray68 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray70 = fastFourierTransformer63.transform2(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray71 = fastFourierTransformer34.transform2(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer0.transform2(doubleArray68);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction73 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray77 = fastFourierTransformer0.inversetransform(univariateRealFunction73, (double) '#', (double) 1L, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [35.0, 1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(complexArray71);
        org.junit.Assert.assertNotNull(complexArray72);
    }

    @Test
    public void test2628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2628");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray9 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray7, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray7);
        org.apache.commons.math.complex.Complex[] complexArray12 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray7, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray14 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray7, (double) 1);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray7);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray7);
        org.apache.commons.math.complex.Complex[] complexArray18 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray7, 0.0d);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(complexArray9);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(complexArray14);
        org.junit.Assert.assertNotNull(complexArray18);
    }

    @Test
    public void test2629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2629");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer0.inversetransform2(complexArray18);
        double[] doubleArray24 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray24);
        double[] doubleArray27 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray24, (double) 10.0f);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10L);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray29);
        org.apache.commons.math.complex.Complex[] complexArray31 = fastFourierTransformer0.inversetransform2(doubleArray29);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction32 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray36 = fastFourierTransformer0.inversetransform2(univariateRealFunction32, (double) (byte) 10, 0.0d, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [10.0, 0.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray31);
    }

    @Test
    public void test2630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2630");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        double[] doubleArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray17, (double) 10.0f);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray20, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer0.transform(doubleArray20);
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray28, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        double[] doubleArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, 10.0d);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer0.transform2(doubleArray31);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer36 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray41 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer36.transform2(doubleArray41);
        org.apache.commons.math.complex.Complex[] complexArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray43, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray43);
        org.apache.commons.math.complex.Complex[] complexArray48 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray43, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer0.transform2(complexArray43);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer50 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer51 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray56 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray56);
        org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer51.transform2(doubleArray56);
        org.apache.commons.math.complex.Complex[] complexArray60 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray58, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray58);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer50.inversetransform(complexArray58);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer63 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray68 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray70 = fastFourierTransformer63.transform2(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray71 = fastFourierTransformer50.transform(complexArray70);
        double[] doubleArray76 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray76);
        double[] doubleArray79 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray76, (double) 10.0f);
        double[] doubleArray81 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray79, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer50.inversetransform2(doubleArray81);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray81);
        org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer0.transform(doubleArray81);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction85 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray89 = fastFourierTransformer0.inversetransform2(univariateRealFunction85, (double) (byte) 10, (double) 100L, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray35);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray70);
        org.junit.Assert.assertNotNull(complexArray71);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray82);
        org.junit.Assert.assertNotNull(complexArray84);
    }

    @Test
    public void test2631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2631");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer23 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer23.transform2(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray32 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray30, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray30);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer22.inversetransform(complexArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer35 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer35.transform2(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer22.transform(complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer0.inversetransform(complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray46 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray44, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray48 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray46, (double) 100);
        org.apache.commons.math.complex.Complex[] complexArray50 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray46, (double) 'a');
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(complexArray50);
    }

    @Test
    public void test2632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2632");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        double[] doubleArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray38, (double) 10.0f);
        double[] doubleArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray41, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer0.inversetransform(doubleArray43);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction45 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer0.inversetransform2(univariateRealFunction45, (double) 1.0f, (double) 'a', (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray44);
    }

    @Test
    public void test2633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2633");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer22.transform2(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer30 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray35 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer30.transform2(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray39 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray37, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray37);
        org.apache.commons.math.complex.Complex[] complexArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray37, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer22.transform2(complexArray42);
        double[] doubleArray48 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray48);
        double[] doubleArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray48, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer22.transform2(doubleArray51);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer0.inversetransform2(doubleArray51);
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        double[] doubleArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray58, (double) (byte) 100);
        double[] doubleArray63 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray58, (double) 0);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray65 = fastFourierTransformer0.inversetransform2(doubleArray58);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        java.lang.Class<?> wildcardClass67 = doubleArray58.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test2634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2634");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer22.transform2(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer30 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray35 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer30.transform2(doubleArray35);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer38 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray43 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray43);
        org.apache.commons.math.complex.Complex[] complexArray45 = fastFourierTransformer38.transform2(doubleArray43);
        org.apache.commons.math.complex.Complex[] complexArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray45, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray45);
        org.apache.commons.math.complex.Complex[] complexArray50 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray45, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer30.transform2(complexArray50);
        double[] doubleArray56 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray56);
        double[] doubleArray59 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray56, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer30.transform(doubleArray56);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer22.transform(complexArray60);
        org.apache.commons.math.complex.Complex[] complexArray63 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray60, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer0.inversetransform2(complexArray63);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer65 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer66 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray71 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray71);
        org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer66.transform2(doubleArray71);
        org.apache.commons.math.complex.Complex[] complexArray75 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray73, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray73);
        org.apache.commons.math.complex.Complex[] complexArray77 = fastFourierTransformer65.inversetransform(complexArray73);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer78 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray83 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray83);
        org.apache.commons.math.complex.Complex[] complexArray85 = fastFourierTransformer78.transform2(doubleArray83);
        double[] doubleArray87 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray83, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray88 = fastFourierTransformer65.inversetransform(doubleArray83);
        org.apache.commons.math.complex.Complex[] complexArray89 = fastFourierTransformer0.inversetransform(doubleArray83);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction90 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray94 = fastFourierTransformer0.inversetransform2(univariateRealFunction90, (double) (short) 100, (double) 'a', (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [100.0, 97.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(complexArray77);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray85);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray88);
        org.junit.Assert.assertNotNull(complexArray89);
    }

    @Test
    public void test2635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2635");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer2 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray7 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray7);
        double[] doubleArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray7, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray10);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer2.inversetransform(doubleArray10);
        org.apache.commons.math.complex.Complex[] complexArray13 = fastFourierTransformer1.transform2(complexArray12);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer14 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray19 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray19);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray19, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray22);
        org.apache.commons.math.complex.Complex[] complexArray24 = fastFourierTransformer14.transform(doubleArray22);
        org.apache.commons.math.complex.Complex[] complexArray25 = fastFourierTransformer1.transform2(complexArray24);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray24);
        org.apache.commons.math.complex.Complex[] complexArray27 = fastFourierTransformer0.inversetransform(complexArray24);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray24);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(complexArray13);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray24);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray27);
    }

    @Test
    public void test2636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2636");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray18);
        org.apache.commons.math.complex.Complex[] complexArray23 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray18, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray26 = fastFourierTransformer0.inversetransform2(complexArray25);
        double[] doubleArray31 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        double[] doubleArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, (double) 10.0f);
        double[] doubleArray36 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray37 = fastFourierTransformer0.transform(doubleArray34);
        double[] doubleArray42 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray42);
        double[] doubleArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray42, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray45);
        double[] doubleArray48 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray45, 10.0d);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer0.transform2(doubleArray48);
        double[] doubleArray54 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray54);
        double[] doubleArray57 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray54, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray57);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray57);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray57);
        double[] doubleArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray57, (double) (short) 1);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer0.inversetransform(doubleArray57);
        org.apache.commons.math.complex.Complex[] complexArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) '4');
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray26);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray37);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray65);
    }

    @Test
    public void test2637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2637");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer42 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray47 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer42.transform2(doubleArray47);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer50 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray55 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer50.transform2(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray59 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray57, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray57);
        org.apache.commons.math.complex.Complex[] complexArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray57, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer42.transform2(complexArray62);
        double[] doubleArray68 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray68);
        double[] doubleArray71 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray68, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer42.transform(doubleArray68);
        org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer34.transform(complexArray72);
        org.apache.commons.math.complex.Complex[] complexArray75 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray72, (double) (-1.0f));
        org.apache.commons.math.complex.Complex[] complexArray76 = fastFourierTransformer0.inversetransform2(complexArray72);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray72);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(complexArray76);
    }

    @Test
    public void test2638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2638");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray35 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray33, (double) (byte) 10);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(complexArray35);
    }

    @Test
    public void test2639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2639");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        double[] doubleArray9 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) (short) -1);
        double[] doubleArray11 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) (-1.0f));
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 97.0, 1.0, 10.0]");
    }

    @Test
    public void test2640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2640");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray11 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer12 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        double[] doubleArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray17, (double) 10.0f);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray20, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer12.inversetransform(doubleArray22);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer24 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray29 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray29);
        org.apache.commons.math.complex.Complex[] complexArray31 = fastFourierTransformer24.transform2(doubleArray29);
        org.apache.commons.math.complex.Complex[] complexArray33 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray31, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer12.inversetransform2(complexArray33);
        org.apache.commons.math.complex.Complex[] complexArray35 = fastFourierTransformer0.inversetransform2(complexArray34);
        org.apache.commons.math.complex.Complex[] complexArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray34, (double) (byte) 0);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray34);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray11);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray31);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(complexArray35);
        org.junit.Assert.assertNotNull(complexArray37);
    }

    @Test
    public void test2641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2641");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray11 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer12 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray20);
        org.apache.commons.math.complex.Complex[] complexArray24 = fastFourierTransformer12.inversetransform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer25 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray30 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer25.transform2(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer12.transform(complexArray32);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer0.transform2(complexArray32);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer35 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        double[] doubleArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray40, (double) 10.0f);
        double[] doubleArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray43, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray46 = fastFourierTransformer35.inversetransform(doubleArray45);
        double[] doubleArray48 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray45, (double) (short) 0);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer0.inversetransform(doubleArray48);
        double[] doubleArray54 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray54);
        double[] doubleArray57 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray54, (double) 10.0f);
        double[] doubleArray59 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray57, (double) (byte) -1);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer0.transform2(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray11);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(complexArray24);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(complexArray60);
    }

    @Test
    public void test2642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2642");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) 10, 1.0d, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [10.0, 1.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2643");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray16 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer11.transform2(doubleArray16);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer0.inversetransform2(complexArray18);
        double[] doubleArray24 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray24);
        double[] doubleArray27 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray24, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) (byte) 10);
        double[] doubleArray33 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, (double) (byte) 0);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer0.transform(doubleArray33);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer35 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        double[] doubleArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray40, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray43);
        org.apache.commons.math.complex.Complex[] complexArray45 = fastFourierTransformer35.transform(doubleArray43);
        org.apache.commons.math.complex.Complex[] complexArray46 = fastFourierTransformer0.inversetransform2(complexArray45);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer47 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer48 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray53 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray53);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer48.transform2(doubleArray53);
        org.apache.commons.math.complex.Complex[] complexArray57 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray55, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray55);
        org.apache.commons.math.complex.Complex[] complexArray59 = fastFourierTransformer47.inversetransform(complexArray55);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer60 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray65 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray65);
        org.apache.commons.math.complex.Complex[] complexArray67 = fastFourierTransformer60.transform2(doubleArray65);
        org.apache.commons.math.complex.Complex[] complexArray69 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray67, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray67);
        org.apache.commons.math.complex.Complex[] complexArray72 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray67, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray74 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray67, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray75 = fastFourierTransformer47.transform(complexArray67);
        double[] doubleArray80 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray80);
        double[] doubleArray83 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray80, (double) 10.0f);
        double[] doubleArray85 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray83, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray86 = fastFourierTransformer47.transform2(doubleArray83);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray83);
        double[] doubleArray89 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray83, (double) (-1));
        org.apache.commons.math.complex.Complex[] complexArray90 = fastFourierTransformer0.inversetransform(doubleArray83);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction91 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray95 = fastFourierTransformer0.inversetransform2(univariateRealFunction91, (double) (short) 0, (double) 1L, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray67);
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, -9700.0, -100.0, -1000.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, -9700.0, -100.0, -1000.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[100.0, -9700.0, -100.0, -1000.0]");
        org.junit.Assert.assertNotNull(complexArray86);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[100.0, -9700.0, -100.0, -1000.0]");
        org.junit.Assert.assertNotNull(complexArray90);
    }

    @Test
    public void test2644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2644");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.transform.FastFourierTransformer.verifyInterval((double) 10L, (double) 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [10.0, 0.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2645");
        double[] doubleArray4 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray4);
        double[] doubleArray7 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray4, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray7);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray7);
        double[] doubleArray11 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray7, (double) (byte) 10);
        double[] doubleArray13 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray11, (double) (byte) 0);
        java.lang.Class<?> wildcardClass14 = doubleArray13.getClass();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test2646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2646");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray29, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer0.inversetransform2(doubleArray31);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer33 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray41, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray41);
        org.apache.commons.math.complex.Complex[] complexArray45 = fastFourierTransformer33.inversetransform(complexArray41);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer46 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray51 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray51);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer46.transform2(doubleArray51);
        org.apache.commons.math.complex.Complex[] complexArray55 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray53, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray53);
        org.apache.commons.math.complex.Complex[] complexArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray53, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray60 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray53, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer33.transform(complexArray53);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer0.inversetransform2(complexArray53);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer63 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray68 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray68);
        double[] doubleArray71 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray68, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray71);
        org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer63.transform(doubleArray71);
        org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer0.inversetransform2(complexArray73);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer75 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray80 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray80);
        org.apache.commons.math.complex.Complex[] complexArray82 = fastFourierTransformer75.transform2(doubleArray80);
        org.apache.commons.math.complex.Complex[] complexArray83 = fastFourierTransformer0.inversetransform(complexArray82);
        double[] doubleArray88 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray88);
        double[] doubleArray91 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray88, (double) 10.0f);
        double[] doubleArray93 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray91, (double) 10L);
        double[] doubleArray95 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray91, (double) (byte) 100);
        double[] doubleArray97 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray95, (double) (byte) 1);
        org.apache.commons.math.complex.Complex[] complexArray98 = fastFourierTransformer0.transform2(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray82);
        org.junit.Assert.assertNotNull(complexArray83);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray95), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray97), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray98);
    }

    @Test
    public void test2647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2647");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer32.transform2(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray39, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer31.inversetransform(complexArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer44.transform2(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray53 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray51, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray51);
        org.apache.commons.math.complex.Complex[] complexArray56 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray51, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray51, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray59 = fastFourierTransformer31.transform(complexArray51);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer0.inversetransform2(complexArray59);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer61 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer62 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray67 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray67);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer62.transform2(doubleArray67);
        org.apache.commons.math.complex.Complex[] complexArray71 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray69, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray69);
        org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer61.inversetransform(complexArray69);
        org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer0.inversetransform2(complexArray73);
        double[] doubleArray79 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray79);
        double[] doubleArray82 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray79, (double) (byte) 100);
        double[] doubleArray84 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray79, (double) 0);
        double[] doubleArray86 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray79, (double) (byte) 100);
        org.apache.commons.math.complex.Complex[] complexArray87 = fastFourierTransformer0.transform2(doubleArray86);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer88 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray93 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray93);
        double[] doubleArray96 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray93, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray96);
        org.apache.commons.math.complex.Complex[] complexArray98 = fastFourierTransformer88.inversetransform(doubleArray96);
        org.apache.commons.math.complex.Complex[] complexArray99 = fastFourierTransformer0.transform(complexArray98);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(complexArray71);
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray87);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray96), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray98);
        org.junit.Assert.assertNotNull(complexArray99);
    }

    @Test
    public void test2648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2648");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform2(doubleArray29);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray36 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray36);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer31.transform2(doubleArray36);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer39 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray44 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray44);
        org.apache.commons.math.complex.Complex[] complexArray46 = fastFourierTransformer39.transform2(doubleArray44);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer47 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray52 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray52);
        org.apache.commons.math.complex.Complex[] complexArray54 = fastFourierTransformer47.transform2(doubleArray52);
        org.apache.commons.math.complex.Complex[] complexArray56 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray54, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray54);
        org.apache.commons.math.complex.Complex[] complexArray59 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray54, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer39.transform2(complexArray59);
        double[] doubleArray65 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray65);
        double[] doubleArray68 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray65, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer39.transform(doubleArray65);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer70 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray75 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray75);
        double[] doubleArray78 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray75, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray78);
        org.apache.commons.math.complex.Complex[] complexArray80 = fastFourierTransformer70.transform(doubleArray78);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer81 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray86 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray86);
        org.apache.commons.math.complex.Complex[] complexArray88 = fastFourierTransformer81.transform2(doubleArray86);
        double[] doubleArray90 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray86, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray91 = fastFourierTransformer70.inversetransform(doubleArray86);
        org.apache.commons.math.complex.Complex[] complexArray92 = fastFourierTransformer39.transform2(doubleArray86);
        double[] doubleArray94 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray86, (double) (short) 100);
        org.apache.commons.math.complex.Complex[] complexArray95 = fastFourierTransformer31.transform2(doubleArray86);
        org.apache.commons.math.complex.Complex[] complexArray96 = fastFourierTransformer0.inversetransform(complexArray95);
        java.lang.Class<?> wildcardClass97 = complexArray95.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray80);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray88);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray91);
        org.junit.Assert.assertNotNull(complexArray92);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray95);
        org.junit.Assert.assertNotNull(complexArray96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2649");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer16 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray21 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer16.transform2(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray23);
        org.apache.commons.math.complex.Complex[] complexArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer8.transform2(complexArray28);
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        double[] doubleArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer8.transform(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer0.transform(complexArray38);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer40 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray45 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray45);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer40.transform2(doubleArray45);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer48 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray53 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray53);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer48.transform2(doubleArray53);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer56 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray61 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer56.transform2(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray63);
        org.apache.commons.math.complex.Complex[] complexArray68 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray63, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer48.transform2(complexArray68);
        double[] doubleArray74 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray74);
        double[] doubleArray77 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray74, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer48.transform(doubleArray74);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer40.transform(complexArray78);
        org.apache.commons.math.complex.Complex[] complexArray80 = fastFourierTransformer0.inversetransform(complexArray78);
        org.apache.commons.math.complex.Complex[] complexArray82 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray78, (double) 1.0f);
        org.apache.commons.math.complex.Complex[] complexArray84 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray78, (double) 100.0f);
        java.lang.Class<?> wildcardClass85 = complexArray78.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(complexArray69);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray79);
        org.junit.Assert.assertNotNull(complexArray80);
        org.junit.Assert.assertNotNull(complexArray82);
        org.junit.Assert.assertNotNull(complexArray84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test2650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2650");
        org.apache.commons.math.transform.FastFourierTransformer.verifyInterval(0.0d, (double) 100.0f);
    }

    @Test
    public void test2651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2651");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray20);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray27 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray20, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray28 = fastFourierTransformer0.transform(complexArray20);
        double[] doubleArray33 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray33);
        double[] doubleArray36 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray33, (double) 10.0f);
        double[] doubleArray38 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray36, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer0.transform2(doubleArray36);
        double[] doubleArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray36, (double) (-1L));
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray36);
        java.lang.Class<?> wildcardClass43 = doubleArray36.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray27);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, -9700.0, -100.0, -1000.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, -9700.0, -100.0, -1000.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, -9700.0, -100.0, -1000.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, -9700.0, -100.0, -1000.0]");
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test2652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2652");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer9 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray14 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray14);
        org.apache.commons.math.complex.Complex[] complexArray16 = fastFourierTransformer9.transform2(doubleArray14);
        org.apache.commons.math.complex.Complex[] complexArray18 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray16, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray16);
        org.apache.commons.math.complex.Complex[] complexArray21 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray16, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray22 = fastFourierTransformer1.transform2(complexArray21);
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray31 = fastFourierTransformer1.transform(doubleArray27);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray31);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform2(complexArray31);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer35 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer35.transform2(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray44 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray46 = fastFourierTransformer34.inversetransform(complexArray42);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer47 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray52 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray52);
        org.apache.commons.math.complex.Complex[] complexArray54 = fastFourierTransformer47.transform2(doubleArray52);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer34.transform(complexArray54);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer56 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer57 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray62 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray62);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer57.transform2(doubleArray62);
        org.apache.commons.math.complex.Complex[] complexArray66 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray64, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray64);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer56.inversetransform(complexArray64);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer69 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray74 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray74);
        org.apache.commons.math.complex.Complex[] complexArray76 = fastFourierTransformer69.transform2(doubleArray74);
        org.apache.commons.math.complex.Complex[] complexArray77 = fastFourierTransformer56.transform(complexArray76);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer34.inversetransform(complexArray76);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer0.transform(complexArray78);
        org.apache.commons.math.complex.Complex[] complexArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray81 = fastFourierTransformer0.transform2(complexArray80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray16);
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(complexArray22);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray31);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray76);
        org.junit.Assert.assertNotNull(complexArray77);
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray79);
    }

    @Test
    public void test2653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2653");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform2(doubleArray29);
        double[] doubleArray35 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        double[] doubleArray38 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray35, (double) (byte) 100);
        double[] doubleArray40 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray35, (double) 0);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer0.transform2(doubleArray35);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer43 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer44.transform2(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray53 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray51, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray51);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer43.inversetransform(complexArray51);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer56 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray61 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer56.transform2(doubleArray61);
        double[] doubleArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray61, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray66 = fastFourierTransformer43.inversetransform(doubleArray61);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer67 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray72 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray72);
        double[] doubleArray75 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray72, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray75);
        org.apache.commons.math.complex.Complex[] complexArray77 = fastFourierTransformer67.inversetransform(doubleArray75);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer43.inversetransform(doubleArray75);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer0.inversetransform2(complexArray78);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction80 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer0.transform2(univariateRealFunction80, (double) (short) 100, 0.0d, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [100.0, 0.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray77);
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray79);
    }

    @Test
    public void test2654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2654");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) (short) 0, (double) 1, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2655");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray29, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer0.inversetransform2(doubleArray31);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer33 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        org.apache.commons.math.complex.Complex[] complexArray40 = fastFourierTransformer33.transform2(doubleArray38);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer41 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray46 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray46);
        org.apache.commons.math.complex.Complex[] complexArray48 = fastFourierTransformer41.transform2(doubleArray46);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer49 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray54 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray54);
        org.apache.commons.math.complex.Complex[] complexArray56 = fastFourierTransformer49.transform2(doubleArray54);
        org.apache.commons.math.complex.Complex[] complexArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray56, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray56);
        org.apache.commons.math.complex.Complex[] complexArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray56, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer41.transform2(complexArray61);
        double[] doubleArray67 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray67);
        double[] doubleArray70 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray67, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray71 = fastFourierTransformer41.transform(doubleArray67);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer33.transform(complexArray71);
        double[] doubleArray77 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray77);
        double[] doubleArray80 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray77, (double) 10.0f);
        double[] doubleArray82 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray80, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray83 = fastFourierTransformer33.transform2(doubleArray80);
        double[] doubleArray85 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray80, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray86 = fastFourierTransformer0.inversetransform(doubleArray80);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray80);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray40);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray56);
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray71);
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray83);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-10000.0, 970000.0, 10000.0, 100000.0]");
        org.junit.Assert.assertNotNull(complexArray86);
    }

    @Test
    public void test2656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2656");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer33 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray38 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray38);
        org.apache.commons.math.complex.Complex[] complexArray40 = fastFourierTransformer33.transform2(doubleArray38);
        org.apache.commons.math.complex.Complex[] complexArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray40, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray40);
        org.apache.commons.math.complex.Complex[] complexArray45 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray40, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray40, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray48 = fastFourierTransformer22.inversetransform2(complexArray47);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer49 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer50 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray55 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray57 = fastFourierTransformer50.transform2(doubleArray55);
        org.apache.commons.math.complex.Complex[] complexArray59 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray57, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray57);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer49.inversetransform(complexArray57);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray57);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer22.inversetransform(complexArray57);
        org.apache.commons.math.complex.Complex[] complexArray64 = fastFourierTransformer0.inversetransform2(complexArray57);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer65 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer66 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray71 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray71);
        double[] doubleArray74 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray71, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray74);
        org.apache.commons.math.complex.Complex[] complexArray76 = fastFourierTransformer66.inversetransform(doubleArray74);
        org.apache.commons.math.complex.Complex[] complexArray77 = fastFourierTransformer65.transform2(complexArray76);
        org.apache.commons.math.complex.Complex[] complexArray78 = fastFourierTransformer0.transform2(complexArray77);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray77);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray40);
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray45);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(complexArray59);
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(complexArray64);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray76);
        org.junit.Assert.assertNotNull(complexArray77);
        org.junit.Assert.assertNotNull(complexArray78);
    }

    @Test
    public void test2657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2657");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer16 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray21 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer16.transform2(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray23);
        org.apache.commons.math.complex.Complex[] complexArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer8.transform2(complexArray28);
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        double[] doubleArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer8.transform(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer0.transform(complexArray38);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer40 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray45 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray45);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer40.transform2(doubleArray45);
        org.apache.commons.math.complex.Complex[] complexArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray47, (double) 100L);
        org.apache.commons.math.complex.Complex[] complexArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray49, (double) (byte) 100);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer0.inversetransform(complexArray49);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer53 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer53.transform2(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray60, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray60);
        org.apache.commons.math.complex.Complex[] complexArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray60, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray67 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray60, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray68 = fastFourierTransformer0.inversetransform(complexArray60);
        double[] doubleArray73 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray73);
        double[] doubleArray76 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray73, (double) 10.0f);
        double[] doubleArray78 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray76, (double) 10L);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray76);
        org.apache.commons.math.complex.Complex[] complexArray80 = fastFourierTransformer0.inversetransform(doubleArray76);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer81 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray86 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray86);
        double[] doubleArray89 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray86, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray89);
        org.apache.commons.math.complex.Complex[] complexArray91 = fastFourierTransformer81.transform(doubleArray89);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray91);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray91);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray91);
        org.apache.commons.math.complex.Complex[] complexArray95 = fastFourierTransformer0.inversetransform2(complexArray91);
        org.apache.commons.math.complex.Complex[] complexArray97 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray95, (double) 0);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray95);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray67);
        org.junit.Assert.assertNotNull(complexArray68);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray80);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray91);
        org.junit.Assert.assertNotNull(complexArray95);
        org.junit.Assert.assertNotNull(complexArray97);
    }

    @Test
    public void test2658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2658");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) (short) 0, (double) 100.0f, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2659");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, 1.0d, (double) (short) 100, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2660");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        double[] doubleArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray17, (double) 10.0f);
        double[] doubleArray22 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray20, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer0.transform(doubleArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer24 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer25 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray30 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer25.transform2(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray34 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray32, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray32);
        org.apache.commons.math.complex.Complex[] complexArray36 = fastFourierTransformer24.inversetransform(complexArray32);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer37 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray42 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray42);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer37.transform2(doubleArray42);
        double[] doubleArray46 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray42, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer24.inversetransform(doubleArray42);
        org.apache.commons.math.complex.Complex[] complexArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray47, (-1.0d));
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer0.inversetransform(complexArray49);
        double[] doubleArray55 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray55);
        double[] doubleArray58 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray55, 0.0d);
        double[] doubleArray60 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray58, (double) (byte) 100);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray60);
        org.apache.commons.math.complex.Complex[] complexArray62 = fastFourierTransformer0.transform2(doubleArray60);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray60);
        java.lang.Class<?> wildcardClass64 = doubleArray60.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(complexArray36);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test2661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2661");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer23 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray28 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer23.transform2(doubleArray28);
        org.apache.commons.math.complex.Complex[] complexArray32 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray30, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray30);
        org.apache.commons.math.complex.Complex[] complexArray34 = fastFourierTransformer22.inversetransform(complexArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer35 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray40 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray42 = fastFourierTransformer35.transform2(doubleArray40);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer22.transform(complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer0.inversetransform(complexArray42);
        org.apache.commons.math.complex.Complex[] complexArray46 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray42, (double) (short) 100);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray46);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray46);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray46);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray42);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(complexArray46);
    }

    @Test
    public void test2662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2662");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, 100.0d, (double) (byte) 10, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [100.0, 10.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2663");
        org.apache.commons.math.transform.FastFourierTransformer.verifyInterval((double) 0.0f, (double) ' ');
    }

    @Test
    public void test2664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2664");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer22 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray27 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray27);
        double[] doubleArray30 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray27, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer22.transform(doubleArray30);
        org.apache.commons.math.complex.Complex[] complexArray33 = fastFourierTransformer0.transform(doubleArray30);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer34 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray39 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer34.transform2(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray41, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray41);
        org.apache.commons.math.complex.Complex[] complexArray46 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray41, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray47 = fastFourierTransformer0.inversetransform2(complexArray41);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer48 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray53 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray53);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer48.transform2(doubleArray53);
        org.apache.commons.math.complex.Complex[] complexArray57 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray55, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray55);
        org.apache.commons.math.complex.Complex[] complexArray60 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray55, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray55, (double) 1);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer0.inversetransform(complexArray62);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer64 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer65 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray70 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray70);
        org.apache.commons.math.complex.Complex[] complexArray72 = fastFourierTransformer65.transform2(doubleArray70);
        org.apache.commons.math.complex.Complex[] complexArray74 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray72, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray72);
        org.apache.commons.math.complex.Complex[] complexArray76 = fastFourierTransformer64.inversetransform(complexArray72);
        org.apache.commons.math.complex.Complex[] complexArray77 = fastFourierTransformer0.inversetransform2(complexArray72);
        double[] doubleArray82 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray82);
        double[] doubleArray85 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray82, (double) (byte) 100);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray82);
        double[] doubleArray88 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray82, (double) ' ');
        org.apache.commons.math.complex.Complex[] complexArray89 = fastFourierTransformer0.inversetransform2(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(complexArray33);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(complexArray47);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(complexArray57);
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray72);
        org.junit.Assert.assertNotNull(complexArray74);
        org.junit.Assert.assertNotNull(complexArray76);
        org.junit.Assert.assertNotNull(complexArray77);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-3200.0, 310400.0, 3200.0, 32000.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-3200.0, 310400.0, 3200.0, 32000.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-3200.0, 310400.0, 3200.0, 32000.0]");
        org.junit.Assert.assertNotNull(complexArray89);
    }

    @Test
    public void test2665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2665");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer16 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray21 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer16.transform2(doubleArray21);
        org.apache.commons.math.complex.Complex[] complexArray25 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray23);
        org.apache.commons.math.complex.Complex[] complexArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray23, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray29 = fastFourierTransformer8.transform2(complexArray28);
        double[] doubleArray34 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray34);
        double[] doubleArray37 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray34, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer8.transform(doubleArray34);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer0.transform(complexArray38);
        double[] doubleArray44 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray44);
        double[] doubleArray47 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray44, (double) 10.0f);
        double[] doubleArray49 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray47, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray50 = fastFourierTransformer0.transform2(doubleArray47);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer51 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray56 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray56);
        org.apache.commons.math.complex.Complex[] complexArray58 = fastFourierTransformer51.transform2(doubleArray56);
        double[] doubleArray60 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray56, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer0.transform(doubleArray56);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction62 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray66 = fastFourierTransformer0.transform2(univariateRealFunction62, (double) 0L, (double) 0.0f, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [0.0, 0.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(complexArray25);
        org.junit.Assert.assertNotNull(complexArray28);
        org.junit.Assert.assertNotNull(complexArray29);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray50);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray58);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray61);
    }

    @Test
    public void test2666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2666");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform2(doubleArray29);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer32 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray39 = fastFourierTransformer32.transform2(doubleArray37);
        org.apache.commons.math.complex.Complex[] complexArray41 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray39, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray39);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer31.inversetransform(complexArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer44 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray49 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray51 = fastFourierTransformer44.transform2(doubleArray49);
        double[] doubleArray53 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray49, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray54 = fastFourierTransformer31.inversetransform(doubleArray49);
        org.apache.commons.math.complex.Complex[] complexArray55 = fastFourierTransformer0.transform2(complexArray54);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer56 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray61 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray61);
        org.apache.commons.math.complex.Complex[] complexArray63 = fastFourierTransformer56.transform2(doubleArray61);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer64 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray69 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray69);
        org.apache.commons.math.complex.Complex[] complexArray71 = fastFourierTransformer64.transform2(doubleArray69);
        org.apache.commons.math.complex.Complex[] complexArray73 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray71, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray71);
        org.apache.commons.math.complex.Complex[] complexArray76 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray71, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray77 = fastFourierTransformer56.transform2(complexArray76);
        double[] doubleArray82 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray82);
        double[] doubleArray85 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray82, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray86 = fastFourierTransformer56.transform(doubleArray82);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray82);
        org.apache.commons.math.complex.Complex[] complexArray88 = fastFourierTransformer0.inversetransform(doubleArray82);
        double[] doubleArray90 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray82, (double) (short) -1);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray39);
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray54);
        org.junit.Assert.assertNotNull(complexArray55);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray63);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray71);
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(complexArray76);
        org.junit.Assert.assertNotNull(complexArray77);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(complexArray86);
        org.junit.Assert.assertNotNull(complexArray88);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[10.0, -970.0, -10.0, -100.0]");
    }

    @Test
    public void test2667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2667");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray33 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 100);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1000.0, 97000.0, 1000.0, 10000.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1000.0, 97000.0, 1000.0, 10000.0]");
    }

    @Test
    public void test2668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2668");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer1 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray6 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray8 = fastFourierTransformer1.transform2(doubleArray6);
        org.apache.commons.math.complex.Complex[] complexArray10 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray8, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray8);
        org.apache.commons.math.complex.Complex[] complexArray12 = fastFourierTransformer0.inversetransform(complexArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer13 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray18 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray20 = fastFourierTransformer13.transform2(doubleArray18);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        double[] doubleArray31 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray29, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer0.inversetransform2(doubleArray31);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray31);
        double[] doubleArray35 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray31, (double) (byte) -1);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray35);
        double[] doubleArray38 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray35, (double) (byte) 10);
        double[] doubleArray40 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray38, (double) 0.0f);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray8);
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(complexArray12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, -0.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, -0.0, -0.0, -0.0]");
    }

    @Test
    public void test2669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2669");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.complex.Complex[] complexArray18 = fastFourierTransformer0.transform(complexArray15);
        double[] doubleArray23 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray23);
        double[] doubleArray26 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray23, (double) 10.0f);
        double[] doubleArray28 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) (byte) -1);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray36 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray36);
        org.apache.commons.math.complex.Complex[] complexArray38 = fastFourierTransformer31.transform2(doubleArray36);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer39 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray44 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray44);
        org.apache.commons.math.complex.Complex[] complexArray46 = fastFourierTransformer39.transform2(doubleArray44);
        org.apache.commons.math.complex.Complex[] complexArray48 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray46, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray46);
        org.apache.commons.math.complex.Complex[] complexArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray46, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer31.transform2(complexArray51);
        double[] doubleArray57 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray57);
        double[] doubleArray60 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray57, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray61 = fastFourierTransformer31.transform2(doubleArray60);
        double[] doubleArray66 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray66);
        double[] doubleArray69 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray66, (double) (byte) 100);
        double[] doubleArray71 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray66, (double) 0);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray66);
        org.apache.commons.math.complex.Complex[] complexArray73 = fastFourierTransformer31.transform2(doubleArray66);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray66);
        double[] doubleArray76 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray66, (double) (short) 10);
        double[] doubleArray78 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray66, 0.0d);
        double[] doubleArray80 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray78, (double) (short) 1);
        double[] doubleArray82 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray78, 10.0d);
        org.apache.commons.math.complex.Complex[] complexArray83 = fastFourierTransformer0.transform2(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray18);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, -970.0, -10.0, -100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray38);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray46);
        org.junit.Assert.assertNotNull(complexArray48);
        org.junit.Assert.assertNotNull(complexArray51);
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray61);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray73);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray83);
    }

    @Test
    public void test2670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2670");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray29);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray29);
        double[] doubleArray33 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray29, (double) (byte) 10);
        double[] doubleArray35 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray33, (double) (byte) 0);
        org.apache.commons.math.complex.Complex[] complexArray36 = fastFourierTransformer0.transform2(doubleArray33);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer37 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray42 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray42);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer37.transform2(doubleArray42);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer45 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray50 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray50);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer45.transform2(doubleArray50);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer53 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray60 = fastFourierTransformer53.transform2(doubleArray58);
        org.apache.commons.math.complex.Complex[] complexArray62 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray60, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray60);
        org.apache.commons.math.complex.Complex[] complexArray65 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray60, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray66 = fastFourierTransformer45.transform2(complexArray65);
        double[] doubleArray71 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray71);
        double[] doubleArray74 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray71, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray75 = fastFourierTransformer45.transform(doubleArray71);
        org.apache.commons.math.complex.Complex[] complexArray76 = fastFourierTransformer37.transform(complexArray75);
        org.apache.commons.math.complex.Complex[] complexArray78 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray76, (double) (short) -1);
        org.apache.commons.math.complex.Complex[] complexArray79 = fastFourierTransformer0.transform(complexArray76);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction80 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray84 = fastFourierTransformer0.inversetransform(univariateRealFunction80, (double) 'a', (double) (-1), 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Number of samples not positive.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray36);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray60);
        org.junit.Assert.assertNotNull(complexArray62);
        org.junit.Assert.assertNotNull(complexArray65);
        org.junit.Assert.assertNotNull(complexArray66);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray75);
        org.junit.Assert.assertNotNull(complexArray76);
        org.junit.Assert.assertNotNull(complexArray78);
        org.junit.Assert.assertNotNull(complexArray79);
    }

    @Test
    public void test2671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2671");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        double[] doubleArray8 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray5, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray8);
        org.apache.commons.math.complex.Complex[] complexArray10 = fastFourierTransformer0.transform(doubleArray8);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer11 = new org.apache.commons.math.transform.FastFourierTransformer();
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer12 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray17 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray17);
        org.apache.commons.math.complex.Complex[] complexArray19 = fastFourierTransformer12.transform2(doubleArray17);
        org.apache.commons.math.complex.Complex[] complexArray21 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray19, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray19);
        org.apache.commons.math.complex.Complex[] complexArray23 = fastFourierTransformer11.inversetransform(complexArray19);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer24 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray29 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray29);
        org.apache.commons.math.complex.Complex[] complexArray31 = fastFourierTransformer24.transform2(doubleArray29);
        org.apache.commons.math.complex.Complex[] complexArray32 = fastFourierTransformer11.transform(complexArray31);
        double[] doubleArray37 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray37);
        double[] doubleArray40 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray37, (double) 10.0f);
        double[] doubleArray42 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray40, (double) 10L);
        org.apache.commons.math.complex.Complex[] complexArray43 = fastFourierTransformer11.inversetransform2(doubleArray42);
        org.apache.commons.math.complex.Complex[] complexArray44 = fastFourierTransformer0.inversetransform2(doubleArray42);
        double[] doubleArray46 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray42, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray46);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray46);
        double[] doubleArray50 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray46, (double) 'a');
        java.lang.Class<?> wildcardClass51 = doubleArray46.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray10);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray19);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(complexArray23);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray31);
        org.junit.Assert.assertNotNull(complexArray32);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-97000.0, 9409000.0, 97000.0, 970000.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-97000.0, 9409000.0, 97000.0, 970000.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-97000.0, 9409000.0, 97000.0, 970000.0]");
        org.junit.Assert.assertNotNull(complexArray43);
        org.junit.Assert.assertNotNull(complexArray44);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-97000.0, 9409000.0, 97000.0, 970000.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-97000.0, 9409000.0, 97000.0, 970000.0]");
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test2672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2672");
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer0 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray5 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray5);
        org.apache.commons.math.complex.Complex[] complexArray7 = fastFourierTransformer0.transform2(doubleArray5);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer8 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray13 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray15 = fastFourierTransformer8.transform2(doubleArray13);
        org.apache.commons.math.complex.Complex[] complexArray17 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 'a');
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet((java.lang.Object[]) complexArray15);
        org.apache.commons.math.complex.Complex[] complexArray20 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(complexArray15, (double) 1L);
        org.apache.commons.math.complex.Complex[] complexArray21 = fastFourierTransformer0.transform2(complexArray20);
        double[] doubleArray26 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray26);
        double[] doubleArray29 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray26, (double) 10.0f);
        org.apache.commons.math.complex.Complex[] complexArray30 = fastFourierTransformer0.transform(doubleArray26);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer31 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray36 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray36);
        double[] doubleArray39 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray36, (double) 10.0f);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray39);
        org.apache.commons.math.complex.Complex[] complexArray41 = fastFourierTransformer31.transform(doubleArray39);
        org.apache.commons.math.transform.FastFourierTransformer fastFourierTransformer42 = new org.apache.commons.math.transform.FastFourierTransformer();
        double[] doubleArray47 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray49 = fastFourierTransformer42.transform2(doubleArray47);
        double[] doubleArray51 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray47, 100.0d);
        org.apache.commons.math.complex.Complex[] complexArray52 = fastFourierTransformer31.inversetransform(doubleArray47);
        org.apache.commons.math.complex.Complex[] complexArray53 = fastFourierTransformer0.transform2(doubleArray47);
        double[] doubleArray58 = new double[] { (-1L), 'a', 1L, 10 };
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray58);
        double[] doubleArray61 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray58, (double) 10.0f);
        double[] doubleArray63 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray61, (double) 10L);
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(doubleArray63);
        double[] doubleArray66 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray63, 100.0d);
        double[] doubleArray68 = org.apache.commons.math.transform.FastFourierTransformer.scaleArray(doubleArray63, (double) (byte) 0);
        org.apache.commons.math.complex.Complex[] complexArray69 = fastFourierTransformer0.inversetransform(doubleArray63);
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction70 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.complex.Complex[] complexArray74 = fastFourierTransformer0.transform2(univariateRealFunction70, (double) (byte) 100, (double) 0.0f, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Endpoints do not specify an interval: [100.0, 0.0]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 97.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(complexArray15);
        org.junit.Assert.assertNotNull(complexArray17);
        org.junit.Assert.assertNotNull(complexArray20);
        org.junit.Assert.assertNotNull(complexArray21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray30);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-10.0, 970.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(complexArray41);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray49);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-100.0, 9700.0, 100.0, 1000.0]");
        org.junit.Assert.assertNotNull(complexArray52);
        org.junit.Assert.assertNotNull(complexArray53);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(complexArray69);
    }

    @Test
    public void test2673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2673");
        org.apache.commons.math.analysis.UnivariateRealFunction univariateRealFunction0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = org.apache.commons.math.transform.FastFourierTransformer.sample(univariateRealFunction0, (double) (short) 1, 100.0d, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }
}

