import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest3 {

    public static boolean debug = false;

    @Test
    public void test1501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1501");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        double double11 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double12 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double16 = org.apache.commons.math.stat.StatUtils.min(doubleArray3, (int) (byte) 1, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 10.0d + "'", double13 == 10.0d);
    }

    @Test
    public void test1502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1502");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11, 1, (int) (byte) 1);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double21 = org.apache.commons.math.stat.StatUtils.min(doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 27.0d + "'", double17 == 27.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4.641588833612779d + "'", double18 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4.641588833612779d + "'", double19 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
    }

    @Test
    public void test1503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1503");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        double double28 = org.apache.commons.math.stat.StatUtils.max(doubleArray25, 0, 0);
        double double29 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray25);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        double double36 = org.apache.commons.math.stat.StatUtils.max(doubleArray33, 0, 0);
        double double37 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray33);
        double double39 = org.apache.commons.math.stat.StatUtils.variance(doubleArray33, (double) 10);
        double double40 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray25, doubleArray33);
        double double42 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray25, 100.0d);
        double double43 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double44 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double46 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, 27.000000000000004d);
        double double47 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 101.0d + "'", double29 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 101.0d + "'", double37 == 101.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 37.0d + "'", double39 == 37.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 127.0d + "'", double42 == 127.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 27.0d + "'", double43 == 27.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 21.0d + "'", double44 == 21.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.7200000000000006d + "'", double46 == 1.7200000000000006d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 100.0d + "'", double47 == 100.0d);
    }

    @Test
    public void test1504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1504");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10);
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double double15 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13);
        double double16 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray13);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double18 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray13);
        double double19 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double20 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double21 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double23 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4.641588833612779d + "'", double15 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.605170185988092d + "'", double16 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 27.0d + "'", double17 == 27.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-4.0d) + "'", double18 == (-4.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 9.0d + "'", double20 == 9.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1.0d) + "'", double21 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
    }

    @Test
    public void test1505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1505");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, 27.0d);
        double double16 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) (byte) 10);
        double double17 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray22 = new double[] { (-1L), 0, 10L };
        double double25 = org.apache.commons.math.stat.StatUtils.max(doubleArray22, 0, 0);
        double double26 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray22);
        double[] doubleArray30 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double31 = org.apache.commons.math.stat.StatUtils.mean(doubleArray30);
        double double32 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray30);
        double double33 = org.apache.commons.math.stat.StatUtils.sum(doubleArray30);
        double double34 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray22, doubleArray30);
        double double37 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray22, (int) (byte) 1, (int) (short) 0);
        double[] doubleArray41 = new double[] { (-1L), 0, 10L };
        double double44 = org.apache.commons.math.stat.StatUtils.max(doubleArray41, 0, 0);
        double double45 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray41);
        double[] doubleArray49 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double50 = org.apache.commons.math.stat.StatUtils.mean(doubleArray49);
        double double51 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray49);
        double double52 = org.apache.commons.math.stat.StatUtils.sum(doubleArray49);
        double double53 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray41, doubleArray49);
        double double54 = org.apache.commons.math.stat.StatUtils.max(doubleArray41);
        double double55 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray41);
        double double56 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray22, doubleArray41);
        double double57 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray22);
        double double58 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray22);
        // The following exception was thrown during execution in test generation
        try {
            double double62 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray22, (int) (byte) 1, (int) (byte) 100, (-0.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 27.0d + "'", double14 == 27.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 27.0d + "'", double16 == 27.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 21.0d + "'", double18 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 101.0d + "'", double26 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 7.0d + "'", double31 == 7.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 4.641588833612779d + "'", double32 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 21.0d + "'", double33 == 21.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-4.0d) + "'", double34 == (-4.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 101.0d + "'", double45 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 7.0d + "'", double50 == 7.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 4.641588833612779d + "'", double51 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 21.0d + "'", double52 == 21.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-4.0d) + "'", double53 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 10.0d + "'", double54 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 101.0d + "'", double57 == 101.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 12.0d + "'", double58 == 12.0d);
    }

    @Test
    public void test1506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1506");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double8 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 4.605170185988092d);
        double double10 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 5.32d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 27.000000000000004d + "'", double8 == 27.000000000000004d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 26.999999999999996d + "'", double10 == 26.999999999999996d);
    }

    @Test
    public void test1507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1507");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        double[] doubleArray14 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray14);
        double double16 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray14);
        double double17 = org.apache.commons.math.stat.StatUtils.sum(doubleArray14);
        double double18 = org.apache.commons.math.stat.StatUtils.max(doubleArray14);
        double double19 = org.apache.commons.math.stat.StatUtils.variance(doubleArray14);
        double double20 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray14);
        double[] doubleArray24 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double25 = org.apache.commons.math.stat.StatUtils.mean(doubleArray24);
        double double27 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray24, (double) 100.0f);
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double double33 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray31);
        double double34 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray31);
        double double35 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray24, doubleArray31);
        double double36 = org.apache.commons.math.stat.StatUtils.variance(doubleArray31);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray31);
        double double39 = org.apache.commons.math.stat.StatUtils.variance(doubleArray31, (double) 10L);
        double double40 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray31);
        double[] doubleArray44 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double45 = org.apache.commons.math.stat.StatUtils.mean(doubleArray44);
        double double47 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray44, (double) 100.0f);
        double[] doubleArray51 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double52 = org.apache.commons.math.stat.StatUtils.mean(doubleArray51);
        double double53 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray51);
        double double54 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray51);
        double double55 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray44, doubleArray51);
        double[] doubleArray59 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double60 = org.apache.commons.math.stat.StatUtils.mean(doubleArray59);
        double double61 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray59);
        double double62 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray44, doubleArray59);
        double double63 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray59);
        double double64 = org.apache.commons.math.stat.StatUtils.variance(doubleArray59);
        double[] doubleArray68 = new double[] { (-1L), 0, 10L };
        double double71 = org.apache.commons.math.stat.StatUtils.max(doubleArray68, 0, 0);
        double double72 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray68);
        double[] doubleArray76 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double77 = org.apache.commons.math.stat.StatUtils.mean(doubleArray76);
        double double78 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray76);
        double double79 = org.apache.commons.math.stat.StatUtils.sum(doubleArray76);
        double double80 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray68, doubleArray76);
        double double81 = org.apache.commons.math.stat.StatUtils.max(doubleArray68);
        double double83 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray59, doubleArray68, 27.0d);
        double double84 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray68);
        double double85 = org.apache.commons.math.stat.StatUtils.mean(doubleArray68);
        double double86 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray68);
        double double87 = org.apache.commons.math.stat.StatUtils.variance(doubleArray68);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.0d + "'", double15 == 7.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.641588833612779d + "'", double16 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 21.0d + "'", double17 == 21.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 27.0d + "'", double19 == 27.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 7.0d + "'", double25 == 7.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 10.0d + "'", double27 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 7.0d + "'", double32 == 7.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4.641588833612779d + "'", double33 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4.605170185988092d + "'", double34 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 27.0d + "'", double36 == 27.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 27.0d + "'", double39 == 27.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 7.0d + "'", double45 == 7.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 10.0d + "'", double47 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 7.0d + "'", double52 == 7.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 4.641588833612779d + "'", double53 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 4.605170185988092d + "'", double54 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 7.0d + "'", double60 == 7.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 4.641588833612779d + "'", double61 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 4.641588833612779d + "'", double63 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 27.0d + "'", double64 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 101.0d + "'", double72 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 7.0d + "'", double77 == 7.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 4.641588833612779d + "'", double78 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 21.0d + "'", double79 == 21.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + (-4.0d) + "'", double80 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 10.0d + "'", double81 == 10.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 127.0d + "'", double83 == 127.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double84));
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 3.0d + "'", double85 == 3.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 4.0d + "'", double86 == 4.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 37.0d + "'", double87 == 37.0d);
    }

    @Test
    public void test1508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1508");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double24 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        // The following exception was thrown during execution in test generation
        try {
            double double27 = org.apache.commons.math.stat.StatUtils.min(doubleArray18, (-1), (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.641588833612779d + "'", double23 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 7.0d + "'", double24 == 7.0d);
    }

    @Test
    public void test1509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1509");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double double16 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.variance(doubleArray20, 27.0d);
        double double25 = org.apache.commons.math.stat.StatUtils.variance(doubleArray20, (double) (byte) 10);
        double double26 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray20);
        double double27 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray20);
        double[] doubleArray31 = new double[] { (-1L), 0, 10L };
        double double34 = org.apache.commons.math.stat.StatUtils.max(doubleArray31, 0, 0);
        double double36 = org.apache.commons.math.stat.StatUtils.variance(doubleArray31, 21.0d);
        double double37 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray20, doubleArray31);
        double double38 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray20);
        double double39 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 4.641588833612779d + "'", double8 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 7.0d + "'", double16 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 27.0d + "'", double23 == 27.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 27.0d + "'", double25 == 27.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 4.605170185988092d + "'", double27 == 4.605170185988092d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 37.0d + "'", double36 == 37.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 12.0d + "'", double37 == 12.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 4.641588833612779d + "'", double39 == 4.641588833612779d);
    }

    @Test
    public void test1510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1510");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        double double11 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double12 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double13 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        double double14 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray19, (double) 100.0f);
        double double23 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double28 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double double30 = org.apache.commons.math.stat.StatUtils.variance(doubleArray27, 27.0d);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray27, (double) (byte) 10);
        double double33 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray19, doubleArray27);
        double double34 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray27);
        double double35 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray27);
        double double36 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double37 = org.apache.commons.math.stat.StatUtils.product(doubleArray27);
        double double39 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray27, 37.000000000000114d);
        // The following exception was thrown during execution in test generation
        try {
            double double42 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27, (int) (byte) 100, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 100.0d + "'", double13 == 100.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 201.0d + "'", double14 == 201.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 201.0d + "'", double15 == 201.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 7.0d + "'", double23 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 7.0d + "'", double28 == 7.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 27.0d + "'", double30 == 27.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4.605170185988092d + "'", double34 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 4.605170185988092d + "'", double35 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 4.641588833612779d + "'", double36 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 100.0d + "'", double37 == 100.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
    }

    @Test
    public void test1511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1511");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        double double11 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double12 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double13 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        double double14 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double17 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3, 0, 0);
        double double18 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        java.lang.Class<?> wildcardClass19 = doubleArray3.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 100.0d + "'", double13 == 100.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 201.0d + "'", double14 == 201.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4.605170185988092d + "'", double18 == 4.605170185988092d);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1512");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, 0.0d);
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double double33 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray31);
        double double34 = org.apache.commons.math.stat.StatUtils.sum(doubleArray31);
        double[] doubleArray38 = new double[] { (-1L), 0, 10L };
        double double41 = org.apache.commons.math.stat.StatUtils.max(doubleArray38, 0, 0);
        double double43 = org.apache.commons.math.stat.StatUtils.variance(doubleArray38, 21.0d);
        double double45 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray31, doubleArray38, 4.605170185988092d);
        double double46 = org.apache.commons.math.stat.StatUtils.mean(doubleArray38);
        double double47 = org.apache.commons.math.stat.StatUtils.max(doubleArray38);
        double double48 = org.apache.commons.math.stat.StatUtils.sum(doubleArray38);
        double[] doubleArray52 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double53 = org.apache.commons.math.stat.StatUtils.mean(doubleArray52);
        double double54 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray52);
        double double55 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray52);
        double double56 = org.apache.commons.math.stat.StatUtils.max(doubleArray52);
        double double59 = org.apache.commons.math.stat.StatUtils.sum(doubleArray52, (int) (short) 1, 0);
        double double62 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray52, (int) (short) 0, (int) (byte) 0);
        double double64 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray38, doubleArray52, (double) '#');
        double double65 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray52);
        double[] doubleArray69 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double70 = org.apache.commons.math.stat.StatUtils.mean(doubleArray69);
        double double71 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray69);
        double double72 = org.apache.commons.math.stat.StatUtils.sum(doubleArray69);
        double double73 = org.apache.commons.math.stat.StatUtils.sum(doubleArray69);
        double double74 = org.apache.commons.math.stat.StatUtils.min(doubleArray69);
        double double75 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray69);
        double double76 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray69);
        double[] doubleArray80 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double81 = org.apache.commons.math.stat.StatUtils.mean(doubleArray80);
        double double82 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray80);
        double double83 = org.apache.commons.math.stat.StatUtils.sum(doubleArray80);
        double[] doubleArray87 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double88 = org.apache.commons.math.stat.StatUtils.mean(doubleArray87);
        double double89 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray87);
        double double90 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray87);
        double double91 = org.apache.commons.math.stat.StatUtils.max(doubleArray87);
        double double93 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray80, doubleArray87, (double) '#');
        double double94 = org.apache.commons.math.stat.StatUtils.min(doubleArray80);
        double double95 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray80);
        double double98 = org.apache.commons.math.stat.StatUtils.min(doubleArray80, (int) (short) 1, 0);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 127.0d + "'", double27 == 127.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 7.0d + "'", double32 == 7.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4.641588833612779d + "'", double33 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 21.0d + "'", double34 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 37.0d + "'", double43 == 37.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 127.00000000000001d + "'", double45 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 3.0d + "'", double46 == 3.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 10.0d + "'", double47 == 10.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 9.0d + "'", double48 == 9.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 7.0d + "'", double53 == 7.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 4.641588833612779d + "'", double54 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 4.605170185988092d + "'", double55 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 10.0d + "'", double56 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 127.0d + "'", double64 == 127.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 7.0d + "'", double70 == 7.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 4.641588833612779d + "'", double71 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 21.0d + "'", double72 == 21.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 21.0d + "'", double73 == 21.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 201.0d + "'", double75 == 201.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 7.0d + "'", double81 == 7.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 4.641588833612779d + "'", double82 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 21.0d + "'", double83 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 7.0d + "'", double88 == 7.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 4.641588833612779d + "'", double89 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 4.605170185988092d + "'", double90 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 10.0d + "'", double91 == 10.0d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.0d + "'", double93 == 0.0d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 1.0d + "'", double94 == 1.0d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double98));
    }

    @Test
    public void test1513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1513");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double3 = org.apache.commons.math.stat.StatUtils.max(doubleArray0, (int) (byte) 100, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1514");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double[] doubleArray27 = new double[] { (-1L), 0, 10L };
        double double30 = org.apache.commons.math.stat.StatUtils.max(doubleArray27, 0, 0);
        double double31 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray27);
        double[] doubleArray35 = new double[] { (-1L), 0, 10L };
        double double38 = org.apache.commons.math.stat.StatUtils.max(doubleArray35, 0, 0);
        double double39 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray35);
        double double41 = org.apache.commons.math.stat.StatUtils.variance(doubleArray35, (double) 10);
        double double42 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray27, doubleArray35);
        double double43 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray35);
        double double46 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35, 1, (int) (short) 0);
        double double48 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray18, doubleArray35, 101.0d);
        double double49 = org.apache.commons.math.stat.StatUtils.max(doubleArray18);
        double double50 = org.apache.commons.math.stat.StatUtils.sum(doubleArray18);
        double double51 = org.apache.commons.math.stat.StatUtils.min(doubleArray18);
        double double52 = org.apache.commons.math.stat.StatUtils.product(doubleArray18);
        double[] doubleArray56 = new double[] { (-1L), 0, 10L };
        double double59 = org.apache.commons.math.stat.StatUtils.max(doubleArray56, 0, 0);
        double double60 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray56);
        double double61 = org.apache.commons.math.stat.StatUtils.min(doubleArray56);
        double double62 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray56);
        double double63 = org.apache.commons.math.stat.StatUtils.product(doubleArray56);
        double double64 = org.apache.commons.math.stat.StatUtils.min(doubleArray56);
        double double65 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray18, doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.641588833612779d + "'", double23 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 101.0d + "'", double31 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 101.0d + "'", double39 == 101.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 37.0d + "'", double41 == 37.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 127.0d + "'", double48 == 127.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 10.0d + "'", double49 == 10.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 21.0d + "'", double50 == 21.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 100.0d + "'", double52 == 100.0d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 101.0d + "'", double60 == 101.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-1.0d) + "'", double61 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-0.0d) + "'", double63 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-1.0d) + "'", double64 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 4.0d + "'", double65 == 4.0d);
    }

    @Test
    public void test1515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1515");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.variance(doubleArray18);
        double[] doubleArray27 = new double[] { (-1L), 0, 10L };
        double double30 = org.apache.commons.math.stat.StatUtils.max(doubleArray27, 0, 0);
        double double31 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray27);
        double[] doubleArray35 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double36 = org.apache.commons.math.stat.StatUtils.mean(doubleArray35);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35);
        double double38 = org.apache.commons.math.stat.StatUtils.sum(doubleArray35);
        double double39 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray27, doubleArray35);
        double double40 = org.apache.commons.math.stat.StatUtils.max(doubleArray27);
        double double42 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray18, doubleArray27, 27.0d);
        double double43 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray27);
        double double44 = org.apache.commons.math.stat.StatUtils.product(doubleArray27);
        double double46 = org.apache.commons.math.stat.StatUtils.variance(doubleArray27, 201.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double49 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray27, 1, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 27.0d + "'", double23 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 101.0d + "'", double31 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 7.0d + "'", double36 == 7.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 21.0d + "'", double38 == 21.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-4.0d) + "'", double39 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 10.0d + "'", double40 == 10.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 127.0d + "'", double42 == 127.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-0.0d) + "'", double44 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 37.0d + "'", double46 == 37.0d);
    }

    @Test
    public void test1516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1516");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, 27.0d);
        double double16 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) (byte) 10);
        double double17 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double21 = org.apache.commons.math.stat.StatUtils.min(doubleArray11);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        double double28 = org.apache.commons.math.stat.StatUtils.max(doubleArray25, 0, 0);
        double double29 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray25);
        double double31 = org.apache.commons.math.stat.StatUtils.variance(doubleArray25, (double) 10);
        double[] doubleArray35 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double36 = org.apache.commons.math.stat.StatUtils.mean(doubleArray35);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35);
        double double38 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray35);
        double double39 = org.apache.commons.math.stat.StatUtils.variance(doubleArray35);
        double double40 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray25, doubleArray35);
        double double41 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray25);
        double double42 = org.apache.commons.math.stat.StatUtils.variance(doubleArray25);
        double double43 = org.apache.commons.math.stat.StatUtils.min(doubleArray25);
        double double45 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray11, doubleArray25, 4.605170185988092d);
        // The following exception was thrown during execution in test generation
        try {
            double double48 = org.apache.commons.math.stat.StatUtils.product(doubleArray11, (-1), 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 27.0d + "'", double14 == 27.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 27.0d + "'", double16 == 27.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4.605170185988092d + "'", double18 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4.605170185988092d + "'", double19 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 101.0d + "'", double29 == 101.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 37.0d + "'", double31 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 7.0d + "'", double36 == 7.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 4.605170185988092d + "'", double38 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 27.0d + "'", double39 == 27.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-4.0d) + "'", double40 == (-4.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 37.0d + "'", double42 == 37.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-1.0d) + "'", double43 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 127.00000000000001d + "'", double45 == 127.00000000000001d);
    }

    @Test
    public void test1517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1517");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10);
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double double15 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13);
        double double16 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray13);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double18 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray13);
        double double19 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double20 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        double double21 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double24 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (int) '4', (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4.641588833612779d + "'", double15 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.605170185988092d + "'", double16 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 27.0d + "'", double17 == 27.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-4.0d) + "'", double18 == (-4.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.0d) + "'", double20 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 37.0d + "'", double21 == 37.0d);
    }

    @Test
    public void test1518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1518");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double11 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, (int) (short) 0, (int) (byte) 0);
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double13 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 7.0d + "'", double8 == 7.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
    }

    @Test
    public void test1519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1519");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double double16 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray13, (double) 100.0f);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray13, doubleArray20);
        double[] doubleArray28 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double29 = org.apache.commons.math.stat.StatUtils.mean(doubleArray28);
        double double30 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray28);
        double double31 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray13, doubleArray28);
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray28);
        double[] doubleArray36 = new double[] { (-1L), 0, 10L };
        double double39 = org.apache.commons.math.stat.StatUtils.max(doubleArray36, 0, 0);
        double double40 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray36);
        double[] doubleArray44 = new double[] { (-1L), 0, 10L };
        double double47 = org.apache.commons.math.stat.StatUtils.max(doubleArray44, 0, 0);
        double double48 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray44);
        double double50 = org.apache.commons.math.stat.StatUtils.variance(doubleArray44, (double) 10);
        double double51 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray36, doubleArray44);
        double double52 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray44);
        double double53 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray28, doubleArray44);
        double double54 = org.apache.commons.math.stat.StatUtils.max(doubleArray28);
        double double55 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray28);
        double double56 = org.apache.commons.math.stat.StatUtils.mean(doubleArray28);
        // The following exception was thrown during execution in test generation
        try {
            double double59 = org.apache.commons.math.stat.StatUtils.sum(doubleArray28, (int) (byte) -1, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-1.0d) + "'", double8 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.605170185988092d + "'", double23 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 7.0d + "'", double29 == 7.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 4.641588833612779d + "'", double30 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 7.0d + "'", double32 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 101.0d + "'", double40 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 101.0d + "'", double48 == 101.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 37.0d + "'", double50 == 37.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 101.0d + "'", double52 == 101.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 4.0d + "'", double53 == 4.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 10.0d + "'", double54 == 10.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-4.0d) + "'", double55 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 7.0d + "'", double56 == 7.0d);
    }

    @Test
    public void test1520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1520");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double4 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray0, 1, (int) (short) 100, 37.000000000000114d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1521");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sum(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray11, doubleArray19);
        double double24 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double27 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11, (int) (short) 1, (int) (short) 0);
        double double28 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double29 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11);
        double double30 = org.apache.commons.math.stat.StatUtils.max(doubleArray11);
        double[] doubleArray34 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double35 = org.apache.commons.math.stat.StatUtils.mean(doubleArray34);
        double double36 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray34);
        double double37 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray34);
        double double38 = org.apache.commons.math.stat.StatUtils.max(doubleArray34);
        double double41 = org.apache.commons.math.stat.StatUtils.sum(doubleArray34, (int) (short) 1, 0);
        double double42 = org.apache.commons.math.stat.StatUtils.mean(doubleArray34);
        double[] doubleArray46 = new double[] { (-1L), 0, 10L };
        double double49 = org.apache.commons.math.stat.StatUtils.max(doubleArray46, 0, 0);
        double double50 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray46);
        double[] doubleArray54 = new double[] { (-1L), 0, 10L };
        double double57 = org.apache.commons.math.stat.StatUtils.max(doubleArray54, 0, 0);
        double double58 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray54);
        double double60 = org.apache.commons.math.stat.StatUtils.variance(doubleArray54, (double) 10);
        double double61 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray46, doubleArray54);
        double double62 = org.apache.commons.math.stat.StatUtils.variance(doubleArray46);
        double double63 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray34, doubleArray46);
        double double64 = org.apache.commons.math.stat.StatUtils.product(doubleArray46);
        double[] doubleArray68 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double69 = org.apache.commons.math.stat.StatUtils.mean(doubleArray68);
        double double70 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray68);
        double double71 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray68);
        double double72 = org.apache.commons.math.stat.StatUtils.max(doubleArray68);
        double double75 = org.apache.commons.math.stat.StatUtils.sum(doubleArray68, (int) (short) 1, 0);
        double double76 = org.apache.commons.math.stat.StatUtils.max(doubleArray68);
        double double77 = org.apache.commons.math.stat.StatUtils.min(doubleArray68);
        double double79 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray46, doubleArray68, (double) (byte) 100);
        double double80 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray11, doubleArray46);
        double double81 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 21.0d + "'", double22 == 21.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-4.0d) + "'", double23 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 9.0d + "'", double24 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 12.0d + "'", double28 == 12.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 37.0d + "'", double29 == 37.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 7.0d + "'", double35 == 7.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 4.641588833612779d + "'", double36 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.605170185988092d + "'", double37 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 10.0d + "'", double38 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 7.0d + "'", double42 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 101.0d + "'", double50 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 101.0d + "'", double58 == 101.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 37.0d + "'", double60 == 37.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 37.0d + "'", double62 == 37.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 4.0d + "'", double63 == 4.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-0.0d) + "'", double64 == (-0.0d));
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 7.0d + "'", double69 == 7.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 4.641588833612779d + "'", double70 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 4.605170185988092d + "'", double71 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 10.0d + "'", double72 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 10.0d + "'", double76 == 10.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.0d + "'", double77 == 1.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 127.0d + "'", double79 == 127.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 101.0d + "'", double81 == 101.0d);
    }

    @Test
    public void test1522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1522");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, 0.0d);
        double double28 = org.apache.commons.math.stat.StatUtils.product(doubleArray12);
        double double31 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray12, (int) (byte) 0, (int) (short) 0);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray12);
        double double35 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, (int) (short) 0, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            double double38 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12, 1, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 127.0d + "'", double27 == 127.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-0.0d) + "'", double28 == (-0.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 37.0d + "'", double32 == 37.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-1.0d) + "'", double35 == (-1.0d));
    }

    @Test
    public void test1523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1523");
        double[] doubleArray2 = new double[] { (byte) 10, 0.0d };
        double double4 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray2, 100.0d);
        java.lang.Class<?> wildcardClass5 = doubleArray2.getClass();
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 10.0d + "'", double4 == 10.0d);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test1524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1524");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray19);
        double double25 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, (-0.9199999999999999d));
        double[] doubleArray29 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double30 = org.apache.commons.math.stat.StatUtils.mean(doubleArray29);
        double double31 = org.apache.commons.math.stat.StatUtils.min(doubleArray29);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray29);
        double double34 = org.apache.commons.math.stat.StatUtils.variance(doubleArray29, (double) (short) 1);
        double double37 = org.apache.commons.math.stat.StatUtils.max(doubleArray29, (int) (byte) 1, (int) (byte) 0);
        double double39 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray12, doubleArray29, 4.605170185988092d);
        double double40 = org.apache.commons.math.stat.StatUtils.mean(doubleArray29);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.605170185988092d + "'", double22 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + (-2.220446049250313E-16d) + "'", double25 == (-2.220446049250313E-16d));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 7.0d + "'", double30 == 7.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 27.0d + "'", double34 == 27.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 7.0d + "'", double40 == 7.0d);
    }

    @Test
    public void test1525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1525");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3, (int) (short) 0, (int) (byte) 0);
        double double16 = org.apache.commons.math.stat.StatUtils.product(doubleArray3, 0, 0);
        java.lang.Class<?> wildcardClass17 = doubleArray3.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1526");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) 10);
        double double18 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double22 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11, 0, (int) (short) 1);
        double double25 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, (int) (byte) 1, (int) (byte) 0);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 37.0d + "'", double17 == 37.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 101.0d + "'", double19 == 101.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
    }

    @Test
    public void test1527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1527");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        double double11 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double12 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double13 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        double double14 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double16 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double19 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) '4', (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 100.0d + "'", double13 == 100.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4.605170185988092d + "'", double14 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 27.0d + "'", double15 == 27.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 7.0d + "'", double16 == 7.0d);
    }

    @Test
    public void test1528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1528");
        double[] doubleArray3 = new double[] { 100.0d, 0L, 100.0f };
        // The following exception was thrown during execution in test generation
        try {
            double double6 = org.apache.commons.math.stat.StatUtils.product(doubleArray3, (int) (short) -1, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[100.0, 0.0, 100.0]");
    }

    @Test
    public void test1529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1529");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10);
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double double15 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13);
        double double16 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray13);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double18 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray13);
        double double19 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13);
        double double20 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray13);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13);
        double double22 = org.apache.commons.math.stat.StatUtils.sum(doubleArray13);
        double double23 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray13);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4.641588833612779d + "'", double15 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.605170185988092d + "'", double16 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 27.0d + "'", double17 == 27.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-4.0d) + "'", double18 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4.641588833612779d + "'", double19 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 201.0d + "'", double20 == 201.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 21.0d + "'", double22 == 21.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.605170185988092d + "'", double23 == 4.605170185988092d);
    }

    @Test
    public void test1530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1530");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double[] doubleArray19 = new double[] { (-1L), 0, 10L };
        double double22 = org.apache.commons.math.stat.StatUtils.max(doubleArray19, 0, 0);
        double double23 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray19);
        double double25 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) 10);
        double double26 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11);
        double double29 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, 3.0d);
        double double30 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double[] doubleArray34 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double35 = org.apache.commons.math.stat.StatUtils.mean(doubleArray34);
        double double36 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray34);
        double double37 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray34);
        double double38 = org.apache.commons.math.stat.StatUtils.max(doubleArray34);
        double double39 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray34);
        double[] doubleArray43 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double44 = org.apache.commons.math.stat.StatUtils.mean(doubleArray43);
        double double46 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray43, (double) 100.0f);
        double double47 = org.apache.commons.math.stat.StatUtils.mean(doubleArray43);
        double[] doubleArray51 = new double[] { (-1L), 0, 10L };
        double double54 = org.apache.commons.math.stat.StatUtils.max(doubleArray51, 0, 0);
        double double55 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray51);
        double[] doubleArray59 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double60 = org.apache.commons.math.stat.StatUtils.mean(doubleArray59);
        double double61 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray59);
        double double62 = org.apache.commons.math.stat.StatUtils.sum(doubleArray59);
        double double63 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray51, doubleArray59);
        double double64 = org.apache.commons.math.stat.StatUtils.sum(doubleArray51);
        double double67 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray51, (int) (short) 1, (int) (short) 0);
        double double68 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray43, doubleArray51);
        double double70 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray34, doubleArray51, 191.0d);
        double double71 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray51);
        double[] doubleArray75 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double76 = org.apache.commons.math.stat.StatUtils.mean(doubleArray75);
        double double78 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray75, (double) 100.0f);
        double double79 = org.apache.commons.math.stat.StatUtils.mean(doubleArray75);
        double double80 = org.apache.commons.math.stat.StatUtils.mean(doubleArray75);
        double double83 = org.apache.commons.math.stat.StatUtils.max(doubleArray75, (int) (short) 0, (int) (byte) 0);
        double double84 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray51, doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 4.641588833612779d + "'", double7 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 101.0d + "'", double23 == 101.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 37.0d + "'", double25 == 37.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 37.0d + "'", double27 == 37.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 127.0d + "'", double29 == 127.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 7.0d + "'", double35 == 7.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 4.641588833612779d + "'", double36 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.605170185988092d + "'", double37 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 10.0d + "'", double38 == 10.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 4.641588833612779d + "'", double39 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 7.0d + "'", double44 == 7.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 10.0d + "'", double46 == 10.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 7.0d + "'", double47 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 101.0d + "'", double55 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 7.0d + "'", double60 == 7.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 4.641588833612779d + "'", double61 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 21.0d + "'", double62 == 21.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-4.0d) + "'", double63 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 9.0d + "'", double64 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 12.0d + "'", double68 == 12.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 127.0d + "'", double70 == 127.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 7.0d + "'", double76 == 7.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 10.0d + "'", double78 == 10.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 7.0d + "'", double79 == 7.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 7.0d + "'", double80 == 7.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double83));
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + (-12.0d) + "'", double84 == (-12.0d));
    }

    @Test
    public void test1531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1531");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double double16 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.variance(doubleArray20, 27.0d);
        double double25 = org.apache.commons.math.stat.StatUtils.variance(doubleArray20, (double) (byte) 10);
        double double26 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray20);
        double double27 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray20);
        double[] doubleArray31 = new double[] { (-1L), 0, 10L };
        double double34 = org.apache.commons.math.stat.StatUtils.max(doubleArray31, 0, 0);
        double double36 = org.apache.commons.math.stat.StatUtils.variance(doubleArray31, 21.0d);
        double double37 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray20, doubleArray31);
        double double38 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray20);
        double double40 = org.apache.commons.math.stat.StatUtils.variance(doubleArray20, (double) 'a');
        double double41 = org.apache.commons.math.stat.StatUtils.variance(doubleArray20);
        // The following exception was thrown during execution in test generation
        try {
            double double44 = org.apache.commons.math.stat.StatUtils.variance(doubleArray20, (int) (byte) 10, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 4.641588833612779d + "'", double8 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 7.0d + "'", double16 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 27.0d + "'", double23 == 27.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 27.0d + "'", double25 == 27.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 4.605170185988092d + "'", double27 == 4.605170185988092d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 37.0d + "'", double36 == 37.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 12.0d + "'", double37 == 12.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 27.0d + "'", double40 == 27.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 27.0d + "'", double41 == 27.0d);
    }

    @Test
    public void test1532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1532");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, 0.0d);
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double double33 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray31);
        double double34 = org.apache.commons.math.stat.StatUtils.sum(doubleArray31);
        double[] doubleArray38 = new double[] { (-1L), 0, 10L };
        double double41 = org.apache.commons.math.stat.StatUtils.max(doubleArray38, 0, 0);
        double double43 = org.apache.commons.math.stat.StatUtils.variance(doubleArray38, 21.0d);
        double double45 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray31, doubleArray38, 4.605170185988092d);
        double double46 = org.apache.commons.math.stat.StatUtils.mean(doubleArray38);
        double double47 = org.apache.commons.math.stat.StatUtils.max(doubleArray38);
        double double48 = org.apache.commons.math.stat.StatUtils.sum(doubleArray38);
        double[] doubleArray52 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double53 = org.apache.commons.math.stat.StatUtils.mean(doubleArray52);
        double double54 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray52);
        double double55 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray52);
        double double56 = org.apache.commons.math.stat.StatUtils.max(doubleArray52);
        double double59 = org.apache.commons.math.stat.StatUtils.sum(doubleArray52, (int) (short) 1, 0);
        double double62 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray52, (int) (short) 0, (int) (byte) 0);
        double double64 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray38, doubleArray52, (double) '#');
        double double65 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray52);
        double[] doubleArray69 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double70 = org.apache.commons.math.stat.StatUtils.mean(doubleArray69);
        double double71 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray69);
        double double72 = org.apache.commons.math.stat.StatUtils.sum(doubleArray69);
        double double73 = org.apache.commons.math.stat.StatUtils.sum(doubleArray69);
        double double74 = org.apache.commons.math.stat.StatUtils.min(doubleArray69);
        double double75 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray69);
        double double76 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray69);
        double[] doubleArray80 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double81 = org.apache.commons.math.stat.StatUtils.mean(doubleArray80);
        double double82 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray80);
        double double83 = org.apache.commons.math.stat.StatUtils.sum(doubleArray80);
        double[] doubleArray87 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double88 = org.apache.commons.math.stat.StatUtils.mean(doubleArray87);
        double double89 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray87);
        double double90 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray87);
        double double91 = org.apache.commons.math.stat.StatUtils.max(doubleArray87);
        double double93 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray80, doubleArray87, (double) '#');
        double double94 = org.apache.commons.math.stat.StatUtils.min(doubleArray80);
        double double95 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray80);
        double double96 = org.apache.commons.math.stat.StatUtils.sum(doubleArray80);
        double double97 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 127.0d + "'", double27 == 127.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 7.0d + "'", double32 == 7.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4.641588833612779d + "'", double33 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 21.0d + "'", double34 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 37.0d + "'", double43 == 37.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 127.00000000000001d + "'", double45 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 3.0d + "'", double46 == 3.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 10.0d + "'", double47 == 10.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 9.0d + "'", double48 == 9.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 7.0d + "'", double53 == 7.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 4.641588833612779d + "'", double54 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 4.605170185988092d + "'", double55 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 10.0d + "'", double56 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 127.0d + "'", double64 == 127.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 7.0d + "'", double70 == 7.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 4.641588833612779d + "'", double71 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 21.0d + "'", double72 == 21.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 21.0d + "'", double73 == 21.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 201.0d + "'", double75 == 201.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 7.0d + "'", double81 == 7.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 4.641588833612779d + "'", double82 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 21.0d + "'", double83 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 7.0d + "'", double88 == 7.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 4.641588833612779d + "'", double89 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 4.605170185988092d + "'", double90 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 10.0d + "'", double91 == 10.0d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.0d + "'", double93 == 0.0d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 1.0d + "'", double94 == 1.0d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 21.0d + "'", double96 == 21.0d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 201.0d + "'", double97 == 201.0d);
    }

    @Test
    public void test1533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1533");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        double double29 = org.apache.commons.math.stat.StatUtils.max(doubleArray26, 0, 0);
        double double30 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray26);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        double double37 = org.apache.commons.math.stat.StatUtils.max(doubleArray34, 0, 0);
        double double38 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray34);
        double double40 = org.apache.commons.math.stat.StatUtils.variance(doubleArray34, (double) 10);
        double double41 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray26, doubleArray34);
        double double42 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray34);
        double double43 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray18, doubleArray34);
        double[] doubleArray47 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double48 = org.apache.commons.math.stat.StatUtils.mean(doubleArray47);
        double double50 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray47, (double) 100.0f);
        double double51 = org.apache.commons.math.stat.StatUtils.variance(doubleArray47);
        double double52 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray18, doubleArray47);
        double double53 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray47);
        double double55 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray47, (double) (byte) 100);
        double double56 = org.apache.commons.math.stat.StatUtils.variance(doubleArray47);
        double double57 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray47);
        double double58 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 7.0d + "'", double22 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 101.0d + "'", double30 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 101.0d + "'", double38 == 101.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 37.0d + "'", double40 == 37.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 101.0d + "'", double42 == 101.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4.0d + "'", double43 == 4.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 7.0d + "'", double48 == 7.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 27.0d + "'", double51 == 27.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 4.641588833612779d + "'", double53 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 10.0d + "'", double55 == 10.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 27.0d + "'", double56 == 27.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 4.605170185988092d + "'", double57 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 4.605170185988092d + "'", double58 == 4.605170185988092d);
    }

    @Test
    public void test1534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1534");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, 27.0d);
        double double16 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) (byte) 10);
        double double17 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double21 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 1.0d, (int) (short) 0, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 27.0d + "'", double14 == 27.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 27.0d + "'", double16 == 27.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
    }

    @Test
    public void test1535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1535");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double11 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, (int) (short) 0, (int) (byte) 0);
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray16 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double17 = org.apache.commons.math.stat.StatUtils.mean(doubleArray16);
        double double19 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray16, (double) 100.0f);
        double[] doubleArray23 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double24 = org.apache.commons.math.stat.StatUtils.mean(doubleArray23);
        double double25 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray23);
        double double26 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray23);
        double double27 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray16, doubleArray23);
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double double33 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray31);
        double double34 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray16, doubleArray31);
        double double35 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray31);
        double double36 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray31);
        double double37 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double[] doubleArray41 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double42 = org.apache.commons.math.stat.StatUtils.mean(doubleArray41);
        double double43 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray41);
        double double44 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray41);
        double double45 = org.apache.commons.math.stat.StatUtils.variance(doubleArray41);
        double double46 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray41);
        double double47 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray41);
        double double50 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray41, (int) (short) 1, 0);
        double double51 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray31, doubleArray41);
        double double52 = org.apache.commons.math.stat.StatUtils.min(doubleArray41);
        double double53 = org.apache.commons.math.stat.StatUtils.mean(doubleArray41);
        double double55 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray41, (double) 10L);
        double double56 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            double double59 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, (int) (byte) 100, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 7.0d + "'", double8 == 7.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 7.0d + "'", double17 == 7.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 7.0d + "'", double24 == 7.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 4.641588833612779d + "'", double25 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 4.605170185988092d + "'", double26 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 7.0d + "'", double32 == 7.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4.641588833612779d + "'", double33 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 4.641588833612779d + "'", double35 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 4.641588833612779d + "'", double36 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 7.0d + "'", double37 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 7.0d + "'", double42 == 7.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4.641588833612779d + "'", double43 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 4.605170185988092d + "'", double44 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 27.0d + "'", double45 == 27.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 4.641588833612779d + "'", double46 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 4.605170185988092d + "'", double47 == 4.605170185988092d);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 7.0d + "'", double53 == 7.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
    }

    @Test
    public void test1536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1536");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (-1L), 0, 10L };
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray10, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, 21.0d);
        double double17 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, 4.605170185988092d);
        double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double19 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double23 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray10, (int) (byte) 1, (int) (byte) 1, 3.5200000000000005d);
        double[] doubleArray27 = new double[] { (-1L), 0, 10L };
        double double30 = org.apache.commons.math.stat.StatUtils.max(doubleArray27, 0, 0);
        double double31 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray27);
        double[] doubleArray35 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double36 = org.apache.commons.math.stat.StatUtils.mean(doubleArray35);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35);
        double double38 = org.apache.commons.math.stat.StatUtils.sum(doubleArray35);
        double double39 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray27, doubleArray35);
        double double40 = org.apache.commons.math.stat.StatUtils.max(doubleArray35);
        double double41 = org.apache.commons.math.stat.StatUtils.max(doubleArray35);
        double[] doubleArray45 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double46 = org.apache.commons.math.stat.StatUtils.mean(doubleArray45);
        double double48 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray45, (double) 100.0f);
        double double49 = org.apache.commons.math.stat.StatUtils.mean(doubleArray45);
        double[] doubleArray53 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double54 = org.apache.commons.math.stat.StatUtils.mean(doubleArray53);
        double double56 = org.apache.commons.math.stat.StatUtils.variance(doubleArray53, 27.0d);
        double double58 = org.apache.commons.math.stat.StatUtils.variance(doubleArray53, (double) (byte) 10);
        double double59 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray45, doubleArray53);
        double double60 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray35, doubleArray53);
        double double62 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray10, doubleArray53, (-4.0d));
        double double63 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray10);
        double double64 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        // The following exception was thrown during execution in test generation
        try {
            double double67 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray10, (int) '#', 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 37.0d + "'", double15 == 37.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 127.00000000000001d + "'", double17 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 3.0d + "'", double18 == 3.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 101.0d + "'", double31 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 7.0d + "'", double36 == 7.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 21.0d + "'", double38 == 21.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-4.0d) + "'", double39 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 10.0d + "'", double40 == 10.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 10.0d + "'", double41 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 7.0d + "'", double46 == 7.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 10.0d + "'", double48 == 10.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 7.0d + "'", double49 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 7.0d + "'", double54 == 7.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 27.0d + "'", double56 == 27.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 27.0d + "'", double58 == 27.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 127.0d + "'", double62 == 127.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 101.0d + "'", double63 == 101.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 3.0d + "'", double64 == 3.0d);
    }

    @Test
    public void test1537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1537");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.max(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.max(doubleArray11);
        double[] doubleArray21 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double22 = org.apache.commons.math.stat.StatUtils.mean(doubleArray21);
        double double24 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray21, (double) 100.0f);
        double double25 = org.apache.commons.math.stat.StatUtils.mean(doubleArray21);
        double[] doubleArray29 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double30 = org.apache.commons.math.stat.StatUtils.mean(doubleArray29);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray29, 27.0d);
        double double34 = org.apache.commons.math.stat.StatUtils.variance(doubleArray29, (double) (byte) 10);
        double double35 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray21, doubleArray29);
        double double36 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray29);
        double double37 = org.apache.commons.math.stat.StatUtils.variance(doubleArray29);
        double double38 = org.apache.commons.math.stat.StatUtils.max(doubleArray29);
        // The following exception was thrown during execution in test generation
        try {
            double double41 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray29, 100, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 7.0d + "'", double22 == 7.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 10.0d + "'", double24 == 10.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 7.0d + "'", double25 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 7.0d + "'", double30 == 7.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 27.0d + "'", double34 == 27.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 27.0d + "'", double37 == 27.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 10.0d + "'", double38 == 10.0d);
    }

    @Test
    public void test1538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1538");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double3 = org.apache.commons.math.stat.StatUtils.variance(doubleArray0, (int) (short) 0, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1539");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray20);
        // The following exception was thrown during execution in test generation
        try {
            double double28 = org.apache.commons.math.stat.StatUtils.min(doubleArray20, (int) (byte) 100, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 21.0d + "'", double8 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
    }

    @Test
    public void test1540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1540");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double3 = org.apache.commons.math.stat.StatUtils.min(doubleArray0, 0, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1541");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (-1L), 0, 10L };
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray10, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, 21.0d);
        double double17 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, 4.605170185988092d);
        // The following exception was thrown during execution in test generation
        try {
            double double20 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3, (int) (byte) 10, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 37.0d + "'", double15 == 37.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 127.00000000000001d + "'", double17 == 127.00000000000001d);
    }

    @Test
    public void test1542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1542");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double13 = org.apache.commons.math.stat.StatUtils.min(doubleArray3, (int) (short) 10, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-1.0d) + "'", double8 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 9.0d + "'", double9 == 9.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 3.0d + "'", double10 == 3.0d);
    }

    @Test
    public void test1543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1543");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, 0.0d);
        double double29 = org.apache.commons.math.stat.StatUtils.variance(doubleArray12, (double) 1L);
        double[] doubleArray33 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double34 = org.apache.commons.math.stat.StatUtils.mean(doubleArray33);
        double double36 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray33, (double) 100.0f);
        double[] doubleArray40 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double41 = org.apache.commons.math.stat.StatUtils.mean(doubleArray40);
        double double42 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray40);
        double double43 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray40);
        double double44 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray33, doubleArray40);
        double[] doubleArray48 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double49 = org.apache.commons.math.stat.StatUtils.mean(doubleArray48);
        double double50 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray48);
        double double51 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray33, doubleArray48);
        double[] doubleArray55 = new double[] { (-1L), 0, 10L };
        double double58 = org.apache.commons.math.stat.StatUtils.max(doubleArray55, 0, 0);
        double double59 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray55);
        double[] doubleArray63 = new double[] { (-1L), 0, 10L };
        double double66 = org.apache.commons.math.stat.StatUtils.max(doubleArray63, 0, 0);
        double double67 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray63);
        double double69 = org.apache.commons.math.stat.StatUtils.variance(doubleArray63, (double) 10);
        double double70 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray55, doubleArray63);
        double double72 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray33, doubleArray55, 100.0d);
        double double73 = org.apache.commons.math.stat.StatUtils.variance(doubleArray33);
        double double74 = org.apache.commons.math.stat.StatUtils.sum(doubleArray33);
        double double75 = org.apache.commons.math.stat.StatUtils.variance(doubleArray33);
        double double78 = org.apache.commons.math.stat.StatUtils.min(doubleArray33, (int) (byte) 0, 0);
        double double79 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray33);
        double double80 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray33);
        double double81 = org.apache.commons.math.stat.StatUtils.min(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 127.0d + "'", double27 == 127.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 37.0d + "'", double29 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 7.0d + "'", double34 == 7.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 10.0d + "'", double36 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 7.0d + "'", double41 == 7.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 4.641588833612779d + "'", double42 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4.605170185988092d + "'", double43 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 7.0d + "'", double49 == 7.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4.641588833612779d + "'", double50 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 101.0d + "'", double59 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 101.0d + "'", double67 == 101.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 37.0d + "'", double69 == 37.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 127.0d + "'", double72 == 127.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 27.0d + "'", double73 == 27.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 21.0d + "'", double74 == 21.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 27.0d + "'", double75 == 27.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 4.605170185988092d + "'", double79 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + (-4.0d) + "'", double80 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.0d + "'", double81 == 1.0d);
    }

    @Test
    public void test1544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1544");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) 10);
        double double18 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double22 = org.apache.commons.math.stat.StatUtils.min(doubleArray3, (int) (short) 0, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 37.0d + "'", double17 == 37.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
    }

    @Test
    public void test1545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1545");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) 10);
        double double18 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double21 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double24 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3, (int) (byte) 0, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 37.0d + "'", double17 == 37.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 37.0d + "'", double19 == 37.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 3.0d + "'", double20 == 3.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1.0d) + "'", double21 == (-1.0d));
    }

    @Test
    public void test1546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1546");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        double double29 = org.apache.commons.math.stat.StatUtils.max(doubleArray26, 0, 0);
        double double30 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray26);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        double double37 = org.apache.commons.math.stat.StatUtils.max(doubleArray34, 0, 0);
        double double38 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray34);
        double double40 = org.apache.commons.math.stat.StatUtils.variance(doubleArray34, (double) 10);
        double double41 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray26, doubleArray34);
        double double42 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray34);
        double double43 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray18, doubleArray34);
        double[] doubleArray47 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double48 = org.apache.commons.math.stat.StatUtils.mean(doubleArray47);
        double double50 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray47, (double) 100.0f);
        double double51 = org.apache.commons.math.stat.StatUtils.variance(doubleArray47);
        double double52 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray18, doubleArray47);
        // The following exception was thrown during execution in test generation
        try {
            double double55 = org.apache.commons.math.stat.StatUtils.mean(doubleArray47, 10, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 7.0d + "'", double22 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 101.0d + "'", double30 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 101.0d + "'", double38 == 101.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 37.0d + "'", double40 == 37.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 101.0d + "'", double42 == 101.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4.0d + "'", double43 == 4.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 7.0d + "'", double48 == 7.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 27.0d + "'", double51 == 27.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
    }

    @Test
    public void test1547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1547");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (-1L), 0, 10L };
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray10, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, 21.0d);
        double double17 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, 4.605170185988092d);
        double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double19 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double[] doubleArray23 = new double[] { (-1L), 0, 10L };
        double double26 = org.apache.commons.math.stat.StatUtils.max(doubleArray23, 0, 0);
        double double27 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray23);
        double double29 = org.apache.commons.math.stat.StatUtils.variance(doubleArray23, (double) 10);
        double[] doubleArray33 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double34 = org.apache.commons.math.stat.StatUtils.mean(doubleArray33);
        double double35 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray33);
        double double36 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray33);
        double double37 = org.apache.commons.math.stat.StatUtils.variance(doubleArray33);
        double double38 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray23, doubleArray33);
        double[] doubleArray42 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double43 = org.apache.commons.math.stat.StatUtils.mean(doubleArray42);
        double double44 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray42);
        double double45 = org.apache.commons.math.stat.StatUtils.sum(doubleArray42);
        double double46 = org.apache.commons.math.stat.StatUtils.max(doubleArray42);
        double double48 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray42, (double) (byte) 100);
        double[] doubleArray52 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double53 = org.apache.commons.math.stat.StatUtils.mean(doubleArray52);
        double double54 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray52);
        double double55 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray52);
        double double56 = org.apache.commons.math.stat.StatUtils.variance(doubleArray52);
        double double58 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray42, doubleArray52, 37.0d);
        double double59 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray33, doubleArray52);
        double double60 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray52);
        // The following exception was thrown during execution in test generation
        try {
            double double64 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray52, (int) (short) 1, (int) (byte) 1, (double) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: invalid quantile value: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 37.0d + "'", double15 == 37.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 127.00000000000001d + "'", double17 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 7.0d + "'", double18 == 7.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4.641588833612779d + "'", double19 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 101.0d + "'", double27 == 101.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 37.0d + "'", double29 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 7.0d + "'", double34 == 7.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 4.641588833612779d + "'", double35 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 4.605170185988092d + "'", double36 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 27.0d + "'", double37 == 27.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-4.0d) + "'", double38 == (-4.0d));
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 7.0d + "'", double43 == 7.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 4.641588833612779d + "'", double44 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 21.0d + "'", double45 == 21.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 10.0d + "'", double46 == 10.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 10.0d + "'", double48 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 7.0d + "'", double53 == 7.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 4.641588833612779d + "'", double54 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 4.605170185988092d + "'", double55 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 27.0d + "'", double56 == 27.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
    }

    @Test
    public void test1548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1548");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray19);
        double double25 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, (-0.9199999999999999d));
        double[] doubleArray29 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double30 = org.apache.commons.math.stat.StatUtils.mean(doubleArray29);
        double double31 = org.apache.commons.math.stat.StatUtils.min(doubleArray29);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray29);
        double double34 = org.apache.commons.math.stat.StatUtils.variance(doubleArray29, (double) (short) 1);
        double double37 = org.apache.commons.math.stat.StatUtils.max(doubleArray29, (int) (byte) 1, (int) (byte) 0);
        double double39 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray12, doubleArray29, 4.605170185988092d);
        double double40 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray29);
        // The following exception was thrown during execution in test generation
        try {
            double double43 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray29, (int) (short) 1, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.605170185988092d + "'", double22 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + (-2.220446049250313E-16d) + "'", double25 == (-2.220446049250313E-16d));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 7.0d + "'", double30 == 7.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 27.0d + "'", double34 == 27.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 201.0d + "'", double40 == 201.0d);
    }

    @Test
    public void test1549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1549");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double16 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        java.lang.Class<?> wildcardClass17 = doubleArray10.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.0d + "'", double15 == 7.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 7.0d + "'", double16 == 7.0d);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1550");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double3 = org.apache.commons.math.stat.StatUtils.variance(doubleArray0, (int) (byte) 100, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1551");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double11 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3, (int) (byte) 0, (int) (byte) 1);
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double[] doubleArray17 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray17);
        double double20 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray17, (double) 100.0f);
        double[] doubleArray24 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double25 = org.apache.commons.math.stat.StatUtils.mean(doubleArray24);
        double double26 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray24);
        double double27 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray24);
        double double28 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray17, doubleArray24);
        double[] doubleArray32 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double33 = org.apache.commons.math.stat.StatUtils.mean(doubleArray32);
        double double34 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray32);
        double double35 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray17, doubleArray32);
        double double36 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray32);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        double double43 = org.apache.commons.math.stat.StatUtils.max(doubleArray40, 0, 0);
        double double44 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray40);
        double[] doubleArray48 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double49 = org.apache.commons.math.stat.StatUtils.mean(doubleArray48);
        double double50 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray48);
        double double51 = org.apache.commons.math.stat.StatUtils.sum(doubleArray48);
        double double52 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray40, doubleArray48);
        double double53 = org.apache.commons.math.stat.StatUtils.sum(doubleArray40);
        double double56 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray40, (int) (short) 1, (int) (short) 0);
        double double57 = org.apache.commons.math.stat.StatUtils.product(doubleArray40);
        double double58 = org.apache.commons.math.stat.StatUtils.max(doubleArray40);
        double double59 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray32, doubleArray40);
        double double60 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray32);
        double[] doubleArray64 = new double[] { (-1L), 0, 10L };
        double double67 = org.apache.commons.math.stat.StatUtils.max(doubleArray64, 0, 0);
        double double68 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray64);
        double[] doubleArray72 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double73 = org.apache.commons.math.stat.StatUtils.mean(doubleArray72);
        double double74 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray72);
        double double75 = org.apache.commons.math.stat.StatUtils.sum(doubleArray72);
        double double76 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray64, doubleArray72);
        double double77 = org.apache.commons.math.stat.StatUtils.max(doubleArray64);
        double double78 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray64);
        double double79 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray32, doubleArray64);
        // The following exception was thrown during execution in test generation
        try {
            double double82 = org.apache.commons.math.stat.StatUtils.sum(doubleArray32, (int) (short) 10, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 4.641588833612779d + "'", double8 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.000000000000002d + "'", double11 == 10.000000000000002d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 10.0d + "'", double13 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 7.0d + "'", double18 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 10.0d + "'", double20 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 7.0d + "'", double25 == 7.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 4.641588833612779d + "'", double26 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 4.605170185988092d + "'", double27 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 7.0d + "'", double33 == 7.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4.641588833612779d + "'", double34 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 4.641588833612779d + "'", double36 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 101.0d + "'", double44 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 7.0d + "'", double49 == 7.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4.641588833612779d + "'", double50 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 21.0d + "'", double51 == 21.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-4.0d) + "'", double52 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 9.0d + "'", double53 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.0d) + "'", double57 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 10.0d + "'", double58 == 10.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 12.0d + "'", double59 == 12.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 101.0d + "'", double68 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 7.0d + "'", double73 == 7.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 4.641588833612779d + "'", double74 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 21.0d + "'", double75 == 21.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-4.0d) + "'", double76 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 10.0d + "'", double77 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 4.0d + "'", double79 == 4.0d);
    }

    @Test
    public void test1552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1552");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double24 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double[] doubleArray28 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double29 = org.apache.commons.math.stat.StatUtils.mean(doubleArray28);
        double double30 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray28);
        double double31 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray28);
        double double33 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray28);
        double double34 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28);
        double double37 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28, (int) (short) 1, 0);
        double double38 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray18, doubleArray28);
        double[] doubleArray42 = new double[] { (-1L), 0, 10L };
        double double45 = org.apache.commons.math.stat.StatUtils.max(doubleArray42, 0, 0);
        double double46 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray42);
        double[] doubleArray50 = new double[] { (-1L), 0, 10L };
        double double53 = org.apache.commons.math.stat.StatUtils.max(doubleArray50, 0, 0);
        double double54 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray50);
        double double56 = org.apache.commons.math.stat.StatUtils.variance(doubleArray50, (double) 10);
        double double57 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray42, doubleArray50);
        double double58 = org.apache.commons.math.stat.StatUtils.max(doubleArray50);
        double double59 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray18, doubleArray50);
        double[] doubleArray63 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double64 = org.apache.commons.math.stat.StatUtils.mean(doubleArray63);
        double double66 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray63, (double) 100.0f);
        double double67 = org.apache.commons.math.stat.StatUtils.mean(doubleArray63);
        double double68 = org.apache.commons.math.stat.StatUtils.mean(doubleArray63);
        double double70 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray50, doubleArray63, 101.0d);
        double double71 = org.apache.commons.math.stat.StatUtils.max(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.641588833612779d + "'", double23 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 7.0d + "'", double24 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 7.0d + "'", double29 == 7.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 4.641588833612779d + "'", double30 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.605170185988092d + "'", double31 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4.641588833612779d + "'", double33 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4.605170185988092d + "'", double34 == 4.605170185988092d);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 101.0d + "'", double46 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 101.0d + "'", double54 == 101.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 37.0d + "'", double56 == 37.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 10.0d + "'", double58 == 10.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4.0d + "'", double59 == 4.0d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 7.0d + "'", double64 == 7.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 10.0d + "'", double66 == 10.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 7.0d + "'", double67 == 7.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 7.0d + "'", double68 == 7.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 127.0d + "'", double70 == 127.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 10.0d + "'", double71 == 10.0d);
    }

    @Test
    public void test1553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1553");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double24 = org.apache.commons.math.stat.StatUtils.min(doubleArray18);
        double double26 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray18, (double) 100L);
        double[] doubleArray30 = new double[] { (-1L), 0, 10L };
        double double33 = org.apache.commons.math.stat.StatUtils.max(doubleArray30, 0, 0);
        double double34 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray30);
        double double36 = org.apache.commons.math.stat.StatUtils.variance(doubleArray30, (double) 10);
        double double37 = org.apache.commons.math.stat.StatUtils.min(doubleArray30);
        double double38 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray18, doubleArray30);
        double double40 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray18, (double) (byte) 1);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.641588833612779d + "'", double23 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 101.0d + "'", double34 == 101.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 37.0d + "'", double36 == 37.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-1.0d) + "'", double37 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 12.0d + "'", double38 == 12.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
    }

    @Test
    public void test1554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1554");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double3 = org.apache.commons.math.stat.StatUtils.mean(doubleArray0, (int) '#', 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1555");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        double double11 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double12 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double13 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        double double14 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double16 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double19 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3, (int) ' ', (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 100.0d + "'", double13 == 100.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4.605170185988092d + "'", double14 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 27.0d + "'", double15 == 27.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 7.0d + "'", double16 == 7.0d);
    }

    @Test
    public void test1556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1556");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, 27.0d);
        double double16 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) (byte) 10);
        double double17 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double20 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (int) (short) 0, (int) (byte) 0);
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double24 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, (int) (byte) 100, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 27.0d + "'", double14 == 27.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 27.0d + "'", double16 == 27.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
    }

    @Test
    public void test1557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1557");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double24 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double[] doubleArray28 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double29 = org.apache.commons.math.stat.StatUtils.mean(doubleArray28);
        double double30 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray28);
        double double31 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray28);
        double double33 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray28);
        double double34 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28);
        double double37 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28, (int) (short) 1, 0);
        double double38 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray18, doubleArray28);
        double[] doubleArray42 = new double[] { (-1L), 0, 10L };
        double double45 = org.apache.commons.math.stat.StatUtils.max(doubleArray42, 0, 0);
        double double46 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray42);
        double[] doubleArray50 = new double[] { (-1L), 0, 10L };
        double double53 = org.apache.commons.math.stat.StatUtils.max(doubleArray50, 0, 0);
        double double54 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray50);
        double double56 = org.apache.commons.math.stat.StatUtils.variance(doubleArray50, (double) 10);
        double double57 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray42, doubleArray50);
        double double58 = org.apache.commons.math.stat.StatUtils.max(doubleArray50);
        double double59 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray18, doubleArray50);
        double[] doubleArray63 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double64 = org.apache.commons.math.stat.StatUtils.mean(doubleArray63);
        double double66 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray63, (double) 100.0f);
        double double67 = org.apache.commons.math.stat.StatUtils.mean(doubleArray63);
        double double68 = org.apache.commons.math.stat.StatUtils.mean(doubleArray63);
        double double70 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray50, doubleArray63, 101.0d);
        double[] doubleArray74 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double75 = org.apache.commons.math.stat.StatUtils.mean(doubleArray74);
        double double76 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray74);
        double double77 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray74);
        double double78 = org.apache.commons.math.stat.StatUtils.max(doubleArray74);
        double double81 = org.apache.commons.math.stat.StatUtils.sum(doubleArray74, (int) (short) 1, 0);
        double double84 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray74, (int) (short) 0, (int) (byte) 0);
        double double87 = org.apache.commons.math.stat.StatUtils.product(doubleArray74, 0, 0);
        double double89 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray63, doubleArray74, 27.00000000000003d);
        // The following exception was thrown during execution in test generation
        try {
            double double92 = org.apache.commons.math.stat.StatUtils.sum(doubleArray74, 100, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.641588833612779d + "'", double23 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 7.0d + "'", double24 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 7.0d + "'", double29 == 7.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 4.641588833612779d + "'", double30 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.605170185988092d + "'", double31 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4.641588833612779d + "'", double33 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4.605170185988092d + "'", double34 == 4.605170185988092d);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 101.0d + "'", double46 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 101.0d + "'", double54 == 101.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 37.0d + "'", double56 == 37.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 10.0d + "'", double58 == 10.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4.0d + "'", double59 == 4.0d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 7.0d + "'", double64 == 7.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 10.0d + "'", double66 == 10.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 7.0d + "'", double67 == 7.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 7.0d + "'", double68 == 7.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 127.0d + "'", double70 == 127.0d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 7.0d + "'", double75 == 7.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 4.641588833612779d + "'", double76 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 4.605170185988092d + "'", double77 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 10.0d + "'", double78 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertTrue(Double.isNaN(double84));
        org.junit.Assert.assertTrue(Double.isNaN(double87));
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
    }

    @Test
    public void test1558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1558");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, 0.0d);
        double double28 = org.apache.commons.math.stat.StatUtils.product(doubleArray12);
        double double31 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray12, (int) (byte) 0, (int) (short) 0);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray12);
        double double35 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, (int) (short) 0, (int) (short) 1);
        double[] doubleArray39 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double40 = org.apache.commons.math.stat.StatUtils.mean(doubleArray39);
        double double41 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray39);
        double double42 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray39);
        double double43 = org.apache.commons.math.stat.StatUtils.variance(doubleArray39);
        double double44 = org.apache.commons.math.stat.StatUtils.product(doubleArray39);
        double[] doubleArray48 = new double[] { (-1L), 0, 10L };
        double double51 = org.apache.commons.math.stat.StatUtils.max(doubleArray48, 0, 0);
        double double52 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray48);
        double[] doubleArray56 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double57 = org.apache.commons.math.stat.StatUtils.mean(doubleArray56);
        double double58 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray56);
        double double59 = org.apache.commons.math.stat.StatUtils.sum(doubleArray56);
        double double60 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray48, doubleArray56);
        double double61 = org.apache.commons.math.stat.StatUtils.sum(doubleArray48);
        double double64 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray48, (int) (short) 1, (int) (short) 0);
        double double65 = org.apache.commons.math.stat.StatUtils.product(doubleArray48);
        double double66 = org.apache.commons.math.stat.StatUtils.max(doubleArray48);
        double double67 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray39, doubleArray48);
        double double69 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray12, doubleArray39, 12.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double72 = org.apache.commons.math.stat.StatUtils.variance(doubleArray39, (int) (short) 100, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 127.0d + "'", double27 == 127.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-0.0d) + "'", double28 == (-0.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 37.0d + "'", double32 == 37.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-1.0d) + "'", double35 == (-1.0d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 7.0d + "'", double40 == 7.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 4.641588833612779d + "'", double41 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 4.605170185988092d + "'", double42 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 27.0d + "'", double43 == 27.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 100.0d + "'", double44 == 100.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 101.0d + "'", double52 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 7.0d + "'", double57 == 7.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 4.641588833612779d + "'", double58 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 21.0d + "'", double59 == 21.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-4.0d) + "'", double60 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 9.0d + "'", double61 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.0d) + "'", double65 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 10.0d + "'", double66 == 10.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 4.0d + "'", double67 == 4.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 127.0d + "'", double69 == 127.0d);
    }

    @Test
    public void test1559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1559");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        double double29 = org.apache.commons.math.stat.StatUtils.max(doubleArray26, 0, 0);
        double double30 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray26);
        double[] doubleArray34 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double35 = org.apache.commons.math.stat.StatUtils.mean(doubleArray34);
        double double36 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray34);
        double double37 = org.apache.commons.math.stat.StatUtils.sum(doubleArray34);
        double double38 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray26, doubleArray34);
        double double39 = org.apache.commons.math.stat.StatUtils.sum(doubleArray26);
        double double42 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray26, (int) (short) 1, (int) (short) 0);
        double double43 = org.apache.commons.math.stat.StatUtils.product(doubleArray26);
        double double44 = org.apache.commons.math.stat.StatUtils.max(doubleArray26);
        double double45 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray18, doubleArray26);
        double[] doubleArray49 = new double[] { (-1L), 0, 10L };
        double double52 = org.apache.commons.math.stat.StatUtils.max(doubleArray49, 0, 0);
        double double53 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray49);
        double[] doubleArray57 = new double[] { (-1L), 0, 10L };
        double double60 = org.apache.commons.math.stat.StatUtils.max(doubleArray57, 0, 0);
        double double61 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray57);
        double double63 = org.apache.commons.math.stat.StatUtils.variance(doubleArray57, (double) 10);
        double double64 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray49, doubleArray57);
        double double65 = org.apache.commons.math.stat.StatUtils.variance(doubleArray49);
        double double67 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray26, doubleArray49, Double.NaN);
        double double68 = org.apache.commons.math.stat.StatUtils.variance(doubleArray49);
        double double69 = org.apache.commons.math.stat.StatUtils.sum(doubleArray49);
        // The following exception was thrown during execution in test generation
        try {
            double double72 = org.apache.commons.math.stat.StatUtils.max(doubleArray49, (int) (byte) 100, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 101.0d + "'", double30 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 7.0d + "'", double35 == 7.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 4.641588833612779d + "'", double36 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 21.0d + "'", double37 == 21.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-4.0d) + "'", double38 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 9.0d + "'", double39 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-0.0d) + "'", double43 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 10.0d + "'", double44 == 10.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 12.0d + "'", double45 == 12.0d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 101.0d + "'", double53 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 101.0d + "'", double61 == 101.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 37.0d + "'", double63 == 37.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 37.0d + "'", double65 == 37.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 37.0d + "'", double68 == 37.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 9.0d + "'", double69 == 9.0d);
    }

    @Test
    public void test1560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1560");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        java.lang.Class<?> wildcardClass7 = doubleArray3.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 7.0d + "'", double6 == 7.0d);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1561");
        double[] doubleArray5 = new double[] { '#', 10.0f, 'a', 12.0d, 37.0d };
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray5);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray5);
        // The following exception was thrown during execution in test generation
        try {
            double double10 = org.apache.commons.math.stat.StatUtils.variance(doubleArray5, (int) '4', (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[35.0, 10.0, 97.0, 12.0, 37.0]");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 191.0d + "'", double6 == 191.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 12247.0d + "'", double7 == 12247.0d);
    }

    @Test
    public void test1562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1562");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, 27.0d);
        double double16 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) (byte) 10);
        double double17 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double21 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double23 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray11, 12.0d);
        double double24 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double27 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, (int) (short) 0, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 27.0d + "'", double14 == 27.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 27.0d + "'", double16 == 27.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4.605170185988092d + "'", double18 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4.605170185988092d + "'", double19 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 21.0d + "'", double21 == 21.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 4.605170185988092d + "'", double24 == 4.605170185988092d);
    }

    @Test
    public void test1563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1563");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double24 = org.apache.commons.math.stat.StatUtils.min(doubleArray18);
        double double26 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray18, (double) 100L);
        double[] doubleArray30 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double31 = org.apache.commons.math.stat.StatUtils.mean(doubleArray30);
        double double32 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray30);
        double double33 = org.apache.commons.math.stat.StatUtils.sum(doubleArray30);
        double double34 = org.apache.commons.math.stat.StatUtils.sum(doubleArray30);
        double double35 = org.apache.commons.math.stat.StatUtils.sum(doubleArray30);
        double double36 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray18, doubleArray30);
        double double37 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray18);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.641588833612779d + "'", double23 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 7.0d + "'", double31 == 7.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 4.641588833612779d + "'", double32 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 21.0d + "'", double33 == 21.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 21.0d + "'", double34 == 21.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 21.0d + "'", double35 == 21.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.605170185988092d + "'", double37 == 4.605170185988092d);
    }

    @Test
    public void test1564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1564");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double11 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, (int) (short) 0, (int) (byte) 0);
        double double13 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, 10.0d);
        double double14 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 7.0d + "'", double8 == 7.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 100.0d + "'", double14 == 100.0d);
    }

    @Test
    public void test1565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1565");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double17 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double18 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double21 = org.apache.commons.math.stat.StatUtils.min(doubleArray3, (int) (short) 1, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            double double24 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, (int) (short) -1, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
    }

    @Test
    public void test1566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1566");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double19 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, (int) (short) 1, (int) (short) 0);
        double[] doubleArray23 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double24 = org.apache.commons.math.stat.StatUtils.mean(doubleArray23);
        double double25 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray23);
        double double26 = org.apache.commons.math.stat.StatUtils.min(doubleArray23);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 9.0d + "'", double16 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 7.0d + "'", double24 == 7.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + (-4.0d) + "'", double25 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
    }

    @Test
    public void test1567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1567");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double8 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 21.0d);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double13 = org.apache.commons.math.stat.StatUtils.product(doubleArray3, 0, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 37.0d + "'", double8 == 37.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
    }

    @Test
    public void test1568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1568");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray19);
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double28 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double double29 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double30 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray27);
        double double31 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray27);
        double double33 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray27);
        double double34 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double36 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) '#');
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double38 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray42 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double43 = org.apache.commons.math.stat.StatUtils.mean(doubleArray42);
        double double45 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray42, (double) 100.0f);
        double[] doubleArray49 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double50 = org.apache.commons.math.stat.StatUtils.mean(doubleArray49);
        double double51 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray49);
        double double52 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray49);
        double double53 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray42, doubleArray49);
        double[] doubleArray57 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double58 = org.apache.commons.math.stat.StatUtils.mean(doubleArray57);
        double double59 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray57);
        double double60 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray42, doubleArray57);
        double double61 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray57);
        double double62 = org.apache.commons.math.stat.StatUtils.variance(doubleArray57);
        double double63 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray57);
        double double64 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double65 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double66 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        double double67 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.605170185988092d + "'", double22 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 7.0d + "'", double28 == 7.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4.641588833612779d + "'", double29 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.641588833612779d + "'", double31 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 27.0d + "'", double36 == 27.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 21.0d + "'", double38 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 7.0d + "'", double43 == 7.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 10.0d + "'", double45 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 7.0d + "'", double50 == 7.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 4.641588833612779d + "'", double51 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 4.605170185988092d + "'", double52 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 7.0d + "'", double58 == 7.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4.641588833612779d + "'", double59 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 4.641588833612779d + "'", double61 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 27.0d + "'", double62 == 27.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 201.0d + "'", double64 == 201.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 4.641588833612779d + "'", double65 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 100.0d + "'", double66 == 100.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 27.0d + "'", double67 == 27.0d);
    }

    @Test
    public void test1569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1569");
        double[] doubleArray5 = new double[] { '#', 10.0f, 'a', 12.0d, 37.0d };
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray5);
        double double7 = org.apache.commons.math.stat.StatUtils.min(doubleArray5);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray5, (double) 10.0f);
        double double11 = org.apache.commons.math.stat.StatUtils.variance(doubleArray5, 12247.0d);
        double double12 = org.apache.commons.math.stat.StatUtils.product(doubleArray5);
        double[] doubleArray16 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double17 = org.apache.commons.math.stat.StatUtils.mean(doubleArray16);
        double double18 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray16);
        double double19 = org.apache.commons.math.stat.StatUtils.sum(doubleArray16);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray16);
        double[] doubleArray24 = new double[] { (-1L), 0, 10L };
        double double27 = org.apache.commons.math.stat.StatUtils.max(doubleArray24, 0, 0);
        double double28 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray24);
        double[] doubleArray32 = new double[] { (-1L), 0, 10L };
        double double35 = org.apache.commons.math.stat.StatUtils.max(doubleArray32, 0, 0);
        double double36 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray32);
        double double38 = org.apache.commons.math.stat.StatUtils.variance(doubleArray32, (double) 10);
        double double39 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray24, doubleArray32);
        double double40 = org.apache.commons.math.stat.StatUtils.variance(doubleArray24);
        double double42 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray16, doubleArray24, 3.0d);
        double double43 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray24);
        double double44 = org.apache.commons.math.stat.StatUtils.product(doubleArray24);
        double[] doubleArray48 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double49 = org.apache.commons.math.stat.StatUtils.mean(doubleArray48);
        double double50 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray48);
        double double51 = org.apache.commons.math.stat.StatUtils.sum(doubleArray48);
        double double52 = org.apache.commons.math.stat.StatUtils.sum(doubleArray48);
        double double53 = org.apache.commons.math.stat.StatUtils.sum(doubleArray48);
        double double54 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray48);
        double double55 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray24, doubleArray48);
        double double57 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray48, 10.0d);
        double[] doubleArray61 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double62 = org.apache.commons.math.stat.StatUtils.mean(doubleArray61);
        double double64 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray61, (double) 100.0f);
        double double65 = org.apache.commons.math.stat.StatUtils.mean(doubleArray61);
        double[] doubleArray69 = new double[] { (-1L), 0, 10L };
        double double72 = org.apache.commons.math.stat.StatUtils.max(doubleArray69, 0, 0);
        double double73 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray69);
        double[] doubleArray77 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double78 = org.apache.commons.math.stat.StatUtils.mean(doubleArray77);
        double double79 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray77);
        double double80 = org.apache.commons.math.stat.StatUtils.sum(doubleArray77);
        double double81 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray69, doubleArray77);
        double double82 = org.apache.commons.math.stat.StatUtils.sum(doubleArray69);
        double double85 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray69, (int) (short) 1, (int) (short) 0);
        double double86 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray61, doubleArray69);
        double double88 = org.apache.commons.math.stat.StatUtils.variance(doubleArray69, (double) (short) 100);
        double double89 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray48, doubleArray69);
        double double91 = org.apache.commons.math.stat.StatUtils.variance(doubleArray48, (double) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            double double92 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray5, doubleArray48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Input arrays must have the same (positive) length.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[35.0, 10.0, 97.0, 12.0, 37.0]");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 191.0d + "'", double6 == 191.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1237.7d + "'", double9 == 1237.7d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1237.699999988079d + "'", double11 == 1237.699999988079d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.50738E7d + "'", double12 == 1.50738E7d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 7.0d + "'", double17 == 7.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4.641588833612779d + "'", double18 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 21.0d + "'", double19 == 21.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 101.0d + "'", double28 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 101.0d + "'", double36 == 101.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 37.0d + "'", double38 == 37.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 37.0d + "'", double40 == 37.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 127.0d + "'", double42 == 127.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-0.0d) + "'", double44 == (-0.0d));
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 7.0d + "'", double49 == 7.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4.641588833612779d + "'", double50 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 21.0d + "'", double51 == 21.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 21.0d + "'", double52 == 21.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 21.0d + "'", double53 == 21.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 201.0d + "'", double54 == 201.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-12.0d) + "'", double55 == (-12.0d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 7.0d + "'", double62 == 7.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 10.0d + "'", double64 == 10.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 7.0d + "'", double65 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 101.0d + "'", double73 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 7.0d + "'", double78 == 7.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 4.641588833612779d + "'", double79 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 21.0d + "'", double80 == 21.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-4.0d) + "'", double81 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 9.0d + "'", double82 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double85));
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 12.0d + "'", double86 == 12.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 37.0d + "'", double88 == 37.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 12.0d + "'", double89 == 12.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 27.0d + "'", double91 == 27.0d);
    }

    @Test
    public void test1570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1570");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11, (int) (byte) 1, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11, 10, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
    }

    @Test
    public void test1571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1571");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.variance(doubleArray18);
        double[] doubleArray27 = new double[] { (-1L), 0, 10L };
        double double30 = org.apache.commons.math.stat.StatUtils.max(doubleArray27, 0, 0);
        double double31 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray27);
        double[] doubleArray35 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double36 = org.apache.commons.math.stat.StatUtils.mean(doubleArray35);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35);
        double double38 = org.apache.commons.math.stat.StatUtils.sum(doubleArray35);
        double double39 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray27, doubleArray35);
        double double40 = org.apache.commons.math.stat.StatUtils.max(doubleArray27);
        double double42 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray18, doubleArray27, 27.0d);
        double double43 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray27);
        double double44 = org.apache.commons.math.stat.StatUtils.product(doubleArray27);
        double double46 = org.apache.commons.math.stat.StatUtils.variance(doubleArray27, 201.0d);
        double double47 = org.apache.commons.math.stat.StatUtils.min(doubleArray27);
        // The following exception was thrown during execution in test generation
        try {
            double double50 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27, (int) (byte) 10, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 27.0d + "'", double23 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 101.0d + "'", double31 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 7.0d + "'", double36 == 7.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 21.0d + "'", double38 == 21.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-4.0d) + "'", double39 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 10.0d + "'", double40 == 10.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 127.0d + "'", double42 == 127.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-0.0d) + "'", double44 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 37.0d + "'", double46 == 37.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-1.0d) + "'", double47 == (-1.0d));
    }

    @Test
    public void test1572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1572");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 37.0d + "'", double17 == 37.0d);
    }

    @Test
    public void test1573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1573");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double12 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (byte) 100, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 21.0d + "'", double7 == 21.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 201.0d + "'", double9 == 201.0d);
    }

    @Test
    public void test1574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1574");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        double double29 = org.apache.commons.math.stat.StatUtils.max(doubleArray26, 0, 0);
        double double30 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray26);
        double[] doubleArray34 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double35 = org.apache.commons.math.stat.StatUtils.mean(doubleArray34);
        double double36 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray34);
        double double37 = org.apache.commons.math.stat.StatUtils.sum(doubleArray34);
        double double38 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray26, doubleArray34);
        double double39 = org.apache.commons.math.stat.StatUtils.sum(doubleArray26);
        double double42 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray26, (int) (short) 1, (int) (short) 0);
        double double43 = org.apache.commons.math.stat.StatUtils.product(doubleArray26);
        double double44 = org.apache.commons.math.stat.StatUtils.max(doubleArray26);
        double double45 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray18, doubleArray26);
        double[] doubleArray49 = new double[] { (-1L), 0, 10L };
        double double52 = org.apache.commons.math.stat.StatUtils.max(doubleArray49, 0, 0);
        double double53 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray49);
        double[] doubleArray57 = new double[] { (-1L), 0, 10L };
        double double60 = org.apache.commons.math.stat.StatUtils.max(doubleArray57, 0, 0);
        double double61 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray57);
        double double63 = org.apache.commons.math.stat.StatUtils.variance(doubleArray57, (double) 10);
        double double64 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray49, doubleArray57);
        double double65 = org.apache.commons.math.stat.StatUtils.variance(doubleArray49);
        double double67 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray26, doubleArray49, Double.NaN);
        double double68 = org.apache.commons.math.stat.StatUtils.variance(doubleArray49);
        double double69 = org.apache.commons.math.stat.StatUtils.max(doubleArray49);
        double double71 = org.apache.commons.math.stat.StatUtils.variance(doubleArray49, 0.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 101.0d + "'", double30 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 7.0d + "'", double35 == 7.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 4.641588833612779d + "'", double36 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 21.0d + "'", double37 == 21.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-4.0d) + "'", double38 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 9.0d + "'", double39 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-0.0d) + "'", double43 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 10.0d + "'", double44 == 10.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 12.0d + "'", double45 == 12.0d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 101.0d + "'", double53 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 101.0d + "'", double61 == 101.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 37.0d + "'", double63 == 37.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 37.0d + "'", double65 == 37.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 37.0d + "'", double68 == 37.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 10.0d + "'", double69 == 10.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 37.0d + "'", double71 == 37.0d);
    }

    @Test
    public void test1575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1575");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11, (int) (short) 1, 0);
        double double19 = org.apache.commons.math.stat.StatUtils.max(doubleArray11);
        double double20 = org.apache.commons.math.stat.StatUtils.min(doubleArray11);
        double double21 = org.apache.commons.math.stat.StatUtils.max(doubleArray11);
        double double23 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, (double) ' ');
        double double24 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double[] doubleArray28 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double29 = org.apache.commons.math.stat.StatUtils.mean(doubleArray28);
        double double30 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray28);
        double double31 = org.apache.commons.math.stat.StatUtils.sum(doubleArray28);
        double double32 = org.apache.commons.math.stat.StatUtils.max(doubleArray28);
        double[] doubleArray36 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double37 = org.apache.commons.math.stat.StatUtils.mean(doubleArray36);
        double double39 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray36, (double) 100.0f);
        double double40 = org.apache.commons.math.stat.StatUtils.mean(doubleArray36);
        double[] doubleArray44 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double45 = org.apache.commons.math.stat.StatUtils.mean(doubleArray44);
        double double47 = org.apache.commons.math.stat.StatUtils.variance(doubleArray44, 27.0d);
        double double49 = org.apache.commons.math.stat.StatUtils.variance(doubleArray44, (double) (byte) 10);
        double double50 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray36, doubleArray44);
        double double52 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray28, doubleArray36, (double) (short) 1);
        double double55 = org.apache.commons.math.stat.StatUtils.sum(doubleArray36, 0, (int) (byte) 0);
        double double57 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray36, (-0.0d));
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 21.0d + "'", double7 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4.605170185988092d + "'", double14 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 10.0d + "'", double24 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 7.0d + "'", double29 == 7.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 4.641588833612779d + "'", double30 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 21.0d + "'", double31 == 21.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 10.0d + "'", double32 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 7.0d + "'", double37 == 7.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 10.0d + "'", double39 == 10.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 7.0d + "'", double40 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 7.0d + "'", double45 == 7.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 27.0d + "'", double47 == 27.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 27.0d + "'", double49 == 27.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
    }

    @Test
    public void test1576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1576");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) 10);
        double double18 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11, 1, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            double double25 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11, 0, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 37.0d + "'", double17 == 37.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
    }

    @Test
    public void test1577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1577");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double double16 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double[] doubleArray20 = new double[] { (-1L), 0, 10L };
        double double23 = org.apache.commons.math.stat.StatUtils.max(doubleArray20, 0, 0);
        double double24 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray20);
        double[] doubleArray28 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double29 = org.apache.commons.math.stat.StatUtils.mean(doubleArray28);
        double double30 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray28);
        double double31 = org.apache.commons.math.stat.StatUtils.sum(doubleArray28);
        double double32 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray20, doubleArray28);
        double double33 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double36 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray20, (int) (short) 1, (int) (short) 0);
        double double37 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray20);
        double double39 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray20, 191.0d);
        double double41 = org.apache.commons.math.stat.StatUtils.variance(doubleArray20, 27.000000000000007d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 4.641588833612779d + "'", double8 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 7.0d + "'", double16 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 101.0d + "'", double24 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 7.0d + "'", double29 == 7.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 4.641588833612779d + "'", double30 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 21.0d + "'", double31 == 21.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-4.0d) + "'", double32 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 9.0d + "'", double33 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 12.0d + "'", double37 == 12.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 127.0d + "'", double39 == 127.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 36.99999999999977d + "'", double41 == 36.99999999999977d);
    }

    @Test
    public void test1578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1578");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        double double28 = org.apache.commons.math.stat.StatUtils.max(doubleArray25, 0, 0);
        double double29 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray25);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        double double36 = org.apache.commons.math.stat.StatUtils.max(doubleArray33, 0, 0);
        double double37 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray33);
        double double39 = org.apache.commons.math.stat.StatUtils.variance(doubleArray33, (double) 10);
        double double40 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray25, doubleArray33);
        double double42 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray25, 100.0d);
        double double43 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double45 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 3.0d);
        double double46 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double47 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double48 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 101.0d + "'", double29 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 101.0d + "'", double37 == 101.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 37.0d + "'", double39 == 37.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 127.0d + "'", double42 == 127.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4.641588833612779d + "'", double43 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 27.0d + "'", double45 == 27.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 27.0d + "'", double46 == 27.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 201.0d + "'", double47 == 201.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
    }

    @Test
    public void test1579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1579");
        double[] doubleArray0 = null;
        double[] doubleArray4 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double5 = org.apache.commons.math.stat.StatUtils.mean(doubleArray4);
        double double6 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray4);
        double double7 = org.apache.commons.math.stat.StatUtils.sum(doubleArray4);
        double double8 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray4);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (-1L), 0, 10L };
        double double23 = org.apache.commons.math.stat.StatUtils.max(doubleArray20, 0, 0);
        double double24 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray20);
        double double26 = org.apache.commons.math.stat.StatUtils.variance(doubleArray20, (double) 10);
        double double27 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray20);
        double double28 = org.apache.commons.math.stat.StatUtils.variance(doubleArray12);
        double double30 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray4, doubleArray12, 3.0d);
        double double31 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray4);
        double double32 = org.apache.commons.math.stat.StatUtils.max(doubleArray4);
        // The following exception was thrown during execution in test generation
        try {
            double double33 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray0, doubleArray4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 7.0d + "'", double5 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.641588833612779d + "'", double6 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 21.0d + "'", double7 == 21.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 4.641588833612779d + "'", double8 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 101.0d + "'", double24 == 101.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 37.0d + "'", double26 == 37.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 37.0d + "'", double28 == 37.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 127.0d + "'", double30 == 127.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.605170185988092d + "'", double31 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 10.0d + "'", double32 == 10.0d);
    }

    @Test
    public void test1580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1580");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, 50.0d);
        double[] doubleArray14 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray14);
        double double16 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray14);
        double double17 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray14);
        double double18 = org.apache.commons.math.stat.StatUtils.variance(doubleArray14);
        double double19 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray14);
        double double20 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray14);
        double double22 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray14, (double) 10);
        double double23 = org.apache.commons.math.stat.StatUtils.max(doubleArray14);
        // The following exception was thrown during execution in test generation
        try {
            double double26 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray14, (int) (short) -1, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-1.0d) + "'", double8 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.0d + "'", double15 == 7.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.641588833612779d + "'", double16 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 4.605170185988092d + "'", double17 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 27.0d + "'", double18 == 27.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4.641588833612779d + "'", double19 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.605170185988092d + "'", double20 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 127.0d + "'", double22 == 127.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
    }

    @Test
    public void test1581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1581");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, 27.0d);
        double double16 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) (byte) 10);
        double double17 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double21 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, 191.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 27.0d + "'", double14 == 27.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 27.0d + "'", double16 == 27.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4.605170185988092d + "'", double18 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4.641588833612779d + "'", double19 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 27.0d + "'", double21 == 27.0d);
    }

    @Test
    public void test1582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1582");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray19);
        double double25 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, (-0.9199999999999999d));
        double[] doubleArray29 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double30 = org.apache.commons.math.stat.StatUtils.mean(doubleArray29);
        double double31 = org.apache.commons.math.stat.StatUtils.min(doubleArray29);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray29);
        double double34 = org.apache.commons.math.stat.StatUtils.variance(doubleArray29, (double) (short) 1);
        double double37 = org.apache.commons.math.stat.StatUtils.max(doubleArray29, (int) (byte) 1, (int) (byte) 0);
        double double39 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray12, doubleArray29, 4.605170185988092d);
        double[] doubleArray43 = new double[] { (-1L), 0, 10L };
        double double46 = org.apache.commons.math.stat.StatUtils.max(doubleArray43, 0, 0);
        double double47 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray43);
        double double48 = org.apache.commons.math.stat.StatUtils.min(doubleArray43);
        double double49 = org.apache.commons.math.stat.StatUtils.variance(doubleArray43);
        double double51 = org.apache.commons.math.stat.StatUtils.variance(doubleArray43, (double) (byte) 1);
        double double53 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray12, doubleArray43, (-4.0d));
        double double57 = org.apache.commons.math.stat.StatUtils.variance(doubleArray43, (double) 0.0f, 0, 0);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.605170185988092d + "'", double22 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + (-2.220446049250313E-16d) + "'", double25 == (-2.220446049250313E-16d));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 7.0d + "'", double30 == 7.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 27.0d + "'", double34 == 27.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 101.0d + "'", double47 == 101.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + (-1.0d) + "'", double48 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 37.0d + "'", double49 == 37.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 37.0d + "'", double51 == 37.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 127.0d + "'", double53 == 127.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
    }

    @Test
    public void test1583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1583");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double11 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3, (int) (byte) 0, (int) (byte) 1);
        double double12 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 4.641588833612779d + "'", double8 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.000000000000002d + "'", double11 == 10.000000000000002d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.605170185988092d + "'", double12 == 4.605170185988092d);
    }

    @Test
    public void test1584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1584");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double double15 = org.apache.commons.math.stat.StatUtils.min(doubleArray10);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sum(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray19);
        double double24 = org.apache.commons.math.stat.StatUtils.min(doubleArray19);
        double[] doubleArray28 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double29 = org.apache.commons.math.stat.StatUtils.mean(doubleArray28);
        double double31 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray28, (double) 100.0f);
        double[] doubleArray35 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double36 = org.apache.commons.math.stat.StatUtils.mean(doubleArray35);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35);
        double double38 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray35);
        double double39 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray28, doubleArray35);
        double[] doubleArray43 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double44 = org.apache.commons.math.stat.StatUtils.mean(doubleArray43);
        double double45 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray43);
        double double46 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray28, doubleArray43);
        double double47 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray43);
        double double48 = org.apache.commons.math.stat.StatUtils.variance(doubleArray43);
        double double49 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray19, doubleArray43);
        double double50 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray43);
        double double51 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray43);
        double double53 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray10, doubleArray43, (double) 0.0f);
        double double54 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 21.0d + "'", double22 == 21.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 7.0d + "'", double29 == 7.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 10.0d + "'", double31 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 7.0d + "'", double36 == 7.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 4.605170185988092d + "'", double38 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 7.0d + "'", double44 == 7.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 4.641588833612779d + "'", double45 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 4.641588833612779d + "'", double47 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 27.0d + "'", double48 == 27.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4.641588833612779d + "'", double50 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 4.605170185988092d + "'", double51 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 4.641588833612779d + "'", double54 == 4.641588833612779d);
    }

    @Test
    public void test1585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1585");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 1);
        double double11 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double14 = org.apache.commons.math.stat.StatUtils.min(doubleArray3, 100, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 21.0d + "'", double11 == 21.0d);
    }

    @Test
    public void test1586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1586");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, 0.0d);
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double double33 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray31);
        double double34 = org.apache.commons.math.stat.StatUtils.sum(doubleArray31);
        double[] doubleArray38 = new double[] { (-1L), 0, 10L };
        double double41 = org.apache.commons.math.stat.StatUtils.max(doubleArray38, 0, 0);
        double double43 = org.apache.commons.math.stat.StatUtils.variance(doubleArray38, 21.0d);
        double double45 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray31, doubleArray38, 4.605170185988092d);
        double double46 = org.apache.commons.math.stat.StatUtils.mean(doubleArray38);
        double double47 = org.apache.commons.math.stat.StatUtils.max(doubleArray38);
        double double48 = org.apache.commons.math.stat.StatUtils.sum(doubleArray38);
        double[] doubleArray52 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double53 = org.apache.commons.math.stat.StatUtils.mean(doubleArray52);
        double double54 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray52);
        double double55 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray52);
        double double56 = org.apache.commons.math.stat.StatUtils.max(doubleArray52);
        double double59 = org.apache.commons.math.stat.StatUtils.sum(doubleArray52, (int) (short) 1, 0);
        double double62 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray52, (int) (short) 0, (int) (byte) 0);
        double double64 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray38, doubleArray52, (double) '#');
        double double65 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray52);
        double[] doubleArray69 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double70 = org.apache.commons.math.stat.StatUtils.mean(doubleArray69);
        double double71 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray69);
        double double72 = org.apache.commons.math.stat.StatUtils.sum(doubleArray69);
        double double73 = org.apache.commons.math.stat.StatUtils.sum(doubleArray69);
        double double74 = org.apache.commons.math.stat.StatUtils.min(doubleArray69);
        double double75 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray69);
        double double76 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray69);
        // The following exception was thrown during execution in test generation
        try {
            double double79 = org.apache.commons.math.stat.StatUtils.sum(doubleArray69, 100, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 127.0d + "'", double27 == 127.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 7.0d + "'", double32 == 7.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4.641588833612779d + "'", double33 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 21.0d + "'", double34 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 37.0d + "'", double43 == 37.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 127.00000000000001d + "'", double45 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 3.0d + "'", double46 == 3.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 10.0d + "'", double47 == 10.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 9.0d + "'", double48 == 9.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 7.0d + "'", double53 == 7.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 4.641588833612779d + "'", double54 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 4.605170185988092d + "'", double55 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 10.0d + "'", double56 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 127.0d + "'", double64 == 127.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 7.0d + "'", double70 == 7.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 4.641588833612779d + "'", double71 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 21.0d + "'", double72 == 21.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 21.0d + "'", double73 == 21.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 201.0d + "'", double75 == 201.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
    }

    @Test
    public void test1587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1587");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double11 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, 100, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-1.0d) + "'", double8 == (-1.0d));
    }

    @Test
    public void test1588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1588");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double[] doubleArray13 = new double[] { (-1L), 0, 10L };
        double double16 = org.apache.commons.math.stat.StatUtils.max(doubleArray13, 0, 0);
        double double17 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray13);
        double double19 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13, (double) 10);
        double[] doubleArray23 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double24 = org.apache.commons.math.stat.StatUtils.mean(doubleArray23);
        double double25 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray23);
        double double26 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray23);
        double double27 = org.apache.commons.math.stat.StatUtils.variance(doubleArray23);
        double double28 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray13, doubleArray23);
        double[] doubleArray32 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double33 = org.apache.commons.math.stat.StatUtils.mean(doubleArray32);
        double double34 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray13, doubleArray32);
        double[] doubleArray38 = new double[] { (-1L), 0, 10L };
        double double41 = org.apache.commons.math.stat.StatUtils.max(doubleArray38, 0, 0);
        double double42 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray38);
        double[] doubleArray46 = new double[] { (-1L), 0, 10L };
        double double49 = org.apache.commons.math.stat.StatUtils.max(doubleArray46, 0, 0);
        double double50 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray46);
        double double52 = org.apache.commons.math.stat.StatUtils.variance(doubleArray46, (double) 10);
        double double53 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray38, doubleArray46);
        double double54 = org.apache.commons.math.stat.StatUtils.max(doubleArray46);
        double double55 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray46);
        double double56 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray13, doubleArray46);
        double[] doubleArray60 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double61 = org.apache.commons.math.stat.StatUtils.mean(doubleArray60);
        double double63 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray60, (double) 100.0f);
        double[] doubleArray67 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double68 = org.apache.commons.math.stat.StatUtils.mean(doubleArray67);
        double double69 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray67);
        double double70 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray67);
        double double71 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray60, doubleArray67);
        double[] doubleArray75 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double76 = org.apache.commons.math.stat.StatUtils.mean(doubleArray75);
        double double77 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray75);
        double double78 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray60, doubleArray75);
        double double79 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray75);
        double double80 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray13, doubleArray75);
        double double81 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray75);
        double double83 = org.apache.commons.math.stat.StatUtils.variance(doubleArray75, (double) (short) -1);
        double double84 = org.apache.commons.math.stat.StatUtils.product(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 4.641588833612779d + "'", double8 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 4.605170185988092d + "'", double9 == 4.605170185988092d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 101.0d + "'", double17 == 101.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 37.0d + "'", double19 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 7.0d + "'", double24 == 7.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 4.641588833612779d + "'", double25 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 4.605170185988092d + "'", double26 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 27.0d + "'", double27 == 27.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-4.0d) + "'", double28 == (-4.0d));
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 7.0d + "'", double33 == 7.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-12.0d) + "'", double34 == (-12.0d));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 101.0d + "'", double42 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 101.0d + "'", double50 == 101.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 37.0d + "'", double52 == 37.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 10.0d + "'", double54 == 10.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 101.0d + "'", double55 == 101.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 7.0d + "'", double61 == 7.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 10.0d + "'", double63 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 7.0d + "'", double68 == 7.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 4.641588833612779d + "'", double69 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 4.605170185988092d + "'", double70 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 7.0d + "'", double76 == 7.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 4.641588833612779d + "'", double77 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 4.641588833612779d + "'", double79 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + (-12.0d) + "'", double80 == (-12.0d));
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 27.0d + "'", double83 == 27.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 100.0d + "'", double84 == 100.0d);
    }

    @Test
    public void test1589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1589");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double double15 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13);
        double double16 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray13);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double18 = org.apache.commons.math.stat.StatUtils.min(doubleArray13);
        double[] doubleArray22 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double23 = org.apache.commons.math.stat.StatUtils.mean(doubleArray22);
        double double25 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray22, (double) 100.0f);
        double[] doubleArray29 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double30 = org.apache.commons.math.stat.StatUtils.mean(doubleArray29);
        double double31 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray29);
        double double32 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray29);
        double double33 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray22, doubleArray29);
        double double35 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray13, doubleArray22, (-0.9199999999999999d));
        double double36 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray22);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray22);
        double double39 = org.apache.commons.math.stat.StatUtils.variance(doubleArray22, 10.000000000000002d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 4.641588833612779d + "'", double8 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 4.605170185988092d + "'", double9 == 4.605170185988092d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4.641588833612779d + "'", double15 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.605170185988092d + "'", double16 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 27.0d + "'", double17 == 27.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 7.0d + "'", double23 == 7.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 10.0d + "'", double25 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 7.0d + "'", double30 == 7.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.641588833612779d + "'", double31 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 4.605170185988092d + "'", double32 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-2.220446049250313E-16d) + "'", double35 == (-2.220446049250313E-16d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 27.0d + "'", double39 == 27.0d);
    }

    @Test
    public void test1590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1590");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, 0.0d);
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double double33 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray31);
        double double34 = org.apache.commons.math.stat.StatUtils.sum(doubleArray31);
        double[] doubleArray38 = new double[] { (-1L), 0, 10L };
        double double41 = org.apache.commons.math.stat.StatUtils.max(doubleArray38, 0, 0);
        double double43 = org.apache.commons.math.stat.StatUtils.variance(doubleArray38, 21.0d);
        double double45 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray31, doubleArray38, 4.605170185988092d);
        double double46 = org.apache.commons.math.stat.StatUtils.mean(doubleArray38);
        double double47 = org.apache.commons.math.stat.StatUtils.max(doubleArray38);
        double double48 = org.apache.commons.math.stat.StatUtils.sum(doubleArray38);
        double[] doubleArray52 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double53 = org.apache.commons.math.stat.StatUtils.mean(doubleArray52);
        double double54 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray52);
        double double55 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray52);
        double double56 = org.apache.commons.math.stat.StatUtils.max(doubleArray52);
        double double59 = org.apache.commons.math.stat.StatUtils.sum(doubleArray52, (int) (short) 1, 0);
        double double62 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray52, (int) (short) 0, (int) (byte) 0);
        double double64 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray38, doubleArray52, (double) '#');
        double double65 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray52);
        double[] doubleArray69 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double70 = org.apache.commons.math.stat.StatUtils.mean(doubleArray69);
        double double71 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray69);
        double double72 = org.apache.commons.math.stat.StatUtils.sum(doubleArray69);
        double double73 = org.apache.commons.math.stat.StatUtils.sum(doubleArray69);
        double double74 = org.apache.commons.math.stat.StatUtils.min(doubleArray69);
        double double75 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray69);
        double double76 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray69);
        double double77 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray69);
        double double78 = org.apache.commons.math.stat.StatUtils.mean(doubleArray69);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 127.0d + "'", double27 == 127.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 7.0d + "'", double32 == 7.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4.641588833612779d + "'", double33 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 21.0d + "'", double34 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 37.0d + "'", double43 == 37.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 127.00000000000001d + "'", double45 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 3.0d + "'", double46 == 3.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 10.0d + "'", double47 == 10.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 9.0d + "'", double48 == 9.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 7.0d + "'", double53 == 7.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 4.641588833612779d + "'", double54 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 4.605170185988092d + "'", double55 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 10.0d + "'", double56 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 127.0d + "'", double64 == 127.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 7.0d + "'", double70 == 7.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 4.641588833612779d + "'", double71 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 21.0d + "'", double72 == 21.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 21.0d + "'", double73 == 21.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 201.0d + "'", double75 == 201.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 4.605170185988092d + "'", double77 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 7.0d + "'", double78 == 7.0d);
    }

    @Test
    public void test1591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1591");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10);
        double double10 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        double double11 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double13 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) (-1));
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.sum(doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double24 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray18, (-0.9199999999999999d));
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-0.0d) + "'", double10 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 101.0d + "'", double11 == 101.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 37.0d + "'", double13 == 37.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 21.0d + "'", double21 == 21.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 127.0d + "'", double24 == 127.0d);
    }

    @Test
    public void test1592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1592");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double[] doubleArray19 = new double[] { (-1L), 0, 10L };
        double double22 = org.apache.commons.math.stat.StatUtils.max(doubleArray19, 0, 0);
        double double23 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray19);
        double double25 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) 10);
        double double26 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11);
        double double29 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, 3.0d);
        double double30 = org.apache.commons.math.stat.StatUtils.min(doubleArray11);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, 0.0d);
        double double33 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double34 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double35 = org.apache.commons.math.stat.StatUtils.product(doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 4.641588833612779d + "'", double7 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 101.0d + "'", double23 == 101.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 37.0d + "'", double25 == 37.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 37.0d + "'", double27 == 37.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 127.0d + "'", double29 == 127.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-1.0d) + "'", double30 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 37.0d + "'", double32 == 37.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 3.0d + "'", double33 == 3.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 101.0d + "'", double34 == 101.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.0d) + "'", double35 == (-0.0d));
    }

    @Test
    public void test1593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1593");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double[] doubleArray19 = new double[] { (-1L), 0, 10L };
        double double22 = org.apache.commons.math.stat.StatUtils.max(doubleArray19, 0, 0);
        double double23 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray19);
        double double25 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) 10);
        double double26 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11);
        double double29 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, 3.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double32 = org.apache.commons.math.stat.StatUtils.product(doubleArray11, (int) (byte) 1, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 4.641588833612779d + "'", double7 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 101.0d + "'", double23 == 101.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 37.0d + "'", double25 == 37.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 37.0d + "'", double27 == 37.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 127.0d + "'", double29 == 127.0d);
    }

    @Test
    public void test1594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1594");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double11 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: invalid quantile value: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 21.0d + "'", double7 == 21.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 4.605170185988092d + "'", double9 == 4.605170185988092d);
    }

    @Test
    public void test1595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1595");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double11 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3, (int) (byte) 0, (int) (byte) 1);
        double double13 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 1.0d);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 1L);
        java.lang.Class<?> wildcardClass16 = doubleArray3.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 4.641588833612779d + "'", double8 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.000000000000002d + "'", double11 == 10.000000000000002d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 27.0d + "'", double13 == 27.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 27.0d + "'", double15 == 27.0d);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1596");
        double[] doubleArray0 = null;
        double[] doubleArray4 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double5 = org.apache.commons.math.stat.StatUtils.mean(doubleArray4);
        double double6 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray4);
        double double7 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray4);
        double double8 = org.apache.commons.math.stat.StatUtils.max(doubleArray4);
        double double9 = org.apache.commons.math.stat.StatUtils.sum(doubleArray4);
        double[] doubleArray13 = new double[] { (-1L), 0, 10L };
        double double16 = org.apache.commons.math.stat.StatUtils.max(doubleArray13, 0, 0);
        double double17 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray13);
        double[] doubleArray21 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double22 = org.apache.commons.math.stat.StatUtils.mean(doubleArray21);
        double double23 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray21);
        double double24 = org.apache.commons.math.stat.StatUtils.sum(doubleArray21);
        double double25 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray13, doubleArray21);
        double double26 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray4, doubleArray21);
        double double27 = org.apache.commons.math.stat.StatUtils.min(doubleArray21);
        double double28 = org.apache.commons.math.stat.StatUtils.variance(doubleArray21);
        // The following exception was thrown during execution in test generation
        try {
            double double30 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray0, doubleArray21, (double) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 7.0d + "'", double5 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.641588833612779d + "'", double6 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 4.605170185988092d + "'", double7 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 21.0d + "'", double9 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 101.0d + "'", double17 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 7.0d + "'", double22 == 7.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.641588833612779d + "'", double23 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 21.0d + "'", double24 == 21.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + (-4.0d) + "'", double25 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 27.0d + "'", double28 == 27.0d);
    }

    @Test
    public void test1597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1597");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double11 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, (int) (short) 0, (int) (byte) 0);
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray16 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double17 = org.apache.commons.math.stat.StatUtils.mean(doubleArray16);
        double double19 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray16, (double) 100.0f);
        double[] doubleArray23 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double24 = org.apache.commons.math.stat.StatUtils.mean(doubleArray23);
        double double25 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray23);
        double double26 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray23);
        double double27 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray16, doubleArray23);
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double double33 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray31);
        double double34 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray16, doubleArray31);
        double double35 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray31);
        double double36 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray31);
        double double37 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double[] doubleArray41 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double42 = org.apache.commons.math.stat.StatUtils.mean(doubleArray41);
        double double43 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray41);
        double double44 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray41);
        double double45 = org.apache.commons.math.stat.StatUtils.variance(doubleArray41);
        double double46 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray41);
        double double47 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray41);
        double double50 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray41, (int) (short) 1, 0);
        double double51 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray31, doubleArray41);
        double double52 = org.apache.commons.math.stat.StatUtils.min(doubleArray41);
        double double53 = org.apache.commons.math.stat.StatUtils.mean(doubleArray41);
        double double55 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray41, (double) 10L);
        double double56 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray41);
        double double57 = org.apache.commons.math.stat.StatUtils.max(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 7.0d + "'", double8 == 7.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 7.0d + "'", double17 == 7.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 7.0d + "'", double24 == 7.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 4.641588833612779d + "'", double25 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 4.605170185988092d + "'", double26 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 7.0d + "'", double32 == 7.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4.641588833612779d + "'", double33 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 4.641588833612779d + "'", double35 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 4.641588833612779d + "'", double36 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 7.0d + "'", double37 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 7.0d + "'", double42 == 7.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4.641588833612779d + "'", double43 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 4.605170185988092d + "'", double44 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 27.0d + "'", double45 == 27.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 4.641588833612779d + "'", double46 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 4.605170185988092d + "'", double47 == 4.605170185988092d);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 7.0d + "'", double53 == 7.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 10.0d + "'", double57 == 10.0d);
    }

    @Test
    public void test1598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1598");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) 10);
        double double18 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11, 1, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            double double26 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, 37.000000000000114d, (int) 'a', 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 37.0d + "'", double17 == 37.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
    }

    @Test
    public void test1599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1599");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, 27.0d);
        double double16 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) (byte) 10);
        double double17 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray22 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double23 = org.apache.commons.math.stat.StatUtils.mean(doubleArray22);
        double double24 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray22);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray22);
        double double26 = org.apache.commons.math.stat.StatUtils.max(doubleArray22);
        double[] doubleArray30 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double31 = org.apache.commons.math.stat.StatUtils.mean(doubleArray30);
        double double33 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray30, (double) 100.0f);
        double double34 = org.apache.commons.math.stat.StatUtils.mean(doubleArray30);
        double[] doubleArray38 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double39 = org.apache.commons.math.stat.StatUtils.mean(doubleArray38);
        double double41 = org.apache.commons.math.stat.StatUtils.variance(doubleArray38, 27.0d);
        double double43 = org.apache.commons.math.stat.StatUtils.variance(doubleArray38, (double) (byte) 10);
        double double44 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray30, doubleArray38);
        double double46 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray22, doubleArray30, (double) (short) 1);
        double[] doubleArray50 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double51 = org.apache.commons.math.stat.StatUtils.mean(doubleArray50);
        double double52 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray50);
        double double53 = org.apache.commons.math.stat.StatUtils.sum(doubleArray50);
        double double54 = org.apache.commons.math.stat.StatUtils.max(doubleArray50);
        double double56 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray50, (double) (byte) 100);
        double[] doubleArray60 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double61 = org.apache.commons.math.stat.StatUtils.mean(doubleArray60);
        double double62 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray60);
        double double63 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray60);
        double double64 = org.apache.commons.math.stat.StatUtils.variance(doubleArray60);
        double double66 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray50, doubleArray60, 37.0d);
        double double67 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray30, doubleArray60);
        double double68 = org.apache.commons.math.stat.StatUtils.sum(doubleArray60);
        double double69 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray60);
        double double72 = org.apache.commons.math.stat.StatUtils.product(doubleArray60, 1, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            double double75 = org.apache.commons.math.stat.StatUtils.sum(doubleArray60, (int) (byte) 10, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 27.0d + "'", double14 == 27.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 27.0d + "'", double16 == 27.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 21.0d + "'", double18 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 7.0d + "'", double23 == 7.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 4.641588833612779d + "'", double24 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 21.0d + "'", double25 == 21.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 7.0d + "'", double31 == 7.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 10.0d + "'", double33 == 10.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 7.0d + "'", double34 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 7.0d + "'", double39 == 7.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 27.0d + "'", double41 == 27.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 27.0d + "'", double43 == 27.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 7.0d + "'", double51 == 7.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 4.641588833612779d + "'", double52 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 21.0d + "'", double53 == 21.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 10.0d + "'", double54 == 10.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 10.0d + "'", double56 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 7.0d + "'", double61 == 7.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 4.641588833612779d + "'", double62 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 4.605170185988092d + "'", double63 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 27.0d + "'", double64 == 27.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 21.0d + "'", double68 == 21.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 10.0d + "'", double72 == 10.0d);
    }

    @Test
    public void test1600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1600");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10);
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double double15 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13);
        double double16 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray13);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double18 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray13);
        double double19 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13);
        double double20 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray13);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13);
        double double22 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4.641588833612779d + "'", double15 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.605170185988092d + "'", double16 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 27.0d + "'", double17 == 27.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-4.0d) + "'", double18 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4.641588833612779d + "'", double19 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 201.0d + "'", double20 == 201.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 7.0d + "'", double22 == 7.0d);
    }

    @Test
    public void test1601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1601");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, 0.0d);
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double double33 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray31);
        double double34 = org.apache.commons.math.stat.StatUtils.sum(doubleArray31);
        double[] doubleArray38 = new double[] { (-1L), 0, 10L };
        double double41 = org.apache.commons.math.stat.StatUtils.max(doubleArray38, 0, 0);
        double double43 = org.apache.commons.math.stat.StatUtils.variance(doubleArray38, 21.0d);
        double double45 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray31, doubleArray38, 4.605170185988092d);
        double double46 = org.apache.commons.math.stat.StatUtils.mean(doubleArray38);
        double double47 = org.apache.commons.math.stat.StatUtils.max(doubleArray38);
        double double48 = org.apache.commons.math.stat.StatUtils.sum(doubleArray38);
        double[] doubleArray52 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double53 = org.apache.commons.math.stat.StatUtils.mean(doubleArray52);
        double double54 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray52);
        double double55 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray52);
        double double56 = org.apache.commons.math.stat.StatUtils.max(doubleArray52);
        double double59 = org.apache.commons.math.stat.StatUtils.sum(doubleArray52, (int) (short) 1, 0);
        double double62 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray52, (int) (short) 0, (int) (byte) 0);
        double double64 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray38, doubleArray52, (double) '#');
        double double65 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray52);
        double[] doubleArray69 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double70 = org.apache.commons.math.stat.StatUtils.mean(doubleArray69);
        double double72 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray69, (double) 100.0f);
        double[] doubleArray76 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double77 = org.apache.commons.math.stat.StatUtils.mean(doubleArray76);
        double double78 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray76);
        double double79 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray76);
        double double80 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray69, doubleArray76);
        double[] doubleArray84 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double85 = org.apache.commons.math.stat.StatUtils.mean(doubleArray84);
        double double86 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray84);
        double double87 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray69, doubleArray84);
        double double88 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray84);
        double double89 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray52, doubleArray84);
        double double92 = org.apache.commons.math.stat.StatUtils.min(doubleArray84, 1, 1);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 127.0d + "'", double27 == 127.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 7.0d + "'", double32 == 7.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4.641588833612779d + "'", double33 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 21.0d + "'", double34 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 37.0d + "'", double43 == 37.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 127.00000000000001d + "'", double45 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 3.0d + "'", double46 == 3.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 10.0d + "'", double47 == 10.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 9.0d + "'", double48 == 9.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 7.0d + "'", double53 == 7.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 4.641588833612779d + "'", double54 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 4.605170185988092d + "'", double55 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 10.0d + "'", double56 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 127.0d + "'", double64 == 127.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 7.0d + "'", double70 == 7.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 10.0d + "'", double72 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 7.0d + "'", double77 == 7.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 4.641588833612779d + "'", double78 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 4.605170185988092d + "'", double79 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 7.0d + "'", double85 == 7.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 4.641588833612779d + "'", double86 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 4.641588833612779d + "'", double88 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 10.0d + "'", double92 == 10.0d);
    }

    @Test
    public void test1602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1602");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double double16 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.variance(doubleArray20, 27.0d);
        double double25 = org.apache.commons.math.stat.StatUtils.variance(doubleArray20, (double) (byte) 10);
        double double26 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray20);
        double double27 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray20);
        double[] doubleArray31 = new double[] { (-1L), 0, 10L };
        double double34 = org.apache.commons.math.stat.StatUtils.max(doubleArray31, 0, 0);
        double double36 = org.apache.commons.math.stat.StatUtils.variance(doubleArray31, 21.0d);
        double double37 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray20, doubleArray31);
        double double38 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray20);
        double double40 = org.apache.commons.math.stat.StatUtils.variance(doubleArray20, 21.0d);
        double double42 = org.apache.commons.math.stat.StatUtils.variance(doubleArray20, 2.302585092994046d);
        double double43 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double44 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray20);
        // The following exception was thrown during execution in test generation
        try {
            double double47 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20, 0, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 4.641588833612779d + "'", double8 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 7.0d + "'", double16 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 27.0d + "'", double23 == 27.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 27.0d + "'", double25 == 27.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 4.605170185988092d + "'", double27 == 4.605170185988092d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 37.0d + "'", double36 == 37.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 12.0d + "'", double37 == 12.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 27.0d + "'", double40 == 27.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 27.0d + "'", double42 == 27.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4.641588833612779d + "'", double43 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 4.605170185988092d + "'", double44 == 4.605170185988092d);
    }

    @Test
    public void test1603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1603");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double[] doubleArray14 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray14);
        double double17 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray14, (double) 100.0f);
        double double19 = org.apache.commons.math.stat.StatUtils.variance(doubleArray14, 4.605170185988092d);
        double double20 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray14);
        double double21 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray14);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray14);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-1.0d) + "'", double8 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 37.0d + "'", double10 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.0d + "'", double15 == 7.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 27.000000000000004d + "'", double19 == 27.000000000000004d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.605170185988092d + "'", double20 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-12.0d) + "'", double21 == (-12.0d));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.605170185988092d + "'", double22 == 4.605170185988092d);
    }

    @Test
    public void test1604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1604");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double12 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, Double.NaN);
        // The following exception was thrown during execution in test generation
        try {
            double double15 = org.apache.commons.math.stat.StatUtils.product(doubleArray3, (int) 'a', (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 21.0d + "'", double7 == 21.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 21.0d + "'", double8 == 21.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 201.0d + "'", double9 == 201.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 27.0d + "'", double10 == 27.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
    }

    @Test
    public void test1605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1605");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (-1L), 0, 10L };
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray10, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, 21.0d);
        double double17 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, 4.605170185988092d);
        double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double19 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double20 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray10);
        // The following exception was thrown during execution in test generation
        try {
            double double23 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10, 100, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 37.0d + "'", double15 == 37.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 127.00000000000001d + "'", double17 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 3.0d + "'", double18 == 3.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 101.0d + "'", double20 == 101.0d);
    }

    @Test
    public void test1606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1606");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, 27.0d);
        double double16 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) (byte) 10);
        double double17 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        double[] doubleArray22 = new double[] { (-1L), 0, 10L };
        double double25 = org.apache.commons.math.stat.StatUtils.max(doubleArray22, 0, 0);
        double double27 = org.apache.commons.math.stat.StatUtils.variance(doubleArray22, 21.0d);
        double double28 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray22);
        double[] doubleArray32 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double33 = org.apache.commons.math.stat.StatUtils.mean(doubleArray32);
        double double34 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray32);
        double double35 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray32);
        double double36 = org.apache.commons.math.stat.StatUtils.sum(doubleArray32);
        double double37 = org.apache.commons.math.stat.StatUtils.max(doubleArray32);
        double double39 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray11, doubleArray32, 3.0d);
        double double41 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray32, 27.000000000000004d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 27.0d + "'", double14 == 27.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 27.0d + "'", double16 == 27.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4.605170185988092d + "'", double18 == 4.605170185988092d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 37.0d + "'", double27 == 37.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 12.0d + "'", double28 == 12.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 7.0d + "'", double33 == 7.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4.641588833612779d + "'", double34 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 4.605170185988092d + "'", double35 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 21.0d + "'", double36 == 21.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 10.0d + "'", double37 == 10.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.7200000000000006d + "'", double41 == 1.7200000000000006d);
    }

    @Test
    public void test1607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1607");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray11, (double) 100.0f);
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, 27.0d);
        double double24 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) (byte) 10);
        double double25 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, (double) (short) 1);
        double double28 = org.apache.commons.math.stat.StatUtils.min(doubleArray11);
        double[] doubleArray32 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double33 = org.apache.commons.math.stat.StatUtils.mean(doubleArray32);
        double double34 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray32);
        double double35 = org.apache.commons.math.stat.StatUtils.sum(doubleArray32);
        double double36 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray32);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        double double43 = org.apache.commons.math.stat.StatUtils.max(doubleArray40, 0, 0);
        double double44 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray40);
        double[] doubleArray48 = new double[] { (-1L), 0, 10L };
        double double51 = org.apache.commons.math.stat.StatUtils.max(doubleArray48, 0, 0);
        double double52 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray48);
        double double54 = org.apache.commons.math.stat.StatUtils.variance(doubleArray48, (double) 10);
        double double55 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray40, doubleArray48);
        double double56 = org.apache.commons.math.stat.StatUtils.variance(doubleArray40);
        double double58 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray32, doubleArray40, 3.0d);
        double double59 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray32);
        double double60 = org.apache.commons.math.stat.StatUtils.max(doubleArray32);
        double double61 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray32);
        double double62 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray32);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.0d + "'", double15 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 27.0d + "'", double22 == 27.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 27.0d + "'", double24 == 27.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 7.0d + "'", double33 == 7.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4.641588833612779d + "'", double34 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 21.0d + "'", double35 == 21.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 4.641588833612779d + "'", double36 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 101.0d + "'", double44 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 101.0d + "'", double52 == 101.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 37.0d + "'", double54 == 37.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 37.0d + "'", double56 == 37.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 127.0d + "'", double58 == 127.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4.605170185988092d + "'", double59 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 10.0d + "'", double60 == 10.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 201.0d + "'", double62 == 201.0d);
    }

    @Test
    public void test1608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1608");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray11, (double) 100.0f);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray18);
        double[] doubleArray26 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double27 = org.apache.commons.math.stat.StatUtils.mean(doubleArray26);
        double double28 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray26);
        double double29 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray11, doubleArray26);
        double double30 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray26);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 27.000000000000007d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.605170185988092d + "'", double21 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 7.0d + "'", double27 == 7.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 4.641588833612779d + "'", double28 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-12.0d) + "'", double30 == (-12.0d));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 36.99999999999977d + "'", double32 == 36.99999999999977d);
    }

    @Test
    public void test1609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1609");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray19);
        double double25 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, (-0.9199999999999999d));
        double[] doubleArray29 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double30 = org.apache.commons.math.stat.StatUtils.mean(doubleArray29);
        double double32 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray29, (double) 100.0f);
        double double33 = org.apache.commons.math.stat.StatUtils.mean(doubleArray29);
        double[] doubleArray37 = new double[] { (-1L), 0, 10L };
        double double40 = org.apache.commons.math.stat.StatUtils.max(doubleArray37, 0, 0);
        double double41 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray37);
        double[] doubleArray45 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double46 = org.apache.commons.math.stat.StatUtils.mean(doubleArray45);
        double double47 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray45);
        double double48 = org.apache.commons.math.stat.StatUtils.sum(doubleArray45);
        double double49 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray37, doubleArray45);
        double double50 = org.apache.commons.math.stat.StatUtils.sum(doubleArray37);
        double double53 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray37, (int) (short) 1, (int) (short) 0);
        double double54 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray29, doubleArray37);
        double double56 = org.apache.commons.math.stat.StatUtils.variance(doubleArray29, 201.0d);
        double double57 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray29);
        // The following exception was thrown during execution in test generation
        try {
            double double61 = org.apache.commons.math.stat.StatUtils.variance(doubleArray29, (double) (byte) -1, (int) ' ', (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.605170185988092d + "'", double22 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + (-2.220446049250313E-16d) + "'", double25 == (-2.220446049250313E-16d));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 7.0d + "'", double30 == 7.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 10.0d + "'", double32 == 10.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 7.0d + "'", double33 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 101.0d + "'", double41 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 7.0d + "'", double46 == 7.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 4.641588833612779d + "'", double47 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 21.0d + "'", double48 == 21.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-4.0d) + "'", double49 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 9.0d + "'", double50 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 12.0d + "'", double54 == 12.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 27.0d + "'", double56 == 27.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
    }

    @Test
    public void test1610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1610");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        double double29 = org.apache.commons.math.stat.StatUtils.max(doubleArray26, 0, 0);
        double double30 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray26);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        double double37 = org.apache.commons.math.stat.StatUtils.max(doubleArray34, 0, 0);
        double double38 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray34);
        double double40 = org.apache.commons.math.stat.StatUtils.variance(doubleArray34, (double) 10);
        double double41 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray26, doubleArray34);
        double double42 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray34);
        double double43 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray18, doubleArray34);
        double[] doubleArray47 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double48 = org.apache.commons.math.stat.StatUtils.mean(doubleArray47);
        double double50 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray47, (double) 100.0f);
        double double51 = org.apache.commons.math.stat.StatUtils.variance(doubleArray47);
        double double52 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray18, doubleArray47);
        double double53 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray47);
        double double55 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray47, (double) (byte) 100);
        double double56 = org.apache.commons.math.stat.StatUtils.variance(doubleArray47);
        double double57 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray47);
        double double58 = org.apache.commons.math.stat.StatUtils.min(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 7.0d + "'", double22 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 101.0d + "'", double30 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 101.0d + "'", double38 == 101.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 37.0d + "'", double40 == 37.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 101.0d + "'", double42 == 101.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4.0d + "'", double43 == 4.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 7.0d + "'", double48 == 7.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 27.0d + "'", double51 == 27.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 4.641588833612779d + "'", double53 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 10.0d + "'", double55 == 10.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 27.0d + "'", double56 == 27.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 4.605170185988092d + "'", double57 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
    }

    @Test
    public void test1611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1611");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double[] doubleArray19 = new double[] { (-1L), 0, 10L };
        double double22 = org.apache.commons.math.stat.StatUtils.max(doubleArray19, 0, 0);
        double double23 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray19);
        double double25 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) 10);
        double double26 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11);
        double double29 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, 3.0d);
        double double30 = org.apache.commons.math.stat.StatUtils.min(doubleArray11);
        double[] doubleArray34 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double35 = org.apache.commons.math.stat.StatUtils.mean(doubleArray34);
        double double37 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray34, (double) 100.0f);
        double[] doubleArray41 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double42 = org.apache.commons.math.stat.StatUtils.mean(doubleArray41);
        double double43 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray41);
        double double44 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray41);
        double double45 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray34, doubleArray41);
        double[] doubleArray49 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double50 = org.apache.commons.math.stat.StatUtils.mean(doubleArray49);
        double double51 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray49);
        double double52 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray34, doubleArray49);
        double double53 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray49);
        double double54 = org.apache.commons.math.stat.StatUtils.variance(doubleArray49);
        double[] doubleArray58 = new double[] { (-1L), 0, 10L };
        double double61 = org.apache.commons.math.stat.StatUtils.max(doubleArray58, 0, 0);
        double double62 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray58);
        double[] doubleArray66 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double67 = org.apache.commons.math.stat.StatUtils.mean(doubleArray66);
        double double68 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray66);
        double double69 = org.apache.commons.math.stat.StatUtils.sum(doubleArray66);
        double double70 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray58, doubleArray66);
        double double71 = org.apache.commons.math.stat.StatUtils.max(doubleArray58);
        double double73 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray49, doubleArray58, 27.0d);
        double double75 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray11, doubleArray58, (double) 1.0f);
        double[] doubleArray79 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double80 = org.apache.commons.math.stat.StatUtils.mean(doubleArray79);
        double double81 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray79);
        double double82 = org.apache.commons.math.stat.StatUtils.sum(doubleArray79);
        double[] doubleArray86 = new double[] { (-1L), 0, 10L };
        double double89 = org.apache.commons.math.stat.StatUtils.max(doubleArray86, 0, 0);
        double double91 = org.apache.commons.math.stat.StatUtils.variance(doubleArray86, 21.0d);
        double double93 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray79, doubleArray86, 4.605170185988092d);
        double double95 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray58, doubleArray79, 27.000000000000007d);
        double double96 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 4.641588833612779d + "'", double7 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 101.0d + "'", double23 == 101.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 37.0d + "'", double25 == 37.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 37.0d + "'", double27 == 37.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 127.0d + "'", double29 == 127.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-1.0d) + "'", double30 == (-1.0d));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 7.0d + "'", double35 == 7.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 10.0d + "'", double37 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 7.0d + "'", double42 == 7.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4.641588833612779d + "'", double43 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 4.605170185988092d + "'", double44 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 7.0d + "'", double50 == 7.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 4.641588833612779d + "'", double51 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 4.641588833612779d + "'", double53 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 27.0d + "'", double54 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 101.0d + "'", double62 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 7.0d + "'", double67 == 7.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 4.641588833612779d + "'", double68 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 21.0d + "'", double69 == 21.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-4.0d) + "'", double70 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 10.0d + "'", double71 == 10.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 127.0d + "'", double73 == 127.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 7.0d + "'", double80 == 7.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 4.641588833612779d + "'", double81 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 21.0d + "'", double82 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double89));
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 37.0d + "'", double91 == 37.0d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 127.00000000000001d + "'", double93 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 126.99999999999977d + "'", double95 == 126.99999999999977d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 4.605170185988092d + "'", double96 == 4.605170185988092d);
    }

    @Test
    public void test1612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1612");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double[] doubleArray27 = new double[] { (-1L), 0, 10L };
        double double30 = org.apache.commons.math.stat.StatUtils.max(doubleArray27, 0, 0);
        double double31 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray27);
        double[] doubleArray35 = new double[] { (-1L), 0, 10L };
        double double38 = org.apache.commons.math.stat.StatUtils.max(doubleArray35, 0, 0);
        double double39 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray35);
        double double41 = org.apache.commons.math.stat.StatUtils.variance(doubleArray35, (double) 10);
        double double42 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray27, doubleArray35);
        double double43 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray35);
        double double46 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35, 1, (int) (short) 0);
        double double48 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray18, doubleArray35, 101.0d);
        double[] doubleArray52 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double53 = org.apache.commons.math.stat.StatUtils.mean(doubleArray52);
        double double54 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray52);
        double double55 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray52);
        double double56 = org.apache.commons.math.stat.StatUtils.variance(doubleArray52);
        double double57 = org.apache.commons.math.stat.StatUtils.product(doubleArray52);
        double[] doubleArray61 = new double[] { (-1L), 0, 10L };
        double double64 = org.apache.commons.math.stat.StatUtils.max(doubleArray61, 0, 0);
        double double65 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray61);
        double[] doubleArray69 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double70 = org.apache.commons.math.stat.StatUtils.mean(doubleArray69);
        double double71 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray69);
        double double72 = org.apache.commons.math.stat.StatUtils.sum(doubleArray69);
        double double73 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray61, doubleArray69);
        double double74 = org.apache.commons.math.stat.StatUtils.sum(doubleArray61);
        double double77 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray61, (int) (short) 1, (int) (short) 0);
        double double78 = org.apache.commons.math.stat.StatUtils.product(doubleArray61);
        double double79 = org.apache.commons.math.stat.StatUtils.max(doubleArray61);
        double double80 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray52, doubleArray61);
        double double82 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray52, (double) '4');
        double double83 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray52);
        double double85 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray18, doubleArray52, (-0.0d));
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.641588833612779d + "'", double23 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 101.0d + "'", double31 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 101.0d + "'", double39 == 101.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 37.0d + "'", double41 == 37.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 127.0d + "'", double48 == 127.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 7.0d + "'", double53 == 7.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 4.641588833612779d + "'", double54 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 4.605170185988092d + "'", double55 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 27.0d + "'", double56 == 27.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 100.0d + "'", double57 == 100.0d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 101.0d + "'", double65 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 7.0d + "'", double70 == 7.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 4.641588833612779d + "'", double71 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 21.0d + "'", double72 == 21.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-4.0d) + "'", double73 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 9.0d + "'", double74 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double77));
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-0.0d) + "'", double78 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 10.0d + "'", double79 == 10.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 4.0d + "'", double80 == 4.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 10.0d + "'", double82 == 10.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 4.641588833612779d + "'", double83 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
    }

    @Test
    public void test1613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1613");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sum(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray11, doubleArray19);
        double double24 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double27 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11, (int) (short) 1, (int) (short) 0);
        double double28 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double30 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 201.0d);
        double double33 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 1, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            double double36 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (-1), (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 21.0d + "'", double22 == 21.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-4.0d) + "'", double23 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 9.0d + "'", double24 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 12.0d + "'", double28 == 12.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 27.0d + "'", double30 == 27.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
    }

    @Test
    public void test1614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1614");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (-1L), 0, 10L };
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray10, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, 21.0d);
        double double17 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, 4.605170185988092d);
        double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double19 = org.apache.commons.math.stat.StatUtils.max(doubleArray10);
        double double20 = org.apache.commons.math.stat.StatUtils.sum(doubleArray10);
        double[] doubleArray24 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double25 = org.apache.commons.math.stat.StatUtils.mean(doubleArray24);
        double double26 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray24);
        double double27 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray24);
        double double28 = org.apache.commons.math.stat.StatUtils.variance(doubleArray24);
        double double29 = org.apache.commons.math.stat.StatUtils.min(doubleArray24);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        double double36 = org.apache.commons.math.stat.StatUtils.max(doubleArray33, 0, 0);
        double double37 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray33);
        double[] doubleArray41 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double42 = org.apache.commons.math.stat.StatUtils.mean(doubleArray41);
        double double43 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray41);
        double double44 = org.apache.commons.math.stat.StatUtils.sum(doubleArray41);
        double double45 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray33, doubleArray41);
        double double46 = org.apache.commons.math.stat.StatUtils.sum(doubleArray33);
        double double48 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray24, doubleArray33, 0.0d);
        double[] doubleArray52 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double53 = org.apache.commons.math.stat.StatUtils.mean(doubleArray52);
        double double54 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray52);
        double double55 = org.apache.commons.math.stat.StatUtils.sum(doubleArray52);
        double[] doubleArray59 = new double[] { (-1L), 0, 10L };
        double double62 = org.apache.commons.math.stat.StatUtils.max(doubleArray59, 0, 0);
        double double64 = org.apache.commons.math.stat.StatUtils.variance(doubleArray59, 21.0d);
        double double66 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray52, doubleArray59, 4.605170185988092d);
        double double67 = org.apache.commons.math.stat.StatUtils.mean(doubleArray59);
        double double68 = org.apache.commons.math.stat.StatUtils.max(doubleArray59);
        double double69 = org.apache.commons.math.stat.StatUtils.sum(doubleArray59);
        double[] doubleArray73 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double74 = org.apache.commons.math.stat.StatUtils.mean(doubleArray73);
        double double75 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray73);
        double double76 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray73);
        double double77 = org.apache.commons.math.stat.StatUtils.max(doubleArray73);
        double double80 = org.apache.commons.math.stat.StatUtils.sum(doubleArray73, (int) (short) 1, 0);
        double double83 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray73, (int) (short) 0, (int) (byte) 0);
        double double85 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray59, doubleArray73, (double) '#');
        double double86 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray24, doubleArray73);
        double double88 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray10, doubleArray24, 27.00000000000003d);
        // The following exception was thrown during execution in test generation
        try {
            double double91 = org.apache.commons.math.stat.StatUtils.sum(doubleArray24, (int) (byte) 0, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 37.0d + "'", double15 == 37.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 127.00000000000001d + "'", double17 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 3.0d + "'", double18 == 3.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 9.0d + "'", double20 == 9.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 7.0d + "'", double25 == 7.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 4.641588833612779d + "'", double26 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 4.605170185988092d + "'", double27 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 27.0d + "'", double28 == 27.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 101.0d + "'", double37 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 7.0d + "'", double42 == 7.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4.641588833612779d + "'", double43 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 21.0d + "'", double44 == 21.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-4.0d) + "'", double45 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 9.0d + "'", double46 == 9.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 127.0d + "'", double48 == 127.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 7.0d + "'", double53 == 7.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 4.641588833612779d + "'", double54 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 21.0d + "'", double55 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 37.0d + "'", double64 == 37.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 127.00000000000001d + "'", double66 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 3.0d + "'", double67 == 3.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 10.0d + "'", double68 == 10.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 9.0d + "'", double69 == 9.0d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 7.0d + "'", double74 == 7.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 4.641588833612779d + "'", double75 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 4.605170185988092d + "'", double76 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 10.0d + "'", double77 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double80));
        org.junit.Assert.assertTrue(Double.isNaN(double83));
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 127.0d + "'", double85 == 127.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 127.0d + "'", double88 == 127.0d);
    }

    @Test
    public void test1615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1615");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double double16 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.variance(doubleArray20, 27.0d);
        double double25 = org.apache.commons.math.stat.StatUtils.variance(doubleArray20, (double) (byte) 10);
        double double26 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray20);
        double double27 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray20);
        double[] doubleArray31 = new double[] { (-1L), 0, 10L };
        double double34 = org.apache.commons.math.stat.StatUtils.max(doubleArray31, 0, 0);
        double double36 = org.apache.commons.math.stat.StatUtils.variance(doubleArray31, 21.0d);
        double double37 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray20, doubleArray31);
        double double38 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray20);
        double double40 = org.apache.commons.math.stat.StatUtils.variance(doubleArray20, (double) 'a');
        double double41 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double42 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 4.641588833612779d + "'", double8 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 7.0d + "'", double16 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 27.0d + "'", double23 == 27.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 27.0d + "'", double25 == 27.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 4.605170185988092d + "'", double27 == 4.605170185988092d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 37.0d + "'", double36 == 37.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 12.0d + "'", double37 == 12.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 27.0d + "'", double40 == 27.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 7.0d + "'", double41 == 7.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 7.0d + "'", double42 == 7.0d);
    }

    @Test
    public void test1616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1616");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        double double29 = org.apache.commons.math.stat.StatUtils.max(doubleArray26, 0, 0);
        double double30 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray26);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        double double37 = org.apache.commons.math.stat.StatUtils.max(doubleArray34, 0, 0);
        double double38 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray34);
        double double40 = org.apache.commons.math.stat.StatUtils.variance(doubleArray34, (double) 10);
        double double41 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray26, doubleArray34);
        double double42 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray34);
        double double43 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray18, doubleArray34);
        double double44 = org.apache.commons.math.stat.StatUtils.sum(doubleArray18);
        double double45 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray18);
        double double46 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray18);
        // The following exception was thrown during execution in test generation
        try {
            double double49 = org.apache.commons.math.stat.StatUtils.sum(doubleArray18, (int) (short) 100, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 7.0d + "'", double22 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 101.0d + "'", double30 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 101.0d + "'", double38 == 101.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 37.0d + "'", double40 == 37.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 101.0d + "'", double42 == 101.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4.0d + "'", double43 == 4.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 21.0d + "'", double44 == 21.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 4.605170185988092d + "'", double45 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 4.605170185988092d + "'", double46 == 4.605170185988092d);
    }

    @Test
    public void test1617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1617");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) (short) 1);
        double double11 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, (int) (byte) 1, (int) (byte) 0);
        double double14 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3, (int) (byte) 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            double double17 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3, 100, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 27.0d + "'", double6 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 27.0d + "'", double8 == 27.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
    }

    @Test
    public void test1618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1618");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (-1L), 0, 10L };
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray10, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, 21.0d);
        double double17 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, 4.605170185988092d);
        double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double19 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double23 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray10, (int) (byte) 1, (int) (byte) 1, 3.5200000000000005d);
        double[] doubleArray27 = new double[] { (-1L), 0, 10L };
        double double30 = org.apache.commons.math.stat.StatUtils.max(doubleArray27, 0, 0);
        double double31 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray27);
        double[] doubleArray35 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double36 = org.apache.commons.math.stat.StatUtils.mean(doubleArray35);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35);
        double double38 = org.apache.commons.math.stat.StatUtils.sum(doubleArray35);
        double double39 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray27, doubleArray35);
        double double40 = org.apache.commons.math.stat.StatUtils.max(doubleArray35);
        double double41 = org.apache.commons.math.stat.StatUtils.max(doubleArray35);
        double[] doubleArray45 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double46 = org.apache.commons.math.stat.StatUtils.mean(doubleArray45);
        double double48 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray45, (double) 100.0f);
        double double49 = org.apache.commons.math.stat.StatUtils.mean(doubleArray45);
        double[] doubleArray53 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double54 = org.apache.commons.math.stat.StatUtils.mean(doubleArray53);
        double double56 = org.apache.commons.math.stat.StatUtils.variance(doubleArray53, 27.0d);
        double double58 = org.apache.commons.math.stat.StatUtils.variance(doubleArray53, (double) (byte) 10);
        double double59 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray45, doubleArray53);
        double double60 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray35, doubleArray53);
        double double62 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray10, doubleArray53, (-4.0d));
        double double63 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray10);
        // The following exception was thrown during execution in test generation
        try {
            double double66 = org.apache.commons.math.stat.StatUtils.sum(doubleArray10, 10, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 37.0d + "'", double15 == 37.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 127.00000000000001d + "'", double17 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 3.0d + "'", double18 == 3.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 101.0d + "'", double31 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 7.0d + "'", double36 == 7.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 21.0d + "'", double38 == 21.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-4.0d) + "'", double39 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 10.0d + "'", double40 == 10.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 10.0d + "'", double41 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 7.0d + "'", double46 == 7.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 10.0d + "'", double48 == 10.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 7.0d + "'", double49 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 7.0d + "'", double54 == 7.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 27.0d + "'", double56 == 27.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 27.0d + "'", double58 == 27.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 127.0d + "'", double62 == 127.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 101.0d + "'", double63 == 101.0d);
    }

    @Test
    public void test1619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1619");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray15 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double16 = org.apache.commons.math.stat.StatUtils.mean(doubleArray15);
        double double17 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray15);
        double double18 = org.apache.commons.math.stat.StatUtils.sum(doubleArray15);
        double[] doubleArray22 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double23 = org.apache.commons.math.stat.StatUtils.mean(doubleArray22);
        double double24 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray22);
        double double25 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray22);
        double double26 = org.apache.commons.math.stat.StatUtils.max(doubleArray22);
        double double28 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray15, doubleArray22, (double) '#');
        double double29 = org.apache.commons.math.stat.StatUtils.product(doubleArray22);
        double double30 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray22);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray22, 479232.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double35 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray22, (int) 'a', (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 7.0d + "'", double16 == 7.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 4.641588833612779d + "'", double17 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 21.0d + "'", double18 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 7.0d + "'", double23 == 7.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 4.641588833612779d + "'", double24 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 4.605170185988092d + "'", double25 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 100.0d + "'", double29 == 100.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
    }

    @Test
    public void test1620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1620");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double11 = org.apache.commons.math.stat.StatUtils.min(doubleArray3, (int) ' ', 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 21.0d + "'", double8 == 21.0d);
    }

    @Test
    public void test1621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1621");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, 50.0d);
        double double11 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3, (int) 'a', 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-1.0d) + "'", double8 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + (-0.0d) + "'", double11 == (-0.0d));
    }

    @Test
    public void test1622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1622");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double[] doubleArray19 = new double[] { (-1L), 0, 10L };
        double double22 = org.apache.commons.math.stat.StatUtils.max(doubleArray19, 0, 0);
        double double23 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray19);
        double double25 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) 10);
        double double26 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11);
        double double29 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, 3.0d);
        double double30 = org.apache.commons.math.stat.StatUtils.min(doubleArray11);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, 0.0d);
        double double33 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double34 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 4.641588833612779d + "'", double7 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 101.0d + "'", double23 == 101.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 37.0d + "'", double25 == 37.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 37.0d + "'", double27 == 37.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 127.0d + "'", double29 == 127.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-1.0d) + "'", double30 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 37.0d + "'", double32 == 37.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 3.0d + "'", double33 == 3.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
    }

    @Test
    public void test1623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1623");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double19 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, (int) (short) 1, (int) (short) 0);
        double double20 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        double double22 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) (byte) 10);
        double double23 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double24 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 9.0d + "'", double16 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.0d) + "'", double20 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 37.0d + "'", double22 == 37.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 3.0d + "'", double23 == 3.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 9.0d + "'", double24 == 9.0d);
    }

    @Test
    public void test1624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1624");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double double15 = org.apache.commons.math.stat.StatUtils.min(doubleArray10);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sum(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray19);
        double double24 = org.apache.commons.math.stat.StatUtils.min(doubleArray19);
        double[] doubleArray28 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double29 = org.apache.commons.math.stat.StatUtils.mean(doubleArray28);
        double double31 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray28, (double) 100.0f);
        double[] doubleArray35 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double36 = org.apache.commons.math.stat.StatUtils.mean(doubleArray35);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35);
        double double38 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray35);
        double double39 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray28, doubleArray35);
        double[] doubleArray43 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double44 = org.apache.commons.math.stat.StatUtils.mean(doubleArray43);
        double double45 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray43);
        double double46 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray28, doubleArray43);
        double double47 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray43);
        double double48 = org.apache.commons.math.stat.StatUtils.variance(doubleArray43);
        double double49 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray19, doubleArray43);
        double double50 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray43);
        double double51 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray43);
        double double53 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray10, doubleArray43, (double) 0.0f);
        double double54 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray10);
        double double55 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray10);
        double double56 = org.apache.commons.math.stat.StatUtils.product(doubleArray10);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 21.0d + "'", double22 == 21.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 7.0d + "'", double29 == 7.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 10.0d + "'", double31 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 7.0d + "'", double36 == 7.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 4.605170185988092d + "'", double38 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 7.0d + "'", double44 == 7.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 4.641588833612779d + "'", double45 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 4.641588833612779d + "'", double47 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 27.0d + "'", double48 == 27.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4.641588833612779d + "'", double50 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 4.605170185988092d + "'", double51 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 201.0d + "'", double54 == 201.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 201.0d + "'", double55 == 201.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 100.0d + "'", double56 == 100.0d);
    }

    @Test
    public void test1625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1625");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray15 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double16 = org.apache.commons.math.stat.StatUtils.mean(doubleArray15);
        double double17 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray15);
        double double18 = org.apache.commons.math.stat.StatUtils.sum(doubleArray15);
        double[] doubleArray22 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double23 = org.apache.commons.math.stat.StatUtils.mean(doubleArray22);
        double double24 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray22);
        double double25 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray22);
        double double26 = org.apache.commons.math.stat.StatUtils.max(doubleArray22);
        double double28 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray15, doubleArray22, (double) '#');
        double double29 = org.apache.commons.math.stat.StatUtils.product(doubleArray22);
        double double30 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray22);
        java.lang.Class<?> wildcardClass31 = doubleArray3.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 7.0d + "'", double16 == 7.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 4.641588833612779d + "'", double17 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 21.0d + "'", double18 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 7.0d + "'", double23 == 7.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 4.641588833612779d + "'", double24 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 4.605170185988092d + "'", double25 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 100.0d + "'", double29 == 100.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test1626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1626");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, 27.0d);
        double double16 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) (byte) 10);
        double double17 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 27.0d + "'", double14 == 27.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 27.0d + "'", double16 == 27.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4.605170185988092d + "'", double18 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4.641588833612779d + "'", double19 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
    }

    @Test
    public void test1627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1627");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10);
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double double15 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13);
        double double16 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray13);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double18 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray13);
        double[] doubleArray22 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double23 = org.apache.commons.math.stat.StatUtils.mean(doubleArray22);
        double double24 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray22);
        double[] doubleArray28 = new double[] { (-1L), 0, 10L };
        double double31 = org.apache.commons.math.stat.StatUtils.max(doubleArray28, 0, 0);
        double double32 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray28);
        double[] doubleArray36 = new double[] { (-1L), 0, 10L };
        double double39 = org.apache.commons.math.stat.StatUtils.max(doubleArray36, 0, 0);
        double double40 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray36);
        double double42 = org.apache.commons.math.stat.StatUtils.variance(doubleArray36, (double) 10);
        double double43 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray28, doubleArray36);
        double double44 = org.apache.commons.math.stat.StatUtils.max(doubleArray36);
        double double45 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray36);
        double double46 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray36);
        double[] doubleArray50 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double51 = org.apache.commons.math.stat.StatUtils.mean(doubleArray50);
        double double53 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray50, (double) 100.0f);
        double[] doubleArray57 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double58 = org.apache.commons.math.stat.StatUtils.mean(doubleArray57);
        double double59 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray57);
        double double60 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray57);
        double double61 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray50, doubleArray57);
        double[] doubleArray65 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double66 = org.apache.commons.math.stat.StatUtils.mean(doubleArray65);
        double double67 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray65);
        double double68 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray50, doubleArray65);
        double double69 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray65);
        double double70 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray65);
        // The following exception was thrown during execution in test generation
        try {
            double double73 = org.apache.commons.math.stat.StatUtils.variance(doubleArray65, (int) (short) 100, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4.641588833612779d + "'", double15 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.605170185988092d + "'", double16 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 27.0d + "'", double17 == 27.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-4.0d) + "'", double18 == (-4.0d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 7.0d + "'", double23 == 7.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-12.0d) + "'", double24 == (-12.0d));
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 101.0d + "'", double32 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 101.0d + "'", double40 == 101.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 37.0d + "'", double42 == 37.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 10.0d + "'", double44 == 10.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 101.0d + "'", double45 == 101.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 7.0d + "'", double51 == 7.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 10.0d + "'", double53 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 7.0d + "'", double58 == 7.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4.641588833612779d + "'", double59 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 4.605170185988092d + "'", double60 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 7.0d + "'", double66 == 7.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 4.641588833612779d + "'", double67 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 4.641588833612779d + "'", double69 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-12.0d) + "'", double70 == (-12.0d));
    }

    @Test
    public void test1628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1628");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        double double29 = org.apache.commons.math.stat.StatUtils.max(doubleArray26, 0, 0);
        double double30 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray26);
        double[] doubleArray34 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double35 = org.apache.commons.math.stat.StatUtils.mean(doubleArray34);
        double double36 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray34);
        double double37 = org.apache.commons.math.stat.StatUtils.sum(doubleArray34);
        double double38 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray26, doubleArray34);
        double double39 = org.apache.commons.math.stat.StatUtils.sum(doubleArray26);
        double double42 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray26, (int) (short) 1, (int) (short) 0);
        double double43 = org.apache.commons.math.stat.StatUtils.product(doubleArray26);
        double double44 = org.apache.commons.math.stat.StatUtils.max(doubleArray26);
        double double45 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray18, doubleArray26);
        double[] doubleArray49 = new double[] { (-1L), 0, 10L };
        double double52 = org.apache.commons.math.stat.StatUtils.max(doubleArray49, 0, 0);
        double double53 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray49);
        double[] doubleArray57 = new double[] { (-1L), 0, 10L };
        double double60 = org.apache.commons.math.stat.StatUtils.max(doubleArray57, 0, 0);
        double double61 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray57);
        double double63 = org.apache.commons.math.stat.StatUtils.variance(doubleArray57, (double) 10);
        double double64 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray49, doubleArray57);
        double double65 = org.apache.commons.math.stat.StatUtils.variance(doubleArray49);
        double double67 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray26, doubleArray49, Double.NaN);
        double double68 = org.apache.commons.math.stat.StatUtils.variance(doubleArray49);
        double double70 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray49, (double) 100);
        double double71 = org.apache.commons.math.stat.StatUtils.variance(doubleArray49);
        // The following exception was thrown during execution in test generation
        try {
            double double74 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray49, (int) ' ', (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 101.0d + "'", double30 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 7.0d + "'", double35 == 7.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 4.641588833612779d + "'", double36 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 21.0d + "'", double37 == 21.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-4.0d) + "'", double38 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 9.0d + "'", double39 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-0.0d) + "'", double43 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 10.0d + "'", double44 == 10.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 12.0d + "'", double45 == 12.0d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 101.0d + "'", double53 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 101.0d + "'", double61 == 101.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 37.0d + "'", double63 == 37.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 37.0d + "'", double65 == 37.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 37.0d + "'", double68 == 37.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 10.0d + "'", double70 == 10.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 37.0d + "'", double71 == 37.0d);
    }

    @Test
    public void test1629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1629");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double[] doubleArray19 = new double[] { (-1L), 0, 10L };
        double double22 = org.apache.commons.math.stat.StatUtils.max(doubleArray19, 0, 0);
        double double23 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray19);
        double double25 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) 10);
        double double26 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11);
        double double29 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, 3.0d);
        double double30 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, 10.000000000000002d);
        double double33 = org.apache.commons.math.stat.StatUtils.min(doubleArray11);
        double double34 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double38 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray11, (int) (short) 100, (int) (byte) 0, 126.99999999999977d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 4.641588833612779d + "'", double7 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 101.0d + "'", double23 == 101.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 37.0d + "'", double25 == 37.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 37.0d + "'", double27 == 37.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 127.0d + "'", double29 == 127.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 37.0d + "'", double32 == 37.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-1.0d) + "'", double33 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
    }

    @Test
    public void test1630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1630");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double17 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double18 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        double[] doubleArray22 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double23 = org.apache.commons.math.stat.StatUtils.mean(doubleArray22);
        double double25 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray22, (double) 100.0f);
        double[] doubleArray29 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double30 = org.apache.commons.math.stat.StatUtils.mean(doubleArray29);
        double double31 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray29);
        double double32 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray29);
        double double33 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray22, doubleArray29);
        double[] doubleArray37 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double38 = org.apache.commons.math.stat.StatUtils.mean(doubleArray37);
        double double39 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray37);
        double double40 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray22, doubleArray37);
        double double41 = org.apache.commons.math.stat.StatUtils.mean(doubleArray37);
        double[] doubleArray45 = new double[] { (-1L), 0, 10L };
        double double48 = org.apache.commons.math.stat.StatUtils.max(doubleArray45, 0, 0);
        double double49 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray45);
        double[] doubleArray53 = new double[] { (-1L), 0, 10L };
        double double56 = org.apache.commons.math.stat.StatUtils.max(doubleArray53, 0, 0);
        double double57 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray53);
        double double59 = org.apache.commons.math.stat.StatUtils.variance(doubleArray53, (double) 10);
        double double60 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray45, doubleArray53);
        double double61 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray53);
        double double62 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray37, doubleArray53);
        double[] doubleArray66 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double67 = org.apache.commons.math.stat.StatUtils.mean(doubleArray66);
        double double69 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray66, (double) 100.0f);
        double double70 = org.apache.commons.math.stat.StatUtils.variance(doubleArray66);
        double double71 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray37, doubleArray66);
        double double72 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray66);
        double double74 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray66, (double) 100L);
        java.lang.Class<?> wildcardClass75 = doubleArray66.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.0d) + "'", double18 == (-0.0d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 7.0d + "'", double23 == 7.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 10.0d + "'", double25 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 7.0d + "'", double30 == 7.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.641588833612779d + "'", double31 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 4.605170185988092d + "'", double32 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 7.0d + "'", double38 == 7.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 4.641588833612779d + "'", double39 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 7.0d + "'", double41 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 101.0d + "'", double49 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 101.0d + "'", double57 == 101.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 37.0d + "'", double59 == 37.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 101.0d + "'", double61 == 101.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 4.0d + "'", double62 == 4.0d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 7.0d + "'", double67 == 7.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 10.0d + "'", double69 == 10.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 27.0d + "'", double70 == 27.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 4.605170185988092d + "'", double72 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 127.0d + "'", double74 == 127.0d);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1631");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray15 = new double[] { (-1L), 0, 10L };
        double double18 = org.apache.commons.math.stat.StatUtils.max(doubleArray15, 0, 0);
        double double19 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray15);
        double[] doubleArray23 = new double[] { (-1L), 0, 10L };
        double double26 = org.apache.commons.math.stat.StatUtils.max(doubleArray23, 0, 0);
        double double27 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray23);
        double double29 = org.apache.commons.math.stat.StatUtils.variance(doubleArray23, (double) 10);
        double double30 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray15, doubleArray23);
        double double31 = org.apache.commons.math.stat.StatUtils.variance(doubleArray15);
        double double32 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray15);
        double[] doubleArray36 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double37 = org.apache.commons.math.stat.StatUtils.mean(doubleArray36);
        double double38 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray36);
        double double39 = org.apache.commons.math.stat.StatUtils.sum(doubleArray36);
        double double40 = org.apache.commons.math.stat.StatUtils.max(doubleArray36);
        double[] doubleArray44 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double45 = org.apache.commons.math.stat.StatUtils.mean(doubleArray44);
        double double47 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray44, (double) 100.0f);
        double double48 = org.apache.commons.math.stat.StatUtils.mean(doubleArray44);
        double[] doubleArray52 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double53 = org.apache.commons.math.stat.StatUtils.mean(doubleArray52);
        double double55 = org.apache.commons.math.stat.StatUtils.variance(doubleArray52, 27.0d);
        double double57 = org.apache.commons.math.stat.StatUtils.variance(doubleArray52, (double) (byte) 10);
        double double58 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray44, doubleArray52);
        double double60 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray36, doubleArray44, (double) (short) 1);
        double double61 = org.apache.commons.math.stat.StatUtils.sum(doubleArray44);
        double double63 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray44, 0.0d);
        double[] doubleArray67 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double68 = org.apache.commons.math.stat.StatUtils.mean(doubleArray67);
        double double69 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray67);
        double double70 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray67);
        double double71 = org.apache.commons.math.stat.StatUtils.variance(doubleArray67);
        double[] doubleArray75 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double76 = org.apache.commons.math.stat.StatUtils.mean(doubleArray75);
        double double77 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray67, doubleArray75);
        double double78 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray75);
        // The following exception was thrown during execution in test generation
        try {
            double double81 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (-1), (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 101.0d + "'", double19 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 101.0d + "'", double27 == 101.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 37.0d + "'", double29 == 37.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 37.0d + "'", double31 == 37.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 4.0d + "'", double32 == 4.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 7.0d + "'", double37 == 7.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 4.641588833612779d + "'", double38 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 21.0d + "'", double39 == 21.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 10.0d + "'", double40 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 7.0d + "'", double45 == 7.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 10.0d + "'", double47 == 10.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 7.0d + "'", double48 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 7.0d + "'", double53 == 7.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 27.0d + "'", double55 == 27.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 27.0d + "'", double57 == 27.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 21.0d + "'", double61 == 21.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 7.0d + "'", double68 == 7.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 4.641588833612779d + "'", double69 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 4.605170185988092d + "'", double70 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 27.0d + "'", double71 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 7.0d + "'", double76 == 7.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
    }

    @Test
    public void test1632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1632");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        double double28 = org.apache.commons.math.stat.StatUtils.max(doubleArray25, 0, 0);
        double double29 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray25);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        double double36 = org.apache.commons.math.stat.StatUtils.max(doubleArray33, 0, 0);
        double double37 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray33);
        double double39 = org.apache.commons.math.stat.StatUtils.variance(doubleArray33, (double) 10);
        double double40 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray25, doubleArray33);
        double double42 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray25, 100.0d);
        double double43 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double44 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double46 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 21.0d);
        double double49 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (int) (byte) 1, (int) (byte) 0);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 101.0d + "'", double29 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 101.0d + "'", double37 == 101.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 37.0d + "'", double39 == 37.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 127.0d + "'", double42 == 127.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 27.0d + "'", double43 == 27.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 4.605170185988092d + "'", double44 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 27.0d + "'", double46 == 27.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
    }

    @Test
    public void test1633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1633");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double double15 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13);
        double double16 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray13);
        double double17 = org.apache.commons.math.stat.StatUtils.max(doubleArray13);
        double double20 = org.apache.commons.math.stat.StatUtils.sum(doubleArray13, (int) (short) 1, 0);
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double double22 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray13);
        double double23 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double double25 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13, 101.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-1.0d) + "'", double8 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4.641588833612779d + "'", double15 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.605170185988092d + "'", double16 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-4.0d) + "'", double22 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 7.0d + "'", double23 == 7.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 27.0d + "'", double25 == 27.0d);
    }

    @Test
    public void test1634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1634");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        double double29 = org.apache.commons.math.stat.StatUtils.max(doubleArray26, 0, 0);
        double double30 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray26);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        double double37 = org.apache.commons.math.stat.StatUtils.max(doubleArray34, 0, 0);
        double double38 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray34);
        double double40 = org.apache.commons.math.stat.StatUtils.variance(doubleArray34, (double) 10);
        double double41 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray26, doubleArray34);
        double double42 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray34);
        double double43 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray18, doubleArray34);
        double[] doubleArray47 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double48 = org.apache.commons.math.stat.StatUtils.mean(doubleArray47);
        double double50 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray47, (double) 100.0f);
        double double51 = org.apache.commons.math.stat.StatUtils.variance(doubleArray47);
        double double52 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray18, doubleArray47);
        double double53 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray47);
        double double55 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray47, (double) (byte) 100);
        double double56 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray47);
        double double59 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray47, 1, 1);
        double double60 = org.apache.commons.math.stat.StatUtils.sum(doubleArray47);
        double double61 = org.apache.commons.math.stat.StatUtils.max(doubleArray47);
        double[] doubleArray65 = new double[] { (-1L), 0, 10L };
        double double68 = org.apache.commons.math.stat.StatUtils.max(doubleArray65, 0, 0);
        double double69 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray65);
        double[] doubleArray73 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double74 = org.apache.commons.math.stat.StatUtils.mean(doubleArray73);
        double double75 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray73);
        double double76 = org.apache.commons.math.stat.StatUtils.sum(doubleArray73);
        double double77 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray65, doubleArray73);
        double double78 = org.apache.commons.math.stat.StatUtils.max(doubleArray73);
        double double79 = org.apache.commons.math.stat.StatUtils.max(doubleArray73);
        double double80 = org.apache.commons.math.stat.StatUtils.variance(doubleArray73);
        double[] doubleArray84 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double85 = org.apache.commons.math.stat.StatUtils.mean(doubleArray84);
        double double86 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray84);
        double double87 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray84);
        double double88 = org.apache.commons.math.stat.StatUtils.max(doubleArray84);
        double double91 = org.apache.commons.math.stat.StatUtils.sum(doubleArray84, (int) (short) 1, 0);
        double double92 = org.apache.commons.math.stat.StatUtils.max(doubleArray84);
        double double93 = org.apache.commons.math.stat.StatUtils.min(doubleArray84);
        double double94 = org.apache.commons.math.stat.StatUtils.max(doubleArray84);
        double double97 = org.apache.commons.math.stat.StatUtils.product(doubleArray84, (int) (byte) 0, (int) (byte) 1);
        double double98 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray73, doubleArray84);
        double double99 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray47, doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 7.0d + "'", double22 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 101.0d + "'", double30 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 101.0d + "'", double38 == 101.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 37.0d + "'", double40 == 37.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 101.0d + "'", double42 == 101.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4.0d + "'", double43 == 4.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 7.0d + "'", double48 == 7.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 27.0d + "'", double51 == 27.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 4.641588833612779d + "'", double53 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 10.0d + "'", double55 == 10.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 4.605170185988092d + "'", double56 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2.302585092994046d + "'", double59 == 2.302585092994046d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 21.0d + "'", double60 == 21.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 10.0d + "'", double61 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 101.0d + "'", double69 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 7.0d + "'", double74 == 7.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 4.641588833612779d + "'", double75 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 21.0d + "'", double76 == 21.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-4.0d) + "'", double77 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 10.0d + "'", double78 == 10.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 10.0d + "'", double79 == 10.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 27.0d + "'", double80 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 7.0d + "'", double85 == 7.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 4.641588833612779d + "'", double86 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 4.605170185988092d + "'", double87 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 10.0d + "'", double88 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double91));
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 10.0d + "'", double92 == 10.0d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 1.0d + "'", double93 == 1.0d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 10.0d + "'", double94 == 10.0d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 10.0d + "'", double97 == 10.0d);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 0.0d + "'", double98 == 0.0d);
        org.junit.Assert.assertTrue("'" + double99 + "' != '" + 0.0d + "'", double99 == 0.0d);
    }

    @Test
    public void test1635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1635");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray11, (double) 100.0f);
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, 27.0d);
        double double24 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) (byte) 10);
        double double25 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, (double) (short) 1);
        double double28 = org.apache.commons.math.stat.StatUtils.min(doubleArray11);
        double[] doubleArray32 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double33 = org.apache.commons.math.stat.StatUtils.mean(doubleArray32);
        double double34 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray32);
        double double35 = org.apache.commons.math.stat.StatUtils.sum(doubleArray32);
        double double36 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray32);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        double double43 = org.apache.commons.math.stat.StatUtils.max(doubleArray40, 0, 0);
        double double44 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray40);
        double[] doubleArray48 = new double[] { (-1L), 0, 10L };
        double double51 = org.apache.commons.math.stat.StatUtils.max(doubleArray48, 0, 0);
        double double52 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray48);
        double double54 = org.apache.commons.math.stat.StatUtils.variance(doubleArray48, (double) 10);
        double double55 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray40, doubleArray48);
        double double56 = org.apache.commons.math.stat.StatUtils.variance(doubleArray40);
        double double58 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray32, doubleArray40, 3.0d);
        double double59 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray32);
        double double60 = org.apache.commons.math.stat.StatUtils.max(doubleArray32);
        double double61 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray32);
        double double62 = org.apache.commons.math.stat.StatUtils.max(doubleArray32);
        // The following exception was thrown during execution in test generation
        try {
            double double65 = org.apache.commons.math.stat.StatUtils.mean(doubleArray32, (int) '4', 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.0d + "'", double15 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 27.0d + "'", double22 == 27.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 27.0d + "'", double24 == 27.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 7.0d + "'", double33 == 7.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4.641588833612779d + "'", double34 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 21.0d + "'", double35 == 21.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 4.641588833612779d + "'", double36 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 101.0d + "'", double44 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 101.0d + "'", double52 == 101.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 37.0d + "'", double54 == 37.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 37.0d + "'", double56 == 37.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 127.0d + "'", double58 == 127.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4.605170185988092d + "'", double59 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 10.0d + "'", double60 == 10.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 10.0d + "'", double62 == 10.0d);
    }

    @Test
    public void test1636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1636");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, 0.0d);
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double double34 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray31, (double) 100.0f);
        double double35 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double[] doubleArray39 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double40 = org.apache.commons.math.stat.StatUtils.mean(doubleArray39);
        double double42 = org.apache.commons.math.stat.StatUtils.variance(doubleArray39, 27.0d);
        double double44 = org.apache.commons.math.stat.StatUtils.variance(doubleArray39, (double) (byte) 10);
        double double45 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray31, doubleArray39);
        double double46 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray39);
        double double47 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray39);
        double double48 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray39);
        // The following exception was thrown during execution in test generation
        try {
            double double51 = org.apache.commons.math.stat.StatUtils.max(doubleArray39, (int) ' ', 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 127.0d + "'", double27 == 127.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 7.0d + "'", double32 == 7.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 10.0d + "'", double34 == 10.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 7.0d + "'", double35 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 7.0d + "'", double40 == 7.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 27.0d + "'", double42 == 27.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 27.0d + "'", double44 == 27.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 201.0d + "'", double47 == 201.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 4.605170185988092d + "'", double48 == 4.605170185988092d);
    }

    @Test
    public void test1637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1637");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 27.0d);
        double double8 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) (byte) 10);
        double double9 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double11 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10L);
        double[] doubleArray15 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double16 = org.apache.commons.math.stat.StatUtils.mean(doubleArray15);
        double double18 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray15, (double) 100.0f);
        double[] doubleArray22 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double23 = org.apache.commons.math.stat.StatUtils.mean(doubleArray22);
        double double24 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray22);
        double double25 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray22);
        double double26 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray15, doubleArray22);
        double[] doubleArray30 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double31 = org.apache.commons.math.stat.StatUtils.mean(doubleArray30);
        double double32 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray30);
        double double33 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray15, doubleArray30);
        double[] doubleArray37 = new double[] { (-1L), 0, 10L };
        double double40 = org.apache.commons.math.stat.StatUtils.max(doubleArray37, 0, 0);
        double double41 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray37);
        double[] doubleArray45 = new double[] { (-1L), 0, 10L };
        double double48 = org.apache.commons.math.stat.StatUtils.max(doubleArray45, 0, 0);
        double double49 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray45);
        double double51 = org.apache.commons.math.stat.StatUtils.variance(doubleArray45, (double) 10);
        double double52 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray37, doubleArray45);
        double double54 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray15, doubleArray37, 100.0d);
        double double55 = org.apache.commons.math.stat.StatUtils.variance(doubleArray15);
        double[] doubleArray59 = new double[] { (-1L), 0, 10L };
        double double62 = org.apache.commons.math.stat.StatUtils.max(doubleArray59, 0, 0);
        double double63 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray59);
        double[] doubleArray67 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double68 = org.apache.commons.math.stat.StatUtils.mean(doubleArray67);
        double double69 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray67);
        double double70 = org.apache.commons.math.stat.StatUtils.sum(doubleArray67);
        double double71 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray59, doubleArray67);
        double double72 = org.apache.commons.math.stat.StatUtils.sum(doubleArray59);
        double double75 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray59, (int) (short) 1, (int) (short) 0);
        double double76 = org.apache.commons.math.stat.StatUtils.product(doubleArray59);
        double double78 = org.apache.commons.math.stat.StatUtils.variance(doubleArray59, (double) (byte) 10);
        double double80 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray15, doubleArray59, 0.0d);
        double double81 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray59);
        double double82 = org.apache.commons.math.stat.StatUtils.product(doubleArray59);
        double double85 = org.apache.commons.math.stat.StatUtils.min(doubleArray59, (int) (short) 0, (int) (short) 1);
        double double88 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray59, (int) (byte) 1, (int) (short) 1);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 27.0d + "'", double6 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 27.0d + "'", double8 == 27.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 4.641588833612779d + "'", double9 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 27.0d + "'", double11 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 7.0d + "'", double16 == 7.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 7.0d + "'", double23 == 7.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 4.641588833612779d + "'", double24 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 4.605170185988092d + "'", double25 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 7.0d + "'", double31 == 7.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 4.641588833612779d + "'", double32 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 101.0d + "'", double41 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 101.0d + "'", double49 == 101.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 37.0d + "'", double51 == 37.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 127.0d + "'", double54 == 127.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 27.0d + "'", double55 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 101.0d + "'", double63 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 7.0d + "'", double68 == 7.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 4.641588833612779d + "'", double69 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 21.0d + "'", double70 == 21.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-4.0d) + "'", double71 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 9.0d + "'", double72 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-0.0d) + "'", double76 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 37.0d + "'", double78 == 37.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 127.0d + "'", double80 == 127.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 4.0d + "'", double81 == 4.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.0d) + "'", double82 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + (-1.0d) + "'", double85 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + Double.NEGATIVE_INFINITY + "'", double88 == Double.NEGATIVE_INFINITY);
    }

    @Test
    public void test1638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1638");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3, (int) (short) 0, (int) (byte) 0);
        double[] doubleArray17 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray17);
        double double20 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray17, (double) 100.0f);
        double[] doubleArray24 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double25 = org.apache.commons.math.stat.StatUtils.mean(doubleArray24);
        double double26 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray24);
        double double27 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray24);
        double double28 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray17, doubleArray24);
        double[] doubleArray32 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double33 = org.apache.commons.math.stat.StatUtils.mean(doubleArray32);
        double double34 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray32);
        double double35 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray17, doubleArray32);
        double double36 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray32);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray32);
        double double38 = org.apache.commons.math.stat.StatUtils.mean(doubleArray32);
        double[] doubleArray42 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double43 = org.apache.commons.math.stat.StatUtils.mean(doubleArray42);
        double double44 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray42);
        double double45 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray42);
        double double46 = org.apache.commons.math.stat.StatUtils.variance(doubleArray42);
        double double47 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray42);
        double double48 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray42);
        double double51 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray42, (int) (short) 1, 0);
        double double52 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray32, doubleArray42);
        double double53 = org.apache.commons.math.stat.StatUtils.min(doubleArray42);
        double double55 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray42, 4.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double59 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 4.0d, (int) 'a', 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 7.0d + "'", double18 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 10.0d + "'", double20 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 7.0d + "'", double25 == 7.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 4.641588833612779d + "'", double26 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 4.605170185988092d + "'", double27 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 7.0d + "'", double33 == 7.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4.641588833612779d + "'", double34 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 4.641588833612779d + "'", double36 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 7.0d + "'", double38 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 7.0d + "'", double43 == 7.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 4.641588833612779d + "'", double44 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 4.605170185988092d + "'", double45 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 27.0d + "'", double46 == 27.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 4.641588833612779d + "'", double47 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 4.605170185988092d + "'", double48 == 4.605170185988092d);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
    }

    @Test
    public void test1639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1639");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray11, (double) 100.0f);
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, 27.0d);
        double double24 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) (byte) 10);
        double double25 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, (double) (short) 1);
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double double33 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray31);
        double double34 = org.apache.commons.math.stat.StatUtils.sum(doubleArray31);
        double double35 = org.apache.commons.math.stat.StatUtils.max(doubleArray31);
        double double37 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray31, (double) (byte) 100);
        double[] doubleArray41 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double42 = org.apache.commons.math.stat.StatUtils.mean(doubleArray41);
        double double43 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray41);
        double double44 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray41);
        double double45 = org.apache.commons.math.stat.StatUtils.variance(doubleArray41);
        double double47 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray31, doubleArray41, 37.0d);
        double double48 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            double double52 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, 10.0d, (int) (byte) 100, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.0d + "'", double15 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 27.0d + "'", double22 == 27.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 27.0d + "'", double24 == 27.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 7.0d + "'", double32 == 7.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4.641588833612779d + "'", double33 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 21.0d + "'", double34 == 21.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 10.0d + "'", double35 == 10.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 10.0d + "'", double37 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 7.0d + "'", double42 == 7.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4.641588833612779d + "'", double43 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 4.605170185988092d + "'", double44 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 27.0d + "'", double45 == 27.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
    }

    @Test
    public void test1640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1640");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double12 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double13 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        double double14 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double17 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3, (int) (byte) 0, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 21.0d + "'", double12 == 21.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 100.0d + "'", double13 == 100.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 27.0d + "'", double14 == 27.0d);
    }

    @Test
    public void test1641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1641");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, 50.0d);
        double double11 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, (int) (byte) -1, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-1.0d) + "'", double8 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + (-0.0d) + "'", double11 == (-0.0d));
    }

    @Test
    public void test1642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1642");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double11 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, (int) (short) 0, (int) (byte) 0);
        double double12 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray16 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double17 = org.apache.commons.math.stat.StatUtils.mean(doubleArray16);
        double double19 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray16, (double) 100.0f);
        double[] doubleArray23 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double24 = org.apache.commons.math.stat.StatUtils.mean(doubleArray23);
        double double25 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray23);
        double double26 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray23);
        double double27 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray16, doubleArray23);
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double double33 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray31);
        double double34 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray16, doubleArray31);
        double double35 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray31);
        double double36 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray31);
        double double37 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double[] doubleArray41 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double42 = org.apache.commons.math.stat.StatUtils.mean(doubleArray41);
        double double43 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray41);
        double double44 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray41);
        double double45 = org.apache.commons.math.stat.StatUtils.variance(doubleArray41);
        double double46 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray41);
        double double47 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray41);
        double double50 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray41, (int) (short) 1, 0);
        double double51 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray31, doubleArray41);
        double[] doubleArray55 = new double[] { (-1L), 0, 10L };
        double double58 = org.apache.commons.math.stat.StatUtils.max(doubleArray55, 0, 0);
        double double59 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray55);
        double[] doubleArray63 = new double[] { (-1L), 0, 10L };
        double double66 = org.apache.commons.math.stat.StatUtils.max(doubleArray63, 0, 0);
        double double67 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray63);
        double double69 = org.apache.commons.math.stat.StatUtils.variance(doubleArray63, (double) 10);
        double double70 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray55, doubleArray63);
        double double71 = org.apache.commons.math.stat.StatUtils.max(doubleArray63);
        double double72 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray31, doubleArray63);
        double[] doubleArray76 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double77 = org.apache.commons.math.stat.StatUtils.mean(doubleArray76);
        double double79 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray76, (double) 100.0f);
        double double80 = org.apache.commons.math.stat.StatUtils.mean(doubleArray76);
        double double81 = org.apache.commons.math.stat.StatUtils.mean(doubleArray76);
        double double83 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray63, doubleArray76, 101.0d);
        double double85 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray76, 0.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 7.0d + "'", double8 == 7.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 7.0d + "'", double17 == 7.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 7.0d + "'", double24 == 7.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 4.641588833612779d + "'", double25 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 4.605170185988092d + "'", double26 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 7.0d + "'", double32 == 7.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4.641588833612779d + "'", double33 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 4.641588833612779d + "'", double35 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 4.641588833612779d + "'", double36 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 7.0d + "'", double37 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 7.0d + "'", double42 == 7.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4.641588833612779d + "'", double43 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 4.605170185988092d + "'", double44 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 27.0d + "'", double45 == 27.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 4.641588833612779d + "'", double46 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 4.605170185988092d + "'", double47 == 4.605170185988092d);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 101.0d + "'", double59 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 101.0d + "'", double67 == 101.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 37.0d + "'", double69 == 37.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 10.0d + "'", double71 == 10.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 4.0d + "'", double72 == 4.0d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 7.0d + "'", double77 == 7.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 10.0d + "'", double79 == 10.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 7.0d + "'", double80 == 7.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 7.0d + "'", double81 == 7.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 127.0d + "'", double83 == 127.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
    }

    @Test
    public void test1643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1643");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray11, (double) 100.0f);
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, 27.0d);
        double double24 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) (byte) 10);
        double double25 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, (double) (short) 1);
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double double34 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray31, (double) 100.0f);
        double double35 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double[] doubleArray39 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double40 = org.apache.commons.math.stat.StatUtils.mean(doubleArray39);
        double double42 = org.apache.commons.math.stat.StatUtils.variance(doubleArray39, 27.0d);
        double double44 = org.apache.commons.math.stat.StatUtils.variance(doubleArray39, (double) (byte) 10);
        double double45 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray31, doubleArray39);
        double double46 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray39);
        double double47 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray39);
        double double50 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (int) (byte) 0, 1);
        double double53 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, 0, (int) (byte) 1);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.0d + "'", double15 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 27.0d + "'", double22 == 27.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 27.0d + "'", double24 == 27.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 7.0d + "'", double32 == 7.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 10.0d + "'", double34 == 10.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 7.0d + "'", double35 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 7.0d + "'", double40 == 7.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 27.0d + "'", double42 == 27.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 27.0d + "'", double44 == 27.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 4.605170185988092d + "'", double46 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 100.0d + "'", double53 == 100.0d);
    }

    @Test
    public void test1644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1644");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (-1L), 0, 10L };
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray10, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, 21.0d);
        double double17 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, 4.605170185988092d);
        double double18 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray10);
        // The following exception was thrown during execution in test generation
        try {
            double double21 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10, (int) (byte) 1, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 37.0d + "'", double15 == 37.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 127.00000000000001d + "'", double17 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 101.0d + "'", double18 == 101.0d);
    }

    @Test
    public void test1645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1645");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray19);
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double28 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double double29 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double30 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray27);
        double double31 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray27);
        double double33 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray27);
        double double34 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double35 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray27);
        double double36 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double[] doubleArray40 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double41 = org.apache.commons.math.stat.StatUtils.mean(doubleArray40);
        double double43 = org.apache.commons.math.stat.StatUtils.variance(doubleArray40, 27.0d);
        double double45 = org.apache.commons.math.stat.StatUtils.variance(doubleArray40, (double) (byte) 10);
        double double46 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray40);
        double double48 = org.apache.commons.math.stat.StatUtils.variance(doubleArray40, (double) 10L);
        double double51 = org.apache.commons.math.stat.StatUtils.product(doubleArray40, 0, (int) (byte) 0);
        double double52 = org.apache.commons.math.stat.StatUtils.variance(doubleArray40);
        double double54 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray27, doubleArray40, 12.0d);
        double double55 = org.apache.commons.math.stat.StatUtils.mean(doubleArray40);
        // The following exception was thrown during execution in test generation
        try {
            double double58 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray40, (int) (short) 10, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 21.0d + "'", double7 == 21.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.605170185988092d + "'", double22 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 7.0d + "'", double28 == 7.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4.641588833612779d + "'", double29 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.641588833612779d + "'", double31 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4.641588833612779d + "'", double34 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 4.605170185988092d + "'", double35 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 4.641588833612779d + "'", double36 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 7.0d + "'", double41 == 7.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 27.0d + "'", double43 == 27.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 27.0d + "'", double45 == 27.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 4.641588833612779d + "'", double46 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 27.0d + "'", double48 == 27.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 27.0d + "'", double52 == 27.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 7.0d + "'", double55 == 7.0d);
    }

    @Test
    public void test1646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1646");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double[] doubleArray13 = new double[] { (-1L), 0, 10L };
        double double16 = org.apache.commons.math.stat.StatUtils.max(doubleArray13, 0, 0);
        double double17 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray13);
        double double19 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13, (double) 10);
        double[] doubleArray23 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double24 = org.apache.commons.math.stat.StatUtils.mean(doubleArray23);
        double double25 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray23);
        double double26 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray23);
        double double27 = org.apache.commons.math.stat.StatUtils.variance(doubleArray23);
        double double28 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray13, doubleArray23);
        double[] doubleArray32 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double33 = org.apache.commons.math.stat.StatUtils.mean(doubleArray32);
        double double34 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray13, doubleArray32);
        double[] doubleArray38 = new double[] { (-1L), 0, 10L };
        double double41 = org.apache.commons.math.stat.StatUtils.max(doubleArray38, 0, 0);
        double double42 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray38);
        double[] doubleArray46 = new double[] { (-1L), 0, 10L };
        double double49 = org.apache.commons.math.stat.StatUtils.max(doubleArray46, 0, 0);
        double double50 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray46);
        double double52 = org.apache.commons.math.stat.StatUtils.variance(doubleArray46, (double) 10);
        double double53 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray38, doubleArray46);
        double double54 = org.apache.commons.math.stat.StatUtils.max(doubleArray46);
        double double55 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray46);
        double double56 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray13, doubleArray46);
        double[] doubleArray60 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double61 = org.apache.commons.math.stat.StatUtils.mean(doubleArray60);
        double double63 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray60, (double) 100.0f);
        double[] doubleArray67 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double68 = org.apache.commons.math.stat.StatUtils.mean(doubleArray67);
        double double69 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray67);
        double double70 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray67);
        double double71 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray60, doubleArray67);
        double[] doubleArray75 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double76 = org.apache.commons.math.stat.StatUtils.mean(doubleArray75);
        double double77 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray75);
        double double78 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray60, doubleArray75);
        double double79 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray75);
        double double80 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray13, doubleArray75);
        double double81 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray75);
        double double85 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10.0f, 0, (int) (short) 1);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 4.641588833612779d + "'", double8 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 4.605170185988092d + "'", double9 == 4.605170185988092d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 101.0d + "'", double17 == 101.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 37.0d + "'", double19 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 7.0d + "'", double24 == 7.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 4.641588833612779d + "'", double25 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 4.605170185988092d + "'", double26 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 27.0d + "'", double27 == 27.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-4.0d) + "'", double28 == (-4.0d));
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 7.0d + "'", double33 == 7.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-12.0d) + "'", double34 == (-12.0d));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 101.0d + "'", double42 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 101.0d + "'", double50 == 101.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 37.0d + "'", double52 == 37.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 10.0d + "'", double54 == 10.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 101.0d + "'", double55 == 101.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 7.0d + "'", double61 == 7.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 10.0d + "'", double63 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 7.0d + "'", double68 == 7.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 4.641588833612779d + "'", double69 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 4.605170185988092d + "'", double70 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 7.0d + "'", double76 == 7.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 4.641588833612779d + "'", double77 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 4.641588833612779d + "'", double79 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + (-12.0d) + "'", double80 == (-12.0d));
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
    }

    @Test
    public void test1647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1647");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) (byte) 100);
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double double15 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13);
        double double16 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray13);
        double double17 = org.apache.commons.math.stat.StatUtils.max(doubleArray13);
        double double20 = org.apache.commons.math.stat.StatUtils.sum(doubleArray13, (int) (short) 1, 0);
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        double double28 = org.apache.commons.math.stat.StatUtils.max(doubleArray25, 0, 0);
        double double29 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray25);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        double double36 = org.apache.commons.math.stat.StatUtils.max(doubleArray33, 0, 0);
        double double37 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray33);
        double double39 = org.apache.commons.math.stat.StatUtils.variance(doubleArray33, (double) 10);
        double double40 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray25, doubleArray33);
        double double41 = org.apache.commons.math.stat.StatUtils.variance(doubleArray25);
        double double42 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray13, doubleArray25);
        double[] doubleArray46 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double47 = org.apache.commons.math.stat.StatUtils.mean(doubleArray46);
        double double48 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray46);
        double double49 = org.apache.commons.math.stat.StatUtils.sum(doubleArray46);
        double double50 = org.apache.commons.math.stat.StatUtils.max(doubleArray46);
        double[] doubleArray54 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double55 = org.apache.commons.math.stat.StatUtils.mean(doubleArray54);
        double double57 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray54, (double) 100.0f);
        double double58 = org.apache.commons.math.stat.StatUtils.mean(doubleArray54);
        double[] doubleArray62 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double63 = org.apache.commons.math.stat.StatUtils.mean(doubleArray62);
        double double65 = org.apache.commons.math.stat.StatUtils.variance(doubleArray62, 27.0d);
        double double67 = org.apache.commons.math.stat.StatUtils.variance(doubleArray62, (double) (byte) 10);
        double double68 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray54, doubleArray62);
        double double70 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray46, doubleArray54, (double) (short) 1);
        double double71 = org.apache.commons.math.stat.StatUtils.sum(doubleArray54);
        double double73 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray13, doubleArray54, 0.0d);
        double[] doubleArray77 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double78 = org.apache.commons.math.stat.StatUtils.mean(doubleArray77);
        double double79 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray77);
        double double80 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray77);
        double double81 = org.apache.commons.math.stat.StatUtils.variance(doubleArray77);
        double[] doubleArray85 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double86 = org.apache.commons.math.stat.StatUtils.mean(doubleArray85);
        double double87 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray77, doubleArray85);
        double double88 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray13, doubleArray85);
        double double90 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray85, (double) 100L);
        double double91 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4.641588833612779d + "'", double15 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.605170185988092d + "'", double16 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 101.0d + "'", double29 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 101.0d + "'", double37 == 101.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 37.0d + "'", double39 == 37.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 37.0d + "'", double41 == 37.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 4.0d + "'", double42 == 4.0d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 7.0d + "'", double47 == 7.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 4.641588833612779d + "'", double48 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 21.0d + "'", double49 == 21.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 7.0d + "'", double55 == 7.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 10.0d + "'", double57 == 10.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 7.0d + "'", double58 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 7.0d + "'", double63 == 7.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 27.0d + "'", double65 == 27.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 27.0d + "'", double67 == 27.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 21.0d + "'", double71 == 21.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 7.0d + "'", double78 == 7.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 4.641588833612779d + "'", double79 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 4.605170185988092d + "'", double80 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 27.0d + "'", double81 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 7.0d + "'", double86 == 7.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 4.605170185988092d + "'", double91 == 4.605170185988092d);
    }

    @Test
    public void test1648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1648");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double3 = org.apache.commons.math.stat.StatUtils.min(doubleArray0, 0, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1649");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray11, (double) 100.0f);
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, 27.0d);
        double double24 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) (byte) 10);
        double double25 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, (double) (short) 1);
        double double28 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double[] doubleArray32 = new double[] { (-1L), 0, 10L };
        double double35 = org.apache.commons.math.stat.StatUtils.max(doubleArray32, 0, 0);
        double double36 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray32);
        double[] doubleArray40 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double41 = org.apache.commons.math.stat.StatUtils.mean(doubleArray40);
        double double42 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray40);
        double double43 = org.apache.commons.math.stat.StatUtils.sum(doubleArray40);
        double double44 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray32, doubleArray40);
        double double45 = org.apache.commons.math.stat.StatUtils.sum(doubleArray32);
        double double48 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray32, (int) (short) 1, (int) (short) 0);
        double double49 = org.apache.commons.math.stat.StatUtils.product(doubleArray32);
        double double50 = org.apache.commons.math.stat.StatUtils.max(doubleArray32);
        double double51 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray32);
        double double53 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (-1.0d));
        // The following exception was thrown during execution in test generation
        try {
            double double56 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, 100, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.0d + "'", double15 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 27.0d + "'", double22 == 27.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 27.0d + "'", double24 == 27.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 27.0d + "'", double28 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 101.0d + "'", double36 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 7.0d + "'", double41 == 7.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 4.641588833612779d + "'", double42 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 21.0d + "'", double43 == 21.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-4.0d) + "'", double44 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 9.0d + "'", double45 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-0.0d) + "'", double49 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 12.0d + "'", double51 == 12.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 27.0d + "'", double53 == 27.0d);
    }

    @Test
    public void test1650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1650");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sum(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray11, doubleArray19);
        double double24 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double27 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11, (int) (short) 1, (int) (short) 0);
        double double28 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double29 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11);
        double double30 = org.apache.commons.math.stat.StatUtils.max(doubleArray11);
        double[] doubleArray34 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double35 = org.apache.commons.math.stat.StatUtils.mean(doubleArray34);
        double double36 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray34);
        double double37 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray34);
        double double38 = org.apache.commons.math.stat.StatUtils.max(doubleArray34);
        double double41 = org.apache.commons.math.stat.StatUtils.sum(doubleArray34, (int) (short) 1, 0);
        double double42 = org.apache.commons.math.stat.StatUtils.mean(doubleArray34);
        double[] doubleArray46 = new double[] { (-1L), 0, 10L };
        double double49 = org.apache.commons.math.stat.StatUtils.max(doubleArray46, 0, 0);
        double double50 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray46);
        double[] doubleArray54 = new double[] { (-1L), 0, 10L };
        double double57 = org.apache.commons.math.stat.StatUtils.max(doubleArray54, 0, 0);
        double double58 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray54);
        double double60 = org.apache.commons.math.stat.StatUtils.variance(doubleArray54, (double) 10);
        double double61 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray46, doubleArray54);
        double double62 = org.apache.commons.math.stat.StatUtils.variance(doubleArray46);
        double double63 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray34, doubleArray46);
        double double64 = org.apache.commons.math.stat.StatUtils.product(doubleArray46);
        double[] doubleArray68 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double69 = org.apache.commons.math.stat.StatUtils.mean(doubleArray68);
        double double70 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray68);
        double double71 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray68);
        double double72 = org.apache.commons.math.stat.StatUtils.max(doubleArray68);
        double double75 = org.apache.commons.math.stat.StatUtils.sum(doubleArray68, (int) (short) 1, 0);
        double double76 = org.apache.commons.math.stat.StatUtils.max(doubleArray68);
        double double77 = org.apache.commons.math.stat.StatUtils.min(doubleArray68);
        double double79 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray46, doubleArray68, (double) (byte) 100);
        double double80 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray11, doubleArray46);
        double double81 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray46);
        // The following exception was thrown during execution in test generation
        try {
            double double84 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray46, (int) ' ', 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 21.0d + "'", double22 == 21.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-4.0d) + "'", double23 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 9.0d + "'", double24 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 12.0d + "'", double28 == 12.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 37.0d + "'", double29 == 37.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 7.0d + "'", double35 == 7.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 4.641588833612779d + "'", double36 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.605170185988092d + "'", double37 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 10.0d + "'", double38 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 7.0d + "'", double42 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 101.0d + "'", double50 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 101.0d + "'", double58 == 101.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 37.0d + "'", double60 == 37.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 37.0d + "'", double62 == 37.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 4.0d + "'", double63 == 4.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-0.0d) + "'", double64 == (-0.0d));
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 7.0d + "'", double69 == 7.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 4.641588833612779d + "'", double70 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 4.605170185988092d + "'", double71 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 10.0d + "'", double72 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 10.0d + "'", double76 == 10.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.0d + "'", double77 == 1.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 127.0d + "'", double79 == 127.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double81));
    }

    @Test
    public void test1651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1651");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11, (int) (byte) 1, (int) (byte) 0);
        double double19 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11, 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            double double25 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, 10, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 201.0d + "'", double19 == 201.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
    }

    @Test
    public void test1652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1652");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        double double28 = org.apache.commons.math.stat.StatUtils.max(doubleArray25, 0, 0);
        double double29 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray25);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        double double36 = org.apache.commons.math.stat.StatUtils.max(doubleArray33, 0, 0);
        double double37 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray33);
        double double39 = org.apache.commons.math.stat.StatUtils.variance(doubleArray33, (double) 10);
        double double40 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray25, doubleArray33);
        double double42 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray25, 100.0d);
        double double43 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double44 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double45 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray49 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double50 = org.apache.commons.math.stat.StatUtils.mean(doubleArray49);
        double double51 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray49);
        double double52 = org.apache.commons.math.stat.StatUtils.sum(doubleArray49);
        double double53 = org.apache.commons.math.stat.StatUtils.max(doubleArray49);
        double[] doubleArray57 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double58 = org.apache.commons.math.stat.StatUtils.mean(doubleArray57);
        double double60 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray57, (double) 100.0f);
        double double61 = org.apache.commons.math.stat.StatUtils.mean(doubleArray57);
        double[] doubleArray65 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double66 = org.apache.commons.math.stat.StatUtils.mean(doubleArray65);
        double double68 = org.apache.commons.math.stat.StatUtils.variance(doubleArray65, 27.0d);
        double double70 = org.apache.commons.math.stat.StatUtils.variance(doubleArray65, (double) (byte) 10);
        double double71 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray57, doubleArray65);
        double double73 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray49, doubleArray57, (double) (short) 1);
        double double76 = org.apache.commons.math.stat.StatUtils.sum(doubleArray57, 0, (int) (byte) 0);
        double double77 = org.apache.commons.math.stat.StatUtils.product(doubleArray57);
        double double78 = org.apache.commons.math.stat.StatUtils.variance(doubleArray57);
        double double80 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray57, (double) 10);
        double double82 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray57, 12.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 101.0d + "'", double29 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 101.0d + "'", double37 == 101.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 37.0d + "'", double39 == 37.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 127.0d + "'", double42 == 127.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 27.0d + "'", double43 == 27.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 4.605170185988092d + "'", double44 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 7.0d + "'", double45 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 7.0d + "'", double50 == 7.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 4.641588833612779d + "'", double51 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 21.0d + "'", double52 == 21.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 10.0d + "'", double53 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 7.0d + "'", double58 == 7.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 10.0d + "'", double60 == 10.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 7.0d + "'", double61 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 7.0d + "'", double66 == 7.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 27.0d + "'", double68 == 27.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 27.0d + "'", double70 == 27.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 100.0d + "'", double77 == 100.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 27.0d + "'", double78 == 27.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 1.0d + "'", double82 == 1.0d);
    }

    @Test
    public void test1653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1653");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double3 = org.apache.commons.math.stat.StatUtils.mean(doubleArray0, (int) '#', (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1654");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        double double29 = org.apache.commons.math.stat.StatUtils.max(doubleArray26, 0, 0);
        double double30 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray26);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        double double37 = org.apache.commons.math.stat.StatUtils.max(doubleArray34, 0, 0);
        double double38 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray34);
        double double40 = org.apache.commons.math.stat.StatUtils.variance(doubleArray34, (double) 10);
        double double41 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray26, doubleArray34);
        double double42 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray34);
        double double43 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray18, doubleArray34);
        double[] doubleArray47 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double48 = org.apache.commons.math.stat.StatUtils.mean(doubleArray47);
        double double50 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray47, (double) 100.0f);
        double double51 = org.apache.commons.math.stat.StatUtils.variance(doubleArray47);
        double double52 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray18, doubleArray47);
        double double53 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray47);
        double double54 = org.apache.commons.math.stat.StatUtils.min(doubleArray47);
        double double57 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray47, 1, (int) (short) 0);
        double double58 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray47);
        // The following exception was thrown during execution in test generation
        try {
            double double62 = org.apache.commons.math.stat.StatUtils.variance(doubleArray47, 26.999999999999996d, (int) 'a', (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 7.0d + "'", double22 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 101.0d + "'", double30 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 101.0d + "'", double38 == 101.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 37.0d + "'", double40 == 37.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 101.0d + "'", double42 == 101.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4.0d + "'", double43 == 4.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 7.0d + "'", double48 == 7.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 27.0d + "'", double51 == 27.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 4.605170185988092d + "'", double53 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 4.605170185988092d + "'", double58 == 4.605170185988092d);
    }

    @Test
    public void test1655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1655");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (-1L), 0, 10L };
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray10, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, 21.0d);
        double double17 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, 4.605170185988092d);
        double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double19 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double23 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray10, (int) (byte) 1, (int) (byte) 1, 3.5200000000000005d);
        double[] doubleArray27 = new double[] { (-1L), 0, 10L };
        double double30 = org.apache.commons.math.stat.StatUtils.max(doubleArray27, 0, 0);
        double double31 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray27);
        double[] doubleArray35 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double36 = org.apache.commons.math.stat.StatUtils.mean(doubleArray35);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35);
        double double38 = org.apache.commons.math.stat.StatUtils.sum(doubleArray35);
        double double39 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray27, doubleArray35);
        double double40 = org.apache.commons.math.stat.StatUtils.max(doubleArray35);
        double double41 = org.apache.commons.math.stat.StatUtils.max(doubleArray35);
        double[] doubleArray45 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double46 = org.apache.commons.math.stat.StatUtils.mean(doubleArray45);
        double double48 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray45, (double) 100.0f);
        double double49 = org.apache.commons.math.stat.StatUtils.mean(doubleArray45);
        double[] doubleArray53 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double54 = org.apache.commons.math.stat.StatUtils.mean(doubleArray53);
        double double56 = org.apache.commons.math.stat.StatUtils.variance(doubleArray53, 27.0d);
        double double58 = org.apache.commons.math.stat.StatUtils.variance(doubleArray53, (double) (byte) 10);
        double double59 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray45, doubleArray53);
        double double60 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray35, doubleArray53);
        double double62 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray10, doubleArray53, (-4.0d));
        double double63 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray10);
        double double64 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double66 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, (double) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            double double69 = org.apache.commons.math.stat.StatUtils.min(doubleArray10, (-1), 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 37.0d + "'", double15 == 37.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 127.00000000000001d + "'", double17 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 3.0d + "'", double18 == 3.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 101.0d + "'", double31 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 7.0d + "'", double36 == 7.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 21.0d + "'", double38 == 21.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-4.0d) + "'", double39 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 10.0d + "'", double40 == 10.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 10.0d + "'", double41 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 7.0d + "'", double46 == 7.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 10.0d + "'", double48 == 10.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 7.0d + "'", double49 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 7.0d + "'", double54 == 7.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 27.0d + "'", double56 == 27.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 27.0d + "'", double58 == 27.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 127.0d + "'", double62 == 127.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 101.0d + "'", double63 == 101.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 3.0d + "'", double64 == 3.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 37.0d + "'", double66 == 37.0d);
    }

    @Test
    public void test1656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1656");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 27.0d);
        double double8 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) (byte) 10);
        double double9 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double11 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10L);
        double[] doubleArray15 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double16 = org.apache.commons.math.stat.StatUtils.mean(doubleArray15);
        double double18 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray15, (double) 100.0f);
        double[] doubleArray22 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double23 = org.apache.commons.math.stat.StatUtils.mean(doubleArray22);
        double double24 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray22);
        double double25 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray22);
        double double26 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray15, doubleArray22);
        double[] doubleArray30 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double31 = org.apache.commons.math.stat.StatUtils.mean(doubleArray30);
        double double32 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray30);
        double double33 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray15, doubleArray30);
        double[] doubleArray37 = new double[] { (-1L), 0, 10L };
        double double40 = org.apache.commons.math.stat.StatUtils.max(doubleArray37, 0, 0);
        double double41 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray37);
        double[] doubleArray45 = new double[] { (-1L), 0, 10L };
        double double48 = org.apache.commons.math.stat.StatUtils.max(doubleArray45, 0, 0);
        double double49 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray45);
        double double51 = org.apache.commons.math.stat.StatUtils.variance(doubleArray45, (double) 10);
        double double52 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray37, doubleArray45);
        double double54 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray15, doubleArray37, 100.0d);
        double double55 = org.apache.commons.math.stat.StatUtils.variance(doubleArray15);
        double[] doubleArray59 = new double[] { (-1L), 0, 10L };
        double double62 = org.apache.commons.math.stat.StatUtils.max(doubleArray59, 0, 0);
        double double63 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray59);
        double[] doubleArray67 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double68 = org.apache.commons.math.stat.StatUtils.mean(doubleArray67);
        double double69 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray67);
        double double70 = org.apache.commons.math.stat.StatUtils.sum(doubleArray67);
        double double71 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray59, doubleArray67);
        double double72 = org.apache.commons.math.stat.StatUtils.sum(doubleArray59);
        double double75 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray59, (int) (short) 1, (int) (short) 0);
        double double76 = org.apache.commons.math.stat.StatUtils.product(doubleArray59);
        double double78 = org.apache.commons.math.stat.StatUtils.variance(doubleArray59, (double) (byte) 10);
        double double80 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray15, doubleArray59, 0.0d);
        double double81 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray59);
        double double82 = org.apache.commons.math.stat.StatUtils.max(doubleArray59);
        double double85 = org.apache.commons.math.stat.StatUtils.product(doubleArray59, (int) (short) 1, 0);
        double double86 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray59);
        double double87 = org.apache.commons.math.stat.StatUtils.variance(doubleArray59);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 27.0d + "'", double6 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 27.0d + "'", double8 == 27.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 4.641588833612779d + "'", double9 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 27.0d + "'", double11 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 7.0d + "'", double16 == 7.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 7.0d + "'", double23 == 7.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 4.641588833612779d + "'", double24 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 4.605170185988092d + "'", double25 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 7.0d + "'", double31 == 7.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 4.641588833612779d + "'", double32 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 101.0d + "'", double41 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 101.0d + "'", double49 == 101.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 37.0d + "'", double51 == 37.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 127.0d + "'", double54 == 127.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 27.0d + "'", double55 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 101.0d + "'", double63 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 7.0d + "'", double68 == 7.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 4.641588833612779d + "'", double69 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 21.0d + "'", double70 == 21.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-4.0d) + "'", double71 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 9.0d + "'", double72 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-0.0d) + "'", double76 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 37.0d + "'", double78 == 37.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 127.0d + "'", double80 == 127.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 4.0d + "'", double81 == 4.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 10.0d + "'", double82 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double85));
        org.junit.Assert.assertTrue(Double.isNaN(double86));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 37.0d + "'", double87 == 37.0d);
    }

    @Test
    public void test1657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1657");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10);
        double double16 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double17 = org.apache.commons.math.stat.StatUtils.product(doubleArray10);
        double[] doubleArray21 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double22 = org.apache.commons.math.stat.StatUtils.mean(doubleArray21);
        double double24 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray21, (double) 100.0f);
        double[] doubleArray28 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double29 = org.apache.commons.math.stat.StatUtils.mean(doubleArray28);
        double double30 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray28);
        double double31 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28);
        double double32 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray21, doubleArray28);
        double[] doubleArray36 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double37 = org.apache.commons.math.stat.StatUtils.mean(doubleArray36);
        double double38 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray36);
        double double39 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray21, doubleArray36);
        double double40 = org.apache.commons.math.stat.StatUtils.mean(doubleArray36);
        double[] doubleArray44 = new double[] { (-1L), 0, 10L };
        double double47 = org.apache.commons.math.stat.StatUtils.max(doubleArray44, 0, 0);
        double double48 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray44);
        double[] doubleArray52 = new double[] { (-1L), 0, 10L };
        double double55 = org.apache.commons.math.stat.StatUtils.max(doubleArray52, 0, 0);
        double double56 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray52);
        double double58 = org.apache.commons.math.stat.StatUtils.variance(doubleArray52, (double) 10);
        double double59 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray44, doubleArray52);
        double double60 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray52);
        double double61 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray36, doubleArray52);
        double double62 = org.apache.commons.math.stat.StatUtils.max(doubleArray36);
        double double64 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray10, doubleArray36, (double) 1);
        double double66 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, (-5.6843418860808015E-14d));
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 27.0d + "'", double15 == 27.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.641588833612779d + "'", double16 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 100.0d + "'", double17 == 100.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 7.0d + "'", double22 == 7.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 10.0d + "'", double24 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 7.0d + "'", double29 == 7.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 4.641588833612779d + "'", double30 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.605170185988092d + "'", double31 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 7.0d + "'", double37 == 7.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 4.641588833612779d + "'", double38 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 7.0d + "'", double40 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 101.0d + "'", double48 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 101.0d + "'", double56 == 101.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 37.0d + "'", double58 == 37.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 101.0d + "'", double60 == 101.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 4.0d + "'", double61 == 4.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 10.0d + "'", double62 == 10.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 27.0d + "'", double66 == 27.0d);
    }

    @Test
    public void test1658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1658");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double19 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, (int) (short) 1, (int) (short) 0);
        double double20 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        double double22 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            double double25 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, 0, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 9.0d + "'", double16 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.0d) + "'", double20 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 37.0d + "'", double22 == 37.0d);
    }

    @Test
    public void test1659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1659");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) (byte) 100);
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double double15 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13);
        double double16 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray13);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double19 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray13, 37.0d);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double[] doubleArray24 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double25 = org.apache.commons.math.stat.StatUtils.mean(doubleArray24);
        double double26 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray24);
        double double27 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray24);
        double double28 = org.apache.commons.math.stat.StatUtils.variance(doubleArray24);
        double double29 = org.apache.commons.math.stat.StatUtils.min(doubleArray24);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        double double36 = org.apache.commons.math.stat.StatUtils.max(doubleArray33, 0, 0);
        double double37 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray33);
        double[] doubleArray41 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double42 = org.apache.commons.math.stat.StatUtils.mean(doubleArray41);
        double double43 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray41);
        double double44 = org.apache.commons.math.stat.StatUtils.sum(doubleArray41);
        double double45 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray33, doubleArray41);
        double double46 = org.apache.commons.math.stat.StatUtils.sum(doubleArray33);
        double double48 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray24, doubleArray33, 0.0d);
        double[] doubleArray52 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double53 = org.apache.commons.math.stat.StatUtils.mean(doubleArray52);
        double double55 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray52, (double) 100.0f);
        double double56 = org.apache.commons.math.stat.StatUtils.mean(doubleArray52);
        double[] doubleArray60 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double61 = org.apache.commons.math.stat.StatUtils.mean(doubleArray60);
        double double63 = org.apache.commons.math.stat.StatUtils.variance(doubleArray60, 27.0d);
        double double65 = org.apache.commons.math.stat.StatUtils.variance(doubleArray60, (double) (byte) 10);
        double double66 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray52, doubleArray60);
        double double67 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray24, doubleArray60);
        double double68 = org.apache.commons.math.stat.StatUtils.max(doubleArray60);
        double double69 = org.apache.commons.math.stat.StatUtils.max(doubleArray60);
        double double70 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray60);
        // The following exception was thrown during execution in test generation
        try {
            double double73 = org.apache.commons.math.stat.StatUtils.variance(doubleArray60, (int) (short) 100, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4.641588833612779d + "'", double15 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.605170185988092d + "'", double16 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 27.0d + "'", double17 == 27.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 7.0d + "'", double25 == 7.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 4.641588833612779d + "'", double26 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 4.605170185988092d + "'", double27 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 27.0d + "'", double28 == 27.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 101.0d + "'", double37 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 7.0d + "'", double42 == 7.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4.641588833612779d + "'", double43 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 21.0d + "'", double44 == 21.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-4.0d) + "'", double45 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 9.0d + "'", double46 == 9.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 127.0d + "'", double48 == 127.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 7.0d + "'", double53 == 7.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 10.0d + "'", double55 == 10.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 7.0d + "'", double56 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 7.0d + "'", double61 == 7.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 27.0d + "'", double63 == 27.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 27.0d + "'", double65 == 27.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 10.0d + "'", double68 == 10.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 10.0d + "'", double69 == 10.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
    }

    @Test
    public void test1660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1660");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double[] doubleArray27 = new double[] { (-1L), 0, 10L };
        double double30 = org.apache.commons.math.stat.StatUtils.max(doubleArray27, 0, 0);
        double double31 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray27);
        double[] doubleArray35 = new double[] { (-1L), 0, 10L };
        double double38 = org.apache.commons.math.stat.StatUtils.max(doubleArray35, 0, 0);
        double double39 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray35);
        double double41 = org.apache.commons.math.stat.StatUtils.variance(doubleArray35, (double) 10);
        double double42 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray27, doubleArray35);
        double double43 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray35);
        double double46 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35, 1, (int) (short) 0);
        double double48 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray18, doubleArray35, 101.0d);
        double[] doubleArray52 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double53 = org.apache.commons.math.stat.StatUtils.mean(doubleArray52);
        double double54 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray52);
        double double55 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray52);
        double double56 = org.apache.commons.math.stat.StatUtils.max(doubleArray52);
        double double57 = org.apache.commons.math.stat.StatUtils.sum(doubleArray52);
        double[] doubleArray61 = new double[] { (-1L), 0, 10L };
        double double64 = org.apache.commons.math.stat.StatUtils.max(doubleArray61, 0, 0);
        double double65 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray61);
        double[] doubleArray69 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double70 = org.apache.commons.math.stat.StatUtils.mean(doubleArray69);
        double double71 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray69);
        double double72 = org.apache.commons.math.stat.StatUtils.sum(doubleArray69);
        double double73 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray61, doubleArray69);
        double double74 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray52, doubleArray69);
        double double75 = org.apache.commons.math.stat.StatUtils.variance(doubleArray52);
        double double77 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray18, doubleArray52, 50.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double80 = org.apache.commons.math.stat.StatUtils.min(doubleArray52, 10, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.641588833612779d + "'", double23 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 101.0d + "'", double31 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 101.0d + "'", double39 == 101.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 37.0d + "'", double41 == 37.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 127.0d + "'", double48 == 127.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 7.0d + "'", double53 == 7.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 4.641588833612779d + "'", double54 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 4.605170185988092d + "'", double55 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 10.0d + "'", double56 == 10.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 21.0d + "'", double57 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 101.0d + "'", double65 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 7.0d + "'", double70 == 7.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 4.641588833612779d + "'", double71 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 21.0d + "'", double72 == 21.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-4.0d) + "'", double73 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 27.0d + "'", double75 == 27.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
    }

    @Test
    public void test1661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1661");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double[] doubleArray19 = new double[] { (-1L), 0, 10L };
        double double22 = org.apache.commons.math.stat.StatUtils.max(doubleArray19, 0, 0);
        double double23 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray19);
        double double25 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) 10);
        double double26 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11);
        double double29 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, 3.0d);
        double double30 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, 10.000000000000002d);
        double double33 = org.apache.commons.math.stat.StatUtils.product(doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double36 = org.apache.commons.math.stat.StatUtils.product(doubleArray11, (int) (byte) 0, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 4.641588833612779d + "'", double7 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 101.0d + "'", double23 == 101.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 37.0d + "'", double25 == 37.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 37.0d + "'", double27 == 37.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 127.0d + "'", double29 == 127.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 37.0d + "'", double32 == 37.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.0d) + "'", double33 == (-0.0d));
    }

    @Test
    public void test1662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1662");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray10);
        double double16 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, (double) '#');
        double double17 = org.apache.commons.math.stat.StatUtils.product(doubleArray10);
        // The following exception was thrown during execution in test generation
        try {
            double double20 = org.apache.commons.math.stat.StatUtils.max(doubleArray10, (int) (byte) 10, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 100.0d + "'", double17 == 100.0d);
    }

    @Test
    public void test1663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1663");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, 0.0d);
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double double33 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray31);
        double double34 = org.apache.commons.math.stat.StatUtils.sum(doubleArray31);
        double[] doubleArray38 = new double[] { (-1L), 0, 10L };
        double double41 = org.apache.commons.math.stat.StatUtils.max(doubleArray38, 0, 0);
        double double43 = org.apache.commons.math.stat.StatUtils.variance(doubleArray38, 21.0d);
        double double45 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray31, doubleArray38, 4.605170185988092d);
        double double46 = org.apache.commons.math.stat.StatUtils.mean(doubleArray38);
        double double47 = org.apache.commons.math.stat.StatUtils.max(doubleArray38);
        double double48 = org.apache.commons.math.stat.StatUtils.sum(doubleArray38);
        double[] doubleArray52 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double53 = org.apache.commons.math.stat.StatUtils.mean(doubleArray52);
        double double54 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray52);
        double double55 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray52);
        double double56 = org.apache.commons.math.stat.StatUtils.max(doubleArray52);
        double double59 = org.apache.commons.math.stat.StatUtils.sum(doubleArray52, (int) (short) 1, 0);
        double double62 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray52, (int) (short) 0, (int) (byte) 0);
        double double64 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray38, doubleArray52, (double) '#');
        double double65 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray52);
        double[] doubleArray69 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double70 = org.apache.commons.math.stat.StatUtils.mean(doubleArray69);
        double double71 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray69);
        double double72 = org.apache.commons.math.stat.StatUtils.sum(doubleArray69);
        double double73 = org.apache.commons.math.stat.StatUtils.sum(doubleArray69);
        double double74 = org.apache.commons.math.stat.StatUtils.min(doubleArray69);
        double double75 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray69);
        double double76 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray69);
        double double77 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray69);
        double double78 = org.apache.commons.math.stat.StatUtils.min(doubleArray69);
        double double80 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray69, (double) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            double double83 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray69, (int) (byte) -1, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 127.0d + "'", double27 == 127.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 7.0d + "'", double32 == 7.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4.641588833612779d + "'", double33 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 21.0d + "'", double34 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 37.0d + "'", double43 == 37.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 127.00000000000001d + "'", double45 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 3.0d + "'", double46 == 3.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 10.0d + "'", double47 == 10.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 9.0d + "'", double48 == 9.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 7.0d + "'", double53 == 7.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 4.641588833612779d + "'", double54 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 4.605170185988092d + "'", double55 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 10.0d + "'", double56 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 127.0d + "'", double64 == 127.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 7.0d + "'", double70 == 7.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 4.641588833612779d + "'", double71 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 21.0d + "'", double72 == 21.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 21.0d + "'", double73 == 21.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 201.0d + "'", double75 == 201.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 4.605170185988092d + "'", double77 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.0d + "'", double78 == 1.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.0d + "'", double80 == 1.0d);
    }

    @Test
    public void test1664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1664");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double11 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, (int) (short) 0, (int) (byte) 0);
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 127.00000000000001d, 100, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 7.0d + "'", double8 == 7.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
    }

    @Test
    public void test1665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1665");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double17 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double18 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        double[] doubleArray22 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double23 = org.apache.commons.math.stat.StatUtils.mean(doubleArray22);
        double double25 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray22, (double) 100.0f);
        double[] doubleArray29 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double30 = org.apache.commons.math.stat.StatUtils.mean(doubleArray29);
        double double31 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray29);
        double double32 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray29);
        double double33 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray22, doubleArray29);
        double[] doubleArray37 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double38 = org.apache.commons.math.stat.StatUtils.mean(doubleArray37);
        double double39 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray37);
        double double40 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray22, doubleArray37);
        double double41 = org.apache.commons.math.stat.StatUtils.mean(doubleArray37);
        double[] doubleArray45 = new double[] { (-1L), 0, 10L };
        double double48 = org.apache.commons.math.stat.StatUtils.max(doubleArray45, 0, 0);
        double double49 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray45);
        double[] doubleArray53 = new double[] { (-1L), 0, 10L };
        double double56 = org.apache.commons.math.stat.StatUtils.max(doubleArray53, 0, 0);
        double double57 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray53);
        double double59 = org.apache.commons.math.stat.StatUtils.variance(doubleArray53, (double) 10);
        double double60 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray45, doubleArray53);
        double double61 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray53);
        double double62 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray37, doubleArray53);
        double[] doubleArray66 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double67 = org.apache.commons.math.stat.StatUtils.mean(doubleArray66);
        double double69 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray66, (double) 100.0f);
        double double70 = org.apache.commons.math.stat.StatUtils.variance(doubleArray66);
        double double71 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray37, doubleArray66);
        double double72 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray66);
        double double74 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray66, (double) 100L);
        // The following exception was thrown during execution in test generation
        try {
            double double77 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3, (int) (short) 10, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.0d) + "'", double18 == (-0.0d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 7.0d + "'", double23 == 7.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 10.0d + "'", double25 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 7.0d + "'", double30 == 7.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.641588833612779d + "'", double31 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 4.605170185988092d + "'", double32 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 7.0d + "'", double38 == 7.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 4.641588833612779d + "'", double39 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 7.0d + "'", double41 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 101.0d + "'", double49 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 101.0d + "'", double57 == 101.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 37.0d + "'", double59 == 37.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 101.0d + "'", double61 == 101.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 4.0d + "'", double62 == 4.0d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 7.0d + "'", double67 == 7.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 10.0d + "'", double69 == 10.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 27.0d + "'", double70 == 27.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 4.605170185988092d + "'", double72 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 127.0d + "'", double74 == 127.0d);
    }

    @Test
    public void test1666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1666");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double[] doubleArray9 = new double[] { (-1L), 0, 10L };
        double double12 = org.apache.commons.math.stat.StatUtils.max(doubleArray9, 0, 0);
        double double13 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray9);
        double[] doubleArray17 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray17);
        double double19 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray17);
        double double20 = org.apache.commons.math.stat.StatUtils.sum(doubleArray17);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray9, doubleArray17);
        double double22 = org.apache.commons.math.stat.StatUtils.max(doubleArray17);
        double double23 = org.apache.commons.math.stat.StatUtils.max(doubleArray17);
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double28 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double double30 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray27, (double) 100.0f);
        double double31 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double[] doubleArray35 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double36 = org.apache.commons.math.stat.StatUtils.mean(doubleArray35);
        double double38 = org.apache.commons.math.stat.StatUtils.variance(doubleArray35, 27.0d);
        double double40 = org.apache.commons.math.stat.StatUtils.variance(doubleArray35, (double) (byte) 10);
        double double41 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray27, doubleArray35);
        double double42 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray17, doubleArray35);
        double double43 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray17);
        double double44 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray17);
        // The following exception was thrown during execution in test generation
        try {
            double double47 = org.apache.commons.math.stat.StatUtils.min(doubleArray3, (int) '#', (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 101.0d + "'", double13 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 7.0d + "'", double18 == 7.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4.641588833612779d + "'", double19 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 21.0d + "'", double20 == 21.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-4.0d) + "'", double21 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 7.0d + "'", double28 == 7.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 7.0d + "'", double31 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 7.0d + "'", double36 == 7.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 27.0d + "'", double38 == 27.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 27.0d + "'", double40 == 27.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 201.0d + "'", double43 == 201.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
    }

    @Test
    public void test1667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1667");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double[] doubleArray14 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray14);
        double double17 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray14, (double) 100.0f);
        double double19 = org.apache.commons.math.stat.StatUtils.variance(doubleArray14, 4.605170185988092d);
        double double20 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray14);
        double double21 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray14);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray14);
        // The following exception was thrown during execution in test generation
        try {
            double double25 = org.apache.commons.math.stat.StatUtils.mean(doubleArray14, (int) (short) 10, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-1.0d) + "'", double8 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 37.0d + "'", double10 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.0d + "'", double15 == 7.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 27.000000000000004d + "'", double19 == 27.000000000000004d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.605170185988092d + "'", double20 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-12.0d) + "'", double21 == (-12.0d));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
    }

    @Test
    public void test1668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1668");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray19);
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double28 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double double29 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double30 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray27);
        double double31 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray27);
        double double33 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray27);
        double double34 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double35 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray27);
        double double36 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray27);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 21.0d + "'", double7 == 21.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.605170185988092d + "'", double22 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 7.0d + "'", double28 == 7.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4.641588833612779d + "'", double29 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.641588833612779d + "'", double31 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4.641588833612779d + "'", double34 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 4.605170185988092d + "'", double35 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 4.605170185988092d + "'", double36 == 4.605170185988092d);
    }

    @Test
    public void test1669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1669");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double double16 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.variance(doubleArray20, 27.0d);
        double double25 = org.apache.commons.math.stat.StatUtils.variance(doubleArray20, (double) (byte) 10);
        double double26 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray20);
        double double27 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray20);
        double[] doubleArray31 = new double[] { (-1L), 0, 10L };
        double double34 = org.apache.commons.math.stat.StatUtils.max(doubleArray31, 0, 0);
        double double36 = org.apache.commons.math.stat.StatUtils.variance(doubleArray31, 21.0d);
        double double37 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray20, doubleArray31);
        double double38 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray20);
        // The following exception was thrown during execution in test generation
        try {
            double double41 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20, (int) (short) -1, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 4.641588833612779d + "'", double8 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 7.0d + "'", double16 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 27.0d + "'", double23 == 27.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 27.0d + "'", double25 == 27.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 4.605170185988092d + "'", double27 == 4.605170185988092d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 37.0d + "'", double36 == 37.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 12.0d + "'", double37 == 12.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
    }

    @Test
    public void test1670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1670");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10);
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double double15 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13);
        double double16 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray13);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double18 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray13);
        double[] doubleArray22 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double23 = org.apache.commons.math.stat.StatUtils.mean(doubleArray22);
        double double24 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray22);
        double[] doubleArray28 = new double[] { (-1L), 0, 10L };
        double double31 = org.apache.commons.math.stat.StatUtils.max(doubleArray28, 0, 0);
        double double32 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray28);
        double[] doubleArray36 = new double[] { (-1L), 0, 10L };
        double double39 = org.apache.commons.math.stat.StatUtils.max(doubleArray36, 0, 0);
        double double40 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray36);
        double double42 = org.apache.commons.math.stat.StatUtils.variance(doubleArray36, (double) 10);
        double double43 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray28, doubleArray36);
        double double44 = org.apache.commons.math.stat.StatUtils.max(doubleArray36);
        double double45 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray36);
        double double46 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray36);
        double[] doubleArray50 = new double[] { (-1L), 0, 10L };
        double double53 = org.apache.commons.math.stat.StatUtils.max(doubleArray50, 0, 0);
        double double54 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray50);
        double[] doubleArray58 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double59 = org.apache.commons.math.stat.StatUtils.mean(doubleArray58);
        double double60 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray58);
        double double61 = org.apache.commons.math.stat.StatUtils.sum(doubleArray58);
        double double62 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray50, doubleArray58);
        double double63 = org.apache.commons.math.stat.StatUtils.sum(doubleArray50);
        double double66 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray50, (int) (short) 1, (int) (short) 0);
        double double69 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray50, (int) (byte) 0, (int) (byte) 0);
        double double70 = org.apache.commons.math.stat.StatUtils.min(doubleArray50);
        double[] doubleArray74 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double75 = org.apache.commons.math.stat.StatUtils.mean(doubleArray74);
        double double76 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray74);
        double double77 = org.apache.commons.math.stat.StatUtils.sum(doubleArray74);
        double double78 = org.apache.commons.math.stat.StatUtils.sum(doubleArray74);
        double double79 = org.apache.commons.math.stat.StatUtils.max(doubleArray74);
        double double80 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray74);
        double double81 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray50, doubleArray74);
        double double83 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray36, doubleArray50, (double) (-1L));
        double double84 = org.apache.commons.math.stat.StatUtils.variance(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4.641588833612779d + "'", double15 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.605170185988092d + "'", double16 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 27.0d + "'", double17 == 27.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-4.0d) + "'", double18 == (-4.0d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 7.0d + "'", double23 == 7.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-12.0d) + "'", double24 == (-12.0d));
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 101.0d + "'", double32 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 101.0d + "'", double40 == 101.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 37.0d + "'", double42 == 37.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 10.0d + "'", double44 == 10.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 101.0d + "'", double45 == 101.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 101.0d + "'", double54 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 7.0d + "'", double59 == 7.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 4.641588833612779d + "'", double60 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 21.0d + "'", double61 == 21.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-4.0d) + "'", double62 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 9.0d + "'", double63 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-1.0d) + "'", double70 == (-1.0d));
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 7.0d + "'", double75 == 7.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 4.641588833612779d + "'", double76 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 21.0d + "'", double77 == 21.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 21.0d + "'", double78 == 21.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 10.0d + "'", double79 == 10.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 201.0d + "'", double80 == 201.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-4.0d) + "'", double81 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 37.0d + "'", double84 == 37.0d);
    }

    @Test
    public void test1671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1671");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, 0.0d);
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double double33 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray31);
        double double34 = org.apache.commons.math.stat.StatUtils.sum(doubleArray31);
        double[] doubleArray38 = new double[] { (-1L), 0, 10L };
        double double41 = org.apache.commons.math.stat.StatUtils.max(doubleArray38, 0, 0);
        double double43 = org.apache.commons.math.stat.StatUtils.variance(doubleArray38, 21.0d);
        double double45 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray31, doubleArray38, 4.605170185988092d);
        double double46 = org.apache.commons.math.stat.StatUtils.mean(doubleArray38);
        double double47 = org.apache.commons.math.stat.StatUtils.max(doubleArray38);
        double double48 = org.apache.commons.math.stat.StatUtils.sum(doubleArray38);
        double[] doubleArray52 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double53 = org.apache.commons.math.stat.StatUtils.mean(doubleArray52);
        double double54 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray52);
        double double55 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray52);
        double double56 = org.apache.commons.math.stat.StatUtils.max(doubleArray52);
        double double59 = org.apache.commons.math.stat.StatUtils.sum(doubleArray52, (int) (short) 1, 0);
        double double62 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray52, (int) (short) 0, (int) (byte) 0);
        double double64 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray38, doubleArray52, (double) '#');
        double double65 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray52);
        double[] doubleArray69 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double70 = org.apache.commons.math.stat.StatUtils.mean(doubleArray69);
        double double71 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray69);
        double double72 = org.apache.commons.math.stat.StatUtils.sum(doubleArray69);
        double double73 = org.apache.commons.math.stat.StatUtils.sum(doubleArray69);
        double double74 = org.apache.commons.math.stat.StatUtils.min(doubleArray69);
        double double75 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray69);
        double double76 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray69);
        double[] doubleArray80 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double81 = org.apache.commons.math.stat.StatUtils.mean(doubleArray80);
        double double82 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray80);
        double double83 = org.apache.commons.math.stat.StatUtils.sum(doubleArray80);
        double[] doubleArray87 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double88 = org.apache.commons.math.stat.StatUtils.mean(doubleArray87);
        double double89 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray87);
        double double90 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray87);
        double double91 = org.apache.commons.math.stat.StatUtils.max(doubleArray87);
        double double93 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray80, doubleArray87, (double) '#');
        double double94 = org.apache.commons.math.stat.StatUtils.min(doubleArray80);
        double double95 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray80);
        double double96 = org.apache.commons.math.stat.StatUtils.max(doubleArray80);
        double double98 = org.apache.commons.math.stat.StatUtils.variance(doubleArray80, 37.00000000000023d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 127.0d + "'", double27 == 127.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 7.0d + "'", double32 == 7.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4.641588833612779d + "'", double33 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 21.0d + "'", double34 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 37.0d + "'", double43 == 37.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 127.00000000000001d + "'", double45 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 3.0d + "'", double46 == 3.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 10.0d + "'", double47 == 10.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 9.0d + "'", double48 == 9.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 7.0d + "'", double53 == 7.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 4.641588833612779d + "'", double54 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 4.605170185988092d + "'", double55 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 10.0d + "'", double56 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 127.0d + "'", double64 == 127.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 7.0d + "'", double70 == 7.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 4.641588833612779d + "'", double71 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 21.0d + "'", double72 == 21.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 21.0d + "'", double73 == 21.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 201.0d + "'", double75 == 201.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 7.0d + "'", double81 == 7.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 4.641588833612779d + "'", double82 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 21.0d + "'", double83 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 7.0d + "'", double88 == 7.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 4.641588833612779d + "'", double89 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 4.605170185988092d + "'", double90 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 10.0d + "'", double91 == 10.0d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.0d + "'", double93 == 0.0d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 1.0d + "'", double94 == 1.0d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 10.0d + "'", double96 == 10.0d);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 27.0d + "'", double98 == 27.0d);
    }

    @Test
    public void test1672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1672");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        double double29 = org.apache.commons.math.stat.StatUtils.max(doubleArray26, 0, 0);
        double double30 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray26);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        double double37 = org.apache.commons.math.stat.StatUtils.max(doubleArray34, 0, 0);
        double double38 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray34);
        double double40 = org.apache.commons.math.stat.StatUtils.variance(doubleArray34, (double) 10);
        double double41 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray26, doubleArray34);
        double double42 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray34);
        double double43 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray18, doubleArray34);
        double double44 = org.apache.commons.math.stat.StatUtils.sum(doubleArray18);
        double[] doubleArray48 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double49 = org.apache.commons.math.stat.StatUtils.mean(doubleArray48);
        double double50 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray48);
        double double51 = org.apache.commons.math.stat.StatUtils.sum(doubleArray48);
        double[] doubleArray55 = new double[] { (-1L), 0, 10L };
        double double58 = org.apache.commons.math.stat.StatUtils.max(doubleArray55, 0, 0);
        double double60 = org.apache.commons.math.stat.StatUtils.variance(doubleArray55, 21.0d);
        double double62 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray48, doubleArray55, 4.605170185988092d);
        double double63 = org.apache.commons.math.stat.StatUtils.mean(doubleArray55);
        double double64 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray55);
        double double65 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray18, doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 7.0d + "'", double22 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 101.0d + "'", double30 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 101.0d + "'", double38 == 101.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 37.0d + "'", double40 == 37.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 101.0d + "'", double42 == 101.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4.0d + "'", double43 == 4.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 21.0d + "'", double44 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 7.0d + "'", double49 == 7.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4.641588833612779d + "'", double50 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 21.0d + "'", double51 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 37.0d + "'", double60 == 37.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 127.00000000000001d + "'", double62 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 3.0d + "'", double63 == 3.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 12.0d + "'", double65 == 12.0d);
    }

    @Test
    public void test1673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1673");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 4.641588833612779d + "'", double8 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 27.0d + "'", double9 == 27.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
    }

    @Test
    public void test1674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1674");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.min(doubleArray11);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.variance(doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.min(doubleArray20);
        double[] doubleArray29 = new double[] { (-1L), 0, 10L };
        double double32 = org.apache.commons.math.stat.StatUtils.max(doubleArray29, 0, 0);
        double double33 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray29);
        double[] doubleArray37 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double38 = org.apache.commons.math.stat.StatUtils.mean(doubleArray37);
        double double39 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray37);
        double double40 = org.apache.commons.math.stat.StatUtils.sum(doubleArray37);
        double double41 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray29, doubleArray37);
        double double42 = org.apache.commons.math.stat.StatUtils.sum(doubleArray29);
        double double44 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray20, doubleArray29, 0.0d);
        double double46 = org.apache.commons.math.stat.StatUtils.variance(doubleArray29, (double) 1L);
        double[] doubleArray50 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double51 = org.apache.commons.math.stat.StatUtils.mean(doubleArray50);
        double double53 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray50, (double) 100.0f);
        double[] doubleArray57 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double58 = org.apache.commons.math.stat.StatUtils.mean(doubleArray57);
        double double59 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray57);
        double double60 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray57);
        double double61 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray50, doubleArray57);
        double[] doubleArray65 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double66 = org.apache.commons.math.stat.StatUtils.mean(doubleArray65);
        double double67 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray65);
        double double68 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray50, doubleArray65);
        double[] doubleArray72 = new double[] { (-1L), 0, 10L };
        double double75 = org.apache.commons.math.stat.StatUtils.max(doubleArray72, 0, 0);
        double double76 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray72);
        double[] doubleArray80 = new double[] { (-1L), 0, 10L };
        double double83 = org.apache.commons.math.stat.StatUtils.max(doubleArray80, 0, 0);
        double double84 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray80);
        double double86 = org.apache.commons.math.stat.StatUtils.variance(doubleArray80, (double) 10);
        double double87 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray72, doubleArray80);
        double double89 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray50, doubleArray72, 100.0d);
        double double90 = org.apache.commons.math.stat.StatUtils.variance(doubleArray50);
        double double91 = org.apache.commons.math.stat.StatUtils.sum(doubleArray50);
        double double92 = org.apache.commons.math.stat.StatUtils.variance(doubleArray50);
        double double95 = org.apache.commons.math.stat.StatUtils.min(doubleArray50, (int) (byte) 0, 0);
        double double96 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray50);
        double double97 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray29, doubleArray50);
        double double98 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.605170185988092d + "'", double23 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 27.0d + "'", double24 == 27.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 101.0d + "'", double33 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 7.0d + "'", double38 == 7.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 4.641588833612779d + "'", double39 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 21.0d + "'", double40 == 21.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-4.0d) + "'", double41 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 9.0d + "'", double42 == 9.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 127.0d + "'", double44 == 127.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 37.0d + "'", double46 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 7.0d + "'", double51 == 7.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 10.0d + "'", double53 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 7.0d + "'", double58 == 7.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4.641588833612779d + "'", double59 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 4.605170185988092d + "'", double60 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 7.0d + "'", double66 == 7.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 4.641588833612779d + "'", double67 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 101.0d + "'", double76 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double83));
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 101.0d + "'", double84 == 101.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 37.0d + "'", double86 == 37.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 127.0d + "'", double89 == 127.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 27.0d + "'", double90 == 27.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 21.0d + "'", double91 == 21.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 27.0d + "'", double92 == 27.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double95));
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 4.605170185988092d + "'", double96 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + (-4.0d) + "'", double97 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 0.0d + "'", double98 == 0.0d);
    }

    @Test
    public void test1675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1675");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, 0.0d);
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double double34 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray31, (double) 100.0f);
        double double35 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double[] doubleArray39 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double40 = org.apache.commons.math.stat.StatUtils.mean(doubleArray39);
        double double42 = org.apache.commons.math.stat.StatUtils.variance(doubleArray39, 27.0d);
        double double44 = org.apache.commons.math.stat.StatUtils.variance(doubleArray39, (double) (byte) 10);
        double double45 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray31, doubleArray39);
        double double46 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray39);
        double double47 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray39);
        double double49 = org.apache.commons.math.stat.StatUtils.variance(doubleArray39, (double) (short) 100);
        double double50 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray39);
        double double52 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray39, (double) 1L);
        double double53 = org.apache.commons.math.stat.StatUtils.product(doubleArray39);
        // The following exception was thrown during execution in test generation
        try {
            double double56 = org.apache.commons.math.stat.StatUtils.min(doubleArray39, (int) (short) -1, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 127.0d + "'", double27 == 127.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 7.0d + "'", double32 == 7.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 10.0d + "'", double34 == 10.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 7.0d + "'", double35 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 7.0d + "'", double40 == 7.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 27.0d + "'", double42 == 27.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 27.0d + "'", double44 == 27.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 201.0d + "'", double47 == 201.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 27.0d + "'", double49 == 27.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4.641588833612779d + "'", double50 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 100.0d + "'", double53 == 100.0d);
    }

    @Test
    public void test1676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1676");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10);
        double[] doubleArray13 = new double[] { (-1L), 0, 10L };
        double double16 = org.apache.commons.math.stat.StatUtils.max(doubleArray13, 0, 0);
        double double17 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray13);
        double double18 = org.apache.commons.math.stat.StatUtils.min(doubleArray13);
        double double19 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double20 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double22 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray13, (double) 100.0f);
        double double23 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray13);
        // The following exception was thrown during execution in test generation
        try {
            double double26 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13, (int) (short) 10, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 101.0d + "'", double17 == 101.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1.0d) + "'", double18 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 37.0d + "'", double19 == 37.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 37.0d + "'", double20 == 37.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
    }

    @Test
    public void test1677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1677");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            double double10 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, Double.NaN, (int) (short) 100, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
    }

    @Test
    public void test1678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1678");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double11 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double12 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        double double15 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (byte) 0, 1);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 21.0d + "'", double7 == 21.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 201.0d + "'", double9 == 201.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 7.0d + "'", double10 == 7.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 100.0d + "'", double12 == 100.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
    }

    @Test
    public void test1679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1679");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray11, (double) 100.0f);
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, 27.0d);
        double double24 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) (byte) 10);
        double double25 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, (double) (short) 1);
        double double28 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double[] doubleArray32 = new double[] { (-1L), 0, 10L };
        double double35 = org.apache.commons.math.stat.StatUtils.max(doubleArray32, 0, 0);
        double double36 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray32);
        double[] doubleArray40 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double41 = org.apache.commons.math.stat.StatUtils.mean(doubleArray40);
        double double42 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray40);
        double double43 = org.apache.commons.math.stat.StatUtils.sum(doubleArray40);
        double double44 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray32, doubleArray40);
        double double45 = org.apache.commons.math.stat.StatUtils.sum(doubleArray32);
        double double48 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray32, (int) (short) 1, (int) (short) 0);
        double double49 = org.apache.commons.math.stat.StatUtils.product(doubleArray32);
        double double50 = org.apache.commons.math.stat.StatUtils.max(doubleArray32);
        double double51 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray32);
        double double52 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray32);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.0d + "'", double15 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 27.0d + "'", double22 == 27.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 27.0d + "'", double24 == 27.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 27.0d + "'", double28 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 101.0d + "'", double36 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 7.0d + "'", double41 == 7.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 4.641588833612779d + "'", double42 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 21.0d + "'", double43 == 21.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-4.0d) + "'", double44 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 9.0d + "'", double45 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-0.0d) + "'", double49 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 12.0d + "'", double51 == 12.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
    }

    @Test
    public void test1680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1680");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, 0.0d);
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double double34 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray31, (double) 100.0f);
        double double35 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double[] doubleArray39 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double40 = org.apache.commons.math.stat.StatUtils.mean(doubleArray39);
        double double42 = org.apache.commons.math.stat.StatUtils.variance(doubleArray39, 27.0d);
        double double44 = org.apache.commons.math.stat.StatUtils.variance(doubleArray39, (double) (byte) 10);
        double double45 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray31, doubleArray39);
        double double46 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray39);
        double double47 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray39);
        double double49 = org.apache.commons.math.stat.StatUtils.variance(doubleArray39, (double) (short) 100);
        double double50 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray39);
        double double52 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray39, (double) 1L);
        double double53 = org.apache.commons.math.stat.StatUtils.product(doubleArray39);
        double double54 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray39);
        double double55 = org.apache.commons.math.stat.StatUtils.variance(doubleArray39);
        double double56 = org.apache.commons.math.stat.StatUtils.max(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 127.0d + "'", double27 == 127.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 7.0d + "'", double32 == 7.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 10.0d + "'", double34 == 10.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 7.0d + "'", double35 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 7.0d + "'", double40 == 7.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 27.0d + "'", double42 == 27.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 27.0d + "'", double44 == 27.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 201.0d + "'", double47 == 201.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 27.0d + "'", double49 == 27.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4.641588833612779d + "'", double50 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 100.0d + "'", double53 == 100.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 4.641588833612779d + "'", double54 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 27.0d + "'", double55 == 27.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 10.0d + "'", double56 == 10.0d);
    }

    @Test
    public void test1681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1681");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double17 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double18 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double[] doubleArray22 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double23 = org.apache.commons.math.stat.StatUtils.mean(doubleArray22);
        double double24 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray22);
        double double25 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray22);
        double double26 = org.apache.commons.math.stat.StatUtils.max(doubleArray22);
        double double29 = org.apache.commons.math.stat.StatUtils.sum(doubleArray22, (int) (short) 1, 0);
        double double32 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray22, (int) (short) 0, (int) (byte) 0);
        double double35 = org.apache.commons.math.stat.StatUtils.product(doubleArray22, 0, 0);
        double double38 = org.apache.commons.math.stat.StatUtils.min(doubleArray22, (int) (byte) 0, 0);
        double double39 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray22);
        double double40 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double41 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double44 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, 1, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 7.0d + "'", double23 == 7.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 4.641588833612779d + "'", double24 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 4.605170185988092d + "'", double25 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-4.0d) + "'", double39 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 9.0d + "'", double40 == 9.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 37.0d + "'", double41 == 37.0d);
    }

    @Test
    public void test1682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1682");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double12 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, 10, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 7.0d + "'", double8 == 7.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 7.0d + "'", double9 == 7.0d);
    }

    @Test
    public void test1683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1683");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray10);
        double double16 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, (double) '#');
        double[] doubleArray20 = new double[] { (-1L), 0, 10L };
        double double23 = org.apache.commons.math.stat.StatUtils.max(doubleArray20, 0, 0);
        double double24 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray20);
        double double26 = org.apache.commons.math.stat.StatUtils.variance(doubleArray20, (double) 10);
        double[] doubleArray30 = new double[] { (-1L), 0, 10L };
        double double33 = org.apache.commons.math.stat.StatUtils.max(doubleArray30, 0, 0);
        double double34 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray30);
        double double35 = org.apache.commons.math.stat.StatUtils.min(doubleArray30);
        double double36 = org.apache.commons.math.stat.StatUtils.variance(doubleArray30);
        double double37 = org.apache.commons.math.stat.StatUtils.variance(doubleArray30);
        double double39 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray30, (double) 100.0f);
        double double40 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray20, doubleArray30);
        double double41 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray30);
        double double42 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray10, doubleArray30);
        // The following exception was thrown during execution in test generation
        try {
            double double45 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray30, 0, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 101.0d + "'", double24 == 101.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 37.0d + "'", double26 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 101.0d + "'", double34 == 101.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-1.0d) + "'", double35 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 37.0d + "'", double36 == 37.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 37.0d + "'", double37 == 37.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 10.0d + "'", double39 == 10.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 101.0d + "'", double41 == 101.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 4.0d + "'", double42 == 4.0d);
    }

    @Test
    public void test1684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1684");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        double double29 = org.apache.commons.math.stat.StatUtils.max(doubleArray26, 0, 0);
        double double30 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray26);
        double[] doubleArray34 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double35 = org.apache.commons.math.stat.StatUtils.mean(doubleArray34);
        double double36 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray34);
        double double37 = org.apache.commons.math.stat.StatUtils.sum(doubleArray34);
        double double38 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray26, doubleArray34);
        double double39 = org.apache.commons.math.stat.StatUtils.sum(doubleArray26);
        double double42 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray26, (int) (short) 1, (int) (short) 0);
        double double43 = org.apache.commons.math.stat.StatUtils.product(doubleArray26);
        double double44 = org.apache.commons.math.stat.StatUtils.max(doubleArray26);
        double double45 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray18, doubleArray26);
        double double49 = org.apache.commons.math.stat.StatUtils.variance(doubleArray18, (-2.220446049250313E-16d), (int) (short) 1, 1);
        // The following exception was thrown during execution in test generation
        try {
            double double52 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18, (int) (byte) 1, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 101.0d + "'", double30 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 7.0d + "'", double35 == 7.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 4.641588833612779d + "'", double36 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 21.0d + "'", double37 == 21.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-4.0d) + "'", double38 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 9.0d + "'", double39 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-0.0d) + "'", double43 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 10.0d + "'", double44 == 10.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 12.0d + "'", double45 == 12.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
    }

    @Test
    public void test1685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1685");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double[] doubleArray19 = new double[] { (-1L), 0, 10L };
        double double22 = org.apache.commons.math.stat.StatUtils.max(doubleArray19, 0, 0);
        double double23 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray19);
        double double25 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) 10);
        double double26 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11);
        double double29 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, 3.0d);
        double double30 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, 10.000000000000002d);
        double double33 = org.apache.commons.math.stat.StatUtils.min(doubleArray11);
        double double34 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double37 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11, (int) 'a', (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 4.641588833612779d + "'", double7 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 101.0d + "'", double23 == 101.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 37.0d + "'", double25 == 37.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 37.0d + "'", double27 == 37.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 127.0d + "'", double29 == 127.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 37.0d + "'", double32 == 37.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-1.0d) + "'", double33 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
    }

    @Test
    public void test1686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1686");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        double double29 = org.apache.commons.math.stat.StatUtils.max(doubleArray26, 0, 0);
        double double30 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray26);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        double double37 = org.apache.commons.math.stat.StatUtils.max(doubleArray34, 0, 0);
        double double38 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray34);
        double double40 = org.apache.commons.math.stat.StatUtils.variance(doubleArray34, (double) 10);
        double double41 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray26, doubleArray34);
        double double42 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray34);
        double double43 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray18, doubleArray34);
        double[] doubleArray47 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double48 = org.apache.commons.math.stat.StatUtils.mean(doubleArray47);
        double double50 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray47, (double) 100.0f);
        double double51 = org.apache.commons.math.stat.StatUtils.variance(doubleArray47);
        double double52 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray18, doubleArray47);
        double double53 = org.apache.commons.math.stat.StatUtils.max(doubleArray18);
        // The following exception was thrown during execution in test generation
        try {
            double double57 = org.apache.commons.math.stat.StatUtils.variance(doubleArray18, (-4.6566128730773926E-10d), (int) (short) 1, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 7.0d + "'", double22 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 101.0d + "'", double30 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 101.0d + "'", double38 == 101.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 37.0d + "'", double40 == 37.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 101.0d + "'", double42 == 101.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4.0d + "'", double43 == 4.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 7.0d + "'", double48 == 7.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 27.0d + "'", double51 == 27.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 10.0d + "'", double53 == 10.0d);
    }

    @Test
    public void test1687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1687");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10);
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double double15 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13);
        double double16 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray13);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double18 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray13);
        double double19 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double20 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double21 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double22 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        double double24 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) '#');
        double double25 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4.641588833612779d + "'", double15 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.605170185988092d + "'", double16 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 27.0d + "'", double17 == 27.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-4.0d) + "'", double18 == (-4.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 9.0d + "'", double20 == 9.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 9.0d + "'", double21 == 9.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.0d) + "'", double22 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 37.0d + "'", double24 == 37.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
    }

    @Test
    public void test1688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1688");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double double16 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray13, (double) 100.0f);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray13, doubleArray20);
        double[] doubleArray28 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double29 = org.apache.commons.math.stat.StatUtils.mean(doubleArray28);
        double double30 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray28);
        double double31 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray13, doubleArray28);
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray28);
        double[] doubleArray36 = new double[] { (-1L), 0, 10L };
        double double39 = org.apache.commons.math.stat.StatUtils.max(doubleArray36, 0, 0);
        double double40 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray36);
        double[] doubleArray44 = new double[] { (-1L), 0, 10L };
        double double47 = org.apache.commons.math.stat.StatUtils.max(doubleArray44, 0, 0);
        double double48 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray44);
        double double50 = org.apache.commons.math.stat.StatUtils.variance(doubleArray44, (double) 10);
        double double51 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray36, doubleArray44);
        double double52 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray44);
        double double53 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray28, doubleArray44);
        double double54 = org.apache.commons.math.stat.StatUtils.max(doubleArray28);
        double double55 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray28);
        double double56 = org.apache.commons.math.stat.StatUtils.product(doubleArray28);
        // The following exception was thrown during execution in test generation
        try {
            double double59 = org.apache.commons.math.stat.StatUtils.mean(doubleArray28, (int) (short) 100, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-1.0d) + "'", double8 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.605170185988092d + "'", double23 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 7.0d + "'", double29 == 7.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 4.641588833612779d + "'", double30 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 7.0d + "'", double32 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 101.0d + "'", double40 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 101.0d + "'", double48 == 101.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 37.0d + "'", double50 == 37.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 101.0d + "'", double52 == 101.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 4.0d + "'", double53 == 4.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 10.0d + "'", double54 == 10.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-4.0d) + "'", double55 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 100.0d + "'", double56 == 100.0d);
    }

    @Test
    public void test1689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1689");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double19 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, (int) (short) 1, (int) (short) 0);
        double double20 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        double double22 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 10.0d);
        double double23 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double26 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, (int) (byte) 1, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            double double29 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3, (int) (short) -1, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 9.0d + "'", double16 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.0d) + "'", double20 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 37.0d + "'", double22 == 37.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 3.0d + "'", double23 == 3.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
    }

    @Test
    public void test1690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1690");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, 27.0d);
        double double16 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) (byte) 10);
        double double17 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        double[] doubleArray22 = new double[] { (-1L), 0, 10L };
        double double25 = org.apache.commons.math.stat.StatUtils.max(doubleArray22, 0, 0);
        double double27 = org.apache.commons.math.stat.StatUtils.variance(doubleArray22, 21.0d);
        double double28 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray22);
        double[] doubleArray32 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double33 = org.apache.commons.math.stat.StatUtils.mean(doubleArray32);
        double double34 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray32);
        double double35 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray32);
        double double36 = org.apache.commons.math.stat.StatUtils.sum(doubleArray32);
        double double37 = org.apache.commons.math.stat.StatUtils.max(doubleArray32);
        double double39 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray11, doubleArray32, 3.0d);
        double[] doubleArray43 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double44 = org.apache.commons.math.stat.StatUtils.mean(doubleArray43);
        double double46 = org.apache.commons.math.stat.StatUtils.variance(doubleArray43, 27.0d);
        double[] doubleArray50 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double51 = org.apache.commons.math.stat.StatUtils.mean(doubleArray50);
        double double53 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray50, (double) 100.0f);
        double[] doubleArray57 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double58 = org.apache.commons.math.stat.StatUtils.mean(doubleArray57);
        double double59 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray57);
        double double60 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray57);
        double double61 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray50, doubleArray57);
        double[] doubleArray65 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double66 = org.apache.commons.math.stat.StatUtils.mean(doubleArray65);
        double double67 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray65);
        double double68 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray50, doubleArray65);
        double double69 = org.apache.commons.math.stat.StatUtils.mean(doubleArray65);
        double[] doubleArray73 = new double[] { (-1L), 0, 10L };
        double double76 = org.apache.commons.math.stat.StatUtils.max(doubleArray73, 0, 0);
        double double77 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray73);
        double[] doubleArray81 = new double[] { (-1L), 0, 10L };
        double double84 = org.apache.commons.math.stat.StatUtils.max(doubleArray81, 0, 0);
        double double85 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray81);
        double double87 = org.apache.commons.math.stat.StatUtils.variance(doubleArray81, (double) 10);
        double double88 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray73, doubleArray81);
        double double89 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray81);
        double double90 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray65, doubleArray81);
        double double91 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray43, doubleArray81);
        double double92 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray11, doubleArray81);
        // The following exception was thrown during execution in test generation
        try {
            double double95 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11, (int) (short) 1, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 27.0d + "'", double14 == 27.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 27.0d + "'", double16 == 27.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4.605170185988092d + "'", double18 == 4.605170185988092d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 37.0d + "'", double27 == 37.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 12.0d + "'", double28 == 12.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 7.0d + "'", double33 == 7.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4.641588833612779d + "'", double34 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 4.605170185988092d + "'", double35 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 21.0d + "'", double36 == 21.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 10.0d + "'", double37 == 10.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 7.0d + "'", double44 == 7.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 27.0d + "'", double46 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 7.0d + "'", double51 == 7.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 10.0d + "'", double53 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 7.0d + "'", double58 == 7.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4.641588833612779d + "'", double59 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 4.605170185988092d + "'", double60 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 7.0d + "'", double66 == 7.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 4.641588833612779d + "'", double67 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 7.0d + "'", double69 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 101.0d + "'", double77 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double84));
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 101.0d + "'", double85 == 101.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 37.0d + "'", double87 == 37.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 101.0d + "'", double89 == 101.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 4.0d + "'", double90 == 4.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 12.0d + "'", double91 == 12.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 4.0d + "'", double92 == 4.0d);
    }

    @Test
    public void test1691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1691");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        double double11 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double12 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double13 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 100.0d + "'", double13 == 100.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 27.0d + "'", double15 == 27.0d);
    }

    @Test
    public void test1692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1692");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double11 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3, (int) (byte) 0, (int) (byte) 1);
        double double12 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double16 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (int) (byte) 10, 0, (-2.220446049250313E-16d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 4.641588833612779d + "'", double8 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.000000000000002d + "'", double11 == 10.000000000000002d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 100.0d + "'", double12 == 100.0d);
    }

    @Test
    public void test1693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1693");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3, (int) (short) 0, (int) (byte) 0);
        double[] doubleArray17 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray17);
        double double20 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray17, (double) 100.0f);
        double[] doubleArray24 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double25 = org.apache.commons.math.stat.StatUtils.mean(doubleArray24);
        double double26 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray24);
        double double27 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray24);
        double double28 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray17, doubleArray24);
        double[] doubleArray32 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double33 = org.apache.commons.math.stat.StatUtils.mean(doubleArray32);
        double double34 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray32);
        double double35 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray17, doubleArray32);
        double double36 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray32);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray32);
        double double38 = org.apache.commons.math.stat.StatUtils.mean(doubleArray32);
        double[] doubleArray42 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double43 = org.apache.commons.math.stat.StatUtils.mean(doubleArray42);
        double double44 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray42);
        double double45 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray42);
        double double46 = org.apache.commons.math.stat.StatUtils.variance(doubleArray42);
        double double47 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray42);
        double double48 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray42);
        double double51 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray42, (int) (short) 1, 0);
        double double52 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray32, doubleArray42);
        double double53 = org.apache.commons.math.stat.StatUtils.min(doubleArray42);
        double double55 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray42, 4.0d);
        double double56 = org.apache.commons.math.stat.StatUtils.mean(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 7.0d + "'", double18 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 10.0d + "'", double20 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 7.0d + "'", double25 == 7.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 4.641588833612779d + "'", double26 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 4.605170185988092d + "'", double27 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 7.0d + "'", double33 == 7.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4.641588833612779d + "'", double34 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 4.641588833612779d + "'", double36 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 7.0d + "'", double38 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 7.0d + "'", double43 == 7.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 4.641588833612779d + "'", double44 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 4.605170185988092d + "'", double45 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 27.0d + "'", double46 == 27.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 4.641588833612779d + "'", double47 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 4.605170185988092d + "'", double48 == 4.605170185988092d);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 7.0d + "'", double56 == 7.0d);
    }

    @Test
    public void test1694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1694");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11, 1, (int) (byte) 1);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double20 = org.apache.commons.math.stat.StatUtils.min(doubleArray11);
        double double21 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 27.0d + "'", double17 == 27.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4.641588833612779d + "'", double18 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4.641588833612779d + "'", double19 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.605170185988092d + "'", double21 == 4.605170185988092d);
    }

    @Test
    public void test1695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1695");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10);
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double double15 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13);
        double double16 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray13);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double18 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray13);
        double double19 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double20 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double21 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray25 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double26 = org.apache.commons.math.stat.StatUtils.mean(doubleArray25);
        double double27 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray25);
        double double28 = org.apache.commons.math.stat.StatUtils.sum(doubleArray25);
        double[] doubleArray32 = new double[] { (-1L), 0, 10L };
        double double35 = org.apache.commons.math.stat.StatUtils.max(doubleArray32, 0, 0);
        double double37 = org.apache.commons.math.stat.StatUtils.variance(doubleArray32, 21.0d);
        double double39 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray25, doubleArray32, 4.605170185988092d);
        double double40 = org.apache.commons.math.stat.StatUtils.mean(doubleArray32);
        double double41 = org.apache.commons.math.stat.StatUtils.max(doubleArray32);
        double[] doubleArray45 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double46 = org.apache.commons.math.stat.StatUtils.mean(doubleArray45);
        double double48 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray45, (double) 100.0f);
        double double49 = org.apache.commons.math.stat.StatUtils.mean(doubleArray45);
        double[] doubleArray53 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double54 = org.apache.commons.math.stat.StatUtils.mean(doubleArray53);
        double double56 = org.apache.commons.math.stat.StatUtils.variance(doubleArray53, 27.0d);
        double double58 = org.apache.commons.math.stat.StatUtils.variance(doubleArray53, (double) (byte) 10);
        double double59 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray45, doubleArray53);
        double double62 = org.apache.commons.math.stat.StatUtils.variance(doubleArray45, (int) (short) 0, (int) (byte) 0);
        double double63 = org.apache.commons.math.stat.StatUtils.product(doubleArray45);
        double double65 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray32, doubleArray45, 127.0d);
        double double67 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray32, (double) ' ');
        double double69 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray32, 0.0d);
        double double70 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray32);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4.641588833612779d + "'", double15 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.605170185988092d + "'", double16 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 27.0d + "'", double17 == 27.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-4.0d) + "'", double18 == (-4.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 37.0d + "'", double20 == 37.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1.0d) + "'", double21 == (-1.0d));
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 7.0d + "'", double26 == 7.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 4.641588833612779d + "'", double27 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 21.0d + "'", double28 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 37.0d + "'", double37 == 37.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 127.00000000000001d + "'", double39 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 3.0d + "'", double40 == 3.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 10.0d + "'", double41 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 7.0d + "'", double46 == 7.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 10.0d + "'", double48 == 10.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 7.0d + "'", double49 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 7.0d + "'", double54 == 7.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 27.0d + "'", double56 == 27.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 27.0d + "'", double58 == 27.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 100.0d + "'", double63 == 100.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 127.0d + "'", double65 == 127.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-0.72d) + "'", double67 == (-0.72d));
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double70));
    }

    @Test
    public void test1696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1696");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11, (int) (byte) 1, (int) (byte) 0);
        double[] doubleArray22 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double23 = org.apache.commons.math.stat.StatUtils.mean(doubleArray22);
        double double25 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray22, (double) 100.0f);
        double[] doubleArray29 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double30 = org.apache.commons.math.stat.StatUtils.mean(doubleArray29);
        double double31 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray29);
        double double32 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray29);
        double double33 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray22, doubleArray29);
        double[] doubleArray37 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double38 = org.apache.commons.math.stat.StatUtils.mean(doubleArray37);
        double double39 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray37);
        double double40 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray22, doubleArray37);
        double double41 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray37);
        double double42 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray37);
        double[] doubleArray46 = new double[] { (-1L), 0, 10L };
        double double49 = org.apache.commons.math.stat.StatUtils.max(doubleArray46, 0, 0);
        double double50 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray46);
        double[] doubleArray54 = new double[] { (-1L), 0, 10L };
        double double57 = org.apache.commons.math.stat.StatUtils.max(doubleArray54, 0, 0);
        double double58 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray54);
        double double60 = org.apache.commons.math.stat.StatUtils.variance(doubleArray54, (double) 10);
        double double61 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray46, doubleArray54);
        double double62 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray54);
        double double65 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray54, 1, (int) (short) 0);
        double double67 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray37, doubleArray54, 101.0d);
        double double68 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray54);
        double double70 = org.apache.commons.math.stat.StatUtils.variance(doubleArray54, 10.000000000000002d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 7.0d + "'", double23 == 7.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 10.0d + "'", double25 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 7.0d + "'", double30 == 7.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.641588833612779d + "'", double31 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 4.605170185988092d + "'", double32 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 7.0d + "'", double38 == 7.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 4.641588833612779d + "'", double39 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 4.641588833612779d + "'", double41 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 4.641588833612779d + "'", double42 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 101.0d + "'", double50 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 101.0d + "'", double58 == 101.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 37.0d + "'", double60 == 37.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 127.0d + "'", double67 == 127.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 12.0d + "'", double68 == 12.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 37.0d + "'", double70 == 37.0d);
    }

    @Test
    public void test1697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1697");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double19 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, (int) (short) 1, (int) (short) 0);
        double double20 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        double double22 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 10.0d);
        double double23 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double26 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, (int) (byte) 1, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            double double28 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (-5.6843418860808015E-14d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: invalid quantile value: -5.6843418860808015E-14");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 9.0d + "'", double16 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.0d) + "'", double20 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 37.0d + "'", double22 == 37.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 3.0d + "'", double23 == 3.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
    }

    @Test
    public void test1698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1698");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        double double29 = org.apache.commons.math.stat.StatUtils.max(doubleArray26, 0, 0);
        double double30 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray26);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        double double37 = org.apache.commons.math.stat.StatUtils.max(doubleArray34, 0, 0);
        double double38 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray34);
        double double40 = org.apache.commons.math.stat.StatUtils.variance(doubleArray34, (double) 10);
        double double41 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray26, doubleArray34);
        double double42 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray34);
        double double43 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray18, doubleArray34);
        double[] doubleArray47 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double48 = org.apache.commons.math.stat.StatUtils.mean(doubleArray47);
        double double50 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray47, (double) 100.0f);
        double double51 = org.apache.commons.math.stat.StatUtils.variance(doubleArray47);
        double double52 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray18, doubleArray47);
        double double53 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray47);
        double double55 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray47, (double) (byte) 100);
        double double56 = org.apache.commons.math.stat.StatUtils.variance(doubleArray47);
        // The following exception was thrown during execution in test generation
        try {
            double double59 = org.apache.commons.math.stat.StatUtils.variance(doubleArray47, (int) (short) 100, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 7.0d + "'", double22 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 101.0d + "'", double30 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 101.0d + "'", double38 == 101.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 37.0d + "'", double40 == 37.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 101.0d + "'", double42 == 101.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4.0d + "'", double43 == 4.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 7.0d + "'", double48 == 7.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 27.0d + "'", double51 == 27.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 4.641588833612779d + "'", double53 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 10.0d + "'", double55 == 10.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 27.0d + "'", double56 == 27.0d);
    }

    @Test
    public void test1699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1699");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double3 = org.apache.commons.math.stat.StatUtils.max(doubleArray0, 1, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1700");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-1.0d) + "'", double8 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 3.0d + "'", double10 == 3.0d);
    }

    @Test
    public void test1701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1701");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sum(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray11, doubleArray19);
        double double24 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double27 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11, (int) (short) 1, (int) (short) 0);
        double double28 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double29 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11);
        double double31 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray11, (double) 100.0f);
        double double32 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 21.0d + "'", double22 == 21.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-4.0d) + "'", double23 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 9.0d + "'", double24 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 12.0d + "'", double28 == 12.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 37.0d + "'", double29 == 37.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 10.0d + "'", double31 == 10.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 101.0d + "'", double32 == 101.0d);
    }

    @Test
    public void test1702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1702");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (-1L), 0, 10L };
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray10, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, 21.0d);
        double double17 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, 4.605170185988092d);
        double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double19 = org.apache.commons.math.stat.StatUtils.max(doubleArray10);
        double[] doubleArray23 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double24 = org.apache.commons.math.stat.StatUtils.mean(doubleArray23);
        double double26 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray23, (double) 100.0f);
        double double27 = org.apache.commons.math.stat.StatUtils.mean(doubleArray23);
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double double34 = org.apache.commons.math.stat.StatUtils.variance(doubleArray31, 27.0d);
        double double36 = org.apache.commons.math.stat.StatUtils.variance(doubleArray31, (double) (byte) 10);
        double double37 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray23, doubleArray31);
        double double40 = org.apache.commons.math.stat.StatUtils.variance(doubleArray23, (int) (short) 0, (int) (byte) 0);
        double double41 = org.apache.commons.math.stat.StatUtils.product(doubleArray23);
        double double43 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray10, doubleArray23, 127.0d);
        double double45 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray10, (double) ' ');
        double double47 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, (double) 1.0f);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 37.0d + "'", double15 == 37.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 127.00000000000001d + "'", double17 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 3.0d + "'", double18 == 3.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 7.0d + "'", double24 == 7.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 7.0d + "'", double27 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 7.0d + "'", double32 == 7.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 27.0d + "'", double34 == 27.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 27.0d + "'", double36 == 27.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 100.0d + "'", double41 == 100.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 127.0d + "'", double43 == 127.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.72d) + "'", double45 == (-0.72d));
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 37.0d + "'", double47 == 37.0d);
    }

    @Test
    public void test1703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1703");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray19);
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double28 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double double29 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double30 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray27);
        double double31 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray27);
        double double33 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray27);
        double double34 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double37 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3, (int) '#', (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.605170185988092d + "'", double22 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 7.0d + "'", double28 == 7.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4.641588833612779d + "'", double29 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.641588833612779d + "'", double31 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
    }

    @Test
    public void test1704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1704");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.variance(doubleArray18);
        double[] doubleArray27 = new double[] { (-1L), 0, 10L };
        double double30 = org.apache.commons.math.stat.StatUtils.max(doubleArray27, 0, 0);
        double double31 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray27);
        double[] doubleArray35 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double36 = org.apache.commons.math.stat.StatUtils.mean(doubleArray35);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35);
        double double38 = org.apache.commons.math.stat.StatUtils.sum(doubleArray35);
        double double39 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray27, doubleArray35);
        double double40 = org.apache.commons.math.stat.StatUtils.max(doubleArray27);
        double double42 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray18, doubleArray27, 27.0d);
        double double43 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray27);
        double double44 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double double45 = org.apache.commons.math.stat.StatUtils.sum(doubleArray27);
        java.lang.Class<?> wildcardClass46 = doubleArray27.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 27.0d + "'", double23 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 101.0d + "'", double31 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 7.0d + "'", double36 == 7.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 21.0d + "'", double38 == 21.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-4.0d) + "'", double39 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 10.0d + "'", double40 == 10.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 127.0d + "'", double42 == 127.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 3.0d + "'", double44 == 3.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 9.0d + "'", double45 == 9.0d);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test1705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1705");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray19);
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double28 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double double29 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double30 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray27);
        double double31 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray27);
        double double33 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray27);
        double double36 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 0, (int) (byte) 1);
        double double37 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double41 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (int) (short) 1, (int) '4', 27.00000000000003d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.605170185988092d + "'", double22 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 7.0d + "'", double28 == 7.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4.641588833612779d + "'", double29 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.641588833612779d + "'", double31 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 10.0d + "'", double36 == 10.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 10.0d + "'", double37 == 10.0d);
    }

    @Test
    public void test1706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1706");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        double[] doubleArray14 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray14);
        double double16 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray14);
        double double17 = org.apache.commons.math.stat.StatUtils.sum(doubleArray14);
        double double18 = org.apache.commons.math.stat.StatUtils.max(doubleArray14);
        double double19 = org.apache.commons.math.stat.StatUtils.variance(doubleArray14);
        double double20 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray14);
        double[] doubleArray24 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double25 = org.apache.commons.math.stat.StatUtils.mean(doubleArray24);
        double double27 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray24, (double) 100.0f);
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double double33 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray31);
        double double34 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray31);
        double double35 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray24, doubleArray31);
        double double36 = org.apache.commons.math.stat.StatUtils.variance(doubleArray31);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray31);
        double double39 = org.apache.commons.math.stat.StatUtils.variance(doubleArray31, (double) 10L);
        double double40 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray31);
        double[] doubleArray44 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double45 = org.apache.commons.math.stat.StatUtils.mean(doubleArray44);
        double double47 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray44, (double) 100.0f);
        double[] doubleArray51 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double52 = org.apache.commons.math.stat.StatUtils.mean(doubleArray51);
        double double53 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray51);
        double double54 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray51);
        double double55 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray44, doubleArray51);
        double[] doubleArray59 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double60 = org.apache.commons.math.stat.StatUtils.mean(doubleArray59);
        double double61 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray59);
        double double62 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray44, doubleArray59);
        double double63 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray59);
        double double64 = org.apache.commons.math.stat.StatUtils.variance(doubleArray59);
        double[] doubleArray68 = new double[] { (-1L), 0, 10L };
        double double71 = org.apache.commons.math.stat.StatUtils.max(doubleArray68, 0, 0);
        double double72 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray68);
        double[] doubleArray76 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double77 = org.apache.commons.math.stat.StatUtils.mean(doubleArray76);
        double double78 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray76);
        double double79 = org.apache.commons.math.stat.StatUtils.sum(doubleArray76);
        double double80 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray68, doubleArray76);
        double double81 = org.apache.commons.math.stat.StatUtils.max(doubleArray68);
        double double83 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray59, doubleArray68, 27.0d);
        double double84 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray68);
        double double85 = org.apache.commons.math.stat.StatUtils.mean(doubleArray68);
        double double86 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray68);
        double double87 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double88 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double92 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (int) (short) 0, (int) (short) 0, (double) 100);
        double double96 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (int) (short) 1, 1, (double) (short) 100);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.0d + "'", double15 == 7.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.641588833612779d + "'", double16 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 21.0d + "'", double17 == 21.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 27.0d + "'", double19 == 27.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 7.0d + "'", double25 == 7.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 10.0d + "'", double27 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 7.0d + "'", double32 == 7.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4.641588833612779d + "'", double33 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4.605170185988092d + "'", double34 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 27.0d + "'", double36 == 27.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 27.0d + "'", double39 == 27.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 7.0d + "'", double45 == 7.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 10.0d + "'", double47 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 7.0d + "'", double52 == 7.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 4.641588833612779d + "'", double53 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 4.605170185988092d + "'", double54 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 7.0d + "'", double60 == 7.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 4.641588833612779d + "'", double61 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 4.641588833612779d + "'", double63 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 27.0d + "'", double64 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 101.0d + "'", double72 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 7.0d + "'", double77 == 7.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 4.641588833612779d + "'", double78 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 21.0d + "'", double79 == 21.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + (-4.0d) + "'", double80 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 10.0d + "'", double81 == 10.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 127.0d + "'", double83 == 127.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double84));
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 3.0d + "'", double85 == 3.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 4.0d + "'", double86 == 4.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 10.0d + "'", double87 == 10.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 4.641588833612779d + "'", double88 == 4.641588833612779d);
        org.junit.Assert.assertTrue(Double.isNaN(double92));
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 10.0d + "'", double96 == 10.0d);
    }

    @Test
    public void test1707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1707");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double24 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double[] doubleArray28 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double29 = org.apache.commons.math.stat.StatUtils.mean(doubleArray28);
        double double30 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray28);
        double double31 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray28);
        double double33 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray28);
        double double34 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28);
        double double37 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28, (int) (short) 1, 0);
        double double38 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray18, doubleArray28);
        double[] doubleArray42 = new double[] { (-1L), 0, 10L };
        double double45 = org.apache.commons.math.stat.StatUtils.max(doubleArray42, 0, 0);
        double double46 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray42);
        double[] doubleArray50 = new double[] { (-1L), 0, 10L };
        double double53 = org.apache.commons.math.stat.StatUtils.max(doubleArray50, 0, 0);
        double double54 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray50);
        double double56 = org.apache.commons.math.stat.StatUtils.variance(doubleArray50, (double) 10);
        double double57 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray42, doubleArray50);
        double double58 = org.apache.commons.math.stat.StatUtils.max(doubleArray50);
        double double59 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray18, doubleArray50);
        double[] doubleArray63 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double64 = org.apache.commons.math.stat.StatUtils.mean(doubleArray63);
        double double66 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray63, (double) 100.0f);
        double double67 = org.apache.commons.math.stat.StatUtils.mean(doubleArray63);
        double double68 = org.apache.commons.math.stat.StatUtils.mean(doubleArray63);
        double double70 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray50, doubleArray63, 101.0d);
        double double71 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.641588833612779d + "'", double23 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 7.0d + "'", double24 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 7.0d + "'", double29 == 7.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 4.641588833612779d + "'", double30 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.605170185988092d + "'", double31 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4.641588833612779d + "'", double33 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4.605170185988092d + "'", double34 == 4.605170185988092d);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 101.0d + "'", double46 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 101.0d + "'", double54 == 101.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 37.0d + "'", double56 == 37.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 10.0d + "'", double58 == 10.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4.0d + "'", double59 == 4.0d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 7.0d + "'", double64 == 7.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 10.0d + "'", double66 == 10.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 7.0d + "'", double67 == 7.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 7.0d + "'", double68 == 7.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 127.0d + "'", double70 == 127.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double71));
    }

    @Test
    public void test1708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1708");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, 0.0d);
        double double28 = org.apache.commons.math.stat.StatUtils.variance(doubleArray12);
        double double31 = org.apache.commons.math.stat.StatUtils.variance(doubleArray12, 1, (int) (byte) 1);
        double double32 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray12);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 127.0d + "'", double27 == 127.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 37.0d + "'", double28 == 37.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
    }

    @Test
    public void test1709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1709");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (-1L), 0, 10L };
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray10, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, 21.0d);
        double double17 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, 4.605170185988092d);
        double[] doubleArray21 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double22 = org.apache.commons.math.stat.StatUtils.mean(doubleArray21);
        double double23 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray21);
        double double24 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray21);
        double double25 = org.apache.commons.math.stat.StatUtils.variance(doubleArray21);
        double double26 = org.apache.commons.math.stat.StatUtils.min(doubleArray21);
        double[] doubleArray30 = new double[] { (-1L), 0, 10L };
        double double33 = org.apache.commons.math.stat.StatUtils.max(doubleArray30, 0, 0);
        double double34 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray30);
        double[] doubleArray38 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double39 = org.apache.commons.math.stat.StatUtils.mean(doubleArray38);
        double double40 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray38);
        double double41 = org.apache.commons.math.stat.StatUtils.sum(doubleArray38);
        double double42 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray30, doubleArray38);
        double double43 = org.apache.commons.math.stat.StatUtils.sum(doubleArray30);
        double double45 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray21, doubleArray30, 0.0d);
        double double47 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray21, 7.0d);
        double double48 = org.apache.commons.math.stat.StatUtils.variance(doubleArray21);
        double double49 = org.apache.commons.math.stat.StatUtils.mean(doubleArray21);
        double double50 = org.apache.commons.math.stat.StatUtils.variance(doubleArray21);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 37.0d + "'", double15 == 37.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 127.00000000000001d + "'", double17 == 127.00000000000001d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 7.0d + "'", double22 == 7.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.641588833612779d + "'", double23 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 4.605170185988092d + "'", double24 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 27.0d + "'", double25 == 27.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 101.0d + "'", double34 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 7.0d + "'", double39 == 7.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 4.641588833612779d + "'", double40 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 21.0d + "'", double41 == 21.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-4.0d) + "'", double42 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 9.0d + "'", double43 == 9.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 127.0d + "'", double45 == 127.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 27.0d + "'", double48 == 27.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 7.0d + "'", double49 == 7.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 27.0d + "'", double50 == 27.0d);
    }

    @Test
    public void test1710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1710");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double double16 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.variance(doubleArray20, 27.0d);
        double double25 = org.apache.commons.math.stat.StatUtils.variance(doubleArray20, (double) (byte) 10);
        double double26 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray20);
        double double27 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray20);
        double[] doubleArray31 = new double[] { (-1L), 0, 10L };
        double double34 = org.apache.commons.math.stat.StatUtils.max(doubleArray31, 0, 0);
        double double36 = org.apache.commons.math.stat.StatUtils.variance(doubleArray31, 21.0d);
        double double37 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray20, doubleArray31);
        double double38 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray20);
        double double40 = org.apache.commons.math.stat.StatUtils.variance(doubleArray20, (double) 'a');
        // The following exception was thrown during execution in test generation
        try {
            double double43 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20, (int) (short) 10, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 4.641588833612779d + "'", double8 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 7.0d + "'", double16 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 27.0d + "'", double23 == 27.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 27.0d + "'", double25 == 27.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 4.605170185988092d + "'", double27 == 4.605170185988092d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 37.0d + "'", double36 == 37.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 12.0d + "'", double37 == 12.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 27.0d + "'", double40 == 27.0d);
    }

    @Test
    public void test1711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1711");
        double[] doubleArray0 = null;
        double[] doubleArray4 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double5 = org.apache.commons.math.stat.StatUtils.mean(doubleArray4);
        double double7 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray4, (double) 100.0f);
        double double8 = org.apache.commons.math.stat.StatUtils.mean(doubleArray4);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double28 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12, (int) (short) 1, (int) (short) 0);
        double double29 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray4, doubleArray12);
        double double31 = org.apache.commons.math.stat.StatUtils.variance(doubleArray12, (double) (short) 100);
        double double34 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12, 0, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            double double35 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray0, doubleArray12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 7.0d + "'", double5 == 7.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 7.0d + "'", double8 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 12.0d + "'", double29 == 12.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 37.0d + "'", double31 == 37.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-1.0d) + "'", double34 == (-1.0d));
    }

    @Test
    public void test1712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1712");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, 0.0d);
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double double34 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray31, (double) 100.0f);
        double double35 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double[] doubleArray39 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double40 = org.apache.commons.math.stat.StatUtils.mean(doubleArray39);
        double double42 = org.apache.commons.math.stat.StatUtils.variance(doubleArray39, 27.0d);
        double double44 = org.apache.commons.math.stat.StatUtils.variance(doubleArray39, (double) (byte) 10);
        double double45 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray31, doubleArray39);
        double double46 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray39);
        double double47 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray39);
        double double49 = org.apache.commons.math.stat.StatUtils.variance(doubleArray39, (double) (short) 100);
        double double50 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray39);
        double[] doubleArray54 = new double[] { (-1L), 0, 10L };
        double double57 = org.apache.commons.math.stat.StatUtils.max(doubleArray54, 0, 0);
        double double58 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray54);
        double double59 = org.apache.commons.math.stat.StatUtils.min(doubleArray54);
        double double62 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray54, (int) (byte) 1, (int) (byte) 0);
        double double64 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray39, doubleArray54, (double) 100L);
        double double65 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 127.0d + "'", double27 == 127.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 7.0d + "'", double32 == 7.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 10.0d + "'", double34 == 10.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 7.0d + "'", double35 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 7.0d + "'", double40 == 7.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 27.0d + "'", double42 == 27.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 27.0d + "'", double44 == 27.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 201.0d + "'", double47 == 201.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 27.0d + "'", double49 == 27.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 201.0d + "'", double50 == 201.0d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 101.0d + "'", double58 == 101.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-1.0d) + "'", double59 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 127.0d + "'", double64 == 127.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 4.641588833612779d + "'", double65 == 4.641588833612779d);
    }

    @Test
    public void test1713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1713");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) 10);
        double double18 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.max(doubleArray11);
        double double20 = org.apache.commons.math.stat.StatUtils.product(doubleArray11);
        double double21 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double22 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double25 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11, (int) (short) 10, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 37.0d + "'", double17 == 37.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.0d) + "'", double20 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 101.0d + "'", double21 == 101.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 9.0d + "'", double22 == 9.0d);
    }

    @Test
    public void test1714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1714");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray19);
        double double25 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, (-0.9199999999999999d));
        double double26 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double[] doubleArray30 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double31 = org.apache.commons.math.stat.StatUtils.mean(doubleArray30);
        double double32 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray30);
        double double33 = org.apache.commons.math.stat.StatUtils.sum(doubleArray30);
        double double34 = org.apache.commons.math.stat.StatUtils.max(doubleArray30);
        double[] doubleArray38 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double39 = org.apache.commons.math.stat.StatUtils.mean(doubleArray38);
        double double41 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray38, (double) 100.0f);
        double double42 = org.apache.commons.math.stat.StatUtils.mean(doubleArray38);
        double[] doubleArray46 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double47 = org.apache.commons.math.stat.StatUtils.mean(doubleArray46);
        double double49 = org.apache.commons.math.stat.StatUtils.variance(doubleArray46, 27.0d);
        double double51 = org.apache.commons.math.stat.StatUtils.variance(doubleArray46, (double) (byte) 10);
        double double52 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray38, doubleArray46);
        double double54 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray30, doubleArray38, (double) (short) 1);
        double double55 = org.apache.commons.math.stat.StatUtils.sum(doubleArray38);
        double double56 = org.apache.commons.math.stat.StatUtils.sum(doubleArray38);
        double double57 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray38);
        double double58 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double59 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.605170185988092d + "'", double22 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + (-2.220446049250313E-16d) + "'", double25 == (-2.220446049250313E-16d));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 27.0d + "'", double26 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 7.0d + "'", double31 == 7.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 4.641588833612779d + "'", double32 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 21.0d + "'", double33 == 21.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 10.0d + "'", double34 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 7.0d + "'", double39 == 7.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 10.0d + "'", double41 == 10.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 7.0d + "'", double42 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 7.0d + "'", double47 == 7.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 27.0d + "'", double49 == 27.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 27.0d + "'", double51 == 27.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 21.0d + "'", double55 == 21.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 21.0d + "'", double56 == 21.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 21.0d + "'", double58 == 21.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 27.0d + "'", double59 == 27.0d);
    }

    @Test
    public void test1715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1715");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double28 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double double29 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double30 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray27);
        double double31 = org.apache.commons.math.stat.StatUtils.max(doubleArray27);
        double double32 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray18, doubleArray27);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.641588833612779d + "'", double23 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 7.0d + "'", double28 == 7.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4.641588833612779d + "'", double29 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 4.605170185988092d + "'", double30 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 10.0d + "'", double31 == 10.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
    }

    @Test
    public void test1716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1716");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double11 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, (int) (short) 0, (int) (byte) 0);
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double16 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3, (int) ' ', 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 7.0d + "'", double8 == 7.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
    }

    @Test
    public void test1717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1717");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sum(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray11, doubleArray19);
        double double24 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double27 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11, (int) (short) 1, (int) (short) 0);
        double double28 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double[] doubleArray32 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double33 = org.apache.commons.math.stat.StatUtils.mean(doubleArray32);
        double double34 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray32);
        double double35 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray32);
        double double36 = org.apache.commons.math.stat.StatUtils.variance(doubleArray32);
        double double37 = org.apache.commons.math.stat.StatUtils.product(doubleArray32);
        double[] doubleArray41 = new double[] { (-1L), 0, 10L };
        double double44 = org.apache.commons.math.stat.StatUtils.max(doubleArray41, 0, 0);
        double double45 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray41);
        double[] doubleArray49 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double50 = org.apache.commons.math.stat.StatUtils.mean(doubleArray49);
        double double51 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray49);
        double double52 = org.apache.commons.math.stat.StatUtils.sum(doubleArray49);
        double double53 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray41, doubleArray49);
        double double54 = org.apache.commons.math.stat.StatUtils.sum(doubleArray41);
        double double57 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray41, (int) (short) 1, (int) (short) 0);
        double double58 = org.apache.commons.math.stat.StatUtils.product(doubleArray41);
        double double59 = org.apache.commons.math.stat.StatUtils.max(doubleArray41);
        double double60 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray32, doubleArray41);
        double[] doubleArray64 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double65 = org.apache.commons.math.stat.StatUtils.mean(doubleArray64);
        double double67 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray64, (double) 100.0f);
        double double68 = org.apache.commons.math.stat.StatUtils.mean(doubleArray64);
        double[] doubleArray72 = new double[] { (-1L), 0, 10L };
        double double75 = org.apache.commons.math.stat.StatUtils.max(doubleArray72, 0, 0);
        double double76 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray72);
        double[] doubleArray80 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double81 = org.apache.commons.math.stat.StatUtils.mean(doubleArray80);
        double double82 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray80);
        double double83 = org.apache.commons.math.stat.StatUtils.sum(doubleArray80);
        double double84 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray72, doubleArray80);
        double double85 = org.apache.commons.math.stat.StatUtils.sum(doubleArray72);
        double double88 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray72, (int) (short) 1, (int) (short) 0);
        double double89 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray64, doubleArray72);
        double double90 = org.apache.commons.math.stat.StatUtils.variance(doubleArray72);
        double double91 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray32, doubleArray72);
        double double92 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray72);
        // The following exception was thrown during execution in test generation
        try {
            double double96 = org.apache.commons.math.stat.StatUtils.variance(doubleArray72, 0.0d, 10, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 21.0d + "'", double22 == 21.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-4.0d) + "'", double23 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 9.0d + "'", double24 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 12.0d + "'", double28 == 12.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 7.0d + "'", double33 == 7.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4.641588833612779d + "'", double34 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 4.605170185988092d + "'", double35 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 27.0d + "'", double36 == 27.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 100.0d + "'", double37 == 100.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 101.0d + "'", double45 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 7.0d + "'", double50 == 7.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 4.641588833612779d + "'", double51 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 21.0d + "'", double52 == 21.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-4.0d) + "'", double53 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 9.0d + "'", double54 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-0.0d) + "'", double58 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 10.0d + "'", double59 == 10.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 4.0d + "'", double60 == 4.0d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 7.0d + "'", double65 == 7.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 10.0d + "'", double67 == 10.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 7.0d + "'", double68 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 101.0d + "'", double76 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 7.0d + "'", double81 == 7.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 4.641588833612779d + "'", double82 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 21.0d + "'", double83 == 21.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + (-4.0d) + "'", double84 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 9.0d + "'", double85 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double88));
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 12.0d + "'", double89 == 12.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 37.0d + "'", double90 == 37.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 12.0d + "'", double91 == 12.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 12.0d + "'", double92 == 12.0d);
    }

    @Test
    public void test1718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1718");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double24 = org.apache.commons.math.stat.StatUtils.min(doubleArray18);
        double double26 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray18, (double) 100L);
        double[] doubleArray30 = new double[] { (-1L), 0, 10L };
        double double33 = org.apache.commons.math.stat.StatUtils.max(doubleArray30, 0, 0);
        double double34 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray30);
        double double36 = org.apache.commons.math.stat.StatUtils.variance(doubleArray30, (double) 10);
        double double37 = org.apache.commons.math.stat.StatUtils.min(doubleArray30);
        double double38 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray18, doubleArray30);
        double[] doubleArray42 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double43 = org.apache.commons.math.stat.StatUtils.mean(doubleArray42);
        double double45 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray42, (double) 100.0f);
        double[] doubleArray49 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double50 = org.apache.commons.math.stat.StatUtils.mean(doubleArray49);
        double double51 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray49);
        double double52 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray49);
        double double53 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray42, doubleArray49);
        double[] doubleArray57 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double58 = org.apache.commons.math.stat.StatUtils.mean(doubleArray57);
        double double59 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray57);
        double double60 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray42, doubleArray57);
        double double61 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray57);
        double double62 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray57);
        double double63 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray57);
        double double64 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray18, doubleArray57);
        double double66 = org.apache.commons.math.stat.StatUtils.variance(doubleArray57, 27.267451525600872d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.641588833612779d + "'", double23 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 101.0d + "'", double34 == 101.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 37.0d + "'", double36 == 37.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-1.0d) + "'", double37 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 12.0d + "'", double38 == 12.0d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 7.0d + "'", double43 == 7.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 10.0d + "'", double45 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 7.0d + "'", double50 == 7.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 4.641588833612779d + "'", double51 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 4.605170185988092d + "'", double52 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 7.0d + "'", double58 == 7.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4.641588833612779d + "'", double59 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 4.641588833612779d + "'", double61 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 4.641588833612779d + "'", double62 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 201.0d + "'", double63 == 201.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 27.0d + "'", double66 == 27.0d);
    }

    @Test
    public void test1719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1719");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray19);
        double double25 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, (-0.9199999999999999d));
        double double27 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            double double30 = org.apache.commons.math.stat.StatUtils.variance(doubleArray12, (int) '4', 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.605170185988092d + "'", double22 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + (-2.220446049250313E-16d) + "'", double25 == (-2.220446049250313E-16d));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 10.0d + "'", double27 == 10.0d);
    }

    @Test
    public void test1720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1720");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (-1L), 0, 10L };
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray10, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, 21.0d);
        double double17 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, 4.605170185988092d);
        double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double19 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double21 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, 2.2737367544323206E-13d);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double[] doubleArray28 = new double[] { '#', 10.0f, 'a', 12.0d, 37.0d };
        double double29 = org.apache.commons.math.stat.StatUtils.sum(doubleArray28);
        double double30 = org.apache.commons.math.stat.StatUtils.min(doubleArray28);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray28, (double) 10.0f);
        // The following exception was thrown during execution in test generation
        try {
            double double34 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray28, 2.2737367544323206E-13d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Input array lengths must be equal and at least 2.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 37.0d + "'", double15 == 37.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 127.00000000000001d + "'", double17 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 7.0d + "'", double18 == 7.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4.641588833612779d + "'", double19 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.605170185988092d + "'", double22 == 4.605170185988092d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[35.0, 10.0, 97.0, 12.0, 37.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 191.0d + "'", double29 == 191.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1237.7d + "'", double32 == 1237.7d);
    }

    @Test
    public void test1721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1721");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray19);
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double28 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double double29 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double30 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray27);
        double double31 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray27);
        double double33 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray27);
        double double34 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray38 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double39 = org.apache.commons.math.stat.StatUtils.mean(doubleArray38);
        double double40 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray38);
        double double41 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray38);
        double double42 = org.apache.commons.math.stat.StatUtils.variance(doubleArray38);
        double double43 = org.apache.commons.math.stat.StatUtils.min(doubleArray38);
        double[] doubleArray47 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double48 = org.apache.commons.math.stat.StatUtils.mean(doubleArray47);
        double double50 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray47, (double) 100.0f);
        double[] doubleArray54 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double55 = org.apache.commons.math.stat.StatUtils.mean(doubleArray54);
        double double56 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray54);
        double double57 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray54);
        double double58 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray47, doubleArray54);
        double[] doubleArray62 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double63 = org.apache.commons.math.stat.StatUtils.mean(doubleArray62);
        double double64 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray62);
        double double65 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray47, doubleArray62);
        double double66 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray62);
        double double67 = org.apache.commons.math.stat.StatUtils.variance(doubleArray62);
        double double68 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray38, doubleArray62);
        double double69 = org.apache.commons.math.stat.StatUtils.min(doubleArray38);
        double double71 = org.apache.commons.math.stat.StatUtils.variance(doubleArray38, (double) '#');
        double double72 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray38);
        double double73 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double77 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (int) (byte) 100, 100, 2.2737367544323206E-13d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.605170185988092d + "'", double22 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 7.0d + "'", double28 == 7.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4.641588833612779d + "'", double29 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.641588833612779d + "'", double31 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 7.0d + "'", double39 == 7.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 4.641588833612779d + "'", double40 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 4.605170185988092d + "'", double41 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 27.0d + "'", double42 == 27.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 7.0d + "'", double48 == 7.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 7.0d + "'", double55 == 7.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 4.641588833612779d + "'", double56 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 4.605170185988092d + "'", double57 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 7.0d + "'", double63 == 7.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 4.641588833612779d + "'", double64 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 4.641588833612779d + "'", double66 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 27.0d + "'", double67 == 27.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 27.0d + "'", double71 == 27.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 4.605170185988092d + "'", double73 == 4.605170185988092d);
    }

    @Test
    public void test1722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1722");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double17 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray11, (int) '#', (int) ' ', 27.00000000000003d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test1723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1723");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double17 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double18 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double[] doubleArray22 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double23 = org.apache.commons.math.stat.StatUtils.mean(doubleArray22);
        double double24 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray22);
        double double25 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray22);
        double double26 = org.apache.commons.math.stat.StatUtils.max(doubleArray22);
        double double29 = org.apache.commons.math.stat.StatUtils.sum(doubleArray22, (int) (short) 1, 0);
        double double32 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray22, (int) (short) 0, (int) (byte) 0);
        double double35 = org.apache.commons.math.stat.StatUtils.product(doubleArray22, 0, 0);
        double double38 = org.apache.commons.math.stat.StatUtils.min(doubleArray22, (int) (byte) 0, 0);
        double double39 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray22);
        double double40 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double41 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double45 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (-5.6843418860808015E-14d), (int) (byte) 10, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 7.0d + "'", double23 == 7.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 4.641588833612779d + "'", double24 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 4.605170185988092d + "'", double25 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-4.0d) + "'", double39 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 9.0d + "'", double40 == 9.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 37.0d + "'", double41 == 37.0d);
    }

    @Test
    public void test1724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1724");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double[] doubleArray14 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray14);
        double double17 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray14, (double) 100.0f);
        double double19 = org.apache.commons.math.stat.StatUtils.variance(doubleArray14, 4.605170185988092d);
        double double20 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray14);
        double double21 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray14);
        double[] doubleArray25 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double26 = org.apache.commons.math.stat.StatUtils.mean(doubleArray25);
        double double28 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray25, (double) 100.0f);
        double[] doubleArray32 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double33 = org.apache.commons.math.stat.StatUtils.mean(doubleArray32);
        double double34 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray32);
        double double35 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray32);
        double double36 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray25, doubleArray32);
        double[] doubleArray40 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double41 = org.apache.commons.math.stat.StatUtils.mean(doubleArray40);
        double double42 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray40);
        double double43 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray25, doubleArray40);
        double double44 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray40);
        double double45 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray40);
        double double46 = org.apache.commons.math.stat.StatUtils.min(doubleArray40);
        double double48 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray40, (double) 100L);
        double[] doubleArray52 = new double[] { (-1L), 0, 10L };
        double double55 = org.apache.commons.math.stat.StatUtils.max(doubleArray52, 0, 0);
        double double56 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray52);
        double double58 = org.apache.commons.math.stat.StatUtils.variance(doubleArray52, (double) 10);
        double double59 = org.apache.commons.math.stat.StatUtils.min(doubleArray52);
        double double60 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray40, doubleArray52);
        double double62 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray14, doubleArray52, 3.5200000000000005d);
        double double63 = org.apache.commons.math.stat.StatUtils.min(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-1.0d) + "'", double8 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 37.0d + "'", double10 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.0d + "'", double15 == 7.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 27.000000000000004d + "'", double19 == 27.000000000000004d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.605170185988092d + "'", double20 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-12.0d) + "'", double21 == (-12.0d));
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 7.0d + "'", double26 == 7.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 10.0d + "'", double28 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 7.0d + "'", double33 == 7.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4.641588833612779d + "'", double34 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 4.605170185988092d + "'", double35 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 7.0d + "'", double41 == 7.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 4.641588833612779d + "'", double42 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 4.641588833612779d + "'", double44 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 4.641588833612779d + "'", double45 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 10.0d + "'", double48 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 101.0d + "'", double56 == 101.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 37.0d + "'", double58 == 37.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-1.0d) + "'", double59 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 12.0d + "'", double60 == 12.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 126.99999999999999d + "'", double62 == 126.99999999999999d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-1.0d) + "'", double63 == (-1.0d));
    }

    @Test
    public void test1725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1725");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, 27.0d);
        double double16 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) (byte) 10);
        double double17 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double19 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double23 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (-4.0d), (int) (byte) 1, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 27.0d + "'", double14 == 27.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 27.0d + "'", double16 == 27.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 100.0d + "'", double19 == 100.0d);
    }

    @Test
    public void test1726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1726");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10);
        double double17 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray10, (double) 1.0f);
        double double18 = org.apache.commons.math.stat.StatUtils.sum(doubleArray10);
        double[] doubleArray22 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double23 = org.apache.commons.math.stat.StatUtils.mean(doubleArray22);
        double double24 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray22);
        double double25 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray22);
        double double26 = org.apache.commons.math.stat.StatUtils.variance(doubleArray22);
        double[] doubleArray30 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double31 = org.apache.commons.math.stat.StatUtils.mean(doubleArray30);
        double double32 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray22, doubleArray30);
        double double35 = org.apache.commons.math.stat.StatUtils.mean(doubleArray30, 1, (int) (byte) 1);
        double double36 = org.apache.commons.math.stat.StatUtils.variance(doubleArray30);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray30);
        double double38 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray30);
        double double39 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray10, doubleArray30);
        // The following exception was thrown during execution in test generation
        try {
            double double42 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray30, (int) (byte) -1, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 27.0d + "'", double15 == 27.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 21.0d + "'", double18 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 7.0d + "'", double23 == 7.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 4.641588833612779d + "'", double24 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 4.605170185988092d + "'", double25 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 27.0d + "'", double26 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 7.0d + "'", double31 == 7.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 10.0d + "'", double35 == 10.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 27.0d + "'", double36 == 27.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 4.641588833612779d + "'", double38 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
    }

    @Test
    public void test1727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1727");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 7.0d + "'", double8 == 7.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 100.0d + "'", double9 == 100.0d);
    }

    @Test
    public void test1728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1728");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.variance(doubleArray18);
        double[] doubleArray27 = new double[] { (-1L), 0, 10L };
        double double30 = org.apache.commons.math.stat.StatUtils.max(doubleArray27, 0, 0);
        double double31 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray27);
        double[] doubleArray35 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double36 = org.apache.commons.math.stat.StatUtils.mean(doubleArray35);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35);
        double double38 = org.apache.commons.math.stat.StatUtils.sum(doubleArray35);
        double double39 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray27, doubleArray35);
        double double40 = org.apache.commons.math.stat.StatUtils.max(doubleArray27);
        double double42 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray18, doubleArray27, 27.0d);
        double[] doubleArray46 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double47 = org.apache.commons.math.stat.StatUtils.mean(doubleArray46);
        double double48 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray46);
        double double49 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray46);
        double double50 = org.apache.commons.math.stat.StatUtils.max(doubleArray46);
        double double53 = org.apache.commons.math.stat.StatUtils.sum(doubleArray46, (int) (short) 1, 0);
        double double55 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray27, doubleArray46, 27.000000000000004d);
        double double58 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray46, (int) (byte) 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            double double61 = org.apache.commons.math.stat.StatUtils.mean(doubleArray46, (int) (byte) 0, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 27.0d + "'", double23 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 101.0d + "'", double31 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 7.0d + "'", double36 == 7.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 21.0d + "'", double38 == 21.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-4.0d) + "'", double39 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 10.0d + "'", double40 == 10.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 127.0d + "'", double42 == 127.0d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 7.0d + "'", double47 == 7.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 4.641588833612779d + "'", double48 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 4.605170185988092d + "'", double49 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 127.0d + "'", double55 == 127.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
    }

    @Test
    public void test1729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1729");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) 10);
        double double18 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.max(doubleArray11);
        double double20 = org.apache.commons.math.stat.StatUtils.product(doubleArray11);
        double double21 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double22 = org.apache.commons.math.stat.StatUtils.product(doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 37.0d + "'", double17 == 37.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.0d) + "'", double20 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 101.0d + "'", double21 == 101.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.0d) + "'", double22 == (-0.0d));
    }

    @Test
    public void test1730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1730");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10);
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double double15 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13);
        double double16 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray13);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double18 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray13);
        double double19 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double20 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double23 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, (int) (short) 0, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4.641588833612779d + "'", double15 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.605170185988092d + "'", double16 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 27.0d + "'", double17 == 27.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-4.0d) + "'", double18 == (-4.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 9.0d + "'", double20 == 9.0d);
    }

    @Test
    public void test1731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1731");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        double double11 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double12 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double13 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double15 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 100.0d + "'", double13 == 100.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 201.0d + "'", double16 == 201.0d);
    }

    @Test
    public void test1732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1732");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        double double28 = org.apache.commons.math.stat.StatUtils.max(doubleArray25, 0, 0);
        double double29 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray25);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        double double36 = org.apache.commons.math.stat.StatUtils.max(doubleArray33, 0, 0);
        double double37 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray33);
        double double39 = org.apache.commons.math.stat.StatUtils.variance(doubleArray33, (double) 10);
        double double40 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray25, doubleArray33);
        double double42 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray25, 100.0d);
        double double43 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        double double44 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray48 = new double[] { (-1L), 0, 10L };
        double double51 = org.apache.commons.math.stat.StatUtils.max(doubleArray48, 0, 0);
        double double52 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray48);
        double[] doubleArray56 = new double[] { (-1L), 0, 10L };
        double double59 = org.apache.commons.math.stat.StatUtils.max(doubleArray56, 0, 0);
        double double60 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray56);
        double double62 = org.apache.commons.math.stat.StatUtils.variance(doubleArray56, (double) 10);
        double double63 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray48, doubleArray56);
        double double64 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray56);
        double double65 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double66 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double67 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 101.0d + "'", double29 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 101.0d + "'", double37 == 101.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 37.0d + "'", double39 == 37.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 127.0d + "'", double42 == 127.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 100.0d + "'", double43 == 100.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 21.0d + "'", double44 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 101.0d + "'", double52 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 101.0d + "'", double60 == 101.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 37.0d + "'", double62 == 37.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 12.0d + "'", double64 == 12.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 7.0d + "'", double65 == 7.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 27.0d + "'", double66 == 27.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 21.0d + "'", double67 == 21.0d);
    }

    @Test
    public void test1733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1733");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double28 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12, (int) (short) 1, (int) (short) 0);
        double double29 = org.apache.commons.math.stat.StatUtils.product(doubleArray12);
        double double30 = org.apache.commons.math.stat.StatUtils.max(doubleArray12);
        double double31 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray12);
        double double33 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) '4');
        double double34 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double36 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, 5.32d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 100.0d + "'", double8 == 100.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-0.0d) + "'", double29 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.0d + "'", double31 == 4.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 10.0d + "'", double33 == 10.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4.641588833612779d + "'", double34 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
    }

    @Test
    public void test1734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1734");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        double double28 = org.apache.commons.math.stat.StatUtils.max(doubleArray25, 0, 0);
        double double29 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray25);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        double double36 = org.apache.commons.math.stat.StatUtils.max(doubleArray33, 0, 0);
        double double37 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray33);
        double double39 = org.apache.commons.math.stat.StatUtils.variance(doubleArray33, (double) 10);
        double double40 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray25, doubleArray33);
        double double42 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray25, 100.0d);
        double double43 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double[] doubleArray47 = new double[] { (-1L), 0, 10L };
        double double50 = org.apache.commons.math.stat.StatUtils.max(doubleArray47, 0, 0);
        double double51 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray47);
        double[] doubleArray55 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double56 = org.apache.commons.math.stat.StatUtils.mean(doubleArray55);
        double double57 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray55);
        double double58 = org.apache.commons.math.stat.StatUtils.sum(doubleArray55);
        double double59 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray47, doubleArray55);
        double double60 = org.apache.commons.math.stat.StatUtils.sum(doubleArray47);
        double double63 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray47, (int) (short) 1, (int) (short) 0);
        double double64 = org.apache.commons.math.stat.StatUtils.product(doubleArray47);
        double double66 = org.apache.commons.math.stat.StatUtils.variance(doubleArray47, (double) (byte) 10);
        double double68 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray47, 0.0d);
        double double69 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double70 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        double double71 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 101.0d + "'", double29 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 101.0d + "'", double37 == 101.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 37.0d + "'", double39 == 37.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 127.0d + "'", double42 == 127.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 27.0d + "'", double43 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 101.0d + "'", double51 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 7.0d + "'", double56 == 7.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 4.641588833612779d + "'", double57 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 21.0d + "'", double58 == 21.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-4.0d) + "'", double59 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 9.0d + "'", double60 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-0.0d) + "'", double64 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 37.0d + "'", double66 == 37.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 127.0d + "'", double68 == 127.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 4.605170185988092d + "'", double69 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 100.0d + "'", double70 == 100.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
    }

    @Test
    public void test1735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1735");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray19);
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double28 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double double29 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double30 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray27);
        double double31 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray27);
        double double33 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray27);
        double double34 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double35 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray27);
        double double36 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double[] doubleArray40 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double41 = org.apache.commons.math.stat.StatUtils.mean(doubleArray40);
        double double43 = org.apache.commons.math.stat.StatUtils.variance(doubleArray40, 27.0d);
        double double45 = org.apache.commons.math.stat.StatUtils.variance(doubleArray40, (double) (byte) 10);
        double double46 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray40);
        double double48 = org.apache.commons.math.stat.StatUtils.variance(doubleArray40, (double) 10L);
        double double51 = org.apache.commons.math.stat.StatUtils.product(doubleArray40, 0, (int) (byte) 0);
        double double52 = org.apache.commons.math.stat.StatUtils.variance(doubleArray40);
        double double54 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray27, doubleArray40, 12.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double58 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray40, 0, (int) ' ', 27.000000000000004d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 21.0d + "'", double7 == 21.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.605170185988092d + "'", double22 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 7.0d + "'", double28 == 7.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4.641588833612779d + "'", double29 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.641588833612779d + "'", double31 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4.641588833612779d + "'", double34 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 4.605170185988092d + "'", double35 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 4.641588833612779d + "'", double36 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 7.0d + "'", double41 == 7.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 27.0d + "'", double43 == 27.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 27.0d + "'", double45 == 27.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 4.641588833612779d + "'", double46 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 27.0d + "'", double48 == 27.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 27.0d + "'", double52 == 27.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
    }

    @Test
    public void test1736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1736");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.max(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (-0.72d));
        double double20 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double24 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray11, (int) '4', (int) (byte) 0, 38.2d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 21.0d + "'", double17 == 21.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 27.00000000000003d + "'", double19 == 27.00000000000003d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 21.0d + "'", double20 == 21.0d);
    }

    @Test
    public void test1737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1737");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, 27.0d);
        double double16 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) (byte) 10);
        double double17 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        double double22 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11, (int) (byte) 1, (int) (short) 1);
        java.lang.Class<?> wildcardClass23 = doubleArray11.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 27.0d + "'", double14 == 27.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 27.0d + "'", double16 == 27.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4.605170185988092d + "'", double18 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4.605170185988092d + "'", double19 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1738");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        double double29 = org.apache.commons.math.stat.StatUtils.max(doubleArray26, 0, 0);
        double double30 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray26);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        double double37 = org.apache.commons.math.stat.StatUtils.max(doubleArray34, 0, 0);
        double double38 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray34);
        double double40 = org.apache.commons.math.stat.StatUtils.variance(doubleArray34, (double) 10);
        double double41 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray26, doubleArray34);
        double double42 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray34);
        double double43 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray18, doubleArray34);
        double[] doubleArray47 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double48 = org.apache.commons.math.stat.StatUtils.mean(doubleArray47);
        double double50 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray47, (double) 100.0f);
        double double51 = org.apache.commons.math.stat.StatUtils.variance(doubleArray47);
        double double52 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray18, doubleArray47);
        double double53 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray47);
        double double54 = org.apache.commons.math.stat.StatUtils.sum(doubleArray47);
        double double56 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray47, 3.5200000000000005d);
        double double57 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray47);
        double double58 = org.apache.commons.math.stat.StatUtils.sum(doubleArray47);
        // The following exception was thrown during execution in test generation
        try {
            double double61 = org.apache.commons.math.stat.StatUtils.max(doubleArray47, (int) (short) 100, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 7.0d + "'", double22 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 101.0d + "'", double30 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 101.0d + "'", double38 == 101.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 37.0d + "'", double40 == 37.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 101.0d + "'", double42 == 101.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4.0d + "'", double43 == 4.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 7.0d + "'", double48 == 7.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 27.0d + "'", double51 == 27.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 4.641588833612779d + "'", double53 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 21.0d + "'", double54 == 21.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 201.0d + "'", double57 == 201.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 21.0d + "'", double58 == 21.0d);
    }

    @Test
    public void test1739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1739");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) 10);
        double double18 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11, 1, (int) (short) 0);
        double double23 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double24 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double27 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11, 100, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 37.0d + "'", double17 == 37.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
    }

    @Test
    public void test1740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1740");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray11, (double) 100.0f);
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, 27.0d);
        double double24 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) (byte) 10);
        double double25 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, (double) (short) 1);
        double double28 = org.apache.commons.math.stat.StatUtils.min(doubleArray11);
        double[] doubleArray32 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double33 = org.apache.commons.math.stat.StatUtils.mean(doubleArray32);
        double double34 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray32);
        double double35 = org.apache.commons.math.stat.StatUtils.sum(doubleArray32);
        double double36 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray32);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        double double43 = org.apache.commons.math.stat.StatUtils.max(doubleArray40, 0, 0);
        double double44 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray40);
        double[] doubleArray48 = new double[] { (-1L), 0, 10L };
        double double51 = org.apache.commons.math.stat.StatUtils.max(doubleArray48, 0, 0);
        double double52 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray48);
        double double54 = org.apache.commons.math.stat.StatUtils.variance(doubleArray48, (double) 10);
        double double55 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray40, doubleArray48);
        double double56 = org.apache.commons.math.stat.StatUtils.variance(doubleArray40);
        double double58 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray32, doubleArray40, 3.0d);
        double double59 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray32);
        double double60 = org.apache.commons.math.stat.StatUtils.max(doubleArray32);
        double double61 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray32);
        double double62 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.0d + "'", double15 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 27.0d + "'", double22 == 27.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 27.0d + "'", double24 == 27.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 7.0d + "'", double33 == 7.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4.641588833612779d + "'", double34 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 21.0d + "'", double35 == 21.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 4.641588833612779d + "'", double36 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 101.0d + "'", double44 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 101.0d + "'", double52 == 101.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 37.0d + "'", double54 == 37.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 37.0d + "'", double56 == 37.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 127.0d + "'", double58 == 127.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4.605170185988092d + "'", double59 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 10.0d + "'", double60 == 10.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 7.0d + "'", double62 == 7.0d);
    }

    @Test
    public void test1741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1741");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double24 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3, 0, 0);
        double[] doubleArray28 = new double[] { (-1L), 0, 10L };
        double double31 = org.apache.commons.math.stat.StatUtils.max(doubleArray28, 0, 0);
        double double32 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray28);
        double[] doubleArray36 = new double[] { (-1L), 0, 10L };
        double double39 = org.apache.commons.math.stat.StatUtils.max(doubleArray36, 0, 0);
        double double40 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray36);
        double double42 = org.apache.commons.math.stat.StatUtils.variance(doubleArray36, (double) 10);
        double double43 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray28, doubleArray36);
        double double44 = org.apache.commons.math.stat.StatUtils.variance(doubleArray28);
        double double45 = org.apache.commons.math.stat.StatUtils.mean(doubleArray28);
        double double48 = org.apache.commons.math.stat.StatUtils.max(doubleArray28, 0, 0);
        double double49 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray28);
        double double51 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray28, (double) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            double double54 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, (int) (short) 100, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 101.0d + "'", double32 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 101.0d + "'", double40 == 101.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 37.0d + "'", double42 == 37.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 37.0d + "'", double44 == 37.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 3.0d + "'", double45 == 3.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 101.0d + "'", double49 == 101.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 127.0d + "'", double51 == 127.0d);
    }

    @Test
    public void test1742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1742");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10);
        double double10 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double11 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double[] doubleArray15 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double16 = org.apache.commons.math.stat.StatUtils.mean(doubleArray15);
        double double18 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray15, (double) 100.0f);
        double[] doubleArray22 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double23 = org.apache.commons.math.stat.StatUtils.mean(doubleArray22);
        double double24 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray22);
        double double25 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray22);
        double double26 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray15, doubleArray22);
        double[] doubleArray30 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double31 = org.apache.commons.math.stat.StatUtils.mean(doubleArray30);
        double double32 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray30);
        double double33 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray15, doubleArray30);
        double double34 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray30);
        double double35 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray30);
        double double36 = org.apache.commons.math.stat.StatUtils.min(doubleArray30);
        double double38 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray30, (double) 100L);
        double double39 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray30);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 7.0d + "'", double16 == 7.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 7.0d + "'", double23 == 7.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 4.641588833612779d + "'", double24 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 4.605170185988092d + "'", double25 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 7.0d + "'", double31 == 7.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 4.641588833612779d + "'", double32 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4.641588833612779d + "'", double34 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 4.641588833612779d + "'", double35 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 10.0d + "'", double38 == 10.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-4.0d) + "'", double39 == (-4.0d));
    }

    @Test
    public void test1743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1743");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.max(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.max(doubleArray11);
        double[] doubleArray21 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double22 = org.apache.commons.math.stat.StatUtils.mean(doubleArray21);
        double double24 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray21, (double) 100.0f);
        double double25 = org.apache.commons.math.stat.StatUtils.mean(doubleArray21);
        double[] doubleArray29 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double30 = org.apache.commons.math.stat.StatUtils.mean(doubleArray29);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray29, 27.0d);
        double double34 = org.apache.commons.math.stat.StatUtils.variance(doubleArray29, (double) (byte) 10);
        double double35 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray21, doubleArray29);
        double double36 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray29);
        double double37 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double38 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double[] doubleArray42 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double43 = org.apache.commons.math.stat.StatUtils.mean(doubleArray42);
        double double45 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray42, (double) 100.0f);
        double double47 = org.apache.commons.math.stat.StatUtils.variance(doubleArray42, 4.605170185988092d);
        double double48 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray42);
        double double49 = org.apache.commons.math.stat.StatUtils.max(doubleArray42);
        double double50 = org.apache.commons.math.stat.StatUtils.min(doubleArray42);
        double double51 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray11, doubleArray42);
        double double52 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 7.0d + "'", double22 == 7.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 10.0d + "'", double24 == 10.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 7.0d + "'", double25 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 7.0d + "'", double30 == 7.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 27.0d + "'", double34 == 27.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 201.0d + "'", double37 == 201.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 7.0d + "'", double38 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 7.0d + "'", double43 == 7.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 10.0d + "'", double45 == 10.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 27.000000000000004d + "'", double47 == 27.000000000000004d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 4.605170185988092d + "'", double48 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 10.0d + "'", double49 == 10.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 4.605170185988092d + "'", double52 == 4.605170185988092d);
    }

    @Test
    public void test1744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1744");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double24 = org.apache.commons.math.stat.StatUtils.min(doubleArray18);
        double double25 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double26 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        // The following exception was thrown during execution in test generation
        try {
            double double29 = org.apache.commons.math.stat.StatUtils.product(doubleArray18, (int) (byte) 100, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.641588833612779d + "'", double23 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 4.641588833612779d + "'", double25 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 7.0d + "'", double26 == 7.0d);
    }

    @Test
    public void test1745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1745");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray15 = new double[] { (-1L), 0, 10L };
        double double18 = org.apache.commons.math.stat.StatUtils.max(doubleArray15, 0, 0);
        double double19 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray15);
        double[] doubleArray23 = new double[] { (-1L), 0, 10L };
        double double26 = org.apache.commons.math.stat.StatUtils.max(doubleArray23, 0, 0);
        double double27 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray23);
        double double29 = org.apache.commons.math.stat.StatUtils.variance(doubleArray23, (double) 10);
        double double30 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray15, doubleArray23);
        double double31 = org.apache.commons.math.stat.StatUtils.variance(doubleArray15);
        double double32 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray15);
        double double35 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, 1, 1);
        double double36 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double[] doubleArray40 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double41 = org.apache.commons.math.stat.StatUtils.mean(doubleArray40);
        double double42 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray40);
        double double43 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray40);
        double double44 = org.apache.commons.math.stat.StatUtils.variance(doubleArray40);
        double double45 = org.apache.commons.math.stat.StatUtils.product(doubleArray40);
        double[] doubleArray49 = new double[] { (-1L), 0, 10L };
        double double52 = org.apache.commons.math.stat.StatUtils.max(doubleArray49, 0, 0);
        double double53 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray49);
        double[] doubleArray57 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double58 = org.apache.commons.math.stat.StatUtils.mean(doubleArray57);
        double double59 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray57);
        double double60 = org.apache.commons.math.stat.StatUtils.sum(doubleArray57);
        double double61 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray49, doubleArray57);
        double double62 = org.apache.commons.math.stat.StatUtils.sum(doubleArray49);
        double double65 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray49, (int) (short) 1, (int) (short) 0);
        double double66 = org.apache.commons.math.stat.StatUtils.product(doubleArray49);
        double double67 = org.apache.commons.math.stat.StatUtils.max(doubleArray49);
        double double68 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray40, doubleArray49);
        double double69 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray40);
        double double71 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray40, 191.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 101.0d + "'", double19 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 101.0d + "'", double27 == 101.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 37.0d + "'", double29 == 37.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 37.0d + "'", double31 == 37.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 4.0d + "'", double32 == 4.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 10.0d + "'", double35 == 10.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 27.0d + "'", double36 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 7.0d + "'", double41 == 7.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 4.641588833612779d + "'", double42 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4.605170185988092d + "'", double43 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 27.0d + "'", double44 == 27.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 100.0d + "'", double45 == 100.0d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 101.0d + "'", double53 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 7.0d + "'", double58 == 7.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4.641588833612779d + "'", double59 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 21.0d + "'", double60 == 21.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-4.0d) + "'", double61 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 9.0d + "'", double62 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.0d) + "'", double66 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 10.0d + "'", double67 == 10.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 4.0d + "'", double68 == 4.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 201.0d + "'", double69 == 201.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
    }

    @Test
    public void test1746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1746");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11, 1, (int) (byte) 1);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double22 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray11, (double) 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: invalid quantile value: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 27.0d + "'", double17 == 27.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4.641588833612779d + "'", double18 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4.641588833612779d + "'", double19 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
    }

    @Test
    public void test1747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1747");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (-1L), 0, 10L };
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray10, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, 21.0d);
        double double17 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, 4.605170185988092d);
        double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double19 = org.apache.commons.math.stat.StatUtils.max(doubleArray10);
        double double20 = org.apache.commons.math.stat.StatUtils.sum(doubleArray10);
        double[] doubleArray24 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double25 = org.apache.commons.math.stat.StatUtils.mean(doubleArray24);
        double double26 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray24);
        double double27 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray24);
        double double28 = org.apache.commons.math.stat.StatUtils.max(doubleArray24);
        double double31 = org.apache.commons.math.stat.StatUtils.sum(doubleArray24, (int) (short) 1, 0);
        double double34 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray24, (int) (short) 0, (int) (byte) 0);
        double double36 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray10, doubleArray24, (double) '#');
        // The following exception was thrown during execution in test generation
        try {
            double double39 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray24, (int) ' ', (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 37.0d + "'", double15 == 37.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 127.00000000000001d + "'", double17 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 3.0d + "'", double18 == 3.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 9.0d + "'", double20 == 9.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 7.0d + "'", double25 == 7.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 4.641588833612779d + "'", double26 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 4.605170185988092d + "'", double27 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 10.0d + "'", double28 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 127.0d + "'", double36 == 127.0d);
    }

    @Test
    public void test1748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1748");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) (byte) 100);
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double double15 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13);
        double double16 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray13);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double19 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray13, 37.0d);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double[] doubleArray24 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double25 = org.apache.commons.math.stat.StatUtils.mean(doubleArray24);
        double double26 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray24);
        double double27 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray24);
        double double28 = org.apache.commons.math.stat.StatUtils.variance(doubleArray24);
        double double29 = org.apache.commons.math.stat.StatUtils.min(doubleArray24);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        double double36 = org.apache.commons.math.stat.StatUtils.max(doubleArray33, 0, 0);
        double double37 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray33);
        double[] doubleArray41 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double42 = org.apache.commons.math.stat.StatUtils.mean(doubleArray41);
        double double43 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray41);
        double double44 = org.apache.commons.math.stat.StatUtils.sum(doubleArray41);
        double double45 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray33, doubleArray41);
        double double46 = org.apache.commons.math.stat.StatUtils.sum(doubleArray33);
        double double48 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray24, doubleArray33, 0.0d);
        double[] doubleArray52 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double53 = org.apache.commons.math.stat.StatUtils.mean(doubleArray52);
        double double55 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray52, (double) 100.0f);
        double double56 = org.apache.commons.math.stat.StatUtils.mean(doubleArray52);
        double[] doubleArray60 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double61 = org.apache.commons.math.stat.StatUtils.mean(doubleArray60);
        double double63 = org.apache.commons.math.stat.StatUtils.variance(doubleArray60, 27.0d);
        double double65 = org.apache.commons.math.stat.StatUtils.variance(doubleArray60, (double) (byte) 10);
        double double66 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray52, doubleArray60);
        double double67 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray24, doubleArray60);
        double double68 = org.apache.commons.math.stat.StatUtils.max(doubleArray60);
        double double69 = org.apache.commons.math.stat.StatUtils.max(doubleArray60);
        double double70 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray60);
        double double71 = org.apache.commons.math.stat.StatUtils.min(doubleArray60);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4.641588833612779d + "'", double15 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.605170185988092d + "'", double16 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 27.0d + "'", double17 == 27.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 7.0d + "'", double25 == 7.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 4.641588833612779d + "'", double26 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 4.605170185988092d + "'", double27 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 27.0d + "'", double28 == 27.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 101.0d + "'", double37 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 7.0d + "'", double42 == 7.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4.641588833612779d + "'", double43 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 21.0d + "'", double44 == 21.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-4.0d) + "'", double45 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 9.0d + "'", double46 == 9.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 127.0d + "'", double48 == 127.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 7.0d + "'", double53 == 7.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 10.0d + "'", double55 == 10.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 7.0d + "'", double56 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 7.0d + "'", double61 == 7.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 27.0d + "'", double63 == 27.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 27.0d + "'", double65 == 27.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 10.0d + "'", double68 == 10.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 10.0d + "'", double69 == 10.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
    }

    @Test
    public void test1749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1749");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) 10);
        double double18 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.max(doubleArray11);
        double double20 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double23 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11, 10, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 37.0d + "'", double17 == 37.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 101.0d + "'", double20 == 101.0d);
    }

    @Test
    public void test1750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1750");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        double double28 = org.apache.commons.math.stat.StatUtils.max(doubleArray25, 0, 0);
        double double29 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray25);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        double double36 = org.apache.commons.math.stat.StatUtils.max(doubleArray33, 0, 0);
        double double37 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray33);
        double double39 = org.apache.commons.math.stat.StatUtils.variance(doubleArray33, (double) 10);
        double double40 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray25, doubleArray33);
        double double42 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray25, 100.0d);
        double double43 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double44 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double46 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, 27.000000000000004d);
        double double50 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 126.99999999999977d, 0, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            double double53 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 100, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 101.0d + "'", double29 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 101.0d + "'", double37 == 101.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 37.0d + "'", double39 == 37.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 127.0d + "'", double42 == 127.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 27.0d + "'", double43 == 27.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 21.0d + "'", double44 == 21.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.7200000000000006d + "'", double46 == 1.7200000000000006d);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
    }

    @Test
    public void test1751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1751");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (-1L), 0, 10L };
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray10, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, 21.0d);
        double double17 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, 4.605170185988092d);
        double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double19 = org.apache.commons.math.stat.StatUtils.max(doubleArray10);
        double double20 = org.apache.commons.math.stat.StatUtils.sum(doubleArray10);
        double[] doubleArray24 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double25 = org.apache.commons.math.stat.StatUtils.mean(doubleArray24);
        double double26 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray24);
        double double27 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray24);
        double double28 = org.apache.commons.math.stat.StatUtils.variance(doubleArray24);
        double double29 = org.apache.commons.math.stat.StatUtils.min(doubleArray24);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        double double36 = org.apache.commons.math.stat.StatUtils.max(doubleArray33, 0, 0);
        double double37 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray33);
        double[] doubleArray41 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double42 = org.apache.commons.math.stat.StatUtils.mean(doubleArray41);
        double double43 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray41);
        double double44 = org.apache.commons.math.stat.StatUtils.sum(doubleArray41);
        double double45 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray33, doubleArray41);
        double double46 = org.apache.commons.math.stat.StatUtils.sum(doubleArray33);
        double double48 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray24, doubleArray33, 0.0d);
        double[] doubleArray52 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double53 = org.apache.commons.math.stat.StatUtils.mean(doubleArray52);
        double double54 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray52);
        double double55 = org.apache.commons.math.stat.StatUtils.sum(doubleArray52);
        double[] doubleArray59 = new double[] { (-1L), 0, 10L };
        double double62 = org.apache.commons.math.stat.StatUtils.max(doubleArray59, 0, 0);
        double double64 = org.apache.commons.math.stat.StatUtils.variance(doubleArray59, 21.0d);
        double double66 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray52, doubleArray59, 4.605170185988092d);
        double double67 = org.apache.commons.math.stat.StatUtils.mean(doubleArray59);
        double double68 = org.apache.commons.math.stat.StatUtils.max(doubleArray59);
        double double69 = org.apache.commons.math.stat.StatUtils.sum(doubleArray59);
        double[] doubleArray73 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double74 = org.apache.commons.math.stat.StatUtils.mean(doubleArray73);
        double double75 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray73);
        double double76 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray73);
        double double77 = org.apache.commons.math.stat.StatUtils.max(doubleArray73);
        double double80 = org.apache.commons.math.stat.StatUtils.sum(doubleArray73, (int) (short) 1, 0);
        double double83 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray73, (int) (short) 0, (int) (byte) 0);
        double double85 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray59, doubleArray73, (double) '#');
        double double86 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray24, doubleArray73);
        double double88 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray10, doubleArray24, 27.00000000000003d);
        double double89 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 37.0d + "'", double15 == 37.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 127.00000000000001d + "'", double17 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 3.0d + "'", double18 == 3.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 9.0d + "'", double20 == 9.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 7.0d + "'", double25 == 7.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 4.641588833612779d + "'", double26 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 4.605170185988092d + "'", double27 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 27.0d + "'", double28 == 27.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 101.0d + "'", double37 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 7.0d + "'", double42 == 7.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4.641588833612779d + "'", double43 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 21.0d + "'", double44 == 21.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-4.0d) + "'", double45 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 9.0d + "'", double46 == 9.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 127.0d + "'", double48 == 127.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 7.0d + "'", double53 == 7.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 4.641588833612779d + "'", double54 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 21.0d + "'", double55 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 37.0d + "'", double64 == 37.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 127.00000000000001d + "'", double66 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 3.0d + "'", double67 == 3.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 10.0d + "'", double68 == 10.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 9.0d + "'", double69 == 9.0d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 7.0d + "'", double74 == 7.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 4.641588833612779d + "'", double75 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 4.605170185988092d + "'", double76 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 10.0d + "'", double77 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double80));
        org.junit.Assert.assertTrue(Double.isNaN(double83));
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 127.0d + "'", double85 == 127.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 127.0d + "'", double88 == 127.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 37.0d + "'", double89 == 37.0d);
    }

    @Test
    public void test1752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1752");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double[] doubleArray19 = new double[] { (-1L), 0, 10L };
        double double22 = org.apache.commons.math.stat.StatUtils.max(doubleArray19, 0, 0);
        double double23 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray19);
        double double25 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) 10);
        double double26 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11);
        double double29 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, 3.0d);
        double double30 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double31 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double[] doubleArray35 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double36 = org.apache.commons.math.stat.StatUtils.mean(doubleArray35);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35);
        double double38 = org.apache.commons.math.stat.StatUtils.sum(doubleArray35);
        double[] doubleArray42 = new double[] { (-1L), 0, 10L };
        double double45 = org.apache.commons.math.stat.StatUtils.max(doubleArray42, 0, 0);
        double double47 = org.apache.commons.math.stat.StatUtils.variance(doubleArray42, 21.0d);
        double double49 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray35, doubleArray42, 4.605170185988092d);
        double[] doubleArray53 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double54 = org.apache.commons.math.stat.StatUtils.mean(doubleArray53);
        double double55 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray53);
        double double56 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray53);
        double double57 = org.apache.commons.math.stat.StatUtils.variance(doubleArray53);
        double double58 = org.apache.commons.math.stat.StatUtils.min(doubleArray53);
        double[] doubleArray62 = new double[] { (-1L), 0, 10L };
        double double65 = org.apache.commons.math.stat.StatUtils.max(doubleArray62, 0, 0);
        double double66 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray62);
        double[] doubleArray70 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double71 = org.apache.commons.math.stat.StatUtils.mean(doubleArray70);
        double double72 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray70);
        double double73 = org.apache.commons.math.stat.StatUtils.sum(doubleArray70);
        double double74 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray62, doubleArray70);
        double double75 = org.apache.commons.math.stat.StatUtils.sum(doubleArray62);
        double double77 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray53, doubleArray62, 0.0d);
        double double79 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray35, doubleArray53, 7.0d);
        double double80 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 4.641588833612779d + "'", double7 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 101.0d + "'", double23 == 101.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 37.0d + "'", double25 == 37.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 37.0d + "'", double27 == 37.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 127.0d + "'", double29 == 127.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 27.0d + "'", double30 == 27.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 27.0d + "'", double31 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 7.0d + "'", double36 == 7.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 21.0d + "'", double38 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 37.0d + "'", double47 == 37.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 127.00000000000001d + "'", double49 == 127.00000000000001d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 7.0d + "'", double54 == 7.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 4.641588833612779d + "'", double55 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 4.605170185988092d + "'", double56 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 27.0d + "'", double57 == 27.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 101.0d + "'", double66 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 7.0d + "'", double71 == 7.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 4.641588833612779d + "'", double72 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 21.0d + "'", double73 == 21.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-4.0d) + "'", double74 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 9.0d + "'", double75 == 9.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 127.0d + "'", double77 == 127.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
    }

    @Test
    public void test1753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1753");
        double[] doubleArray2 = new double[] { 10.0f, 0.0f };
        double double5 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray2, 0, 0);
        double[] doubleArray9 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double10 = org.apache.commons.math.stat.StatUtils.mean(doubleArray9);
        double double12 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray9, (double) 100.0f);
        double[] doubleArray16 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double17 = org.apache.commons.math.stat.StatUtils.mean(doubleArray16);
        double double18 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray16);
        double double19 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray16);
        double double20 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray9, doubleArray16);
        double[] doubleArray24 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double25 = org.apache.commons.math.stat.StatUtils.mean(doubleArray24);
        double double26 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray24);
        double double27 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray9, doubleArray24);
        double double28 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray24);
        double double29 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray24);
        double double30 = org.apache.commons.math.stat.StatUtils.mean(doubleArray24);
        double[] doubleArray34 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double35 = org.apache.commons.math.stat.StatUtils.mean(doubleArray34);
        double double36 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray34);
        double double37 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray34);
        double double38 = org.apache.commons.math.stat.StatUtils.variance(doubleArray34);
        double double39 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray34);
        double double40 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray34);
        double double43 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray34, (int) (short) 1, 0);
        double double44 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray24, doubleArray34);
        double double45 = org.apache.commons.math.stat.StatUtils.min(doubleArray34);
        double double46 = org.apache.commons.math.stat.StatUtils.mean(doubleArray34);
        double double48 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray34, (double) 10L);
        double double51 = org.apache.commons.math.stat.StatUtils.variance(doubleArray34, (int) (short) 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            double double53 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray2, doubleArray34, 12.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Input array lengths must be equal and at least 2.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 7.0d + "'", double10 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 10.0d + "'", double12 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 7.0d + "'", double17 == 7.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4.641588833612779d + "'", double18 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4.605170185988092d + "'", double19 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 7.0d + "'", double25 == 7.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 4.641588833612779d + "'", double26 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 4.641588833612779d + "'", double28 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4.641588833612779d + "'", double29 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 7.0d + "'", double30 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 7.0d + "'", double35 == 7.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 4.641588833612779d + "'", double36 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.605170185988092d + "'", double37 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 27.0d + "'", double38 == 27.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 4.641588833612779d + "'", double39 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 4.605170185988092d + "'", double40 == 4.605170185988092d);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 7.0d + "'", double46 == 7.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
    }

    @Test
    public void test1754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1754");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10);
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double double15 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13);
        double double16 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray13);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double18 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray13);
        double[] doubleArray22 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double23 = org.apache.commons.math.stat.StatUtils.mean(doubleArray22);
        double double24 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray22);
        double[] doubleArray28 = new double[] { (-1L), 0, 10L };
        double double31 = org.apache.commons.math.stat.StatUtils.max(doubleArray28, 0, 0);
        double double32 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray28);
        double[] doubleArray36 = new double[] { (-1L), 0, 10L };
        double double39 = org.apache.commons.math.stat.StatUtils.max(doubleArray36, 0, 0);
        double double40 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray36);
        double double42 = org.apache.commons.math.stat.StatUtils.variance(doubleArray36, (double) 10);
        double double43 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray28, doubleArray36);
        double double44 = org.apache.commons.math.stat.StatUtils.max(doubleArray36);
        double double45 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray36);
        double double46 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray36);
        double[] doubleArray50 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double51 = org.apache.commons.math.stat.StatUtils.mean(doubleArray50);
        double double53 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray50, (double) 100.0f);
        double[] doubleArray57 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double58 = org.apache.commons.math.stat.StatUtils.mean(doubleArray57);
        double double59 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray57);
        double double60 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray57);
        double double61 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray50, doubleArray57);
        double[] doubleArray65 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double66 = org.apache.commons.math.stat.StatUtils.mean(doubleArray65);
        double double67 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray65);
        double double68 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray50, doubleArray65);
        double double69 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray65);
        double double70 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray65);
        double double72 = org.apache.commons.math.stat.StatUtils.variance(doubleArray65, (-4.0d));
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4.641588833612779d + "'", double15 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.605170185988092d + "'", double16 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 27.0d + "'", double17 == 27.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-4.0d) + "'", double18 == (-4.0d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 7.0d + "'", double23 == 7.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-12.0d) + "'", double24 == (-12.0d));
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 101.0d + "'", double32 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 101.0d + "'", double40 == 101.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 37.0d + "'", double42 == 37.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 10.0d + "'", double44 == 10.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 101.0d + "'", double45 == 101.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 7.0d + "'", double51 == 7.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 10.0d + "'", double53 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 7.0d + "'", double58 == 7.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4.641588833612779d + "'", double59 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 4.605170185988092d + "'", double60 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 7.0d + "'", double66 == 7.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 4.641588833612779d + "'", double67 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 4.641588833612779d + "'", double69 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-12.0d) + "'", double70 == (-12.0d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 27.0d + "'", double72 == 27.0d);
    }

    @Test
    public void test1755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1755");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double10 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3, (int) (byte) 100, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
    }

    @Test
    public void test1756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1756");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double24 = org.apache.commons.math.stat.StatUtils.min(doubleArray18);
        // The following exception was thrown during execution in test generation
        try {
            double double27 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18, (int) '4', (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.641588833612779d + "'", double23 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
    }

    @Test
    public void test1757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1757");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (-1L), 0, 10L };
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray10, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, 21.0d);
        double double17 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, 4.605170185988092d);
        double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double19 = org.apache.commons.math.stat.StatUtils.max(doubleArray10);
        double double20 = org.apache.commons.math.stat.StatUtils.sum(doubleArray10);
        double[] doubleArray24 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double25 = org.apache.commons.math.stat.StatUtils.mean(doubleArray24);
        double double26 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray24);
        double double27 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray24);
        double double28 = org.apache.commons.math.stat.StatUtils.max(doubleArray24);
        double double31 = org.apache.commons.math.stat.StatUtils.sum(doubleArray24, (int) (short) 1, 0);
        double double34 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray24, (int) (short) 0, (int) (byte) 0);
        double double36 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray10, doubleArray24, (double) '#');
        double double37 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray10);
        double[] doubleArray41 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double42 = org.apache.commons.math.stat.StatUtils.mean(doubleArray41);
        double double44 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray41, (double) 100.0f);
        double[] doubleArray48 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double49 = org.apache.commons.math.stat.StatUtils.mean(doubleArray48);
        double double50 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray48);
        double double51 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray48);
        double double52 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray41, doubleArray48);
        double double53 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray10, doubleArray41);
        double double55 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray41, 2.302585092994046d);
        double double56 = org.apache.commons.math.stat.StatUtils.product(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 37.0d + "'", double15 == 37.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 127.00000000000001d + "'", double17 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 3.0d + "'", double18 == 3.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 9.0d + "'", double20 == 9.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 7.0d + "'", double25 == 7.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 4.641588833612779d + "'", double26 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 4.605170185988092d + "'", double27 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 10.0d + "'", double28 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 127.0d + "'", double36 == 127.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 101.0d + "'", double37 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 7.0d + "'", double42 == 7.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 10.0d + "'", double44 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 7.0d + "'", double49 == 7.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4.641588833612779d + "'", double50 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 4.605170185988092d + "'", double51 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-12.0d) + "'", double53 == (-12.0d));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 100.0d + "'", double56 == 100.0d);
    }

    @Test
    public void test1758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1758");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray16 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double17 = org.apache.commons.math.stat.StatUtils.mean(doubleArray16);
        double double18 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray16);
        double double19 = org.apache.commons.math.stat.StatUtils.sum(doubleArray16);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray16);
        double[] doubleArray24 = new double[] { (-1L), 0, 10L };
        double double27 = org.apache.commons.math.stat.StatUtils.max(doubleArray24, 0, 0);
        double double28 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray24);
        double[] doubleArray32 = new double[] { (-1L), 0, 10L };
        double double35 = org.apache.commons.math.stat.StatUtils.max(doubleArray32, 0, 0);
        double double36 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray32);
        double double38 = org.apache.commons.math.stat.StatUtils.variance(doubleArray32, (double) 10);
        double double39 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray24, doubleArray32);
        double double40 = org.apache.commons.math.stat.StatUtils.variance(doubleArray24);
        double double42 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray16, doubleArray24, 3.0d);
        double double43 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray24);
        double double44 = org.apache.commons.math.stat.StatUtils.product(doubleArray24);
        double[] doubleArray48 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double49 = org.apache.commons.math.stat.StatUtils.mean(doubleArray48);
        double double50 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray48);
        double double51 = org.apache.commons.math.stat.StatUtils.sum(doubleArray48);
        double double52 = org.apache.commons.math.stat.StatUtils.sum(doubleArray48);
        double double53 = org.apache.commons.math.stat.StatUtils.sum(doubleArray48);
        double double54 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray48);
        double double55 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray24, doubleArray48);
        double double56 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray48);
        double double57 = org.apache.commons.math.stat.StatUtils.min(doubleArray48);
        double[] doubleArray58 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double60 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray48, doubleArray58, 126.99999999999997d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 7.0d + "'", double17 == 7.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4.641588833612779d + "'", double18 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 21.0d + "'", double19 == 21.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 101.0d + "'", double28 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 101.0d + "'", double36 == 101.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 37.0d + "'", double38 == 37.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 37.0d + "'", double40 == 37.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 127.0d + "'", double42 == 127.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-0.0d) + "'", double44 == (-0.0d));
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 7.0d + "'", double49 == 7.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4.641588833612779d + "'", double50 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 21.0d + "'", double51 == 21.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 21.0d + "'", double52 == 21.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 21.0d + "'", double53 == 21.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 201.0d + "'", double54 == 201.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-12.0d) + "'", double55 == (-12.0d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
    }

    @Test
    public void test1759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1759");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double24 = org.apache.commons.math.stat.StatUtils.min(doubleArray18);
        double double25 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double26 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double27 = org.apache.commons.math.stat.StatUtils.variance(doubleArray18);
        double double30 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray18, 1, (int) (byte) 0);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.641588833612779d + "'", double23 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 4.641588833612779d + "'", double25 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 7.0d + "'", double26 == 7.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 27.0d + "'", double27 == 27.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
    }

    @Test
    public void test1760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1760");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11, (int) (byte) 1, (int) (byte) 0);
        double double19 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        double double20 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        double[] doubleArray24 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double25 = org.apache.commons.math.stat.StatUtils.mean(doubleArray24);
        double double27 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray24, (double) 100.0f);
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double double33 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray31);
        double double34 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray31);
        double double35 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray24, doubleArray31);
        double[] doubleArray39 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double40 = org.apache.commons.math.stat.StatUtils.mean(doubleArray39);
        double double41 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray39);
        double double42 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray24, doubleArray39);
        double double43 = org.apache.commons.math.stat.StatUtils.mean(doubleArray39);
        double[] doubleArray47 = new double[] { (-1L), 0, 10L };
        double double50 = org.apache.commons.math.stat.StatUtils.max(doubleArray47, 0, 0);
        double double51 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray47);
        double[] doubleArray55 = new double[] { (-1L), 0, 10L };
        double double58 = org.apache.commons.math.stat.StatUtils.max(doubleArray55, 0, 0);
        double double59 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray55);
        double double61 = org.apache.commons.math.stat.StatUtils.variance(doubleArray55, (double) 10);
        double double62 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray47, doubleArray55);
        double double63 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray55);
        double double64 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray39, doubleArray55);
        double[] doubleArray68 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double69 = org.apache.commons.math.stat.StatUtils.mean(doubleArray68);
        double double71 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray68, (double) 100.0f);
        double double72 = org.apache.commons.math.stat.StatUtils.variance(doubleArray68);
        double double73 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray39, doubleArray68);
        double double74 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray68);
        double double75 = org.apache.commons.math.stat.StatUtils.sum(doubleArray68);
        double double77 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray68, 3.5200000000000005d);
        double double78 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray68);
        double double79 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray68);
        // The following exception was thrown during execution in test generation
        try {
            double double82 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11, (int) (byte) -1, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4.605170185988092d + "'", double19 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.605170185988092d + "'", double20 == 4.605170185988092d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 7.0d + "'", double25 == 7.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 10.0d + "'", double27 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 7.0d + "'", double32 == 7.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4.641588833612779d + "'", double33 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4.605170185988092d + "'", double34 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 7.0d + "'", double40 == 7.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 4.641588833612779d + "'", double41 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 7.0d + "'", double43 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 101.0d + "'", double51 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 101.0d + "'", double59 == 101.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 37.0d + "'", double61 == 37.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 101.0d + "'", double63 == 101.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 4.0d + "'", double64 == 4.0d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 7.0d + "'", double69 == 7.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 10.0d + "'", double71 == 10.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 27.0d + "'", double72 == 27.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 4.641588833612779d + "'", double74 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 21.0d + "'", double75 == 21.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.0d + "'", double77 == 1.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 201.0d + "'", double78 == 201.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
    }

    @Test
    public void test1761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1761");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray11, (double) 100.0f);
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, 27.0d);
        double double24 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) (byte) 10);
        double double25 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, (double) (short) 1);
        double double30 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11, 0, (int) (byte) 0);
        double[] doubleArray34 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double35 = org.apache.commons.math.stat.StatUtils.mean(doubleArray34);
        double double36 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray34);
        double double37 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray34);
        double double38 = org.apache.commons.math.stat.StatUtils.variance(doubleArray34);
        double double39 = org.apache.commons.math.stat.StatUtils.min(doubleArray34);
        double[] doubleArray43 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double44 = org.apache.commons.math.stat.StatUtils.mean(doubleArray43);
        double double46 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray43, (double) 100.0f);
        double[] doubleArray50 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double51 = org.apache.commons.math.stat.StatUtils.mean(doubleArray50);
        double double52 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray50);
        double double53 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray50);
        double double54 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray43, doubleArray50);
        double double56 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray34, doubleArray43, (-0.9199999999999999d));
        double double57 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray11, doubleArray34);
        // The following exception was thrown during execution in test generation
        try {
            double double60 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11, (int) (byte) 1, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.0d + "'", double15 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 27.0d + "'", double22 == 27.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 27.0d + "'", double24 == 27.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 7.0d + "'", double35 == 7.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 4.641588833612779d + "'", double36 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.605170185988092d + "'", double37 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 27.0d + "'", double38 == 27.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 7.0d + "'", double44 == 7.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 10.0d + "'", double46 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 7.0d + "'", double51 == 7.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 4.641588833612779d + "'", double52 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 4.605170185988092d + "'", double53 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-2.220446049250313E-16d) + "'", double56 == (-2.220446049250313E-16d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
    }

    @Test
    public void test1762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1762");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, 0.0d);
        double double29 = org.apache.commons.math.stat.StatUtils.variance(doubleArray12, (double) 1L);
        double[] doubleArray33 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double34 = org.apache.commons.math.stat.StatUtils.mean(doubleArray33);
        double double36 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray33, (double) 100.0f);
        double[] doubleArray40 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double41 = org.apache.commons.math.stat.StatUtils.mean(doubleArray40);
        double double42 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray40);
        double double43 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray40);
        double double44 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray33, doubleArray40);
        double[] doubleArray48 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double49 = org.apache.commons.math.stat.StatUtils.mean(doubleArray48);
        double double50 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray48);
        double double51 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray33, doubleArray48);
        double[] doubleArray55 = new double[] { (-1L), 0, 10L };
        double double58 = org.apache.commons.math.stat.StatUtils.max(doubleArray55, 0, 0);
        double double59 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray55);
        double[] doubleArray63 = new double[] { (-1L), 0, 10L };
        double double66 = org.apache.commons.math.stat.StatUtils.max(doubleArray63, 0, 0);
        double double67 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray63);
        double double69 = org.apache.commons.math.stat.StatUtils.variance(doubleArray63, (double) 10);
        double double70 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray55, doubleArray63);
        double double72 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray33, doubleArray55, 100.0d);
        double double73 = org.apache.commons.math.stat.StatUtils.variance(doubleArray33);
        double double74 = org.apache.commons.math.stat.StatUtils.sum(doubleArray33);
        double double75 = org.apache.commons.math.stat.StatUtils.variance(doubleArray33);
        double double78 = org.apache.commons.math.stat.StatUtils.min(doubleArray33, (int) (byte) 0, 0);
        double double79 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray33);
        double double80 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray33);
        // The following exception was thrown during execution in test generation
        try {
            double double83 = org.apache.commons.math.stat.StatUtils.max(doubleArray33, (int) ' ', (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 127.0d + "'", double27 == 127.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 37.0d + "'", double29 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 7.0d + "'", double34 == 7.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 10.0d + "'", double36 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 7.0d + "'", double41 == 7.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 4.641588833612779d + "'", double42 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4.605170185988092d + "'", double43 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 7.0d + "'", double49 == 7.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4.641588833612779d + "'", double50 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 101.0d + "'", double59 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 101.0d + "'", double67 == 101.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 37.0d + "'", double69 == 37.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 127.0d + "'", double72 == 127.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 27.0d + "'", double73 == 27.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 21.0d + "'", double74 == 21.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 27.0d + "'", double75 == 27.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 4.605170185988092d + "'", double79 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + (-4.0d) + "'", double80 == (-4.0d));
    }

    @Test
    public void test1763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1763");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (-1L), 0, 10L };
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray10, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, 21.0d);
        double double17 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, 4.605170185988092d);
        double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double19 = org.apache.commons.math.stat.StatUtils.max(doubleArray10);
        double double20 = org.apache.commons.math.stat.StatUtils.sum(doubleArray10);
        double[] doubleArray24 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double25 = org.apache.commons.math.stat.StatUtils.mean(doubleArray24);
        double double26 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray24);
        double double27 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray24);
        double double28 = org.apache.commons.math.stat.StatUtils.max(doubleArray24);
        double double31 = org.apache.commons.math.stat.StatUtils.sum(doubleArray24, (int) (short) 1, 0);
        double double34 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray24, (int) (short) 0, (int) (byte) 0);
        double double36 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray10, doubleArray24, (double) '#');
        // The following exception was thrown during execution in test generation
        try {
            double double39 = org.apache.commons.math.stat.StatUtils.product(doubleArray10, (int) (byte) -1, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 37.0d + "'", double15 == 37.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 127.00000000000001d + "'", double17 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 3.0d + "'", double18 == 3.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 9.0d + "'", double20 == 9.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 7.0d + "'", double25 == 7.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 4.641588833612779d + "'", double26 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 4.605170185988092d + "'", double27 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 10.0d + "'", double28 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 127.0d + "'", double36 == 127.0d);
    }

    @Test
    public void test1764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1764");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10);
        double double11 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) (short) 100);
        double double12 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double15 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3, (int) (byte) 1, (int) (short) 1);
        double double16 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 101.0d + "'", double12 == 101.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + Double.NEGATIVE_INFINITY + "'", double15 == Double.NEGATIVE_INFINITY);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-1.0d) + "'", double16 == (-1.0d));
    }

    @Test
    public void test1765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1765");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        // The following exception was thrown during execution in test generation
        try {
            double double27 = org.apache.commons.math.stat.StatUtils.variance(doubleArray18, 2.302585092994046d, (int) 'a', (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.641588833612779d + "'", double23 == 4.641588833612779d);
    }

    @Test
    public void test1766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1766");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double[] doubleArray19 = new double[] { (-1L), 0, 10L };
        double double22 = org.apache.commons.math.stat.StatUtils.max(doubleArray19, 0, 0);
        double double23 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray19);
        double double25 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) 10);
        double double26 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11);
        double double29 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, 3.0d);
        double double30 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double31 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double34 = org.apache.commons.math.stat.StatUtils.min(doubleArray3, 0, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 4.641588833612779d + "'", double7 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 101.0d + "'", double23 == 101.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 37.0d + "'", double25 == 37.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 37.0d + "'", double27 == 37.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 127.0d + "'", double29 == 127.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 4.605170185988092d + "'", double30 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.605170185988092d + "'", double31 == 4.605170185988092d);
    }

    @Test
    public void test1767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1767");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray11, (double) 100.0f);
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, 27.0d);
        double double24 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) (byte) 10);
        double double25 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, (double) (short) 1);
        double double28 = org.apache.commons.math.stat.StatUtils.min(doubleArray11);
        double[] doubleArray32 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double33 = org.apache.commons.math.stat.StatUtils.mean(doubleArray32);
        double double34 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray32);
        double double35 = org.apache.commons.math.stat.StatUtils.sum(doubleArray32);
        double double36 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray32);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        double double43 = org.apache.commons.math.stat.StatUtils.max(doubleArray40, 0, 0);
        double double44 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray40);
        double[] doubleArray48 = new double[] { (-1L), 0, 10L };
        double double51 = org.apache.commons.math.stat.StatUtils.max(doubleArray48, 0, 0);
        double double52 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray48);
        double double54 = org.apache.commons.math.stat.StatUtils.variance(doubleArray48, (double) 10);
        double double55 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray40, doubleArray48);
        double double56 = org.apache.commons.math.stat.StatUtils.variance(doubleArray40);
        double double58 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray32, doubleArray40, 3.0d);
        double double59 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray32);
        double double60 = org.apache.commons.math.stat.StatUtils.max(doubleArray32);
        double double61 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray32);
        // The following exception was thrown during execution in test generation
        try {
            double double64 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11, (int) 'a', 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.0d + "'", double15 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 27.0d + "'", double22 == 27.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 27.0d + "'", double24 == 27.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 7.0d + "'", double33 == 7.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4.641588833612779d + "'", double34 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 21.0d + "'", double35 == 21.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 4.641588833612779d + "'", double36 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 101.0d + "'", double44 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 101.0d + "'", double52 == 101.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 37.0d + "'", double54 == 37.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 37.0d + "'", double56 == 37.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 127.0d + "'", double58 == 127.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4.605170185988092d + "'", double59 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 10.0d + "'", double60 == 10.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
    }

    @Test
    public void test1768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1768");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        double double29 = org.apache.commons.math.stat.StatUtils.max(doubleArray26, 0, 0);
        double double30 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray26);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        double double37 = org.apache.commons.math.stat.StatUtils.max(doubleArray34, 0, 0);
        double double38 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray34);
        double double40 = org.apache.commons.math.stat.StatUtils.variance(doubleArray34, (double) 10);
        double double41 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray26, doubleArray34);
        double double42 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray34);
        double double43 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray18, doubleArray34);
        double double44 = org.apache.commons.math.stat.StatUtils.sum(doubleArray18);
        double[] doubleArray48 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double49 = org.apache.commons.math.stat.StatUtils.mean(doubleArray48);
        double double50 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray48);
        double double51 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray48);
        double double52 = org.apache.commons.math.stat.StatUtils.variance(doubleArray48);
        double double53 = org.apache.commons.math.stat.StatUtils.min(doubleArray48);
        double[] doubleArray57 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double58 = org.apache.commons.math.stat.StatUtils.mean(doubleArray57);
        double double60 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray57, (double) 100.0f);
        double[] doubleArray64 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double65 = org.apache.commons.math.stat.StatUtils.mean(doubleArray64);
        double double66 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray64);
        double double67 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray64);
        double double68 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray57, doubleArray64);
        double[] doubleArray72 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double73 = org.apache.commons.math.stat.StatUtils.mean(doubleArray72);
        double double74 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray72);
        double double75 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray57, doubleArray72);
        double double76 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray72);
        double double77 = org.apache.commons.math.stat.StatUtils.variance(doubleArray72);
        double double78 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray48, doubleArray72);
        double double81 = org.apache.commons.math.stat.StatUtils.sum(doubleArray48, (int) (short) 0, (int) (byte) 1);
        double double82 = org.apache.commons.math.stat.StatUtils.max(doubleArray48);
        double double84 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray18, doubleArray48, 13.0799401015171d);
        double double85 = org.apache.commons.math.stat.StatUtils.min(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 7.0d + "'", double22 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 101.0d + "'", double30 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 101.0d + "'", double38 == 101.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 37.0d + "'", double40 == 37.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 101.0d + "'", double42 == 101.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4.0d + "'", double43 == 4.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 21.0d + "'", double44 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 7.0d + "'", double49 == 7.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4.641588833612779d + "'", double50 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 4.605170185988092d + "'", double51 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 27.0d + "'", double52 == 27.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 7.0d + "'", double58 == 7.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 10.0d + "'", double60 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 7.0d + "'", double65 == 7.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 4.641588833612779d + "'", double66 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 4.605170185988092d + "'", double67 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 7.0d + "'", double73 == 7.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 4.641588833612779d + "'", double74 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 4.641588833612779d + "'", double76 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 27.0d + "'", double77 == 27.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 10.0d + "'", double81 == 10.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 10.0d + "'", double82 == 10.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + (-5.6843418860808015E-14d) + "'", double84 == (-5.6843418860808015E-14d));
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1.0d + "'", double85 == 1.0d);
    }

    @Test
    public void test1769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1769");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray10);
        double double16 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, (double) '#');
        double[] doubleArray20 = new double[] { (-1L), 0, 10L };
        double double23 = org.apache.commons.math.stat.StatUtils.max(doubleArray20, 0, 0);
        double double24 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray20);
        double double26 = org.apache.commons.math.stat.StatUtils.variance(doubleArray20, (double) 10);
        double[] doubleArray30 = new double[] { (-1L), 0, 10L };
        double double33 = org.apache.commons.math.stat.StatUtils.max(doubleArray30, 0, 0);
        double double34 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray30);
        double double35 = org.apache.commons.math.stat.StatUtils.min(doubleArray30);
        double double36 = org.apache.commons.math.stat.StatUtils.variance(doubleArray30);
        double double37 = org.apache.commons.math.stat.StatUtils.variance(doubleArray30);
        double double39 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray30, (double) 100.0f);
        double double40 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray20, doubleArray30);
        double double41 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray30);
        double double42 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray10, doubleArray30);
        double double44 = org.apache.commons.math.stat.StatUtils.variance(doubleArray30, (double) 100);
        double double45 = org.apache.commons.math.stat.StatUtils.product(doubleArray30);
        double double46 = org.apache.commons.math.stat.StatUtils.min(doubleArray30);
        double double47 = org.apache.commons.math.stat.StatUtils.mean(doubleArray30);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 101.0d + "'", double24 == 101.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 37.0d + "'", double26 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 101.0d + "'", double34 == 101.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-1.0d) + "'", double35 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 37.0d + "'", double36 == 37.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 37.0d + "'", double37 == 37.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 10.0d + "'", double39 == 10.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 101.0d + "'", double41 == 101.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 4.0d + "'", double42 == 4.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 37.0d + "'", double44 == 37.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.0d) + "'", double45 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-1.0d) + "'", double46 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 3.0d + "'", double47 == 3.0d);
    }

    @Test
    public void test1770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1770");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray20, (double) 100.0f);
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double28 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double double29 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double30 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray27);
        double double31 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray20, doubleArray27);
        double[] doubleArray35 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double36 = org.apache.commons.math.stat.StatUtils.mean(doubleArray35);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35);
        double double38 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray20, doubleArray35);
        double double39 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray20);
        double double40 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray20);
        double double41 = org.apache.commons.math.stat.StatUtils.min(doubleArray20);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 7.0d + "'", double28 == 7.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4.641588833612779d + "'", double29 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 4.605170185988092d + "'", double30 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 7.0d + "'", double36 == 7.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-4.0d) + "'", double39 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 201.0d + "'", double40 == 201.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
    }

    @Test
    public void test1771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1771");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10);
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double double15 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13);
        double double16 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray13);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double18 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray13);
        double[] doubleArray22 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double23 = org.apache.commons.math.stat.StatUtils.mean(doubleArray22);
        double double24 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray22);
        double[] doubleArray28 = new double[] { (-1L), 0, 10L };
        double double31 = org.apache.commons.math.stat.StatUtils.max(doubleArray28, 0, 0);
        double double32 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray28);
        double[] doubleArray36 = new double[] { (-1L), 0, 10L };
        double double39 = org.apache.commons.math.stat.StatUtils.max(doubleArray36, 0, 0);
        double double40 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray36);
        double double42 = org.apache.commons.math.stat.StatUtils.variance(doubleArray36, (double) 10);
        double double43 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray28, doubleArray36);
        double double44 = org.apache.commons.math.stat.StatUtils.max(doubleArray36);
        double double45 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray36);
        double double46 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray36);
        double[] doubleArray50 = new double[] { (-1L), 0, 10L };
        double double53 = org.apache.commons.math.stat.StatUtils.max(doubleArray50, 0, 0);
        double double54 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray50);
        double[] doubleArray58 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double59 = org.apache.commons.math.stat.StatUtils.mean(doubleArray58);
        double double60 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray58);
        double double61 = org.apache.commons.math.stat.StatUtils.sum(doubleArray58);
        double double62 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray50, doubleArray58);
        double double63 = org.apache.commons.math.stat.StatUtils.sum(doubleArray50);
        double double66 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray50, (int) (short) 1, (int) (short) 0);
        double double69 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray50, (int) (byte) 0, (int) (byte) 0);
        double double70 = org.apache.commons.math.stat.StatUtils.min(doubleArray50);
        double[] doubleArray74 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double75 = org.apache.commons.math.stat.StatUtils.mean(doubleArray74);
        double double76 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray74);
        double double77 = org.apache.commons.math.stat.StatUtils.sum(doubleArray74);
        double double78 = org.apache.commons.math.stat.StatUtils.sum(doubleArray74);
        double double79 = org.apache.commons.math.stat.StatUtils.max(doubleArray74);
        double double80 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray74);
        double double81 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray50, doubleArray74);
        double double83 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray36, doubleArray50, (double) (-1L));
        // The following exception was thrown during execution in test generation
        try {
            double double87 = org.apache.commons.math.stat.StatUtils.variance(doubleArray36, 127.0d, (-1), (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4.641588833612779d + "'", double15 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.605170185988092d + "'", double16 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 27.0d + "'", double17 == 27.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-4.0d) + "'", double18 == (-4.0d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 7.0d + "'", double23 == 7.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-12.0d) + "'", double24 == (-12.0d));
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 101.0d + "'", double32 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 101.0d + "'", double40 == 101.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 37.0d + "'", double42 == 37.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 10.0d + "'", double44 == 10.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 101.0d + "'", double45 == 101.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 101.0d + "'", double54 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 7.0d + "'", double59 == 7.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 4.641588833612779d + "'", double60 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 21.0d + "'", double61 == 21.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-4.0d) + "'", double62 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 9.0d + "'", double63 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-1.0d) + "'", double70 == (-1.0d));
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 7.0d + "'", double75 == 7.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 4.641588833612779d + "'", double76 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 21.0d + "'", double77 == 21.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 21.0d + "'", double78 == 21.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 10.0d + "'", double79 == 10.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 201.0d + "'", double80 == 201.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-4.0d) + "'", double81 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
    }

    @Test
    public void test1772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1772");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10);
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double double15 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13);
        double double16 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray13);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double18 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray13);
        double double19 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double20 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double21 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double22 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) -1, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4.641588833612779d + "'", double15 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.605170185988092d + "'", double16 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 27.0d + "'", double17 == 27.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-4.0d) + "'", double18 == (-4.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 9.0d + "'", double20 == 9.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 9.0d + "'", double21 == 9.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.0d) + "'", double22 == (-0.0d));
    }

    @Test
    public void test1773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1773");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        double[] doubleArray14 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray14);
        double double16 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray14);
        double double17 = org.apache.commons.math.stat.StatUtils.sum(doubleArray14);
        double double18 = org.apache.commons.math.stat.StatUtils.max(doubleArray14);
        double double19 = org.apache.commons.math.stat.StatUtils.variance(doubleArray14);
        double double20 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray14);
        double double21 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.0d + "'", double15 == 7.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.641588833612779d + "'", double16 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 21.0d + "'", double17 == 21.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 27.0d + "'", double19 == 27.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 201.0d + "'", double21 == 201.0d);
    }

    @Test
    public void test1774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1774");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 0, 1, (int) (short) 1);
        double double10 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double[] doubleArray14 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray14);
        double double16 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray14);
        double double17 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray14);
        double double18 = org.apache.commons.math.stat.StatUtils.variance(doubleArray14);
        double double19 = org.apache.commons.math.stat.StatUtils.min(doubleArray14);
        double[] doubleArray23 = new double[] { (-1L), 0, 10L };
        double double26 = org.apache.commons.math.stat.StatUtils.max(doubleArray23, 0, 0);
        double double27 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray23);
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double double33 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray31);
        double double34 = org.apache.commons.math.stat.StatUtils.sum(doubleArray31);
        double double35 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray23, doubleArray31);
        double double36 = org.apache.commons.math.stat.StatUtils.sum(doubleArray23);
        double double38 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray14, doubleArray23, 0.0d);
        double double39 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray14);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 27.0d + "'", double10 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.0d + "'", double15 == 7.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.641588833612779d + "'", double16 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 4.605170185988092d + "'", double17 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 27.0d + "'", double18 == 27.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 101.0d + "'", double27 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 7.0d + "'", double32 == 7.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4.641588833612779d + "'", double33 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 21.0d + "'", double34 == 21.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-4.0d) + "'", double35 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 9.0d + "'", double36 == 9.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 127.0d + "'", double38 == 127.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
    }

    @Test
    public void test1775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1775");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3, (int) (short) 0, (int) (byte) 0);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double16 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double17 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.0d + "'", double15 == 7.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 100.0d + "'", double17 == 100.0d);
    }

    @Test
    public void test1776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1776");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, 50.0d);
        double double11 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double14 = org.apache.commons.math.stat.StatUtils.product(doubleArray3, (int) (byte) 0, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-1.0d) + "'", double8 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + (-0.0d) + "'", double11 == (-0.0d));
    }

    @Test
    public void test1777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1777");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) 10);
        double double18 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double20 = org.apache.commons.math.stat.StatUtils.product(doubleArray11);
        double double21 = org.apache.commons.math.stat.StatUtils.product(doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double24 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11, (int) (byte) -1, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 37.0d + "'", double17 == 37.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 101.0d + "'", double19 == 101.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.0d) + "'", double20 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-0.0d) + "'", double21 == (-0.0d));
    }

    @Test
    public void test1778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1778");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double8 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 0.0d);
        double double9 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double13 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (int) (byte) 1, (int) (byte) 1, (-1.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: invalid quantile value: -1.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 37.0d + "'", double8 == 37.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 3.0d + "'", double9 == 3.0d);
    }

    @Test
    public void test1779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1779");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, 27.0d);
        double double16 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) (byte) 10);
        double double17 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray22 = new double[] { (-1L), 0, 10L };
        double double25 = org.apache.commons.math.stat.StatUtils.max(doubleArray22, 0, 0);
        double double26 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray22);
        double[] doubleArray30 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double31 = org.apache.commons.math.stat.StatUtils.mean(doubleArray30);
        double double32 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray30);
        double double33 = org.apache.commons.math.stat.StatUtils.sum(doubleArray30);
        double double34 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray22, doubleArray30);
        double double37 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray22, (int) (byte) 1, (int) (short) 0);
        double[] doubleArray41 = new double[] { (-1L), 0, 10L };
        double double44 = org.apache.commons.math.stat.StatUtils.max(doubleArray41, 0, 0);
        double double45 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray41);
        double[] doubleArray49 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double50 = org.apache.commons.math.stat.StatUtils.mean(doubleArray49);
        double double51 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray49);
        double double52 = org.apache.commons.math.stat.StatUtils.sum(doubleArray49);
        double double53 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray41, doubleArray49);
        double double54 = org.apache.commons.math.stat.StatUtils.max(doubleArray41);
        double double55 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray41);
        double double56 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray22, doubleArray41);
        double double57 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray22);
        double double58 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray22);
        double double59 = org.apache.commons.math.stat.StatUtils.min(doubleArray22);
        // The following exception was thrown during execution in test generation
        try {
            double double62 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray22, (int) '4', 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 27.0d + "'", double14 == 27.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 27.0d + "'", double16 == 27.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 21.0d + "'", double18 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 101.0d + "'", double26 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 7.0d + "'", double31 == 7.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 4.641588833612779d + "'", double32 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 21.0d + "'", double33 == 21.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-4.0d) + "'", double34 == (-4.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 101.0d + "'", double45 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 7.0d + "'", double50 == 7.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 4.641588833612779d + "'", double51 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 21.0d + "'", double52 == 21.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-4.0d) + "'", double53 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 10.0d + "'", double54 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 101.0d + "'", double57 == 101.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 12.0d + "'", double58 == 12.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-1.0d) + "'", double59 == (-1.0d));
    }

    @Test
    public void test1780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1780");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.variance(doubleArray18);
        // The following exception was thrown during execution in test generation
        try {
            double double26 = org.apache.commons.math.stat.StatUtils.max(doubleArray18, 10, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 27.0d + "'", double23 == 27.0d);
    }

    @Test
    public void test1781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1781");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray11, (double) 100.0f);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray18);
        double[] doubleArray26 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double27 = org.apache.commons.math.stat.StatUtils.mean(doubleArray26);
        double double28 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray26);
        double double29 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray11, doubleArray26);
        double double30 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray26);
        // The following exception was thrown during execution in test generation
        try {
            double double33 = org.apache.commons.math.stat.StatUtils.mean(doubleArray26, (-1), (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.605170185988092d + "'", double21 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 7.0d + "'", double27 == 7.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 4.641588833612779d + "'", double28 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-12.0d) + "'", double30 == (-12.0d));
    }

    @Test
    public void test1782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1782");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.min(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.product(doubleArray11);
        double double21 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray11, (int) (byte) 1, 1, Double.NaN);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        double double28 = org.apache.commons.math.stat.StatUtils.max(doubleArray25, 0, 0);
        double double29 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray25);
        double double31 = org.apache.commons.math.stat.StatUtils.variance(doubleArray25, (double) 10);
        double[] doubleArray35 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double36 = org.apache.commons.math.stat.StatUtils.mean(doubleArray35);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35);
        double double38 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray35);
        double double39 = org.apache.commons.math.stat.StatUtils.variance(doubleArray35);
        double double40 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray25, doubleArray35);
        double[] doubleArray44 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double45 = org.apache.commons.math.stat.StatUtils.mean(doubleArray44);
        double double46 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray44);
        double double47 = org.apache.commons.math.stat.StatUtils.sum(doubleArray44);
        double double48 = org.apache.commons.math.stat.StatUtils.max(doubleArray44);
        double double50 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray44, (double) (byte) 100);
        double[] doubleArray54 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double55 = org.apache.commons.math.stat.StatUtils.mean(doubleArray54);
        double double56 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray54);
        double double57 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray54);
        double double58 = org.apache.commons.math.stat.StatUtils.variance(doubleArray54);
        double double60 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray44, doubleArray54, 37.0d);
        double double61 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray35, doubleArray54);
        double double62 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray11, doubleArray54);
        double double63 = org.apache.commons.math.stat.StatUtils.sum(doubleArray54);
        double double64 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 100.0d + "'", double17 == 100.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 101.0d + "'", double29 == 101.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 37.0d + "'", double31 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 7.0d + "'", double36 == 7.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 4.605170185988092d + "'", double38 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 27.0d + "'", double39 == 27.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-4.0d) + "'", double40 == (-4.0d));
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 7.0d + "'", double45 == 7.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 4.641588833612779d + "'", double46 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 21.0d + "'", double47 == 21.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 10.0d + "'", double48 == 10.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 7.0d + "'", double55 == 7.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 4.641588833612779d + "'", double56 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 4.605170185988092d + "'", double57 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 27.0d + "'", double58 == 27.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 21.0d + "'", double63 == 21.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 4.605170185988092d + "'", double64 == 4.605170185988092d);
    }

    @Test
    public void test1783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1783");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray19);
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double28 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double double29 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double30 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray27);
        double double31 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray27);
        double double33 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray27);
        double double34 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double35 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.605170185988092d + "'", double22 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 7.0d + "'", double28 == 7.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4.641588833612779d + "'", double29 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.641588833612779d + "'", double31 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 201.0d + "'", double34 == 201.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 21.0d + "'", double35 == 21.0d);
    }

    @Test
    public void test1784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1784");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double11 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) ' ', (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 21.0d + "'", double7 == 21.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 201.0d + "'", double9 == 201.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 4.641588833612779d + "'", double10 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 100.0d + "'", double11 == 100.0d);
    }

    @Test
    public void test1785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1785");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double3 = org.apache.commons.math.stat.StatUtils.variance(doubleArray0, (int) (byte) 1, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1786");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double[] doubleArray9 = new double[] { (-1L), 0, 10L };
        double double12 = org.apache.commons.math.stat.StatUtils.max(doubleArray9, 0, 0);
        double double13 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray9);
        double[] doubleArray17 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray17);
        double double19 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray17);
        double double20 = org.apache.commons.math.stat.StatUtils.sum(doubleArray17);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray9, doubleArray17);
        double double22 = org.apache.commons.math.stat.StatUtils.max(doubleArray17);
        double double23 = org.apache.commons.math.stat.StatUtils.max(doubleArray17);
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double28 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double double30 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray27, (double) 100.0f);
        double double31 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double[] doubleArray35 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double36 = org.apache.commons.math.stat.StatUtils.mean(doubleArray35);
        double double38 = org.apache.commons.math.stat.StatUtils.variance(doubleArray35, 27.0d);
        double double40 = org.apache.commons.math.stat.StatUtils.variance(doubleArray35, (double) (byte) 10);
        double double41 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray27, doubleArray35);
        double double42 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray17, doubleArray35);
        double double43 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray17);
        double double44 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray17);
        double double45 = org.apache.commons.math.stat.StatUtils.max(doubleArray17);
        double double46 = org.apache.commons.math.stat.StatUtils.variance(doubleArray17);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 101.0d + "'", double13 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 7.0d + "'", double18 == 7.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4.641588833612779d + "'", double19 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 21.0d + "'", double20 == 21.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-4.0d) + "'", double21 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 7.0d + "'", double28 == 7.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 7.0d + "'", double31 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 7.0d + "'", double36 == 7.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 27.0d + "'", double38 == 27.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 27.0d + "'", double40 == 27.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 201.0d + "'", double43 == 201.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 10.0d + "'", double45 == 10.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 27.0d + "'", double46 == 27.0d);
    }

    @Test
    public void test1787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1787");
        double[] doubleArray5 = new double[] { '#', 10.0f, 'a', 12.0d, 37.0d };
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray5);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double[] doubleArray16 = new double[] { (-1L), 0, 10L };
        double double19 = org.apache.commons.math.stat.StatUtils.max(doubleArray16, 0, 0);
        double double20 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray16);
        double[] doubleArray24 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double25 = org.apache.commons.math.stat.StatUtils.mean(doubleArray24);
        double double26 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray24);
        double double27 = org.apache.commons.math.stat.StatUtils.sum(doubleArray24);
        double double28 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray16, doubleArray24);
        double double29 = org.apache.commons.math.stat.StatUtils.max(doubleArray24);
        double double30 = org.apache.commons.math.stat.StatUtils.max(doubleArray24);
        double[] doubleArray34 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double35 = org.apache.commons.math.stat.StatUtils.mean(doubleArray34);
        double double37 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray34, (double) 100.0f);
        double double38 = org.apache.commons.math.stat.StatUtils.mean(doubleArray34);
        double[] doubleArray42 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double43 = org.apache.commons.math.stat.StatUtils.mean(doubleArray42);
        double double45 = org.apache.commons.math.stat.StatUtils.variance(doubleArray42, 27.0d);
        double double47 = org.apache.commons.math.stat.StatUtils.variance(doubleArray42, (double) (byte) 10);
        double double48 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray34, doubleArray42);
        double double49 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray24, doubleArray42);
        double double50 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray24);
        double double51 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray10, doubleArray24);
        double double52 = org.apache.commons.math.stat.StatUtils.max(doubleArray24);
        // The following exception was thrown during execution in test generation
        try {
            double double53 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray5, doubleArray24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Input arrays must have the same (positive) length.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[35.0, 10.0, 97.0, 12.0, 37.0]");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 191.0d + "'", double6 == 191.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 101.0d + "'", double20 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 7.0d + "'", double25 == 7.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 4.641588833612779d + "'", double26 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 21.0d + "'", double27 == 21.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-4.0d) + "'", double28 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 10.0d + "'", double29 == 10.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 7.0d + "'", double35 == 7.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 10.0d + "'", double37 == 10.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 7.0d + "'", double38 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 7.0d + "'", double43 == 7.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 27.0d + "'", double45 == 27.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 27.0d + "'", double47 == 27.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 201.0d + "'", double50 == 201.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 10.0d + "'", double52 == 10.0d);
    }

    @Test
    public void test1788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1788");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) 10);
        double double18 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double23 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, 0, (int) (byte) 10, 36.99999999999977d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 37.0d + "'", double17 == 37.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 37.0d + "'", double19 == 37.0d);
    }

    @Test
    public void test1789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1789");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double24 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray18);
        double double25 = org.apache.commons.math.stat.StatUtils.product(doubleArray18);
        double double26 = org.apache.commons.math.stat.StatUtils.sum(doubleArray18);
        // The following exception was thrown during execution in test generation
        try {
            double double29 = org.apache.commons.math.stat.StatUtils.product(doubleArray18, (-1), (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.641588833612779d + "'", double23 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 201.0d + "'", double24 == 201.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 100.0d + "'", double25 == 100.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 21.0d + "'", double26 == 21.0d);
    }

    @Test
    public void test1790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1790");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray15 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double16 = org.apache.commons.math.stat.StatUtils.mean(doubleArray15);
        double double17 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray15);
        double double18 = org.apache.commons.math.stat.StatUtils.sum(doubleArray15);
        double[] doubleArray22 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double23 = org.apache.commons.math.stat.StatUtils.mean(doubleArray22);
        double double24 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray22);
        double double25 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray22);
        double double26 = org.apache.commons.math.stat.StatUtils.max(doubleArray22);
        double double28 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray15, doubleArray22, (double) '#');
        double double29 = org.apache.commons.math.stat.StatUtils.product(doubleArray22);
        double double30 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray22);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray22, 479232.0d);
        double double33 = org.apache.commons.math.stat.StatUtils.max(doubleArray22);
        double double34 = org.apache.commons.math.stat.StatUtils.sum(doubleArray22);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 7.0d + "'", double16 == 7.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 4.641588833612779d + "'", double17 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 21.0d + "'", double18 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 7.0d + "'", double23 == 7.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 4.641588833612779d + "'", double24 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 4.605170185988092d + "'", double25 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 100.0d + "'", double29 == 100.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 10.0d + "'", double33 == 10.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 21.0d + "'", double34 == 21.0d);
    }

    @Test
    public void test1791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1791");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) 10);
        double double18 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double22 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11, 0, (int) (short) 1);
        double double24 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, 1237.7d);
        // The following exception was thrown during execution in test generation
        try {
            double double27 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11, (int) (short) 10, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 37.0d + "'", double17 == 37.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 101.0d + "'", double19 == 101.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 37.0d + "'", double24 == 37.0d);
    }

    @Test
    public void test1792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1792");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 27.0d);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray10, (double) 100.0f);
        double[] doubleArray17 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray17);
        double double19 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray17);
        double double20 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray17);
        double double21 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray10, doubleArray17);
        double[] doubleArray25 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double26 = org.apache.commons.math.stat.StatUtils.mean(doubleArray25);
        double double27 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray25);
        double double28 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray10, doubleArray25);
        double double29 = org.apache.commons.math.stat.StatUtils.mean(doubleArray25);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        double double36 = org.apache.commons.math.stat.StatUtils.max(doubleArray33, 0, 0);
        double double37 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray33);
        double[] doubleArray41 = new double[] { (-1L), 0, 10L };
        double double44 = org.apache.commons.math.stat.StatUtils.max(doubleArray41, 0, 0);
        double double45 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray41);
        double double47 = org.apache.commons.math.stat.StatUtils.variance(doubleArray41, (double) 10);
        double double48 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray33, doubleArray41);
        double double49 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray41);
        double double50 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray25, doubleArray41);
        double double51 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray41);
        double double52 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray41);
        double double56 = org.apache.commons.math.stat.StatUtils.variance(doubleArray41, 1.0d, (int) (byte) 1, 1);
        // The following exception was thrown during execution in test generation
        try {
            double double60 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray41, 0, 0, 1237.7d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: invalid quantile value: 1237.7");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 27.0d + "'", double6 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 10.0d + "'", double13 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 7.0d + "'", double18 == 7.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4.641588833612779d + "'", double19 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.605170185988092d + "'", double20 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 7.0d + "'", double26 == 7.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 4.641588833612779d + "'", double27 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 7.0d + "'", double29 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 101.0d + "'", double37 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 101.0d + "'", double45 == 101.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 37.0d + "'", double47 == 37.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 101.0d + "'", double49 == 101.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4.0d + "'", double50 == 4.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 12.0d + "'", double51 == 12.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 101.0d + "'", double52 == 101.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
    }

    @Test
    public void test1793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1793");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11, (int) (short) 1, 0);
        double double19 = org.apache.commons.math.stat.StatUtils.max(doubleArray11);
        double double20 = org.apache.commons.math.stat.StatUtils.min(doubleArray11);
        double double21 = org.apache.commons.math.stat.StatUtils.max(doubleArray11);
        double double23 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, (double) ' ');
        double double24 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double27 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3, (int) (short) 1, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 21.0d + "'", double7 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4.605170185988092d + "'", double14 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 10.0d + "'", double24 == 10.0d);
    }

    @Test
    public void test1794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1794");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11, 1, (int) (byte) 1);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double23 = org.apache.commons.math.stat.StatUtils.min(doubleArray11, 0, (int) (short) 0);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 27.0d + "'", double17 == 27.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4.641588833612779d + "'", double18 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4.641588833612779d + "'", double19 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
    }

    @Test
    public void test1795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1795");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.max(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.max(doubleArray11);
        double[] doubleArray21 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double22 = org.apache.commons.math.stat.StatUtils.mean(doubleArray21);
        double double24 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray21, (double) 100.0f);
        double double25 = org.apache.commons.math.stat.StatUtils.mean(doubleArray21);
        double[] doubleArray29 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double30 = org.apache.commons.math.stat.StatUtils.mean(doubleArray29);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray29, 27.0d);
        double double34 = org.apache.commons.math.stat.StatUtils.variance(doubleArray29, (double) (byte) 10);
        double double35 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray21, doubleArray29);
        double double36 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray29);
        double double37 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double39 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (-0.0d));
        // The following exception was thrown during execution in test generation
        try {
            double double42 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11, 0, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 7.0d + "'", double22 == 7.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 10.0d + "'", double24 == 10.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 7.0d + "'", double25 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 7.0d + "'", double30 == 7.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 27.0d + "'", double34 == 27.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 201.0d + "'", double37 == 201.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 27.0d + "'", double39 == 27.0d);
    }

    @Test
    public void test1796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1796");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        double double11 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double12 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double13 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        double double14 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double16 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double17 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 100.0d + "'", double13 == 100.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4.605170185988092d + "'", double14 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 27.0d + "'", double15 == 27.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 7.0d + "'", double16 == 7.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 4.641588833612779d + "'", double17 == 4.641588833612779d);
    }

    @Test
    public void test1797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1797");
        double[] doubleArray5 = new double[] { '#', 10.0f, 'a', 12.0d, 37.0d };
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray5);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray5);
        double double8 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray5);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray5);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[35.0, 10.0, 97.0, 12.0, 37.0]");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 191.0d + "'", double6 == 191.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 12247.0d + "'", double7 == 12247.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 27.267451525600872d + "'", double8 == 27.267451525600872d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1237.7d + "'", double9 == 1237.7d);
    }

    @Test
    public void test1798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1798");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 4.641588833612779d + "'", double7 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 4.605170185988092d + "'", double8 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 201.0d + "'", double9 == 201.0d);
    }

    @Test
    public void test1799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1799");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray19);
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double28 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double double29 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double30 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray27);
        double double31 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray27);
        double double33 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray27);
        double double34 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double36 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) '#');
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double38 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray42 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double43 = org.apache.commons.math.stat.StatUtils.mean(doubleArray42);
        double double45 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray42, (double) 100.0f);
        double[] doubleArray49 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double50 = org.apache.commons.math.stat.StatUtils.mean(doubleArray49);
        double double51 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray49);
        double double52 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray49);
        double double53 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray42, doubleArray49);
        double[] doubleArray57 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double58 = org.apache.commons.math.stat.StatUtils.mean(doubleArray57);
        double double59 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray57);
        double double60 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray42, doubleArray57);
        double double61 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray57);
        double double62 = org.apache.commons.math.stat.StatUtils.variance(doubleArray57);
        double double63 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray57);
        double double64 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double65 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double66 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double69 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (byte) 10, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.605170185988092d + "'", double22 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 7.0d + "'", double28 == 7.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4.641588833612779d + "'", double29 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.641588833612779d + "'", double31 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 27.0d + "'", double36 == 27.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 21.0d + "'", double38 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 7.0d + "'", double43 == 7.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 10.0d + "'", double45 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 7.0d + "'", double50 == 7.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 4.641588833612779d + "'", double51 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 4.605170185988092d + "'", double52 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 7.0d + "'", double58 == 7.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4.641588833612779d + "'", double59 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 4.641588833612779d + "'", double61 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 27.0d + "'", double62 == 27.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 201.0d + "'", double64 == 201.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 4.641588833612779d + "'", double65 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 100.0d + "'", double66 == 100.0d);
    }

    @Test
    public void test1800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1800");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11, (int) (byte) 1, (int) (byte) 0);
        double double19 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        double double20 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        double double21 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double22 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11);
        double double23 = org.apache.commons.math.stat.StatUtils.product(doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double26 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11, (int) (short) 100, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4.605170185988092d + "'", double19 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.605170185988092d + "'", double20 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 21.0d + "'", double21 == 21.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 27.0d + "'", double22 == 27.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 100.0d + "'", double23 == 100.0d);
    }

    @Test
    public void test1801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1801");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sum(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray11, doubleArray19);
        double double24 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double27 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11, (int) (short) 1, (int) (short) 0);
        double double28 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double29 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11);
        double double30 = org.apache.commons.math.stat.StatUtils.max(doubleArray11);
        java.lang.Class<?> wildcardClass31 = doubleArray11.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 21.0d + "'", double22 == 21.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-4.0d) + "'", double23 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 9.0d + "'", double24 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 12.0d + "'", double28 == 12.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 37.0d + "'", double29 == 37.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test1802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1802");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray19);
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double28 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double double29 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double30 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray27);
        double double31 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray27);
        double double33 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray27);
        double double34 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double36 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) '#');
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double38 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray42 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double43 = org.apache.commons.math.stat.StatUtils.mean(doubleArray42);
        double double45 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray42, (double) 100.0f);
        double[] doubleArray49 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double50 = org.apache.commons.math.stat.StatUtils.mean(doubleArray49);
        double double51 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray49);
        double double52 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray49);
        double double53 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray42, doubleArray49);
        double[] doubleArray57 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double58 = org.apache.commons.math.stat.StatUtils.mean(doubleArray57);
        double double59 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray57);
        double double60 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray42, doubleArray57);
        double double61 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray57);
        double double62 = org.apache.commons.math.stat.StatUtils.variance(doubleArray57);
        double double63 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray57);
        double double64 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double65 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double66 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        double double67 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.605170185988092d + "'", double22 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 7.0d + "'", double28 == 7.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4.641588833612779d + "'", double29 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.641588833612779d + "'", double31 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 27.0d + "'", double36 == 27.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 21.0d + "'", double38 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 7.0d + "'", double43 == 7.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 10.0d + "'", double45 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 7.0d + "'", double50 == 7.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 4.641588833612779d + "'", double51 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 4.605170185988092d + "'", double52 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 7.0d + "'", double58 == 7.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4.641588833612779d + "'", double59 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 4.641588833612779d + "'", double61 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 27.0d + "'", double62 == 27.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 201.0d + "'", double64 == 201.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 4.641588833612779d + "'", double65 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 100.0d + "'", double66 == 100.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 4.641588833612779d + "'", double67 == 4.641588833612779d);
    }

    @Test
    public void test1803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1803");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, 0.0d);
        double double28 = org.apache.commons.math.stat.StatUtils.product(doubleArray12);
        double double31 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray12, (int) (byte) 0, (int) (short) 0);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray12);
        double double35 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, (int) (short) 0, (int) (short) 1);
        double[] doubleArray39 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double40 = org.apache.commons.math.stat.StatUtils.mean(doubleArray39);
        double double41 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray39);
        double double42 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray39);
        double double43 = org.apache.commons.math.stat.StatUtils.variance(doubleArray39);
        double double44 = org.apache.commons.math.stat.StatUtils.product(doubleArray39);
        double[] doubleArray48 = new double[] { (-1L), 0, 10L };
        double double51 = org.apache.commons.math.stat.StatUtils.max(doubleArray48, 0, 0);
        double double52 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray48);
        double[] doubleArray56 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double57 = org.apache.commons.math.stat.StatUtils.mean(doubleArray56);
        double double58 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray56);
        double double59 = org.apache.commons.math.stat.StatUtils.sum(doubleArray56);
        double double60 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray48, doubleArray56);
        double double61 = org.apache.commons.math.stat.StatUtils.sum(doubleArray48);
        double double64 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray48, (int) (short) 1, (int) (short) 0);
        double double65 = org.apache.commons.math.stat.StatUtils.product(doubleArray48);
        double double66 = org.apache.commons.math.stat.StatUtils.max(doubleArray48);
        double double67 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray39, doubleArray48);
        double double69 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray12, doubleArray39, 12.0d);
        double double70 = org.apache.commons.math.stat.StatUtils.sum(doubleArray39);
        double double71 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 127.0d + "'", double27 == 127.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-0.0d) + "'", double28 == (-0.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 37.0d + "'", double32 == 37.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-1.0d) + "'", double35 == (-1.0d));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 7.0d + "'", double40 == 7.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 4.641588833612779d + "'", double41 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 4.605170185988092d + "'", double42 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 27.0d + "'", double43 == 27.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 100.0d + "'", double44 == 100.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 101.0d + "'", double52 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 7.0d + "'", double57 == 7.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 4.641588833612779d + "'", double58 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 21.0d + "'", double59 == 21.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-4.0d) + "'", double60 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 9.0d + "'", double61 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.0d) + "'", double65 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 10.0d + "'", double66 == 10.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 4.0d + "'", double67 == 4.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 127.0d + "'", double69 == 127.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 21.0d + "'", double70 == 21.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 201.0d + "'", double71 == 201.0d);
    }

    @Test
    public void test1804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1804");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double[] doubleArray17 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray17);
        double double19 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray17);
        double double20 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray17);
        double double21 = org.apache.commons.math.stat.StatUtils.max(doubleArray17);
        double double24 = org.apache.commons.math.stat.StatUtils.sum(doubleArray17, (int) (short) 1, 0);
        double double25 = org.apache.commons.math.stat.StatUtils.mean(doubleArray17);
        double double26 = org.apache.commons.math.stat.StatUtils.mean(doubleArray17);
        double double28 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray11, doubleArray17, (double) (-1.0f));
        double[] doubleArray32 = new double[] { (-1L), 0, 10L };
        double double35 = org.apache.commons.math.stat.StatUtils.max(doubleArray32, 0, 0);
        double double36 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray32);
        double double37 = org.apache.commons.math.stat.StatUtils.min(doubleArray32);
        double double38 = org.apache.commons.math.stat.StatUtils.variance(doubleArray32);
        double double40 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray11, doubleArray32, (double) (byte) 1);
        double[] doubleArray44 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double45 = org.apache.commons.math.stat.StatUtils.mean(doubleArray44);
        double double46 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray44);
        double double47 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray44);
        double double48 = org.apache.commons.math.stat.StatUtils.variance(doubleArray44);
        double double49 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray44);
        double double50 = org.apache.commons.math.stat.StatUtils.variance(doubleArray44);
        double double52 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray11, doubleArray44, (-0.9199999999999999d));
        double[] doubleArray56 = new double[] { (-1L), 0, 10L };
        double double59 = org.apache.commons.math.stat.StatUtils.max(doubleArray56, 0, 0);
        double double60 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray56);
        double double62 = org.apache.commons.math.stat.StatUtils.variance(doubleArray56, (double) 10);
        double[] doubleArray66 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double67 = org.apache.commons.math.stat.StatUtils.mean(doubleArray66);
        double double68 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray66);
        double double69 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray66);
        double double70 = org.apache.commons.math.stat.StatUtils.variance(doubleArray66);
        double double71 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray56, doubleArray66);
        double double72 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray56);
        double double73 = org.apache.commons.math.stat.StatUtils.variance(doubleArray56);
        double double74 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray56);
        double double75 = org.apache.commons.math.stat.StatUtils.max(doubleArray56);
        double double76 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray44, doubleArray56);
        double double77 = org.apache.commons.math.stat.StatUtils.sum(doubleArray56);
        double double78 = org.apache.commons.math.stat.StatUtils.mean(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 7.0d + "'", double18 == 7.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4.641588833612779d + "'", double19 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.605170185988092d + "'", double20 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 7.0d + "'", double25 == 7.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 7.0d + "'", double26 == 7.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 101.0d + "'", double36 == 101.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-1.0d) + "'", double37 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 37.0d + "'", double38 == 37.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 127.0d + "'", double40 == 127.0d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 7.0d + "'", double45 == 7.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 4.641588833612779d + "'", double46 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 4.605170185988092d + "'", double47 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 27.0d + "'", double48 == 27.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 4.641588833612779d + "'", double49 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 27.0d + "'", double50 == 27.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-2.220446049250313E-16d) + "'", double52 == (-2.220446049250313E-16d));
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 101.0d + "'", double60 == 101.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 37.0d + "'", double62 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 7.0d + "'", double67 == 7.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 4.641588833612779d + "'", double68 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 4.605170185988092d + "'", double69 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 27.0d + "'", double70 == 27.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-4.0d) + "'", double71 == (-4.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 37.0d + "'", double73 == 37.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double74));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 10.0d + "'", double75 == 10.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 4.0d + "'", double76 == 4.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 9.0d + "'", double77 == 9.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 3.0d + "'", double78 == 3.0d);
    }

    @Test
    public void test1805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1805");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double24 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3, 0, 0);
        double[] doubleArray28 = new double[] { (-1L), 0, 10L };
        double double31 = org.apache.commons.math.stat.StatUtils.max(doubleArray28, 0, 0);
        double double32 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray28);
        double[] doubleArray36 = new double[] { (-1L), 0, 10L };
        double double39 = org.apache.commons.math.stat.StatUtils.max(doubleArray36, 0, 0);
        double double40 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray36);
        double double42 = org.apache.commons.math.stat.StatUtils.variance(doubleArray36, (double) 10);
        double double43 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray28, doubleArray36);
        double double44 = org.apache.commons.math.stat.StatUtils.variance(doubleArray28);
        double double45 = org.apache.commons.math.stat.StatUtils.mean(doubleArray28);
        double double48 = org.apache.commons.math.stat.StatUtils.max(doubleArray28, 0, 0);
        double double49 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray28);
        double double51 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray28, (double) (short) 1);
        double double52 = org.apache.commons.math.stat.StatUtils.sum(doubleArray28);
        // The following exception was thrown during execution in test generation
        try {
            double double55 = org.apache.commons.math.stat.StatUtils.variance(doubleArray28, (int) '4', (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 101.0d + "'", double32 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 101.0d + "'", double40 == 101.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 37.0d + "'", double42 == 37.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 37.0d + "'", double44 == 37.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 3.0d + "'", double45 == 3.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 101.0d + "'", double49 == 101.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 127.0d + "'", double51 == 127.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 9.0d + "'", double52 == 9.0d);
    }

    @Test
    public void test1806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1806");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, 0.0d);
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double double33 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray31);
        double double34 = org.apache.commons.math.stat.StatUtils.sum(doubleArray31);
        double[] doubleArray38 = new double[] { (-1L), 0, 10L };
        double double41 = org.apache.commons.math.stat.StatUtils.max(doubleArray38, 0, 0);
        double double43 = org.apache.commons.math.stat.StatUtils.variance(doubleArray38, 21.0d);
        double double45 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray31, doubleArray38, 4.605170185988092d);
        double double46 = org.apache.commons.math.stat.StatUtils.mean(doubleArray38);
        double double47 = org.apache.commons.math.stat.StatUtils.max(doubleArray38);
        double double48 = org.apache.commons.math.stat.StatUtils.sum(doubleArray38);
        double[] doubleArray52 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double53 = org.apache.commons.math.stat.StatUtils.mean(doubleArray52);
        double double54 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray52);
        double double55 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray52);
        double double56 = org.apache.commons.math.stat.StatUtils.max(doubleArray52);
        double double59 = org.apache.commons.math.stat.StatUtils.sum(doubleArray52, (int) (short) 1, 0);
        double double62 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray52, (int) (short) 0, (int) (byte) 0);
        double double64 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray38, doubleArray52, (double) '#');
        double double65 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray52);
        double[] doubleArray69 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double70 = org.apache.commons.math.stat.StatUtils.mean(doubleArray69);
        double double71 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray69);
        double double72 = org.apache.commons.math.stat.StatUtils.sum(doubleArray69);
        double double73 = org.apache.commons.math.stat.StatUtils.sum(doubleArray69);
        double double74 = org.apache.commons.math.stat.StatUtils.min(doubleArray69);
        double double75 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray69);
        double double76 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray69);
        // The following exception was thrown during execution in test generation
        try {
            double double79 = org.apache.commons.math.stat.StatUtils.mean(doubleArray69, (int) (short) 100, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 127.0d + "'", double27 == 127.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 7.0d + "'", double32 == 7.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4.641588833612779d + "'", double33 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 21.0d + "'", double34 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 37.0d + "'", double43 == 37.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 127.00000000000001d + "'", double45 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 3.0d + "'", double46 == 3.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 10.0d + "'", double47 == 10.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 9.0d + "'", double48 == 9.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 7.0d + "'", double53 == 7.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 4.641588833612779d + "'", double54 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 4.605170185988092d + "'", double55 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 10.0d + "'", double56 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 127.0d + "'", double64 == 127.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 7.0d + "'", double70 == 7.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 4.641588833612779d + "'", double71 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 21.0d + "'", double72 == 21.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 21.0d + "'", double73 == 21.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 201.0d + "'", double75 == 201.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
    }

    @Test
    public void test1807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1807");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double11 = org.apache.commons.math.stat.StatUtils.product(doubleArray3, 0, (int) (short) 0);
        double double12 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double14 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double15 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 7.0d + "'", double8 == 7.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 27.0d + "'", double12 == 27.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 27.0d + "'", double14 == 27.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 100.0d + "'", double15 == 100.0d);
    }

    @Test
    public void test1808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1808");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double12 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double13 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        double double14 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 21.0d + "'", double12 == 21.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 100.0d + "'", double13 == 100.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 100.0d + "'", double14 == 100.0d);
    }

    @Test
    public void test1809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1809");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray11, (double) 100.0f);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray18);
        double[] doubleArray26 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double27 = org.apache.commons.math.stat.StatUtils.mean(doubleArray26);
        double double28 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray26);
        double double29 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray11, doubleArray26);
        double double30 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray26);
        double double31 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.605170185988092d + "'", double21 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 7.0d + "'", double27 == 7.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 4.641588833612779d + "'", double28 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-12.0d) + "'", double30 == (-12.0d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 101.0d + "'", double31 == 101.0d);
    }

    @Test
    public void test1810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1810");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double24 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3, 0, 0);
        double[] doubleArray28 = new double[] { (-1L), 0, 10L };
        double double31 = org.apache.commons.math.stat.StatUtils.max(doubleArray28, 0, 0);
        double double32 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray28);
        double[] doubleArray36 = new double[] { (-1L), 0, 10L };
        double double39 = org.apache.commons.math.stat.StatUtils.max(doubleArray36, 0, 0);
        double double40 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray36);
        double double42 = org.apache.commons.math.stat.StatUtils.variance(doubleArray36, (double) 10);
        double double43 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray28, doubleArray36);
        double double44 = org.apache.commons.math.stat.StatUtils.variance(doubleArray28);
        double double45 = org.apache.commons.math.stat.StatUtils.mean(doubleArray28);
        double double48 = org.apache.commons.math.stat.StatUtils.max(doubleArray28, 0, 0);
        double double49 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray28);
        double double51 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray28, (double) (short) 1);
        double double52 = org.apache.commons.math.stat.StatUtils.sum(doubleArray28);
        double double53 = org.apache.commons.math.stat.StatUtils.variance(doubleArray28);
        double double54 = org.apache.commons.math.stat.StatUtils.max(doubleArray28);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 101.0d + "'", double32 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 101.0d + "'", double40 == 101.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 37.0d + "'", double42 == 37.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 37.0d + "'", double44 == 37.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 3.0d + "'", double45 == 3.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 101.0d + "'", double49 == 101.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 127.0d + "'", double51 == 127.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 9.0d + "'", double52 == 9.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 37.0d + "'", double53 == 37.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 10.0d + "'", double54 == 10.0d);
    }

    @Test
    public void test1811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1811");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.min(doubleArray3, 0, (int) (byte) 0);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
    }

    @Test
    public void test1812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1812");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double11 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (int) (short) 0, (int) '4', 1237.699999988079d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
    }

    @Test
    public void test1813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1813");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray9 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double10 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-1.0d) + "'", double8 == (-1.0d));
    }

    @Test
    public void test1814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1814");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double19 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, (int) (short) 1, (int) (short) 0);
        double double20 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        double double21 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double[] doubleArray25 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double26 = org.apache.commons.math.stat.StatUtils.mean(doubleArray25);
        double double28 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray25, (double) 100.0f);
        double[] doubleArray32 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double33 = org.apache.commons.math.stat.StatUtils.mean(doubleArray32);
        double double34 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray32);
        double double35 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray32);
        double double36 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray25, doubleArray32);
        double[] doubleArray40 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double41 = org.apache.commons.math.stat.StatUtils.mean(doubleArray40);
        double double42 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray40);
        double double43 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray25, doubleArray40);
        double[] doubleArray47 = new double[] { (-1L), 0, 10L };
        double double50 = org.apache.commons.math.stat.StatUtils.max(doubleArray47, 0, 0);
        double double51 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray47);
        double[] doubleArray55 = new double[] { (-1L), 0, 10L };
        double double58 = org.apache.commons.math.stat.StatUtils.max(doubleArray55, 0, 0);
        double double59 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray55);
        double double61 = org.apache.commons.math.stat.StatUtils.variance(doubleArray55, (double) 10);
        double double62 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray47, doubleArray55);
        double double64 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray25, doubleArray47, 100.0d);
        double double65 = org.apache.commons.math.stat.StatUtils.variance(doubleArray25);
        double double66 = org.apache.commons.math.stat.StatUtils.sum(doubleArray25);
        double double67 = org.apache.commons.math.stat.StatUtils.variance(doubleArray25);
        double double68 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray25);
        double double69 = org.apache.commons.math.stat.StatUtils.product(doubleArray25);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 9.0d + "'", double16 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.0d) + "'", double20 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 37.0d + "'", double21 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 7.0d + "'", double26 == 7.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 10.0d + "'", double28 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 7.0d + "'", double33 == 7.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4.641588833612779d + "'", double34 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 4.605170185988092d + "'", double35 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 7.0d + "'", double41 == 7.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 4.641588833612779d + "'", double42 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 101.0d + "'", double51 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 101.0d + "'", double59 == 101.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 37.0d + "'", double61 == 37.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 127.0d + "'", double64 == 127.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 27.0d + "'", double65 == 27.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 21.0d + "'", double66 == 21.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 27.0d + "'", double67 == 27.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-4.0d) + "'", double68 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 100.0d + "'", double69 == 100.0d);
    }

    @Test
    public void test1815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1815");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10);
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double double15 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13);
        double double16 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray13);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double18 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray13);
        double double19 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double20 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        double double21 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double23 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) (byte) 10);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4.641588833612779d + "'", double15 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.605170185988092d + "'", double16 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 27.0d + "'", double17 == 27.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-4.0d) + "'", double18 == (-4.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.0d) + "'", double20 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 37.0d + "'", double21 == 37.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 37.0d + "'", double23 == 37.0d);
    }

    @Test
    public void test1816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1816");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sum(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray11, doubleArray19);
        double double24 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double27 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11, (int) (short) 1, (int) (short) 0);
        double double28 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double[] doubleArray32 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double33 = org.apache.commons.math.stat.StatUtils.mean(doubleArray32);
        double double34 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray32);
        double double35 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray32);
        double double36 = org.apache.commons.math.stat.StatUtils.variance(doubleArray32);
        double double37 = org.apache.commons.math.stat.StatUtils.product(doubleArray32);
        double[] doubleArray41 = new double[] { (-1L), 0, 10L };
        double double44 = org.apache.commons.math.stat.StatUtils.max(doubleArray41, 0, 0);
        double double45 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray41);
        double[] doubleArray49 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double50 = org.apache.commons.math.stat.StatUtils.mean(doubleArray49);
        double double51 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray49);
        double double52 = org.apache.commons.math.stat.StatUtils.sum(doubleArray49);
        double double53 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray41, doubleArray49);
        double double54 = org.apache.commons.math.stat.StatUtils.sum(doubleArray41);
        double double57 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray41, (int) (short) 1, (int) (short) 0);
        double double58 = org.apache.commons.math.stat.StatUtils.product(doubleArray41);
        double double59 = org.apache.commons.math.stat.StatUtils.max(doubleArray41);
        double double60 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray32, doubleArray41);
        double[] doubleArray64 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double65 = org.apache.commons.math.stat.StatUtils.mean(doubleArray64);
        double double67 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray64, (double) 100.0f);
        double double68 = org.apache.commons.math.stat.StatUtils.mean(doubleArray64);
        double[] doubleArray72 = new double[] { (-1L), 0, 10L };
        double double75 = org.apache.commons.math.stat.StatUtils.max(doubleArray72, 0, 0);
        double double76 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray72);
        double[] doubleArray80 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double81 = org.apache.commons.math.stat.StatUtils.mean(doubleArray80);
        double double82 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray80);
        double double83 = org.apache.commons.math.stat.StatUtils.sum(doubleArray80);
        double double84 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray72, doubleArray80);
        double double85 = org.apache.commons.math.stat.StatUtils.sum(doubleArray72);
        double double88 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray72, (int) (short) 1, (int) (short) 0);
        double double89 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray64, doubleArray72);
        double double90 = org.apache.commons.math.stat.StatUtils.variance(doubleArray72);
        double double91 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray32, doubleArray72);
        double double92 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray72);
        double double93 = org.apache.commons.math.stat.StatUtils.sum(doubleArray72);
        double double96 = org.apache.commons.math.stat.StatUtils.mean(doubleArray72, 1, 0);
        double double97 = org.apache.commons.math.stat.StatUtils.max(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 21.0d + "'", double22 == 21.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-4.0d) + "'", double23 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 9.0d + "'", double24 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 12.0d + "'", double28 == 12.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 7.0d + "'", double33 == 7.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4.641588833612779d + "'", double34 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 4.605170185988092d + "'", double35 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 27.0d + "'", double36 == 27.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 100.0d + "'", double37 == 100.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 101.0d + "'", double45 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 7.0d + "'", double50 == 7.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 4.641588833612779d + "'", double51 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 21.0d + "'", double52 == 21.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-4.0d) + "'", double53 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 9.0d + "'", double54 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-0.0d) + "'", double58 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 10.0d + "'", double59 == 10.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 4.0d + "'", double60 == 4.0d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 7.0d + "'", double65 == 7.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 10.0d + "'", double67 == 10.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 7.0d + "'", double68 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 101.0d + "'", double76 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 7.0d + "'", double81 == 7.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 4.641588833612779d + "'", double82 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 21.0d + "'", double83 == 21.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + (-4.0d) + "'", double84 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 9.0d + "'", double85 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double88));
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 12.0d + "'", double89 == 12.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 37.0d + "'", double90 == 37.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 12.0d + "'", double91 == 12.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 12.0d + "'", double92 == 12.0d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 9.0d + "'", double93 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double96));
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 10.0d + "'", double97 == 10.0d);
    }

    @Test
    public void test1817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1817");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3, (int) (short) 100, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 21.0d + "'", double7 == 21.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 27.0d + "'", double9 == 27.0d);
    }

    @Test
    public void test1818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1818");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10);
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double double15 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13);
        double double16 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray13);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double18 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray13);
        double[] doubleArray22 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double23 = org.apache.commons.math.stat.StatUtils.mean(doubleArray22);
        double double24 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray22);
        double[] doubleArray28 = new double[] { (-1L), 0, 10L };
        double double31 = org.apache.commons.math.stat.StatUtils.max(doubleArray28, 0, 0);
        double double32 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray28);
        double[] doubleArray36 = new double[] { (-1L), 0, 10L };
        double double39 = org.apache.commons.math.stat.StatUtils.max(doubleArray36, 0, 0);
        double double40 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray36);
        double double42 = org.apache.commons.math.stat.StatUtils.variance(doubleArray36, (double) 10);
        double double43 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray28, doubleArray36);
        double double44 = org.apache.commons.math.stat.StatUtils.max(doubleArray36);
        double double45 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray36);
        double double46 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray36);
        double[] doubleArray50 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double51 = org.apache.commons.math.stat.StatUtils.mean(doubleArray50);
        double double53 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray50, (double) 100.0f);
        double[] doubleArray57 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double58 = org.apache.commons.math.stat.StatUtils.mean(doubleArray57);
        double double59 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray57);
        double double60 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray57);
        double double61 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray50, doubleArray57);
        double[] doubleArray65 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double66 = org.apache.commons.math.stat.StatUtils.mean(doubleArray65);
        double double67 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray65);
        double double68 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray50, doubleArray65);
        double double69 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray65);
        double double70 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray65);
        double double74 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (int) (short) 0, 1, 27.267451525600872d);
        // The following exception was thrown during execution in test generation
        try {
            double double77 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (int) '4', (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4.641588833612779d + "'", double15 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.605170185988092d + "'", double16 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 27.0d + "'", double17 == 27.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-4.0d) + "'", double18 == (-4.0d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 7.0d + "'", double23 == 7.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-12.0d) + "'", double24 == (-12.0d));
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 101.0d + "'", double32 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 101.0d + "'", double40 == 101.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 37.0d + "'", double42 == 37.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 10.0d + "'", double44 == 10.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 101.0d + "'", double45 == 101.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 7.0d + "'", double51 == 7.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 10.0d + "'", double53 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 7.0d + "'", double58 == 7.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4.641588833612779d + "'", double59 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 4.605170185988092d + "'", double60 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 7.0d + "'", double66 == 7.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 4.641588833612779d + "'", double67 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 4.641588833612779d + "'", double69 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-12.0d) + "'", double70 == (-12.0d));
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-1.0d) + "'", double74 == (-1.0d));
    }

    @Test
    public void test1819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1819");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray19);
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double28 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double double29 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double30 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray27);
        double double31 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray27);
        double double33 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray27);
        double double34 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray38 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double39 = org.apache.commons.math.stat.StatUtils.mean(doubleArray38);
        double double40 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray38);
        double double41 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray38);
        double double42 = org.apache.commons.math.stat.StatUtils.variance(doubleArray38);
        double double43 = org.apache.commons.math.stat.StatUtils.min(doubleArray38);
        double[] doubleArray47 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double48 = org.apache.commons.math.stat.StatUtils.mean(doubleArray47);
        double double50 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray47, (double) 100.0f);
        double[] doubleArray54 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double55 = org.apache.commons.math.stat.StatUtils.mean(doubleArray54);
        double double56 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray54);
        double double57 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray54);
        double double58 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray47, doubleArray54);
        double[] doubleArray62 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double63 = org.apache.commons.math.stat.StatUtils.mean(doubleArray62);
        double double64 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray62);
        double double65 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray47, doubleArray62);
        double double66 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray62);
        double double67 = org.apache.commons.math.stat.StatUtils.variance(doubleArray62);
        double double68 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray38, doubleArray62);
        double double69 = org.apache.commons.math.stat.StatUtils.min(doubleArray38);
        double double71 = org.apache.commons.math.stat.StatUtils.variance(doubleArray38, (double) '#');
        double double72 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray38);
        // The following exception was thrown during execution in test generation
        try {
            double double75 = org.apache.commons.math.stat.StatUtils.product(doubleArray3, 0, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.605170185988092d + "'", double22 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 7.0d + "'", double28 == 7.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4.641588833612779d + "'", double29 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.641588833612779d + "'", double31 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 7.0d + "'", double39 == 7.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 4.641588833612779d + "'", double40 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 4.605170185988092d + "'", double41 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 27.0d + "'", double42 == 27.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 7.0d + "'", double48 == 7.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 7.0d + "'", double55 == 7.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 4.641588833612779d + "'", double56 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 4.605170185988092d + "'", double57 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 7.0d + "'", double63 == 7.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 4.641588833612779d + "'", double64 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 4.641588833612779d + "'", double66 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 27.0d + "'", double67 == 27.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 27.0d + "'", double71 == 27.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
    }

    @Test
    public void test1820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1820");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10);
        double double17 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray10, (double) 1.0f);
        double double18 = org.apache.commons.math.stat.StatUtils.sum(doubleArray10);
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 27.0d + "'", double15 == 27.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 21.0d + "'", double18 == 21.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
    }

    @Test
    public void test1821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1821");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3, (int) (short) 0, (int) (byte) 0);
        double double14 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 27.0d + "'", double14 == 27.0d);
    }

    @Test
    public void test1822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1822");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (-1L), 0, 10L };
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray10, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, 21.0d);
        double double17 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, 4.605170185988092d);
        double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double19 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double23 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray10, (int) (byte) 1, (int) (byte) 1, 3.5200000000000005d);
        double[] doubleArray27 = new double[] { (-1L), 0, 10L };
        double double30 = org.apache.commons.math.stat.StatUtils.max(doubleArray27, 0, 0);
        double double31 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray27);
        double[] doubleArray35 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double36 = org.apache.commons.math.stat.StatUtils.mean(doubleArray35);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35);
        double double38 = org.apache.commons.math.stat.StatUtils.sum(doubleArray35);
        double double39 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray27, doubleArray35);
        double double40 = org.apache.commons.math.stat.StatUtils.max(doubleArray35);
        double double41 = org.apache.commons.math.stat.StatUtils.max(doubleArray35);
        double[] doubleArray45 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double46 = org.apache.commons.math.stat.StatUtils.mean(doubleArray45);
        double double48 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray45, (double) 100.0f);
        double double49 = org.apache.commons.math.stat.StatUtils.mean(doubleArray45);
        double[] doubleArray53 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double54 = org.apache.commons.math.stat.StatUtils.mean(doubleArray53);
        double double56 = org.apache.commons.math.stat.StatUtils.variance(doubleArray53, 27.0d);
        double double58 = org.apache.commons.math.stat.StatUtils.variance(doubleArray53, (double) (byte) 10);
        double double59 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray45, doubleArray53);
        double double60 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray35, doubleArray53);
        double double62 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray10, doubleArray53, (-4.0d));
        double double63 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray10);
        double double64 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double66 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, (double) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            double double69 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10, (int) (byte) -1, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 37.0d + "'", double15 == 37.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 127.00000000000001d + "'", double17 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 3.0d + "'", double18 == 3.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 101.0d + "'", double31 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 7.0d + "'", double36 == 7.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 21.0d + "'", double38 == 21.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-4.0d) + "'", double39 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 10.0d + "'", double40 == 10.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 10.0d + "'", double41 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 7.0d + "'", double46 == 7.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 10.0d + "'", double48 == 10.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 7.0d + "'", double49 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 7.0d + "'", double54 == 7.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 27.0d + "'", double56 == 27.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 27.0d + "'", double58 == 27.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 127.0d + "'", double62 == 127.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 101.0d + "'", double63 == 101.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 3.0d + "'", double64 == 3.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 37.0d + "'", double66 == 37.0d);
    }

    @Test
    public void test1823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1823");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, 27.0d);
        double double16 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) (byte) 10);
        double double17 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double20 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 27.0d + "'", double14 == 27.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 27.0d + "'", double16 == 27.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
    }

    @Test
    public void test1824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1824");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        double[] doubleArray14 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray14);
        double double16 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray14);
        double double17 = org.apache.commons.math.stat.StatUtils.sum(doubleArray14);
        double double18 = org.apache.commons.math.stat.StatUtils.max(doubleArray14);
        double double19 = org.apache.commons.math.stat.StatUtils.variance(doubleArray14);
        double double20 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray14);
        double[] doubleArray24 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double25 = org.apache.commons.math.stat.StatUtils.mean(doubleArray24);
        double double27 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray24, (double) 100.0f);
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double double33 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray31);
        double double34 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray31);
        double double35 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray24, doubleArray31);
        double double36 = org.apache.commons.math.stat.StatUtils.variance(doubleArray31);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray31);
        double double39 = org.apache.commons.math.stat.StatUtils.variance(doubleArray31, (double) 10L);
        double double40 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray31);
        // The following exception was thrown during execution in test generation
        try {
            double double43 = org.apache.commons.math.stat.StatUtils.sum(doubleArray31, (int) (short) 100, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.0d + "'", double15 == 7.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.641588833612779d + "'", double16 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 21.0d + "'", double17 == 21.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 27.0d + "'", double19 == 27.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 7.0d + "'", double25 == 7.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 10.0d + "'", double27 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 7.0d + "'", double32 == 7.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4.641588833612779d + "'", double33 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4.605170185988092d + "'", double34 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 27.0d + "'", double36 == 27.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 27.0d + "'", double39 == 27.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
    }

    @Test
    public void test1825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1825");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray20);
        double double28 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, (int) (short) 1, (int) (byte) 0);
        double double29 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 21.0d + "'", double8 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 27.0d + "'", double29 == 27.0d);
    }

    @Test
    public void test1826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1826");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray11, (double) 100.0f);
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, 27.0d);
        double double24 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) (byte) 10);
        double double25 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, (double) (short) 1);
        double double28 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double[] doubleArray32 = new double[] { (-1L), 0, 10L };
        double double35 = org.apache.commons.math.stat.StatUtils.max(doubleArray32, 0, 0);
        double double36 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray32);
        double[] doubleArray40 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double41 = org.apache.commons.math.stat.StatUtils.mean(doubleArray40);
        double double42 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray40);
        double double43 = org.apache.commons.math.stat.StatUtils.sum(doubleArray40);
        double double44 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray32, doubleArray40);
        double double45 = org.apache.commons.math.stat.StatUtils.sum(doubleArray32);
        double double48 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray32, (int) (short) 1, (int) (short) 0);
        double double49 = org.apache.commons.math.stat.StatUtils.product(doubleArray32);
        double double50 = org.apache.commons.math.stat.StatUtils.max(doubleArray32);
        double double51 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray32);
        double double52 = org.apache.commons.math.stat.StatUtils.mean(doubleArray32);
        // The following exception was thrown during execution in test generation
        try {
            double double56 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray32, (int) ' ', (int) ' ', (double) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.0d + "'", double15 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 27.0d + "'", double22 == 27.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 27.0d + "'", double24 == 27.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 27.0d + "'", double28 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 101.0d + "'", double36 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 7.0d + "'", double41 == 7.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 4.641588833612779d + "'", double42 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 21.0d + "'", double43 == 21.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-4.0d) + "'", double44 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 9.0d + "'", double45 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-0.0d) + "'", double49 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 12.0d + "'", double51 == 12.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 3.0d + "'", double52 == 3.0d);
    }

    @Test
    public void test1827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1827");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double24 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double[] doubleArray28 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double29 = org.apache.commons.math.stat.StatUtils.mean(doubleArray28);
        double double30 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray28);
        double double31 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray28);
        double double33 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray28);
        double double34 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28);
        double double37 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28, (int) (short) 1, 0);
        double double38 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray18, doubleArray28);
        double[] doubleArray42 = new double[] { (-1L), 0, 10L };
        double double45 = org.apache.commons.math.stat.StatUtils.max(doubleArray42, 0, 0);
        double double46 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray42);
        double[] doubleArray50 = new double[] { (-1L), 0, 10L };
        double double53 = org.apache.commons.math.stat.StatUtils.max(doubleArray50, 0, 0);
        double double54 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray50);
        double double56 = org.apache.commons.math.stat.StatUtils.variance(doubleArray50, (double) 10);
        double double57 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray42, doubleArray50);
        double double58 = org.apache.commons.math.stat.StatUtils.max(doubleArray50);
        double double59 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray18, doubleArray50);
        double[] doubleArray63 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double64 = org.apache.commons.math.stat.StatUtils.mean(doubleArray63);
        double double66 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray63, (double) 100.0f);
        double double67 = org.apache.commons.math.stat.StatUtils.mean(doubleArray63);
        double double68 = org.apache.commons.math.stat.StatUtils.mean(doubleArray63);
        double double70 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray50, doubleArray63, 101.0d);
        double double72 = org.apache.commons.math.stat.StatUtils.variance(doubleArray63, (double) (short) -1);
        double double73 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray63);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.641588833612779d + "'", double23 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 7.0d + "'", double24 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 7.0d + "'", double29 == 7.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 4.641588833612779d + "'", double30 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.605170185988092d + "'", double31 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4.641588833612779d + "'", double33 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4.605170185988092d + "'", double34 == 4.605170185988092d);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 101.0d + "'", double46 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 101.0d + "'", double54 == 101.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 37.0d + "'", double56 == 37.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 10.0d + "'", double58 == 10.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4.0d + "'", double59 == 4.0d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 7.0d + "'", double64 == 7.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 10.0d + "'", double66 == 10.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 7.0d + "'", double67 == 7.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 7.0d + "'", double68 == 7.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 127.0d + "'", double70 == 127.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 27.0d + "'", double72 == 27.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 4.605170185988092d + "'", double73 == 4.605170185988092d);
    }

    @Test
    public void test1828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1828");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (-1L), 0, 10L };
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray10, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, 21.0d);
        double double17 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, 4.605170185988092d);
        double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double19 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double23 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray10, (int) (byte) 1, (int) (byte) 1, 3.5200000000000005d);
        double[] doubleArray27 = new double[] { (-1L), 0, 10L };
        double double30 = org.apache.commons.math.stat.StatUtils.max(doubleArray27, 0, 0);
        double double31 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray27);
        double[] doubleArray35 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double36 = org.apache.commons.math.stat.StatUtils.mean(doubleArray35);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35);
        double double38 = org.apache.commons.math.stat.StatUtils.sum(doubleArray35);
        double double39 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray27, doubleArray35);
        double double40 = org.apache.commons.math.stat.StatUtils.max(doubleArray35);
        double double41 = org.apache.commons.math.stat.StatUtils.max(doubleArray35);
        double[] doubleArray45 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double46 = org.apache.commons.math.stat.StatUtils.mean(doubleArray45);
        double double48 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray45, (double) 100.0f);
        double double49 = org.apache.commons.math.stat.StatUtils.mean(doubleArray45);
        double[] doubleArray53 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double54 = org.apache.commons.math.stat.StatUtils.mean(doubleArray53);
        double double56 = org.apache.commons.math.stat.StatUtils.variance(doubleArray53, 27.0d);
        double double58 = org.apache.commons.math.stat.StatUtils.variance(doubleArray53, (double) (byte) 10);
        double double59 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray45, doubleArray53);
        double double60 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray35, doubleArray53);
        double double62 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray10, doubleArray53, (-4.0d));
        double double63 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray10);
        double double64 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double65 = org.apache.commons.math.stat.StatUtils.max(doubleArray10);
        // The following exception was thrown during execution in test generation
        try {
            double double68 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10, (int) 'a', (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 37.0d + "'", double15 == 37.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 127.00000000000001d + "'", double17 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 3.0d + "'", double18 == 3.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 101.0d + "'", double31 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 7.0d + "'", double36 == 7.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 21.0d + "'", double38 == 21.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-4.0d) + "'", double39 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 10.0d + "'", double40 == 10.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 10.0d + "'", double41 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 7.0d + "'", double46 == 7.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 10.0d + "'", double48 == 10.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 7.0d + "'", double49 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 7.0d + "'", double54 == 7.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 27.0d + "'", double56 == 27.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 27.0d + "'", double58 == 27.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 127.0d + "'", double62 == 127.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 101.0d + "'", double63 == 101.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 10.0d + "'", double65 == 10.0d);
    }

    @Test
    public void test1829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1829");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10);
        double double11 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 5.32d, (int) (short) 100, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
    }

    @Test
    public void test1830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1830");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray11, (double) 100.0f);
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, 27.0d);
        double double24 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) (byte) 10);
        double double25 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, (double) (short) 1);
        double double30 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11, 0, (int) (byte) 0);
        double double31 = org.apache.commons.math.stat.StatUtils.product(doubleArray11);
        double[] doubleArray35 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double36 = org.apache.commons.math.stat.StatUtils.mean(doubleArray35);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35);
        double double38 = org.apache.commons.math.stat.StatUtils.sum(doubleArray35);
        double double39 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35);
        double[] doubleArray43 = new double[] { (-1L), 0, 10L };
        double double46 = org.apache.commons.math.stat.StatUtils.max(doubleArray43, 0, 0);
        double double47 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray43);
        double[] doubleArray51 = new double[] { (-1L), 0, 10L };
        double double54 = org.apache.commons.math.stat.StatUtils.max(doubleArray51, 0, 0);
        double double55 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray51);
        double double57 = org.apache.commons.math.stat.StatUtils.variance(doubleArray51, (double) 10);
        double double58 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray43, doubleArray51);
        double double59 = org.apache.commons.math.stat.StatUtils.variance(doubleArray43);
        double double61 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray35, doubleArray43, 3.0d);
        double double62 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray43);
        double double64 = org.apache.commons.math.stat.StatUtils.variance(doubleArray43, 10.000000000000002d);
        double double65 = org.apache.commons.math.stat.StatUtils.product(doubleArray43);
        double double66 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray11, doubleArray43);
        // The following exception was thrown during execution in test generation
        try {
            double double69 = org.apache.commons.math.stat.StatUtils.max(doubleArray43, (int) ' ', (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.0d + "'", double15 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 27.0d + "'", double22 == 27.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 27.0d + "'", double24 == 27.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 100.0d + "'", double31 == 100.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 7.0d + "'", double36 == 7.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 21.0d + "'", double38 == 21.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 4.641588833612779d + "'", double39 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 101.0d + "'", double47 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 101.0d + "'", double55 == 101.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 37.0d + "'", double57 == 37.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 37.0d + "'", double59 == 37.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 127.0d + "'", double61 == 127.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 37.0d + "'", double64 == 37.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.0d) + "'", double65 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 4.0d + "'", double66 == 4.0d);
    }

    @Test
    public void test1831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1831");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        double double11 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double12 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double13 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        double[] doubleArray17 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray17);
        double double19 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray17);
        double double20 = org.apache.commons.math.stat.StatUtils.sum(doubleArray17);
        double[] doubleArray24 = new double[] { (-1L), 0, 10L };
        double double27 = org.apache.commons.math.stat.StatUtils.max(doubleArray24, 0, 0);
        double double29 = org.apache.commons.math.stat.StatUtils.variance(doubleArray24, 21.0d);
        double double31 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray17, doubleArray24, 4.605170185988092d);
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray24);
        double double33 = org.apache.commons.math.stat.StatUtils.max(doubleArray24);
        double[] doubleArray37 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double38 = org.apache.commons.math.stat.StatUtils.mean(doubleArray37);
        double double39 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray37);
        double double40 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray37);
        double double41 = org.apache.commons.math.stat.StatUtils.variance(doubleArray37);
        double double42 = org.apache.commons.math.stat.StatUtils.min(doubleArray37);
        double[] doubleArray46 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double47 = org.apache.commons.math.stat.StatUtils.mean(doubleArray46);
        double double49 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray46, (double) 100.0f);
        double[] doubleArray53 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double54 = org.apache.commons.math.stat.StatUtils.mean(doubleArray53);
        double double55 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray53);
        double double56 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray53);
        double double57 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray46, doubleArray53);
        double[] doubleArray61 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double62 = org.apache.commons.math.stat.StatUtils.mean(doubleArray61);
        double double63 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray61);
        double double64 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray46, doubleArray61);
        double double65 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray61);
        double double66 = org.apache.commons.math.stat.StatUtils.variance(doubleArray61);
        double double67 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray37, doubleArray61);
        double double68 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray37);
        double double70 = org.apache.commons.math.stat.StatUtils.variance(doubleArray37, 0.0d);
        double double71 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray24, doubleArray37);
        double double73 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray24, (double) 100.0f);
        double double74 = org.apache.commons.math.stat.StatUtils.sum(doubleArray24);
        double double76 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray24, 127.00000000000001d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 100.0d + "'", double13 == 100.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 7.0d + "'", double18 == 7.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4.641588833612779d + "'", double19 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 21.0d + "'", double20 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 37.0d + "'", double29 == 37.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 127.00000000000001d + "'", double31 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 3.0d + "'", double32 == 3.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 10.0d + "'", double33 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 7.0d + "'", double38 == 7.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 4.641588833612779d + "'", double39 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 4.605170185988092d + "'", double40 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 27.0d + "'", double41 == 27.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 7.0d + "'", double47 == 7.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 10.0d + "'", double49 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 7.0d + "'", double54 == 7.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 4.641588833612779d + "'", double55 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 4.605170185988092d + "'", double56 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 7.0d + "'", double62 == 7.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 4.641588833612779d + "'", double63 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 4.641588833612779d + "'", double65 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 27.0d + "'", double66 == 27.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 201.0d + "'", double68 == 201.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 27.0d + "'", double70 == 27.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-12.0d) + "'", double71 == (-12.0d));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 10.0d + "'", double73 == 10.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 9.0d + "'", double74 == 9.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 127.00000000000364d + "'", double76 == 127.00000000000364d);
    }

    @Test
    public void test1832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1832");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double[] doubleArray19 = new double[] { (-1L), 0, 10L };
        double double22 = org.apache.commons.math.stat.StatUtils.max(doubleArray19, 0, 0);
        double double23 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray19);
        double double25 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) 10);
        double double26 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11);
        double double29 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, 3.0d);
        double double30 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double33 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (int) (short) 0, 1);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 4.641588833612779d + "'", double7 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 101.0d + "'", double23 == 101.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 37.0d + "'", double25 == 37.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 37.0d + "'", double27 == 37.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 127.0d + "'", double29 == 127.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 27.0d + "'", double30 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
    }

    @Test
    public void test1833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1833");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, (int) (byte) 1, (int) (short) 0);
        double[] doubleArray22 = new double[] { (-1L), 0, 10L };
        double double25 = org.apache.commons.math.stat.StatUtils.max(doubleArray22, 0, 0);
        double double26 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray22);
        double[] doubleArray30 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double31 = org.apache.commons.math.stat.StatUtils.mean(doubleArray30);
        double double32 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray30);
        double double33 = org.apache.commons.math.stat.StatUtils.sum(doubleArray30);
        double double34 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray22, doubleArray30);
        double double35 = org.apache.commons.math.stat.StatUtils.max(doubleArray22);
        double double36 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray22);
        double double37 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray22);
        double double39 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, 27.00000000000003d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 101.0d + "'", double26 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 7.0d + "'", double31 == 7.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 4.641588833612779d + "'", double32 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 21.0d + "'", double33 == 21.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-4.0d) + "'", double34 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 10.0d + "'", double35 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-0.9199999999999988d) + "'", double39 == (-0.9199999999999988d));
    }

    @Test
    public void test1834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1834");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double3 = org.apache.commons.math.stat.StatUtils.product(doubleArray0, (int) (byte) 1, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1835");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        double double28 = org.apache.commons.math.stat.StatUtils.max(doubleArray25, 0, 0);
        double double29 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray25);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        double double36 = org.apache.commons.math.stat.StatUtils.max(doubleArray33, 0, 0);
        double double37 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray33);
        double double39 = org.apache.commons.math.stat.StatUtils.variance(doubleArray33, (double) 10);
        double double40 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray25, doubleArray33);
        double double42 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray25, 100.0d);
        double double43 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        double double44 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray48 = new double[] { (-1L), 0, 10L };
        double double51 = org.apache.commons.math.stat.StatUtils.max(doubleArray48, 0, 0);
        double double52 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray48);
        double[] doubleArray56 = new double[] { (-1L), 0, 10L };
        double double59 = org.apache.commons.math.stat.StatUtils.max(doubleArray56, 0, 0);
        double double60 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray56);
        double double62 = org.apache.commons.math.stat.StatUtils.variance(doubleArray56, (double) 10);
        double double63 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray48, doubleArray56);
        double double64 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray56);
        double double65 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double66 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double67 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 101.0d + "'", double29 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 101.0d + "'", double37 == 101.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 37.0d + "'", double39 == 37.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 127.0d + "'", double42 == 127.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 100.0d + "'", double43 == 100.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 21.0d + "'", double44 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 101.0d + "'", double52 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 101.0d + "'", double60 == 101.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 37.0d + "'", double62 == 37.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 12.0d + "'", double64 == 12.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 21.0d + "'", double65 == 21.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 4.641588833612779d + "'", double66 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 21.0d + "'", double67 == 21.0d);
    }

    @Test
    public void test1836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1836");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        double double28 = org.apache.commons.math.stat.StatUtils.max(doubleArray25, 0, 0);
        double double29 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray25);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        double double36 = org.apache.commons.math.stat.StatUtils.max(doubleArray33, 0, 0);
        double double37 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray33);
        double double39 = org.apache.commons.math.stat.StatUtils.variance(doubleArray33, (double) 10);
        double double40 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray25, doubleArray33);
        double double42 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray25, 100.0d);
        double double45 = org.apache.commons.math.stat.StatUtils.variance(doubleArray25, 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            double double48 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray25, (int) 'a', (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 101.0d + "'", double29 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 101.0d + "'", double37 == 101.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 37.0d + "'", double39 == 37.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 127.0d + "'", double42 == 127.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
    }

    @Test
    public void test1837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1837");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double11 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3, (int) (byte) 0, (int) (byte) 1);
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double[] doubleArray17 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray17);
        double double20 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray17, (double) 100.0f);
        double[] doubleArray24 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double25 = org.apache.commons.math.stat.StatUtils.mean(doubleArray24);
        double double26 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray24);
        double double27 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray24);
        double double28 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray17, doubleArray24);
        double[] doubleArray32 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double33 = org.apache.commons.math.stat.StatUtils.mean(doubleArray32);
        double double34 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray32);
        double double35 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray17, doubleArray32);
        double double36 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray32);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        double double43 = org.apache.commons.math.stat.StatUtils.max(doubleArray40, 0, 0);
        double double44 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray40);
        double[] doubleArray48 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double49 = org.apache.commons.math.stat.StatUtils.mean(doubleArray48);
        double double50 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray48);
        double double51 = org.apache.commons.math.stat.StatUtils.sum(doubleArray48);
        double double52 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray40, doubleArray48);
        double double53 = org.apache.commons.math.stat.StatUtils.sum(doubleArray40);
        double double56 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray40, (int) (short) 1, (int) (short) 0);
        double double57 = org.apache.commons.math.stat.StatUtils.product(doubleArray40);
        double double58 = org.apache.commons.math.stat.StatUtils.max(doubleArray40);
        double double59 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray32, doubleArray40);
        double double60 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray32);
        double double63 = org.apache.commons.math.stat.StatUtils.max(doubleArray32, 0, 0);
        double[] doubleArray67 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double68 = org.apache.commons.math.stat.StatUtils.mean(doubleArray67);
        double double70 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray67, (double) 100.0f);
        double double71 = org.apache.commons.math.stat.StatUtils.variance(doubleArray67);
        double double73 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray67, (double) 1);
        double double75 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray32, doubleArray67, 191.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double78 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray32, (-1), (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 4.641588833612779d + "'", double8 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.000000000000002d + "'", double11 == 10.000000000000002d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 10.0d + "'", double13 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 7.0d + "'", double18 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 10.0d + "'", double20 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 7.0d + "'", double25 == 7.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 4.641588833612779d + "'", double26 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 4.605170185988092d + "'", double27 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 7.0d + "'", double33 == 7.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4.641588833612779d + "'", double34 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 4.641588833612779d + "'", double36 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 101.0d + "'", double44 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 7.0d + "'", double49 == 7.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4.641588833612779d + "'", double50 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 21.0d + "'", double51 == 21.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-4.0d) + "'", double52 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 9.0d + "'", double53 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.0d) + "'", double57 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 10.0d + "'", double58 == 10.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 12.0d + "'", double59 == 12.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 7.0d + "'", double68 == 7.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 10.0d + "'", double70 == 10.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 27.0d + "'", double71 == 27.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
    }

    @Test
    public void test1838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1838");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) (short) 1);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray19);
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double28 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double double29 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double30 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray27);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        double double37 = org.apache.commons.math.stat.StatUtils.max(doubleArray34, 0, 0);
        double double38 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray34);
        double[] doubleArray42 = new double[] { (-1L), 0, 10L };
        double double45 = org.apache.commons.math.stat.StatUtils.max(doubleArray42, 0, 0);
        double double46 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray42);
        double double48 = org.apache.commons.math.stat.StatUtils.variance(doubleArray42, (double) 10);
        double double49 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray34, doubleArray42);
        double double51 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray12, doubleArray34, 100.0d);
        double double52 = org.apache.commons.math.stat.StatUtils.variance(doubleArray12);
        double double53 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double54 = org.apache.commons.math.stat.StatUtils.variance(doubleArray12);
        double double56 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, (double) 100);
        double double57 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray12);
        // The following exception was thrown during execution in test generation
        try {
            double double60 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray12, (int) (byte) 10, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 27.0d + "'", double6 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 27.0d + "'", double8 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.605170185988092d + "'", double22 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 7.0d + "'", double28 == 7.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4.641588833612779d + "'", double29 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 101.0d + "'", double38 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 101.0d + "'", double46 == 101.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 37.0d + "'", double48 == 37.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 127.0d + "'", double51 == 127.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 27.0d + "'", double52 == 27.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 21.0d + "'", double53 == 21.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 27.0d + "'", double54 == 27.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 4.641588833612779d + "'", double57 == 4.641588833612779d);
    }

    @Test
    public void test1839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1839");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10);
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double double15 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13);
        double double16 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray13);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double18 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray13);
        double double19 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double20 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double21 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray25 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double26 = org.apache.commons.math.stat.StatUtils.mean(doubleArray25);
        double double27 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray25);
        double double28 = org.apache.commons.math.stat.StatUtils.sum(doubleArray25);
        double[] doubleArray32 = new double[] { (-1L), 0, 10L };
        double double35 = org.apache.commons.math.stat.StatUtils.max(doubleArray32, 0, 0);
        double double37 = org.apache.commons.math.stat.StatUtils.variance(doubleArray32, 21.0d);
        double double39 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray25, doubleArray32, 4.605170185988092d);
        double double40 = org.apache.commons.math.stat.StatUtils.mean(doubleArray32);
        double double41 = org.apache.commons.math.stat.StatUtils.max(doubleArray32);
        double[] doubleArray45 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double46 = org.apache.commons.math.stat.StatUtils.mean(doubleArray45);
        double double48 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray45, (double) 100.0f);
        double double49 = org.apache.commons.math.stat.StatUtils.mean(doubleArray45);
        double[] doubleArray53 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double54 = org.apache.commons.math.stat.StatUtils.mean(doubleArray53);
        double double56 = org.apache.commons.math.stat.StatUtils.variance(doubleArray53, 27.0d);
        double double58 = org.apache.commons.math.stat.StatUtils.variance(doubleArray53, (double) (byte) 10);
        double double59 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray45, doubleArray53);
        double double62 = org.apache.commons.math.stat.StatUtils.variance(doubleArray45, (int) (short) 0, (int) (byte) 0);
        double double63 = org.apache.commons.math.stat.StatUtils.product(doubleArray45);
        double double65 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray32, doubleArray45, 127.0d);
        double double67 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray32, (double) ' ');
        double double69 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray32, 0.0d);
        double double71 = org.apache.commons.math.stat.StatUtils.variance(doubleArray32, (-4.0d));
        // The following exception was thrown during execution in test generation
        try {
            double double74 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray32, (int) (byte) 1, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4.641588833612779d + "'", double15 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.605170185988092d + "'", double16 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 27.0d + "'", double17 == 27.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-4.0d) + "'", double18 == (-4.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 37.0d + "'", double20 == 37.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1.0d) + "'", double21 == (-1.0d));
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 7.0d + "'", double26 == 7.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 4.641588833612779d + "'", double27 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 21.0d + "'", double28 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 37.0d + "'", double37 == 37.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 127.00000000000001d + "'", double39 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 3.0d + "'", double40 == 3.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 10.0d + "'", double41 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 7.0d + "'", double46 == 7.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 10.0d + "'", double48 == 10.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 7.0d + "'", double49 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 7.0d + "'", double54 == 7.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 27.0d + "'", double56 == 27.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 27.0d + "'", double58 == 27.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 100.0d + "'", double63 == 100.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 127.0d + "'", double65 == 127.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-0.72d) + "'", double67 == (-0.72d));
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 37.0d + "'", double71 == 37.0d);
    }

    @Test
    public void test1840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1840");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        double double29 = org.apache.commons.math.stat.StatUtils.max(doubleArray26, 0, 0);
        double double30 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray26);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        double double37 = org.apache.commons.math.stat.StatUtils.max(doubleArray34, 0, 0);
        double double38 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray34);
        double double40 = org.apache.commons.math.stat.StatUtils.variance(doubleArray34, (double) 10);
        double double41 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray26, doubleArray34);
        double double42 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray34);
        double double43 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray18, doubleArray34);
        double[] doubleArray47 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double48 = org.apache.commons.math.stat.StatUtils.mean(doubleArray47);
        double double50 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray47, (double) 100.0f);
        double double51 = org.apache.commons.math.stat.StatUtils.variance(doubleArray47);
        double double52 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray18, doubleArray47);
        double double53 = org.apache.commons.math.stat.StatUtils.max(doubleArray18);
        double double54 = org.apache.commons.math.stat.StatUtils.sum(doubleArray18);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 7.0d + "'", double22 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 101.0d + "'", double30 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 101.0d + "'", double38 == 101.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 37.0d + "'", double40 == 37.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 101.0d + "'", double42 == 101.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4.0d + "'", double43 == 4.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 7.0d + "'", double48 == 7.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 27.0d + "'", double51 == 27.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 10.0d + "'", double53 == 10.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 21.0d + "'", double54 == 21.0d);
    }

    @Test
    public void test1841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1841");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double double15 = org.apache.commons.math.stat.StatUtils.min(doubleArray10);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sum(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray19);
        double double24 = org.apache.commons.math.stat.StatUtils.min(doubleArray19);
        double[] doubleArray28 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double29 = org.apache.commons.math.stat.StatUtils.mean(doubleArray28);
        double double31 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray28, (double) 100.0f);
        double[] doubleArray35 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double36 = org.apache.commons.math.stat.StatUtils.mean(doubleArray35);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35);
        double double38 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray35);
        double double39 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray28, doubleArray35);
        double[] doubleArray43 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double44 = org.apache.commons.math.stat.StatUtils.mean(doubleArray43);
        double double45 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray43);
        double double46 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray28, doubleArray43);
        double double47 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray43);
        double double48 = org.apache.commons.math.stat.StatUtils.variance(doubleArray43);
        double double49 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray19, doubleArray43);
        double double50 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray43);
        double double51 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray43);
        double double53 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray10, doubleArray43, (double) 0.0f);
        // The following exception was thrown during execution in test generation
        try {
            double double56 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray43, 10, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 21.0d + "'", double22 == 21.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 7.0d + "'", double29 == 7.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 10.0d + "'", double31 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 7.0d + "'", double36 == 7.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 4.605170185988092d + "'", double38 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 7.0d + "'", double44 == 7.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 4.641588833612779d + "'", double45 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 4.641588833612779d + "'", double47 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 27.0d + "'", double48 == 27.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4.641588833612779d + "'", double50 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 4.605170185988092d + "'", double51 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
    }

    @Test
    public void test1842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1842");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (-1L), 0, 10L };
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray10, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, 21.0d);
        double double17 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, 4.605170185988092d);
        double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double19 = org.apache.commons.math.stat.StatUtils.max(doubleArray10);
        double[] doubleArray23 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double24 = org.apache.commons.math.stat.StatUtils.mean(doubleArray23);
        double double25 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray23);
        double double26 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray23);
        double double27 = org.apache.commons.math.stat.StatUtils.variance(doubleArray23);
        double double28 = org.apache.commons.math.stat.StatUtils.min(doubleArray23);
        double[] doubleArray32 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double33 = org.apache.commons.math.stat.StatUtils.mean(doubleArray32);
        double double35 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray32, (double) 100.0f);
        double[] doubleArray39 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double40 = org.apache.commons.math.stat.StatUtils.mean(doubleArray39);
        double double41 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray39);
        double double42 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray39);
        double double43 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray32, doubleArray39);
        double[] doubleArray47 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double48 = org.apache.commons.math.stat.StatUtils.mean(doubleArray47);
        double double49 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray47);
        double double50 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray32, doubleArray47);
        double double51 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray47);
        double double52 = org.apache.commons.math.stat.StatUtils.variance(doubleArray47);
        double double53 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray23, doubleArray47);
        double double54 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray23);
        double double56 = org.apache.commons.math.stat.StatUtils.variance(doubleArray23, 0.0d);
        double double57 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray10, doubleArray23);
        double double59 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray10, (double) 100.0f);
        double double61 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, 0.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double64 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10, (int) (byte) 100, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 37.0d + "'", double15 == 37.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 127.00000000000001d + "'", double17 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 3.0d + "'", double18 == 3.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 7.0d + "'", double24 == 7.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 4.641588833612779d + "'", double25 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 4.605170185988092d + "'", double26 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 27.0d + "'", double27 == 27.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 7.0d + "'", double33 == 7.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 10.0d + "'", double35 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 7.0d + "'", double40 == 7.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 4.641588833612779d + "'", double41 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 4.605170185988092d + "'", double42 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 7.0d + "'", double48 == 7.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 4.641588833612779d + "'", double49 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 4.641588833612779d + "'", double51 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 27.0d + "'", double52 == 27.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 201.0d + "'", double54 == 201.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 27.0d + "'", double56 == 27.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-12.0d) + "'", double57 == (-12.0d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 10.0d + "'", double59 == 10.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 37.0d + "'", double61 == 37.0d);
    }

    @Test
    public void test1843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1843");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, 0.0d);
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double double34 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray31, (double) 100.0f);
        double double35 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double[] doubleArray39 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double40 = org.apache.commons.math.stat.StatUtils.mean(doubleArray39);
        double double42 = org.apache.commons.math.stat.StatUtils.variance(doubleArray39, 27.0d);
        double double44 = org.apache.commons.math.stat.StatUtils.variance(doubleArray39, (double) (byte) 10);
        double double45 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray31, doubleArray39);
        double double46 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray39);
        double double47 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray39);
        double double49 = org.apache.commons.math.stat.StatUtils.variance(doubleArray39, (double) (short) 100);
        double double50 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray39);
        double[] doubleArray54 = new double[] { (-1L), 0, 10L };
        double double57 = org.apache.commons.math.stat.StatUtils.max(doubleArray54, 0, 0);
        double double58 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray54);
        double double59 = org.apache.commons.math.stat.StatUtils.min(doubleArray54);
        double double62 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray54, (int) (byte) 1, (int) (byte) 0);
        double double64 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray39, doubleArray54, (double) 100L);
        double double65 = org.apache.commons.math.stat.StatUtils.sum(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 127.0d + "'", double27 == 127.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 7.0d + "'", double32 == 7.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 10.0d + "'", double34 == 10.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 7.0d + "'", double35 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 7.0d + "'", double40 == 7.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 27.0d + "'", double42 == 27.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 27.0d + "'", double44 == 27.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 201.0d + "'", double47 == 201.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 27.0d + "'", double49 == 27.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 201.0d + "'", double50 == 201.0d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 101.0d + "'", double58 == 101.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-1.0d) + "'", double59 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 127.0d + "'", double64 == 127.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 21.0d + "'", double65 == 21.0d);
    }

    @Test
    public void test1844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1844");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        double double11 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double12 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double13 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        double double14 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.variance(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.min(doubleArray18);
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double28 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double double30 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray27, (double) 100.0f);
        double[] doubleArray34 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double35 = org.apache.commons.math.stat.StatUtils.mean(doubleArray34);
        double double36 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray34);
        double double37 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray34);
        double double38 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray27, doubleArray34);
        double[] doubleArray42 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double43 = org.apache.commons.math.stat.StatUtils.mean(doubleArray42);
        double double44 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray42);
        double double45 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray27, doubleArray42);
        double double46 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray42);
        double double47 = org.apache.commons.math.stat.StatUtils.variance(doubleArray42);
        double double48 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray18, doubleArray42);
        double double49 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray18);
        double double50 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray18);
        double[] doubleArray54 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double55 = org.apache.commons.math.stat.StatUtils.mean(doubleArray54);
        double double57 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray54, (double) 100.0f);
        double double58 = org.apache.commons.math.stat.StatUtils.mean(doubleArray54);
        double double59 = org.apache.commons.math.stat.StatUtils.mean(doubleArray54);
        double double60 = org.apache.commons.math.stat.StatUtils.mean(doubleArray54);
        double double62 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray54, 1237.7d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 100.0d + "'", double13 == 100.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 201.0d + "'", double14 == 201.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.605170185988092d + "'", double21 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 27.0d + "'", double22 == 27.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 7.0d + "'", double28 == 7.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 7.0d + "'", double35 == 7.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 4.641588833612779d + "'", double36 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.605170185988092d + "'", double37 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 7.0d + "'", double43 == 7.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 4.641588833612779d + "'", double44 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 4.641588833612779d + "'", double46 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 27.0d + "'", double47 == 27.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 201.0d + "'", double49 == 201.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 7.0d + "'", double55 == 7.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 10.0d + "'", double57 == 10.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 7.0d + "'", double58 == 7.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 7.0d + "'", double59 == 7.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 7.0d + "'", double60 == 7.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-4.6566128730773926E-10d) + "'", double62 == (-4.6566128730773926E-10d));
    }

    @Test
    public void test1845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1845");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double19 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, (int) (short) 1, (int) (short) 0);
        double double20 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        double double22 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) (byte) 10);
        double double23 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double24 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 9.0d + "'", double16 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.0d) + "'", double20 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 37.0d + "'", double22 == 37.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 3.0d + "'", double23 == 3.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
    }

    @Test
    public void test1846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1846");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double4 = org.apache.commons.math.stat.StatUtils.variance(doubleArray0, (double) 10, (int) (short) 10, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1847");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double double15 = org.apache.commons.math.stat.StatUtils.min(doubleArray10);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sum(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray19);
        double double24 = org.apache.commons.math.stat.StatUtils.min(doubleArray19);
        double[] doubleArray28 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double29 = org.apache.commons.math.stat.StatUtils.mean(doubleArray28);
        double double31 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray28, (double) 100.0f);
        double[] doubleArray35 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double36 = org.apache.commons.math.stat.StatUtils.mean(doubleArray35);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35);
        double double38 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray35);
        double double39 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray28, doubleArray35);
        double[] doubleArray43 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double44 = org.apache.commons.math.stat.StatUtils.mean(doubleArray43);
        double double45 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray43);
        double double46 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray28, doubleArray43);
        double double47 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray43);
        double double48 = org.apache.commons.math.stat.StatUtils.variance(doubleArray43);
        double double49 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray19, doubleArray43);
        double double50 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray43);
        double double51 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray43);
        double double53 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray10, doubleArray43, (double) 0.0f);
        double double54 = org.apache.commons.math.stat.StatUtils.max(doubleArray10);
        double double55 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray10);
        double double56 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10);
        double double58 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, 21.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double61 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10, (-1), (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 21.0d + "'", double22 == 21.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 7.0d + "'", double29 == 7.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 10.0d + "'", double31 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 7.0d + "'", double36 == 7.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 4.605170185988092d + "'", double38 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 7.0d + "'", double44 == 7.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 4.641588833612779d + "'", double45 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 4.641588833612779d + "'", double47 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 27.0d + "'", double48 == 27.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4.641588833612779d + "'", double50 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 4.605170185988092d + "'", double51 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 10.0d + "'", double54 == 10.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 201.0d + "'", double55 == 201.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 27.0d + "'", double56 == 27.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 27.0d + "'", double58 == 27.0d);
    }

    @Test
    public void test1848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1848");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11, (int) (byte) 1, (int) (byte) 0);
        double[] doubleArray22 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double23 = org.apache.commons.math.stat.StatUtils.mean(doubleArray22);
        double double24 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray22);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray22);
        double double26 = org.apache.commons.math.stat.StatUtils.max(doubleArray22);
        double[] doubleArray30 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double31 = org.apache.commons.math.stat.StatUtils.mean(doubleArray30);
        double double33 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray30, (double) 100.0f);
        double double34 = org.apache.commons.math.stat.StatUtils.mean(doubleArray30);
        double[] doubleArray38 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double39 = org.apache.commons.math.stat.StatUtils.mean(doubleArray38);
        double double41 = org.apache.commons.math.stat.StatUtils.variance(doubleArray38, 27.0d);
        double double43 = org.apache.commons.math.stat.StatUtils.variance(doubleArray38, (double) (byte) 10);
        double double44 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray30, doubleArray38);
        double double46 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray22, doubleArray30, (double) (short) 1);
        double double47 = org.apache.commons.math.stat.StatUtils.sum(doubleArray30);
        double double48 = org.apache.commons.math.stat.StatUtils.sum(doubleArray30);
        double[] doubleArray52 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double53 = org.apache.commons.math.stat.StatUtils.mean(doubleArray52);
        double double55 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray52, (double) 100.0f);
        double double56 = org.apache.commons.math.stat.StatUtils.variance(doubleArray52);
        double double58 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray52, (double) 1);
        double double59 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray30, doubleArray52);
        double double60 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray11, doubleArray30);
        double double61 = org.apache.commons.math.stat.StatUtils.max(doubleArray11);
        double double62 = org.apache.commons.math.stat.StatUtils.max(doubleArray11);
        double[] doubleArray66 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double67 = org.apache.commons.math.stat.StatUtils.mean(doubleArray66);
        double double69 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray66, (double) 100.0f);
        double[] doubleArray73 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double74 = org.apache.commons.math.stat.StatUtils.mean(doubleArray73);
        double double75 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray73);
        double double76 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray73);
        double double77 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray66, doubleArray73);
        double double78 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray11, doubleArray73);
        // The following exception was thrown during execution in test generation
        try {
            double double81 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11, 10, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 7.0d + "'", double23 == 7.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 4.641588833612779d + "'", double24 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 21.0d + "'", double25 == 21.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 7.0d + "'", double31 == 7.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 10.0d + "'", double33 == 10.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 7.0d + "'", double34 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 7.0d + "'", double39 == 7.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 27.0d + "'", double41 == 27.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 27.0d + "'", double43 == 27.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 21.0d + "'", double47 == 21.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 21.0d + "'", double48 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 7.0d + "'", double53 == 7.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 10.0d + "'", double55 == 10.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 27.0d + "'", double56 == 27.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 10.0d + "'", double61 == 10.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 10.0d + "'", double62 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 7.0d + "'", double67 == 7.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 10.0d + "'", double69 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 7.0d + "'", double74 == 7.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 4.641588833612779d + "'", double75 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 4.605170185988092d + "'", double76 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
    }

    @Test
    public void test1849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1849");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.max(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.max(doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double21 = org.apache.commons.math.stat.StatUtils.min(doubleArray11, (int) 'a', (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 27.0d + "'", double18 == 27.0d);
    }

    @Test
    public void test1850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1850");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3, (int) (short) 0, (int) (byte) 0);
        double double14 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double15 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double16 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4.641588833612779d + "'", double14 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
    }

    @Test
    public void test1851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1851");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, 27.0d);
        double double16 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) (byte) 10);
        double double17 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double20 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (int) (short) 0, (int) (byte) 0);
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray25 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double26 = org.apache.commons.math.stat.StatUtils.mean(doubleArray25);
        double double28 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray25, (double) 100.0f);
        double[] doubleArray32 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double33 = org.apache.commons.math.stat.StatUtils.mean(doubleArray32);
        double double34 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray32);
        double double35 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray32);
        double double36 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray25, doubleArray32);
        double[] doubleArray40 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double41 = org.apache.commons.math.stat.StatUtils.mean(doubleArray40);
        double double42 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray40);
        double double43 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray25, doubleArray40);
        double double46 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray25, 0, 0);
        double double47 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray25);
        double double49 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray25, 101.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double52 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3, (int) (short) 10, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 27.0d + "'", double14 == 27.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 27.0d + "'", double16 == 27.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 7.0d + "'", double26 == 7.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 10.0d + "'", double28 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 7.0d + "'", double33 == 7.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4.641588833612779d + "'", double34 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 4.605170185988092d + "'", double35 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 7.0d + "'", double41 == 7.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 4.641588833612779d + "'", double42 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 4.605170185988092d + "'", double47 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
    }

    @Test
    public void test1852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1852");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, 0.0d);
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double double34 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray31, (double) 100.0f);
        double double35 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double[] doubleArray39 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double40 = org.apache.commons.math.stat.StatUtils.mean(doubleArray39);
        double double42 = org.apache.commons.math.stat.StatUtils.variance(doubleArray39, 27.0d);
        double double44 = org.apache.commons.math.stat.StatUtils.variance(doubleArray39, (double) (byte) 10);
        double double45 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray31, doubleArray39);
        double double46 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray39);
        double double47 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray39);
        double double49 = org.apache.commons.math.stat.StatUtils.variance(doubleArray39, (double) (short) 100);
        double double50 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray39);
        double double52 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray39, (double) 1L);
        double double53 = org.apache.commons.math.stat.StatUtils.product(doubleArray39);
        double double54 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray39);
        double double55 = org.apache.commons.math.stat.StatUtils.variance(doubleArray39);
        double double56 = org.apache.commons.math.stat.StatUtils.variance(doubleArray39);
        double double58 = org.apache.commons.math.stat.StatUtils.variance(doubleArray39, 10.000000000000002d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 127.0d + "'", double27 == 127.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 7.0d + "'", double32 == 7.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 10.0d + "'", double34 == 10.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 7.0d + "'", double35 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 7.0d + "'", double40 == 7.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 27.0d + "'", double42 == 27.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 27.0d + "'", double44 == 27.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 201.0d + "'", double47 == 201.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 27.0d + "'", double49 == 27.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4.641588833612779d + "'", double50 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 100.0d + "'", double53 == 100.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 4.641588833612779d + "'", double54 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 27.0d + "'", double55 == 27.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 27.0d + "'", double56 == 27.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 27.0d + "'", double58 == 27.0d);
    }

    @Test
    public void test1853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1853");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray19);
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double28 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double double29 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double30 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray27);
        double double31 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray27);
        double double33 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray27);
        double double34 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27, (int) (byte) 0, (int) (short) 1);
        java.lang.Class<?> wildcardClass38 = doubleArray27.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 21.0d + "'", double7 == 21.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.605170185988092d + "'", double22 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 7.0d + "'", double28 == 7.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4.641588833612779d + "'", double29 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.641588833612779d + "'", double31 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4.641588833612779d + "'", double34 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 10.000000000000002d + "'", double37 == 10.000000000000002d);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test1854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1854");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double11 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 4.641588833612779d + "'", double8 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 201.0d + "'", double10 == 201.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 4.605170185988092d + "'", double11 == 4.605170185988092d);
    }

    @Test
    public void test1855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1855");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11, (int) (byte) 1, (int) (byte) 0);
        double double19 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        double double20 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double[] doubleArray24 = new double[] { (-1L), 0, 10L };
        double double27 = org.apache.commons.math.stat.StatUtils.max(doubleArray24, 0, 0);
        double double28 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray24);
        double double29 = org.apache.commons.math.stat.StatUtils.min(doubleArray24);
        double double30 = org.apache.commons.math.stat.StatUtils.variance(doubleArray24);
        double double32 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray11, doubleArray24, 37.00000000000364d);
        // The following exception was thrown during execution in test generation
        try {
            double double35 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11, (int) (short) -1, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4.605170185988092d + "'", double19 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 21.0d + "'", double20 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 101.0d + "'", double28 == 101.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1.0d) + "'", double29 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 37.0d + "'", double30 == 37.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 127.0d + "'", double32 == 127.0d);
    }

    @Test
    public void test1856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1856");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        double double29 = org.apache.commons.math.stat.StatUtils.max(doubleArray26, 0, 0);
        double double30 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray26);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        double double37 = org.apache.commons.math.stat.StatUtils.max(doubleArray34, 0, 0);
        double double38 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray34);
        double double40 = org.apache.commons.math.stat.StatUtils.variance(doubleArray34, (double) 10);
        double double41 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray26, doubleArray34);
        double double42 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray34);
        double double43 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray18, doubleArray34);
        double double44 = org.apache.commons.math.stat.StatUtils.sum(doubleArray18);
        double double45 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray18);
        double double46 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray18);
        double double47 = org.apache.commons.math.stat.StatUtils.max(doubleArray18);
        // The following exception was thrown during execution in test generation
        try {
            double double49 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray18, (-3.552713678800501E-15d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: invalid quantile value: -3.552713678800501E-15");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 7.0d + "'", double22 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 101.0d + "'", double30 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 101.0d + "'", double38 == 101.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 37.0d + "'", double40 == 37.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 101.0d + "'", double42 == 101.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4.0d + "'", double43 == 4.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 21.0d + "'", double44 == 21.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 4.605170185988092d + "'", double45 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 4.605170185988092d + "'", double46 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 10.0d + "'", double47 == 10.0d);
    }

    @Test
    public void test1857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1857");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) 10);
        double double18 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.max(doubleArray11);
        double double20 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double23 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11, (int) (byte) 100, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 37.0d + "'", double17 == 37.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 101.0d + "'", double20 == 101.0d);
    }

    @Test
    public void test1858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1858");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) 10);
        double double18 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.max(doubleArray11);
        double double20 = org.apache.commons.math.stat.StatUtils.product(doubleArray11);
        double double21 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double22 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double25 = org.apache.commons.math.stat.StatUtils.min(doubleArray11, (int) '4', 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 37.0d + "'", double17 == 37.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.0d) + "'", double20 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 101.0d + "'", double21 == 101.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 9.0d + "'", double22 == 9.0d);
    }

    @Test
    public void test1859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1859");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) (byte) 100);
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double double15 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13);
        double double16 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray13);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double19 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray13, 37.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double23 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) (byte) 0, (int) 'a', (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4.641588833612779d + "'", double15 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.605170185988092d + "'", double16 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 27.0d + "'", double17 == 27.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
    }

    @Test
    public void test1860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1860");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 27.0d);
        double double8 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) (byte) 10);
        double double9 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double12 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, (int) (byte) 100, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 27.0d + "'", double6 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 27.0d + "'", double8 == 27.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 4.641588833612779d + "'", double9 == 4.641588833612779d);
    }

    @Test
    public void test1861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1861");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        double double29 = org.apache.commons.math.stat.StatUtils.max(doubleArray26, 0, 0);
        double double30 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray26);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        double double37 = org.apache.commons.math.stat.StatUtils.max(doubleArray34, 0, 0);
        double double38 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray34);
        double double40 = org.apache.commons.math.stat.StatUtils.variance(doubleArray34, (double) 10);
        double double41 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray26, doubleArray34);
        double double42 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray34);
        double double43 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray18, doubleArray34);
        double double44 = org.apache.commons.math.stat.StatUtils.sum(doubleArray18);
        double[] doubleArray48 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double49 = org.apache.commons.math.stat.StatUtils.mean(doubleArray48);
        double double50 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray48);
        double double51 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray48);
        double double52 = org.apache.commons.math.stat.StatUtils.variance(doubleArray48);
        double double53 = org.apache.commons.math.stat.StatUtils.min(doubleArray48);
        double[] doubleArray57 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double58 = org.apache.commons.math.stat.StatUtils.mean(doubleArray57);
        double double60 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray57, (double) 100.0f);
        double[] doubleArray64 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double65 = org.apache.commons.math.stat.StatUtils.mean(doubleArray64);
        double double66 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray64);
        double double67 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray64);
        double double68 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray57, doubleArray64);
        double[] doubleArray72 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double73 = org.apache.commons.math.stat.StatUtils.mean(doubleArray72);
        double double74 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray72);
        double double75 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray57, doubleArray72);
        double double76 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray72);
        double double77 = org.apache.commons.math.stat.StatUtils.variance(doubleArray72);
        double double78 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray48, doubleArray72);
        double double81 = org.apache.commons.math.stat.StatUtils.sum(doubleArray48, (int) (short) 0, (int) (byte) 1);
        double double82 = org.apache.commons.math.stat.StatUtils.max(doubleArray48);
        double double84 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray18, doubleArray48, 13.0799401015171d);
        double double85 = org.apache.commons.math.stat.StatUtils.product(doubleArray48);
        double double86 = org.apache.commons.math.stat.StatUtils.max(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 7.0d + "'", double22 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 101.0d + "'", double30 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 101.0d + "'", double38 == 101.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 37.0d + "'", double40 == 37.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 101.0d + "'", double42 == 101.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4.0d + "'", double43 == 4.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 21.0d + "'", double44 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 7.0d + "'", double49 == 7.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4.641588833612779d + "'", double50 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 4.605170185988092d + "'", double51 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 27.0d + "'", double52 == 27.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 7.0d + "'", double58 == 7.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 10.0d + "'", double60 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 7.0d + "'", double65 == 7.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 4.641588833612779d + "'", double66 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 4.605170185988092d + "'", double67 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 7.0d + "'", double73 == 7.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 4.641588833612779d + "'", double74 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 4.641588833612779d + "'", double76 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 27.0d + "'", double77 == 27.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 10.0d + "'", double81 == 10.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 10.0d + "'", double82 == 10.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + (-5.6843418860808015E-14d) + "'", double84 == (-5.6843418860808015E-14d));
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 100.0d + "'", double85 == 100.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 10.0d + "'", double86 == 10.0d);
    }

    @Test
    public void test1862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1862");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10);
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double double15 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13);
        double double16 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray13);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double18 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray13);
        double[] doubleArray22 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double23 = org.apache.commons.math.stat.StatUtils.mean(doubleArray22);
        double double24 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray22);
        double[] doubleArray28 = new double[] { (-1L), 0, 10L };
        double double31 = org.apache.commons.math.stat.StatUtils.max(doubleArray28, 0, 0);
        double double32 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray28);
        double[] doubleArray36 = new double[] { (-1L), 0, 10L };
        double double39 = org.apache.commons.math.stat.StatUtils.max(doubleArray36, 0, 0);
        double double40 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray36);
        double double42 = org.apache.commons.math.stat.StatUtils.variance(doubleArray36, (double) 10);
        double double43 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray28, doubleArray36);
        double double44 = org.apache.commons.math.stat.StatUtils.max(doubleArray36);
        double double45 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray36);
        double double46 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray36);
        double double47 = org.apache.commons.math.stat.StatUtils.product(doubleArray36);
        double[] doubleArray51 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double52 = org.apache.commons.math.stat.StatUtils.mean(doubleArray51);
        double double53 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray51);
        double double54 = org.apache.commons.math.stat.StatUtils.sum(doubleArray51);
        double[] doubleArray58 = new double[] { (-1L), 0, 10L };
        double double61 = org.apache.commons.math.stat.StatUtils.max(doubleArray58, 0, 0);
        double double63 = org.apache.commons.math.stat.StatUtils.variance(doubleArray58, 21.0d);
        double double65 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray51, doubleArray58, 4.605170185988092d);
        double double66 = org.apache.commons.math.stat.StatUtils.mean(doubleArray51);
        double double67 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray51);
        double double69 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray51, 2.2737367544323206E-13d);
        double double70 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray36, doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4.641588833612779d + "'", double15 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.605170185988092d + "'", double16 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 27.0d + "'", double17 == 27.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-4.0d) + "'", double18 == (-4.0d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 7.0d + "'", double23 == 7.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-12.0d) + "'", double24 == (-12.0d));
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 101.0d + "'", double32 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 101.0d + "'", double40 == 101.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 37.0d + "'", double42 == 37.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 10.0d + "'", double44 == 10.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 101.0d + "'", double45 == 101.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.0d) + "'", double47 == (-0.0d));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 7.0d + "'", double52 == 7.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 4.641588833612779d + "'", double53 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 21.0d + "'", double54 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 37.0d + "'", double63 == 37.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 127.00000000000001d + "'", double65 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 7.0d + "'", double66 == 7.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 4.641588833612779d + "'", double67 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-4.0d) + "'", double70 == (-4.0d));
    }

    @Test
    public void test1863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1863");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.variance(doubleArray18);
        double[] doubleArray27 = new double[] { (-1L), 0, 10L };
        double double30 = org.apache.commons.math.stat.StatUtils.max(doubleArray27, 0, 0);
        double double31 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray27);
        double[] doubleArray35 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double36 = org.apache.commons.math.stat.StatUtils.mean(doubleArray35);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35);
        double double38 = org.apache.commons.math.stat.StatUtils.sum(doubleArray35);
        double double39 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray27, doubleArray35);
        double double40 = org.apache.commons.math.stat.StatUtils.max(doubleArray27);
        double double42 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray18, doubleArray27, 27.0d);
        double double43 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray27);
        double double44 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double double45 = org.apache.commons.math.stat.StatUtils.sum(doubleArray27);
        double double46 = org.apache.commons.math.stat.StatUtils.sum(doubleArray27);
        // The following exception was thrown during execution in test generation
        try {
            double double49 = org.apache.commons.math.stat.StatUtils.min(doubleArray27, (int) (byte) 1, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 27.0d + "'", double23 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 101.0d + "'", double31 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 7.0d + "'", double36 == 7.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 21.0d + "'", double38 == 21.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-4.0d) + "'", double39 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 10.0d + "'", double40 == 10.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 127.0d + "'", double42 == 127.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 3.0d + "'", double44 == 3.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 9.0d + "'", double45 == 9.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 9.0d + "'", double46 == 9.0d);
    }

    @Test
    public void test1864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1864");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double28 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12, (int) (short) 1, (int) (short) 0);
        double double29 = org.apache.commons.math.stat.StatUtils.product(doubleArray12);
        double double30 = org.apache.commons.math.stat.StatUtils.max(doubleArray12);
        double double31 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray12);
        double[] doubleArray35 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double36 = org.apache.commons.math.stat.StatUtils.mean(doubleArray35);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35);
        double double38 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray35);
        double double39 = org.apache.commons.math.stat.StatUtils.max(doubleArray35);
        double double40 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35);
        double double41 = org.apache.commons.math.stat.StatUtils.mean(doubleArray35);
        double double42 = org.apache.commons.math.stat.StatUtils.max(doubleArray35);
        double double44 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray35, 1237.7d);
        double double45 = org.apache.commons.math.stat.StatUtils.variance(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 100.0d + "'", double8 == 100.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-0.0d) + "'", double29 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.0d + "'", double31 == 4.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 7.0d + "'", double36 == 7.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 4.605170185988092d + "'", double38 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 10.0d + "'", double39 == 10.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 4.641588833612779d + "'", double40 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 7.0d + "'", double41 == 7.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 10.0d + "'", double42 == 10.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-4.6566128730773926E-10d) + "'", double44 == (-4.6566128730773926E-10d));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 27.0d + "'", double45 == 27.0d);
    }

    @Test
    public void test1865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1865");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        double double28 = org.apache.commons.math.stat.StatUtils.max(doubleArray25, 0, 0);
        double double29 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray25);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        double double36 = org.apache.commons.math.stat.StatUtils.max(doubleArray33, 0, 0);
        double double37 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray33);
        double double39 = org.apache.commons.math.stat.StatUtils.variance(doubleArray33, (double) 10);
        double double40 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray25, doubleArray33);
        double double42 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray25, 100.0d);
        double double43 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double45 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 3.0d);
        double double46 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double47 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 101.0d + "'", double29 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 101.0d + "'", double37 == 101.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 37.0d + "'", double39 == 37.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 127.0d + "'", double42 == 127.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4.641588833612779d + "'", double43 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 27.0d + "'", double45 == 27.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 27.0d + "'", double46 == 27.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
    }

    @Test
    public void test1866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1866");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (-1L), 0, 10L };
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray10, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, 21.0d);
        double double17 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, 4.605170185988092d);
        double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double19 = org.apache.commons.math.stat.StatUtils.max(doubleArray10);
        double double20 = org.apache.commons.math.stat.StatUtils.sum(doubleArray10);
        double[] doubleArray24 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double25 = org.apache.commons.math.stat.StatUtils.mean(doubleArray24);
        double double26 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray24);
        double double27 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray24);
        double double28 = org.apache.commons.math.stat.StatUtils.max(doubleArray24);
        double double31 = org.apache.commons.math.stat.StatUtils.sum(doubleArray24, (int) (short) 1, 0);
        double double34 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray24, (int) (short) 0, (int) (byte) 0);
        double double36 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray10, doubleArray24, (double) '#');
        double double38 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray24, 21.0d);
        double double42 = org.apache.commons.math.stat.StatUtils.variance(doubleArray24, 127.00000000000001d, 0, 0);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 37.0d + "'", double15 == 37.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 127.00000000000001d + "'", double17 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 3.0d + "'", double18 == 3.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 9.0d + "'", double20 == 9.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 7.0d + "'", double25 == 7.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 4.641588833612779d + "'", double26 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 4.605170185988092d + "'", double27 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 10.0d + "'", double28 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 127.0d + "'", double36 == 127.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
    }

    @Test
    public void test1867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1867");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) (byte) 100);
        double double11 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 10.000000000000002d);
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 27.0d + "'", double11 == 27.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
    }

    @Test
    public void test1868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1868");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray20, (double) 100.0f);
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double28 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double double29 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double30 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray27);
        double double31 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray20, doubleArray27);
        double[] doubleArray35 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double36 = org.apache.commons.math.stat.StatUtils.mean(doubleArray35);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35);
        double double38 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray20, doubleArray35);
        double double39 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray20);
        // The following exception was thrown during execution in test generation
        try {
            double double42 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray20, (int) '#', 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 7.0d + "'", double28 == 7.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4.641588833612779d + "'", double29 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 4.605170185988092d + "'", double30 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 7.0d + "'", double36 == 7.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-4.0d) + "'", double39 == (-4.0d));
    }

    @Test
    public void test1869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1869");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double14 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double16 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray12);
        double[] doubleArray20 = new double[] { (-1L), 0, 10L };
        double double23 = org.apache.commons.math.stat.StatUtils.max(doubleArray20, 0, 0);
        double double24 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray20);
        double[] doubleArray28 = new double[] { (-1L), 0, 10L };
        double double31 = org.apache.commons.math.stat.StatUtils.max(doubleArray28, 0, 0);
        double double32 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray28);
        double double34 = org.apache.commons.math.stat.StatUtils.variance(doubleArray28, (double) 10);
        double double35 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray20, doubleArray28);
        double double36 = org.apache.commons.math.stat.StatUtils.variance(doubleArray20);
        double double38 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray12, doubleArray20, 3.0d);
        double double39 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray12);
        double double41 = org.apache.commons.math.stat.StatUtils.variance(doubleArray12, 126.99999999999999d);
        double double42 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray12);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 21.0d + "'", double7 == 21.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4.641588833612779d + "'", double14 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 21.0d + "'", double15 == 21.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.641588833612779d + "'", double16 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 101.0d + "'", double24 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 101.0d + "'", double32 == 101.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 37.0d + "'", double34 == 37.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 37.0d + "'", double36 == 37.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 127.0d + "'", double38 == 127.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 4.605170185988092d + "'", double39 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 27.0d + "'", double41 == 27.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
    }

    @Test
    public void test1870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1870");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, 7.0d);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double14 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray12);
        double double16 = org.apache.commons.math.stat.StatUtils.variance(doubleArray12);
        double double17 = org.apache.commons.math.stat.StatUtils.product(doubleArray12);
        double[] doubleArray21 = new double[] { (-1L), 0, 10L };
        double double24 = org.apache.commons.math.stat.StatUtils.max(doubleArray21, 0, 0);
        double double25 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray21);
        double[] doubleArray29 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double30 = org.apache.commons.math.stat.StatUtils.mean(doubleArray29);
        double double31 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray29);
        double double32 = org.apache.commons.math.stat.StatUtils.sum(doubleArray29);
        double double33 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray21, doubleArray29);
        double double34 = org.apache.commons.math.stat.StatUtils.sum(doubleArray21);
        double double37 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray21, (int) (short) 1, (int) (short) 0);
        double double38 = org.apache.commons.math.stat.StatUtils.product(doubleArray21);
        double double39 = org.apache.commons.math.stat.StatUtils.max(doubleArray21);
        double double40 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray21);
        double double42 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) '4');
        double double43 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray12);
        double double44 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray12);
        double[] doubleArray48 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double49 = org.apache.commons.math.stat.StatUtils.mean(doubleArray48);
        double double50 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray48);
        double double51 = org.apache.commons.math.stat.StatUtils.sum(doubleArray48);
        double[] doubleArray55 = new double[] { (-1L), 0, 10L };
        double double58 = org.apache.commons.math.stat.StatUtils.max(doubleArray55, 0, 0);
        double double60 = org.apache.commons.math.stat.StatUtils.variance(doubleArray55, 21.0d);
        double double62 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray48, doubleArray55, 4.605170185988092d);
        double double63 = org.apache.commons.math.stat.StatUtils.mean(doubleArray55);
        double double64 = org.apache.commons.math.stat.StatUtils.max(doubleArray55);
        double double65 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray55);
        double double67 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray55, 27.000000000000004d);
        double double69 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray55, 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4.641588833612779d + "'", double14 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4.605170185988092d + "'", double15 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 27.0d + "'", double16 == 27.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 100.0d + "'", double17 == 100.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 101.0d + "'", double25 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 7.0d + "'", double30 == 7.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.641588833612779d + "'", double31 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 21.0d + "'", double32 == 21.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-4.0d) + "'", double33 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 9.0d + "'", double34 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-0.0d) + "'", double38 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 10.0d + "'", double39 == 10.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 4.0d + "'", double40 == 4.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 10.0d + "'", double42 == 10.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4.641588833612779d + "'", double43 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 7.0d + "'", double49 == 7.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4.641588833612779d + "'", double50 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 21.0d + "'", double51 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 37.0d + "'", double60 == 37.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 127.00000000000001d + "'", double62 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 3.0d + "'", double63 == 3.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 10.0d + "'", double64 == 10.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 101.0d + "'", double65 == 101.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-0.9199999999999999d) + "'", double67 == (-0.9199999999999999d));
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 127.0d + "'", double69 == 127.0d);
    }

    @Test
    public void test1871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1871");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double11 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double13 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 100.0f);
        double[] doubleArray17 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray17);
        double double19 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray17);
        double double20 = org.apache.commons.math.stat.StatUtils.sum(doubleArray17);
        double[] doubleArray24 = new double[] { (-1L), 0, 10L };
        double double27 = org.apache.commons.math.stat.StatUtils.max(doubleArray24, 0, 0);
        double double29 = org.apache.commons.math.stat.StatUtils.variance(doubleArray24, 21.0d);
        double double31 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray17, doubleArray24, 4.605170185988092d);
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray24);
        double double33 = org.apache.commons.math.stat.StatUtils.max(doubleArray24);
        double double34 = org.apache.commons.math.stat.StatUtils.sum(doubleArray24);
        double[] doubleArray38 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double39 = org.apache.commons.math.stat.StatUtils.mean(doubleArray38);
        double double40 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray38);
        double double41 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray38);
        double double42 = org.apache.commons.math.stat.StatUtils.max(doubleArray38);
        double double45 = org.apache.commons.math.stat.StatUtils.sum(doubleArray38, (int) (short) 1, 0);
        double double48 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray38, (int) (short) 0, (int) (byte) 0);
        double double50 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray24, doubleArray38, (double) '#');
        double double51 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray24);
        double[] doubleArray55 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double56 = org.apache.commons.math.stat.StatUtils.mean(doubleArray55);
        double double58 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray55, (double) 100.0f);
        double[] doubleArray62 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double63 = org.apache.commons.math.stat.StatUtils.mean(doubleArray62);
        double double64 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray62);
        double double65 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray62);
        double double66 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray55, doubleArray62);
        double double67 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray24, doubleArray55);
        double double69 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray55, 2.302585092994046d);
        double double71 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray55, 1.0d);
        double double72 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray55);
        double double73 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 21.0d + "'", double7 == 21.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 201.0d + "'", double9 == 201.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 7.0d + "'", double10 == 7.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 4.605170185988092d + "'", double11 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 27.0d + "'", double13 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 7.0d + "'", double18 == 7.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4.641588833612779d + "'", double19 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 21.0d + "'", double20 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 37.0d + "'", double29 == 37.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 127.00000000000001d + "'", double31 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 3.0d + "'", double32 == 3.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 10.0d + "'", double33 == 10.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 9.0d + "'", double34 == 9.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 7.0d + "'", double39 == 7.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 4.641588833612779d + "'", double40 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 4.605170185988092d + "'", double41 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 10.0d + "'", double42 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 127.0d + "'", double50 == 127.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 101.0d + "'", double51 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 7.0d + "'", double56 == 7.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 10.0d + "'", double58 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 7.0d + "'", double63 == 7.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 4.641588833612779d + "'", double64 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 4.605170185988092d + "'", double65 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-12.0d) + "'", double67 == (-12.0d));
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 4.605170185988092d + "'", double73 == 4.605170185988092d);
    }

    @Test
    public void test1872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1872");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) 10);
        double double18 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double[] doubleArray23 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double24 = org.apache.commons.math.stat.StatUtils.mean(doubleArray23);
        double double25 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray23);
        double double26 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray23);
        double double27 = org.apache.commons.math.stat.StatUtils.variance(doubleArray23);
        double double28 = org.apache.commons.math.stat.StatUtils.min(doubleArray23);
        double double29 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray23);
        // The following exception was thrown during execution in test generation
        try {
            double double32 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, (int) (short) -1, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 37.0d + "'", double17 == 37.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 37.0d + "'", double19 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 7.0d + "'", double24 == 7.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 4.641588833612779d + "'", double25 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 4.605170185988092d + "'", double26 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 27.0d + "'", double27 == 27.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-12.0d) + "'", double29 == (-12.0d));
    }

    @Test
    public void test1873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1873");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) (byte) 100);
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double double15 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13);
        double double16 = org.apache.commons.math.stat.StatUtils.sum(doubleArray13);
        double double17 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13);
        double[] doubleArray21 = new double[] { (-1L), 0, 10L };
        double double24 = org.apache.commons.math.stat.StatUtils.max(doubleArray21, 0, 0);
        double double25 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray21);
        double[] doubleArray29 = new double[] { (-1L), 0, 10L };
        double double32 = org.apache.commons.math.stat.StatUtils.max(doubleArray29, 0, 0);
        double double33 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray29);
        double double35 = org.apache.commons.math.stat.StatUtils.variance(doubleArray29, (double) 10);
        double double36 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray21, doubleArray29);
        double double37 = org.apache.commons.math.stat.StatUtils.variance(doubleArray21);
        double double39 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray13, doubleArray21, 3.0d);
        double double40 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray21);
        double double41 = org.apache.commons.math.stat.StatUtils.product(doubleArray21);
        double[] doubleArray45 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double46 = org.apache.commons.math.stat.StatUtils.mean(doubleArray45);
        double double47 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray45);
        double double48 = org.apache.commons.math.stat.StatUtils.sum(doubleArray45);
        double double49 = org.apache.commons.math.stat.StatUtils.sum(doubleArray45);
        double double50 = org.apache.commons.math.stat.StatUtils.sum(doubleArray45);
        double double51 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray45);
        double double52 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray21, doubleArray45);
        double double53 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray45);
        double double54 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray45);
        double double56 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) (-1.0f));
        double double57 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4.641588833612779d + "'", double15 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 21.0d + "'", double16 == 21.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 4.641588833612779d + "'", double17 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 101.0d + "'", double25 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 101.0d + "'", double33 == 101.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 37.0d + "'", double35 == 37.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 37.0d + "'", double37 == 37.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 127.0d + "'", double39 == 127.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-0.0d) + "'", double41 == (-0.0d));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 7.0d + "'", double46 == 7.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 4.641588833612779d + "'", double47 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 21.0d + "'", double48 == 21.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 21.0d + "'", double49 == 21.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 21.0d + "'", double50 == 21.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 201.0d + "'", double51 == 201.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-12.0d) + "'", double52 == (-12.0d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 4.605170185988092d + "'", double53 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 27.0d + "'", double56 == 27.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
    }

    @Test
    public void test1874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1874");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double24 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double[] doubleArray28 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double29 = org.apache.commons.math.stat.StatUtils.mean(doubleArray28);
        double double30 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray28);
        double double31 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray28);
        double double33 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray28);
        double double34 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28);
        double double37 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28, (int) (short) 1, 0);
        double double38 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray18, doubleArray28);
        double double40 = org.apache.commons.math.stat.StatUtils.variance(doubleArray28, 1.7200000000000006d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.641588833612779d + "'", double23 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 7.0d + "'", double24 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 7.0d + "'", double29 == 7.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 4.641588833612779d + "'", double30 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.605170185988092d + "'", double31 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4.641588833612779d + "'", double33 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4.605170185988092d + "'", double34 == 4.605170185988092d);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 27.000000000000007d + "'", double40 == 27.000000000000007d);
    }

    @Test
    public void test1875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1875");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double24 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3, 0, 0);
        double[] doubleArray28 = new double[] { (-1L), 0, 10L };
        double double31 = org.apache.commons.math.stat.StatUtils.max(doubleArray28, 0, 0);
        double double32 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray28);
        double[] doubleArray36 = new double[] { (-1L), 0, 10L };
        double double39 = org.apache.commons.math.stat.StatUtils.max(doubleArray36, 0, 0);
        double double40 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray36);
        double double42 = org.apache.commons.math.stat.StatUtils.variance(doubleArray36, (double) 10);
        double double43 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray28, doubleArray36);
        double double44 = org.apache.commons.math.stat.StatUtils.variance(doubleArray28);
        double double45 = org.apache.commons.math.stat.StatUtils.mean(doubleArray28);
        double double48 = org.apache.commons.math.stat.StatUtils.max(doubleArray28, 0, 0);
        double double49 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray28);
        double double51 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray28, (double) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            double double54 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, (int) 'a', (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 101.0d + "'", double32 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 101.0d + "'", double40 == 101.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 37.0d + "'", double42 == 37.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 37.0d + "'", double44 == 37.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 3.0d + "'", double45 == 3.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 101.0d + "'", double49 == 101.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 127.0d + "'", double51 == 127.0d);
    }

    @Test
    public void test1876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1876");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.max(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.max(doubleArray11);
        double[] doubleArray21 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double22 = org.apache.commons.math.stat.StatUtils.mean(doubleArray21);
        double double24 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray21, (double) 100.0f);
        double double25 = org.apache.commons.math.stat.StatUtils.mean(doubleArray21);
        double[] doubleArray29 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double30 = org.apache.commons.math.stat.StatUtils.mean(doubleArray29);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray29, 27.0d);
        double double34 = org.apache.commons.math.stat.StatUtils.variance(doubleArray29, (double) (byte) 10);
        double double35 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray21, doubleArray29);
        double double36 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray29);
        double double37 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double[] doubleArray41 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double42 = org.apache.commons.math.stat.StatUtils.mean(doubleArray41);
        double double43 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray41);
        double double44 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray41);
        double double45 = org.apache.commons.math.stat.StatUtils.variance(doubleArray41);
        double[] doubleArray49 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double50 = org.apache.commons.math.stat.StatUtils.mean(doubleArray49);
        double double51 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray41, doubleArray49);
        double double54 = org.apache.commons.math.stat.StatUtils.mean(doubleArray49, 1, (int) (byte) 1);
        double double55 = org.apache.commons.math.stat.StatUtils.variance(doubleArray49);
        double double56 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray11, doubleArray49);
        double double59 = org.apache.commons.math.stat.StatUtils.product(doubleArray49, 0, (int) (short) 0);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 7.0d + "'", double22 == 7.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 10.0d + "'", double24 == 10.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 7.0d + "'", double25 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 7.0d + "'", double30 == 7.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 27.0d + "'", double34 == 27.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 201.0d + "'", double37 == 201.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 7.0d + "'", double42 == 7.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4.641588833612779d + "'", double43 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 4.605170185988092d + "'", double44 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 27.0d + "'", double45 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 7.0d + "'", double50 == 7.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 10.0d + "'", double54 == 10.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 27.0d + "'", double55 == 27.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
    }

    @Test
    public void test1877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1877");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double[] doubleArray19 = new double[] { (-1L), 0, 10L };
        double double22 = org.apache.commons.math.stat.StatUtils.max(doubleArray19, 0, 0);
        double double23 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray19);
        double double25 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) 10);
        double double26 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11);
        double double29 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, 3.0d);
        double double30 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double31 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double34 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3, (int) (short) 1, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 4.641588833612779d + "'", double7 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 101.0d + "'", double23 == 101.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 37.0d + "'", double25 == 37.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 37.0d + "'", double27 == 37.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 127.0d + "'", double29 == 127.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 4.605170185988092d + "'", double30 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 10.0d + "'", double31 == 10.0d);
    }

    @Test
    public void test1878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1878");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (-1L), 0, 10L };
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray10, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, 21.0d);
        double double17 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, 4.605170185988092d);
        double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double19 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double23 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray10, (int) (byte) 1, (int) (byte) 1, 3.5200000000000005d);
        double[] doubleArray27 = new double[] { (-1L), 0, 10L };
        double double30 = org.apache.commons.math.stat.StatUtils.max(doubleArray27, 0, 0);
        double double31 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray27);
        double[] doubleArray35 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double36 = org.apache.commons.math.stat.StatUtils.mean(doubleArray35);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35);
        double double38 = org.apache.commons.math.stat.StatUtils.sum(doubleArray35);
        double double39 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray27, doubleArray35);
        double double40 = org.apache.commons.math.stat.StatUtils.max(doubleArray35);
        double double41 = org.apache.commons.math.stat.StatUtils.max(doubleArray35);
        double[] doubleArray45 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double46 = org.apache.commons.math.stat.StatUtils.mean(doubleArray45);
        double double48 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray45, (double) 100.0f);
        double double49 = org.apache.commons.math.stat.StatUtils.mean(doubleArray45);
        double[] doubleArray53 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double54 = org.apache.commons.math.stat.StatUtils.mean(doubleArray53);
        double double56 = org.apache.commons.math.stat.StatUtils.variance(doubleArray53, 27.0d);
        double double58 = org.apache.commons.math.stat.StatUtils.variance(doubleArray53, (double) (byte) 10);
        double double59 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray45, doubleArray53);
        double double60 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray35, doubleArray53);
        double double62 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray10, doubleArray53, (-4.0d));
        double double63 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray10);
        double double64 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double65 = org.apache.commons.math.stat.StatUtils.max(doubleArray10);
        // The following exception was thrown during execution in test generation
        try {
            double double68 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10, (int) (short) -1, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 37.0d + "'", double15 == 37.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 127.00000000000001d + "'", double17 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 3.0d + "'", double18 == 3.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 101.0d + "'", double31 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 7.0d + "'", double36 == 7.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 21.0d + "'", double38 == 21.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-4.0d) + "'", double39 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 10.0d + "'", double40 == 10.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 10.0d + "'", double41 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 7.0d + "'", double46 == 7.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 10.0d + "'", double48 == 10.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 7.0d + "'", double49 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 7.0d + "'", double54 == 7.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 27.0d + "'", double56 == 27.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 27.0d + "'", double58 == 27.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 127.0d + "'", double62 == 127.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 101.0d + "'", double63 == 101.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 10.0d + "'", double65 == 10.0d);
    }

    @Test
    public void test1879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1879");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double11 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3, (int) (byte) 0, (int) (byte) 1);
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double[] doubleArray17 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray17);
        double double20 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray17, (double) 100.0f);
        double[] doubleArray24 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double25 = org.apache.commons.math.stat.StatUtils.mean(doubleArray24);
        double double26 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray24);
        double double27 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray24);
        double double28 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray17, doubleArray24);
        double[] doubleArray32 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double33 = org.apache.commons.math.stat.StatUtils.mean(doubleArray32);
        double double34 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray32);
        double double35 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray17, doubleArray32);
        double double36 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray32);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        double double43 = org.apache.commons.math.stat.StatUtils.max(doubleArray40, 0, 0);
        double double44 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray40);
        double[] doubleArray48 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double49 = org.apache.commons.math.stat.StatUtils.mean(doubleArray48);
        double double50 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray48);
        double double51 = org.apache.commons.math.stat.StatUtils.sum(doubleArray48);
        double double52 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray40, doubleArray48);
        double double53 = org.apache.commons.math.stat.StatUtils.sum(doubleArray40);
        double double56 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray40, (int) (short) 1, (int) (short) 0);
        double double57 = org.apache.commons.math.stat.StatUtils.product(doubleArray40);
        double double58 = org.apache.commons.math.stat.StatUtils.max(doubleArray40);
        double double59 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray32, doubleArray40);
        double double60 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray32);
        double double63 = org.apache.commons.math.stat.StatUtils.max(doubleArray32, 0, 0);
        double double64 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray32);
        double double65 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray32);
        double double67 = org.apache.commons.math.stat.StatUtils.variance(doubleArray32, 27.000000000000004d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 4.641588833612779d + "'", double8 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.000000000000002d + "'", double11 == 10.000000000000002d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 10.0d + "'", double13 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 7.0d + "'", double18 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 10.0d + "'", double20 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 7.0d + "'", double25 == 7.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 4.641588833612779d + "'", double26 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 4.605170185988092d + "'", double27 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 7.0d + "'", double33 == 7.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4.641588833612779d + "'", double34 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 4.641588833612779d + "'", double36 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 101.0d + "'", double44 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 7.0d + "'", double49 == 7.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4.641588833612779d + "'", double50 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 21.0d + "'", double51 == 21.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-4.0d) + "'", double52 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 9.0d + "'", double53 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.0d) + "'", double57 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 10.0d + "'", double58 == 10.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 12.0d + "'", double59 == 12.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 4.641588833612779d + "'", double64 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 201.0d + "'", double65 == 201.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 26.999999999999886d + "'", double67 == 26.999999999999886d);
    }

    @Test
    public void test1880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1880");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (-1L), 0, 10L };
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray10, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, 21.0d);
        double double17 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, 4.605170185988092d);
        double double18 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray10);
        double double19 = org.apache.commons.math.stat.StatUtils.product(doubleArray10);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 37.0d + "'", double15 == 37.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 127.00000000000001d + "'", double17 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 101.0d + "'", double18 == 101.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.0d) + "'", double19 == (-0.0d));
    }

    @Test
    public void test1881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1881");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double[] doubleArray17 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray17);
        double double19 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray17);
        double double20 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray17);
        double double21 = org.apache.commons.math.stat.StatUtils.max(doubleArray17);
        double double24 = org.apache.commons.math.stat.StatUtils.sum(doubleArray17, (int) (short) 1, 0);
        double double25 = org.apache.commons.math.stat.StatUtils.mean(doubleArray17);
        double double26 = org.apache.commons.math.stat.StatUtils.mean(doubleArray17);
        double double28 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray11, doubleArray17, (double) (-1.0f));
        double[] doubleArray32 = new double[] { (-1L), 0, 10L };
        double double35 = org.apache.commons.math.stat.StatUtils.max(doubleArray32, 0, 0);
        double double36 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray32);
        double double37 = org.apache.commons.math.stat.StatUtils.min(doubleArray32);
        double double38 = org.apache.commons.math.stat.StatUtils.variance(doubleArray32);
        double double40 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray11, doubleArray32, (double) (byte) 1);
        double[] doubleArray44 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double45 = org.apache.commons.math.stat.StatUtils.mean(doubleArray44);
        double double46 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray44);
        double double47 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray44);
        double double48 = org.apache.commons.math.stat.StatUtils.variance(doubleArray44);
        double double49 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray44);
        double double50 = org.apache.commons.math.stat.StatUtils.variance(doubleArray44);
        double double52 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray11, doubleArray44, (-0.9199999999999999d));
        double[] doubleArray56 = new double[] { (-1L), 0, 10L };
        double double59 = org.apache.commons.math.stat.StatUtils.max(doubleArray56, 0, 0);
        double double60 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray56);
        double double62 = org.apache.commons.math.stat.StatUtils.variance(doubleArray56, (double) 10);
        double[] doubleArray66 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double67 = org.apache.commons.math.stat.StatUtils.mean(doubleArray66);
        double double68 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray66);
        double double69 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray66);
        double double70 = org.apache.commons.math.stat.StatUtils.variance(doubleArray66);
        double double71 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray56, doubleArray66);
        double double72 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray56);
        double double73 = org.apache.commons.math.stat.StatUtils.variance(doubleArray56);
        double double74 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray56);
        double double75 = org.apache.commons.math.stat.StatUtils.max(doubleArray56);
        double double76 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray44, doubleArray56);
        java.lang.Class<?> wildcardClass77 = doubleArray56.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 7.0d + "'", double18 == 7.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4.641588833612779d + "'", double19 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.605170185988092d + "'", double20 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 7.0d + "'", double25 == 7.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 7.0d + "'", double26 == 7.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 101.0d + "'", double36 == 101.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-1.0d) + "'", double37 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 37.0d + "'", double38 == 37.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 127.0d + "'", double40 == 127.0d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 7.0d + "'", double45 == 7.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 4.641588833612779d + "'", double46 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 4.605170185988092d + "'", double47 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 27.0d + "'", double48 == 27.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 4.641588833612779d + "'", double49 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 27.0d + "'", double50 == 27.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-2.220446049250313E-16d) + "'", double52 == (-2.220446049250313E-16d));
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 101.0d + "'", double60 == 101.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 37.0d + "'", double62 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 7.0d + "'", double67 == 7.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 4.641588833612779d + "'", double68 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 4.605170185988092d + "'", double69 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 27.0d + "'", double70 == 27.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-4.0d) + "'", double71 == (-4.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 37.0d + "'", double73 == 37.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double74));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 10.0d + "'", double75 == 10.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 4.0d + "'", double76 == 4.0d);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1882");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, 50.0d);
        double double11 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double12 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-1.0d) + "'", double8 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + (-1.0d) + "'", double11 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-0.0d) + "'", double12 == (-0.0d));
    }

    @Test
    public void test1883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1883");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double[] doubleArray19 = new double[] { (-1L), 0, 10L };
        double double22 = org.apache.commons.math.stat.StatUtils.max(doubleArray19, 0, 0);
        double double23 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray19);
        double double25 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) 10);
        double double26 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11);
        double double29 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, 3.0d);
        double double30 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double31 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double34 = org.apache.commons.math.stat.StatUtils.min(doubleArray3, (int) (short) 1, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 4.641588833612779d + "'", double7 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 101.0d + "'", double23 == 101.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 37.0d + "'", double25 == 37.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 37.0d + "'", double27 == 37.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 127.0d + "'", double29 == 127.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 27.0d + "'", double30 == 27.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.605170185988092d + "'", double31 == 4.605170185988092d);
    }

    @Test
    public void test1884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1884");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) (byte) 100);
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double double15 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13);
        double double16 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray13);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double19 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray13, 37.0d);
        double double20 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray13);
        double double23 = org.apache.commons.math.stat.StatUtils.max(doubleArray13, (int) (byte) 0, (int) (byte) 1);
        double[] doubleArray27 = new double[] { (-1L), 0, 10L };
        double double30 = org.apache.commons.math.stat.StatUtils.max(doubleArray27, 0, 0);
        double double31 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray27);
        double[] doubleArray35 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double36 = org.apache.commons.math.stat.StatUtils.mean(doubleArray35);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35);
        double double38 = org.apache.commons.math.stat.StatUtils.sum(doubleArray35);
        double double39 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray27, doubleArray35);
        double double40 = org.apache.commons.math.stat.StatUtils.max(doubleArray27);
        double double41 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray27);
        double double42 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray27);
        double[] doubleArray46 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double47 = org.apache.commons.math.stat.StatUtils.mean(doubleArray46);
        double double48 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray46);
        double double49 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray46);
        double double50 = org.apache.commons.math.stat.StatUtils.max(doubleArray46);
        double double53 = org.apache.commons.math.stat.StatUtils.sum(doubleArray46, (int) (short) 1, 0);
        double double56 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray46, (int) (short) 0, (int) (byte) 0);
        double double59 = org.apache.commons.math.stat.StatUtils.product(doubleArray46, 0, 0);
        double double62 = org.apache.commons.math.stat.StatUtils.min(doubleArray46, (int) (byte) 0, 0);
        double double63 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray27, doubleArray46);
        double double65 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray13, doubleArray46, 127.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double68 = org.apache.commons.math.stat.StatUtils.max(doubleArray13, 0, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4.641588833612779d + "'", double15 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.605170185988092d + "'", double16 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 27.0d + "'", double17 == 27.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.605170185988092d + "'", double20 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 101.0d + "'", double31 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 7.0d + "'", double36 == 7.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 21.0d + "'", double38 == 21.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-4.0d) + "'", double39 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 10.0d + "'", double40 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 7.0d + "'", double47 == 7.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 4.641588833612779d + "'", double48 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 4.605170185988092d + "'", double49 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-4.0d) + "'", double63 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
    }

    @Test
    public void test1885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1885");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double3 = org.apache.commons.math.stat.StatUtils.variance(doubleArray0, 100, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1886");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (-1L), 0, 10L };
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray10, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, 21.0d);
        double double17 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, 4.605170185988092d);
        double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double19 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double23 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray10, (int) (byte) 1, (int) (byte) 1, 3.5200000000000005d);
        double[] doubleArray27 = new double[] { (-1L), 0, 10L };
        double double30 = org.apache.commons.math.stat.StatUtils.max(doubleArray27, 0, 0);
        double double31 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray27);
        double[] doubleArray35 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double36 = org.apache.commons.math.stat.StatUtils.mean(doubleArray35);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35);
        double double38 = org.apache.commons.math.stat.StatUtils.sum(doubleArray35);
        double double39 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray27, doubleArray35);
        double double40 = org.apache.commons.math.stat.StatUtils.max(doubleArray35);
        double double41 = org.apache.commons.math.stat.StatUtils.max(doubleArray35);
        double[] doubleArray45 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double46 = org.apache.commons.math.stat.StatUtils.mean(doubleArray45);
        double double48 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray45, (double) 100.0f);
        double double49 = org.apache.commons.math.stat.StatUtils.mean(doubleArray45);
        double[] doubleArray53 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double54 = org.apache.commons.math.stat.StatUtils.mean(doubleArray53);
        double double56 = org.apache.commons.math.stat.StatUtils.variance(doubleArray53, 27.0d);
        double double58 = org.apache.commons.math.stat.StatUtils.variance(doubleArray53, (double) (byte) 10);
        double double59 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray45, doubleArray53);
        double double60 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray35, doubleArray53);
        double double62 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray10, doubleArray53, (-4.0d));
        // The following exception was thrown during execution in test generation
        try {
            double double65 = org.apache.commons.math.stat.StatUtils.max(doubleArray10, 100, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 37.0d + "'", double15 == 37.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 127.00000000000001d + "'", double17 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 3.0d + "'", double18 == 3.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 101.0d + "'", double31 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 7.0d + "'", double36 == 7.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 21.0d + "'", double38 == 21.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-4.0d) + "'", double39 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 10.0d + "'", double40 == 10.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 10.0d + "'", double41 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 7.0d + "'", double46 == 7.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 10.0d + "'", double48 == 10.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 7.0d + "'", double49 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 7.0d + "'", double54 == 7.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 27.0d + "'", double56 == 27.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 27.0d + "'", double58 == 27.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 127.0d + "'", double62 == 127.0d);
    }

    @Test
    public void test1887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1887");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double11 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 4.641588833612779d + "'", double8 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 7.0d + "'", double9 == 7.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
    }

    @Test
    public void test1888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1888");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double[] doubleArray19 = new double[] { (-1L), 0, 10L };
        double double22 = org.apache.commons.math.stat.StatUtils.max(doubleArray19, 0, 0);
        double double23 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray19);
        double double25 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) 10);
        double double26 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11);
        double double29 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, 3.0d);
        double double30 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double31 = org.apache.commons.math.stat.StatUtils.product(doubleArray11);
        double[] doubleArray35 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double36 = org.apache.commons.math.stat.StatUtils.mean(doubleArray35);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35);
        double double38 = org.apache.commons.math.stat.StatUtils.sum(doubleArray35);
        double double39 = org.apache.commons.math.stat.StatUtils.sum(doubleArray35);
        double double40 = org.apache.commons.math.stat.StatUtils.sum(doubleArray35);
        double double41 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray35);
        double double42 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray35);
        double double43 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray35);
        java.lang.Class<?> wildcardClass44 = doubleArray35.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 4.641588833612779d + "'", double7 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 101.0d + "'", double23 == 101.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 37.0d + "'", double25 == 37.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 37.0d + "'", double27 == 37.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 127.0d + "'", double29 == 127.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.0d) + "'", double31 == (-0.0d));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 7.0d + "'", double36 == 7.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 21.0d + "'", double38 == 21.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 21.0d + "'", double39 == 21.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 21.0d + "'", double40 == 21.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 201.0d + "'", double41 == 201.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-12.0d) + "'", double42 == (-12.0d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4.605170185988092d + "'", double43 == 4.605170185988092d);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1889");
        double[] doubleArray5 = new double[] { '#', 10.0f, 'a', 12.0d, 37.0d };
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray5);
        double double7 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray5);
        double double8 = org.apache.commons.math.stat.StatUtils.sum(doubleArray5);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double14 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double16 = org.apache.commons.math.stat.StatUtils.max(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray20, (double) 100.0f);
        double double24 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double[] doubleArray28 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double29 = org.apache.commons.math.stat.StatUtils.mean(doubleArray28);
        double double31 = org.apache.commons.math.stat.StatUtils.variance(doubleArray28, 27.0d);
        double double33 = org.apache.commons.math.stat.StatUtils.variance(doubleArray28, (double) (byte) 10);
        double double34 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray20, doubleArray28);
        double double36 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray12, doubleArray20, (double) (short) 1);
        double double39 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20, 0, (int) (byte) 0);
        double[] doubleArray43 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double44 = org.apache.commons.math.stat.StatUtils.mean(doubleArray43);
        double double45 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray43);
        double double46 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray43);
        double double47 = org.apache.commons.math.stat.StatUtils.variance(doubleArray43);
        double double48 = org.apache.commons.math.stat.StatUtils.min(doubleArray43);
        double[] doubleArray52 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double53 = org.apache.commons.math.stat.StatUtils.mean(doubleArray52);
        double double55 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray52, (double) 100.0f);
        double[] doubleArray59 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double60 = org.apache.commons.math.stat.StatUtils.mean(doubleArray59);
        double double61 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray59);
        double double62 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray59);
        double double63 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray52, doubleArray59);
        double double65 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray43, doubleArray52, (-0.9199999999999999d));
        double double66 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray20, doubleArray43);
        // The following exception was thrown during execution in test generation
        try {
            double double67 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray5, doubleArray20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Input arrays must have the same (positive) length.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[35.0, 10.0, 97.0, 12.0, 37.0]");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 191.0d + "'", double6 == 191.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.267451525600872d + "'", double7 == 27.267451525600872d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 191.0d + "'", double8 == 191.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4.641588833612779d + "'", double14 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 21.0d + "'", double15 == 21.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 7.0d + "'", double24 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 7.0d + "'", double29 == 7.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 27.0d + "'", double31 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 27.0d + "'", double33 == 27.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 7.0d + "'", double44 == 7.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 4.641588833612779d + "'", double45 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 4.605170185988092d + "'", double46 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 27.0d + "'", double47 == 27.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 7.0d + "'", double53 == 7.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 10.0d + "'", double55 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 7.0d + "'", double60 == 7.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 4.641588833612779d + "'", double61 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 4.605170185988092d + "'", double62 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-2.220446049250313E-16d) + "'", double65 == (-2.220446049250313E-16d));
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
    }

    @Test
    public void test1890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1890");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double24 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3, 0, 0);
        double[] doubleArray28 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double29 = org.apache.commons.math.stat.StatUtils.mean(doubleArray28);
        double double30 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray28);
        double double31 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray28);
        double double33 = org.apache.commons.math.stat.StatUtils.min(doubleArray28);
        double[] doubleArray37 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double38 = org.apache.commons.math.stat.StatUtils.mean(doubleArray37);
        double double40 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray37, (double) 100.0f);
        double[] doubleArray44 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double45 = org.apache.commons.math.stat.StatUtils.mean(doubleArray44);
        double double46 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray44);
        double double47 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray44);
        double double48 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray37, doubleArray44);
        double[] doubleArray52 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double53 = org.apache.commons.math.stat.StatUtils.mean(doubleArray52);
        double double54 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray52);
        double double55 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray37, doubleArray52);
        double double56 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray52);
        double double57 = org.apache.commons.math.stat.StatUtils.variance(doubleArray52);
        double double58 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray28, doubleArray52);
        double double59 = org.apache.commons.math.stat.StatUtils.min(doubleArray28);
        double double61 = org.apache.commons.math.stat.StatUtils.variance(doubleArray28, (double) '#');
        double double62 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray28);
        // The following exception was thrown during execution in test generation
        try {
            double double65 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 100, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 7.0d + "'", double29 == 7.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 4.641588833612779d + "'", double30 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.605170185988092d + "'", double31 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 7.0d + "'", double38 == 7.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 10.0d + "'", double40 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 7.0d + "'", double45 == 7.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 4.641588833612779d + "'", double46 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 4.605170185988092d + "'", double47 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 7.0d + "'", double53 == 7.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 4.641588833612779d + "'", double54 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 4.641588833612779d + "'", double56 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 27.0d + "'", double57 == 27.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 27.0d + "'", double61 == 27.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
    }

    @Test
    public void test1891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1891");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.max(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.max(doubleArray11);
        double[] doubleArray21 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double22 = org.apache.commons.math.stat.StatUtils.mean(doubleArray21);
        double double23 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray21);
        double double24 = org.apache.commons.math.stat.StatUtils.sum(doubleArray21);
        double[] doubleArray28 = new double[] { (-1L), 0, 10L };
        double double31 = org.apache.commons.math.stat.StatUtils.max(doubleArray28, 0, 0);
        double double33 = org.apache.commons.math.stat.StatUtils.variance(doubleArray28, 21.0d);
        double double35 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray21, doubleArray28, 4.605170185988092d);
        double double36 = org.apache.commons.math.stat.StatUtils.mean(doubleArray28);
        double double37 = org.apache.commons.math.stat.StatUtils.max(doubleArray28);
        double[] doubleArray41 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double42 = org.apache.commons.math.stat.StatUtils.mean(doubleArray41);
        double double43 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray41);
        double double44 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray41);
        double double45 = org.apache.commons.math.stat.StatUtils.variance(doubleArray41);
        double double46 = org.apache.commons.math.stat.StatUtils.min(doubleArray41);
        double[] doubleArray50 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double51 = org.apache.commons.math.stat.StatUtils.mean(doubleArray50);
        double double53 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray50, (double) 100.0f);
        double[] doubleArray57 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double58 = org.apache.commons.math.stat.StatUtils.mean(doubleArray57);
        double double59 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray57);
        double double60 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray57);
        double double61 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray50, doubleArray57);
        double[] doubleArray65 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double66 = org.apache.commons.math.stat.StatUtils.mean(doubleArray65);
        double double67 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray65);
        double double68 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray50, doubleArray65);
        double double69 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray65);
        double double70 = org.apache.commons.math.stat.StatUtils.variance(doubleArray65);
        double double71 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray41, doubleArray65);
        double double72 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray41);
        double double74 = org.apache.commons.math.stat.StatUtils.variance(doubleArray41, 0.0d);
        double double75 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray28, doubleArray41);
        double double76 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray28);
        double double77 = org.apache.commons.math.stat.StatUtils.product(doubleArray28);
        double double78 = org.apache.commons.math.stat.StatUtils.sum(doubleArray28);
        double double79 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray28);
        double double80 = org.apache.commons.math.stat.StatUtils.max(doubleArray11);
        double double81 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 7.0d + "'", double22 == 7.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.641588833612779d + "'", double23 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 21.0d + "'", double24 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 37.0d + "'", double33 == 37.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 127.00000000000001d + "'", double35 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 3.0d + "'", double36 == 3.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 10.0d + "'", double37 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 7.0d + "'", double42 == 7.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4.641588833612779d + "'", double43 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 4.605170185988092d + "'", double44 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 27.0d + "'", double45 == 27.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 7.0d + "'", double51 == 7.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 10.0d + "'", double53 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 7.0d + "'", double58 == 7.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4.641588833612779d + "'", double59 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 4.605170185988092d + "'", double60 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 7.0d + "'", double66 == 7.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 4.641588833612779d + "'", double67 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 4.641588833612779d + "'", double69 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 27.0d + "'", double70 == 27.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 201.0d + "'", double72 == 201.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 27.0d + "'", double74 == 27.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-12.0d) + "'", double75 == (-12.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.0d) + "'", double77 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 9.0d + "'", double78 == 9.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 12.0d + "'", double79 == 12.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 10.0d + "'", double80 == 10.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 4.641588833612779d + "'", double81 == 4.641588833612779d);
    }

    @Test
    public void test1892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1892");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double28 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12, (int) (short) 1, (int) (short) 0);
        double double29 = org.apache.commons.math.stat.StatUtils.product(doubleArray12);
        double double30 = org.apache.commons.math.stat.StatUtils.max(doubleArray12);
        double double31 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray12);
        double[] doubleArray35 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double36 = org.apache.commons.math.stat.StatUtils.mean(doubleArray35);
        double double38 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray35, (double) 100.0f);
        double double39 = org.apache.commons.math.stat.StatUtils.mean(doubleArray35);
        double[] doubleArray43 = new double[] { (-1L), 0, 10L };
        double double46 = org.apache.commons.math.stat.StatUtils.max(doubleArray43, 0, 0);
        double double47 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray43);
        double[] doubleArray51 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double52 = org.apache.commons.math.stat.StatUtils.mean(doubleArray51);
        double double53 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray51);
        double double54 = org.apache.commons.math.stat.StatUtils.sum(doubleArray51);
        double double55 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray43, doubleArray51);
        double double56 = org.apache.commons.math.stat.StatUtils.sum(doubleArray43);
        double double59 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray43, (int) (short) 1, (int) (short) 0);
        double double60 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray35, doubleArray43);
        double double61 = org.apache.commons.math.stat.StatUtils.variance(doubleArray43);
        double double62 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray43);
        double double63 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        double double64 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double65 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 100.0d + "'", double8 == 100.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-0.0d) + "'", double29 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.0d + "'", double31 == 4.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 7.0d + "'", double36 == 7.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 10.0d + "'", double38 == 10.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 7.0d + "'", double39 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 101.0d + "'", double47 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 7.0d + "'", double52 == 7.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 4.641588833612779d + "'", double53 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 21.0d + "'", double54 == 21.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-4.0d) + "'", double55 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 9.0d + "'", double56 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 12.0d + "'", double60 == 12.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 37.0d + "'", double61 == 37.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 12.0d + "'", double62 == 12.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 100.0d + "'", double63 == 100.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 10.0d + "'", double64 == 10.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 4.641588833612779d + "'", double65 == 4.641588833612779d);
    }

    @Test
    public void test1893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1893");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, 27.0d);
        double double16 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) (byte) 10);
        double double17 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        double[] doubleArray22 = new double[] { (-1L), 0, 10L };
        double double25 = org.apache.commons.math.stat.StatUtils.max(doubleArray22, 0, 0);
        double double27 = org.apache.commons.math.stat.StatUtils.variance(doubleArray22, 21.0d);
        double double28 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray22);
        double double30 = org.apache.commons.math.stat.StatUtils.variance(doubleArray22, (-4.0d));
        double double33 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray22, (int) (byte) 0, (int) (byte) 1);
        double[] doubleArray37 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double38 = org.apache.commons.math.stat.StatUtils.mean(doubleArray37);
        double double40 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray37, (double) 100.0f);
        double[] doubleArray44 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double45 = org.apache.commons.math.stat.StatUtils.mean(doubleArray44);
        double double46 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray44);
        double double47 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray44);
        double double48 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray37, doubleArray44);
        double double49 = org.apache.commons.math.stat.StatUtils.variance(doubleArray44);
        double double50 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray44);
        double double52 = org.apache.commons.math.stat.StatUtils.variance(doubleArray44, (double) 10L);
        double double53 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray44);
        double double54 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray22, doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 27.0d + "'", double14 == 27.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 27.0d + "'", double16 == 27.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4.605170185988092d + "'", double18 == 4.605170185988092d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 37.0d + "'", double27 == 37.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 12.0d + "'", double28 == 12.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 37.0d + "'", double30 == 37.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 7.0d + "'", double38 == 7.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 10.0d + "'", double40 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 7.0d + "'", double45 == 7.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 4.641588833612779d + "'", double46 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 4.605170185988092d + "'", double47 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 27.0d + "'", double49 == 27.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4.641588833612779d + "'", double50 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 27.0d + "'", double52 == 27.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 4.605170185988092d + "'", double53 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-12.0d) + "'", double54 == (-12.0d));
    }

    @Test
    public void test1894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1894");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) 10);
        double double18 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.max(doubleArray11);
        double double21 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) 10.0f);
        // The following exception was thrown during execution in test generation
        try {
            double double24 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, (int) 'a', (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 37.0d + "'", double17 == 37.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 37.0d + "'", double21 == 37.0d);
    }

    @Test
    public void test1895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1895");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, 0.0d);
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double double33 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray31);
        double double34 = org.apache.commons.math.stat.StatUtils.sum(doubleArray31);
        double[] doubleArray38 = new double[] { (-1L), 0, 10L };
        double double41 = org.apache.commons.math.stat.StatUtils.max(doubleArray38, 0, 0);
        double double43 = org.apache.commons.math.stat.StatUtils.variance(doubleArray38, 21.0d);
        double double45 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray31, doubleArray38, 4.605170185988092d);
        double double46 = org.apache.commons.math.stat.StatUtils.mean(doubleArray38);
        double double47 = org.apache.commons.math.stat.StatUtils.max(doubleArray38);
        double double48 = org.apache.commons.math.stat.StatUtils.sum(doubleArray38);
        double[] doubleArray52 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double53 = org.apache.commons.math.stat.StatUtils.mean(doubleArray52);
        double double54 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray52);
        double double55 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray52);
        double double56 = org.apache.commons.math.stat.StatUtils.max(doubleArray52);
        double double59 = org.apache.commons.math.stat.StatUtils.sum(doubleArray52, (int) (short) 1, 0);
        double double62 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray52, (int) (short) 0, (int) (byte) 0);
        double double64 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray38, doubleArray52, (double) '#');
        double double65 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray52);
        double[] doubleArray69 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double70 = org.apache.commons.math.stat.StatUtils.mean(doubleArray69);
        double double71 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray69);
        double double72 = org.apache.commons.math.stat.StatUtils.sum(doubleArray69);
        double double73 = org.apache.commons.math.stat.StatUtils.sum(doubleArray69);
        double double74 = org.apache.commons.math.stat.StatUtils.min(doubleArray69);
        double double75 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray69);
        double double76 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray69);
        double[] doubleArray80 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double81 = org.apache.commons.math.stat.StatUtils.mean(doubleArray80);
        double double82 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray80);
        double double83 = org.apache.commons.math.stat.StatUtils.sum(doubleArray80);
        double[] doubleArray87 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double88 = org.apache.commons.math.stat.StatUtils.mean(doubleArray87);
        double double89 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray87);
        double double90 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray87);
        double double91 = org.apache.commons.math.stat.StatUtils.max(doubleArray87);
        double double93 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray80, doubleArray87, (double) '#');
        double double94 = org.apache.commons.math.stat.StatUtils.min(doubleArray80);
        double double95 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray80);
        double double96 = org.apache.commons.math.stat.StatUtils.max(doubleArray80);
        // The following exception was thrown during execution in test generation
        try {
            double double99 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray80, (int) ' ', (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 127.0d + "'", double27 == 127.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 7.0d + "'", double32 == 7.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4.641588833612779d + "'", double33 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 21.0d + "'", double34 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 37.0d + "'", double43 == 37.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 127.00000000000001d + "'", double45 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 3.0d + "'", double46 == 3.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 10.0d + "'", double47 == 10.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 9.0d + "'", double48 == 9.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 7.0d + "'", double53 == 7.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 4.641588833612779d + "'", double54 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 4.605170185988092d + "'", double55 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 10.0d + "'", double56 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 127.0d + "'", double64 == 127.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 7.0d + "'", double70 == 7.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 4.641588833612779d + "'", double71 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 21.0d + "'", double72 == 21.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 21.0d + "'", double73 == 21.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 201.0d + "'", double75 == 201.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 7.0d + "'", double81 == 7.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 4.641588833612779d + "'", double82 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 21.0d + "'", double83 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 7.0d + "'", double88 == 7.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 4.641588833612779d + "'", double89 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 4.605170185988092d + "'", double90 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 10.0d + "'", double91 == 10.0d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.0d + "'", double93 == 0.0d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 1.0d + "'", double94 == 1.0d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 10.0d + "'", double96 == 10.0d);
    }

    @Test
    public void test1896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1896");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double4 = org.apache.commons.math.stat.StatUtils.variance(doubleArray0, 0.0d, (int) '#', 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1897");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        double double28 = org.apache.commons.math.stat.StatUtils.max(doubleArray25, 0, 0);
        double double29 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray25);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        double double36 = org.apache.commons.math.stat.StatUtils.max(doubleArray33, 0, 0);
        double double37 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray33);
        double double39 = org.apache.commons.math.stat.StatUtils.variance(doubleArray33, (double) 10);
        double double40 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray25, doubleArray33);
        double double42 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray25, 100.0d);
        double double43 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double44 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double45 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double48 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (int) (byte) 0, (int) (short) 1);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 101.0d + "'", double29 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 101.0d + "'", double37 == 101.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 37.0d + "'", double39 == 37.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 127.0d + "'", double42 == 127.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 27.0d + "'", double43 == 27.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 21.0d + "'", double44 == 21.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 27.0d + "'", double45 == 27.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
    }

    @Test
    public void test1898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1898");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double17 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double18 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double21 = org.apache.commons.math.stat.StatUtils.min(doubleArray3, (int) (short) 1, (int) (short) 0);
        double double22 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.0d) + "'", double22 == (-0.0d));
    }

    @Test
    public void test1899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1899");
        double[] doubleArray5 = new double[] { '#', 10.0f, 'a', 12.0d, 37.0d };
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray5);
        double double7 = org.apache.commons.math.stat.StatUtils.min(doubleArray5);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray5, 1, 1);
        double double14 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray5, 1, (int) (byte) 0, (double) (short) 10);
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray5);
        double double16 = org.apache.commons.math.stat.StatUtils.sum(doubleArray5);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[35.0, 10.0, 97.0, 12.0, 37.0]");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 191.0d + "'", double6 == 191.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 38.2d + "'", double15 == 38.2d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 191.0d + "'", double16 == 191.0d);
    }

    @Test
    public void test1900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1900");
        double[] doubleArray5 = new double[] { '#', 10.0f, 'a', 12.0d, 37.0d };
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray5);
        double double7 = org.apache.commons.math.stat.StatUtils.min(doubleArray5);
        double double8 = org.apache.commons.math.stat.StatUtils.sum(doubleArray5);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[35.0, 10.0, 97.0, 12.0, 37.0]");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 191.0d + "'", double6 == 191.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 191.0d + "'", double8 == 191.0d);
    }

    @Test
    public void test1901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1901");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) 10);
        double double18 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double21 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 37.0d + "'", double17 == 37.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 37.0d + "'", double19 == 37.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 3.0d + "'", double20 == 3.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1.0d) + "'", double21 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
    }

    @Test
    public void test1902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1902");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10);
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double double15 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13);
        double double16 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray13);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double18 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray13);
        double double19 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13);
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        // The following exception was thrown during execution in test generation
        try {
            double double23 = org.apache.commons.math.stat.StatUtils.min(doubleArray13, (int) (short) 10, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4.641588833612779d + "'", double15 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.605170185988092d + "'", double16 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 27.0d + "'", double17 == 27.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-4.0d) + "'", double18 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4.641588833612779d + "'", double19 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
    }

    @Test
    public void test1903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1903");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double24 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            double double27 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, (int) (short) 0, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
    }

    @Test
    public void test1904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1904");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, 27.0d);
        double double16 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) (byte) 10);
        double double17 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        double double22 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11, (int) (byte) 1, (int) (short) 1);
        double double24 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 27.0d + "'", double14 == 27.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 27.0d + "'", double16 == 27.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4.605170185988092d + "'", double18 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4.605170185988092d + "'", double19 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 27.0d + "'", double24 == 27.0d);
    }

    @Test
    public void test1905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1905");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double24 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double[] doubleArray28 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double29 = org.apache.commons.math.stat.StatUtils.mean(doubleArray28);
        double double30 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray28);
        double double31 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray28);
        double double33 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray28);
        double double34 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28);
        double double37 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28, (int) (short) 1, 0);
        double double38 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray18, doubleArray28);
        // The following exception was thrown during execution in test generation
        try {
            double double41 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18, (int) '4', (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.641588833612779d + "'", double23 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 7.0d + "'", double24 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 7.0d + "'", double29 == 7.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 4.641588833612779d + "'", double30 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.605170185988092d + "'", double31 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4.641588833612779d + "'", double33 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4.605170185988092d + "'", double34 == 4.605170185988092d);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
    }

    @Test
    public void test1906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1906");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double24 = org.apache.commons.math.stat.StatUtils.min(doubleArray18);
        double double26 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray18, (double) 100L);
        double[] doubleArray30 = new double[] { (-1L), 0, 10L };
        double double33 = org.apache.commons.math.stat.StatUtils.max(doubleArray30, 0, 0);
        double double34 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray30);
        double double36 = org.apache.commons.math.stat.StatUtils.variance(doubleArray30, (double) 10);
        double double37 = org.apache.commons.math.stat.StatUtils.min(doubleArray30);
        double double38 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray18, doubleArray30);
        double double39 = org.apache.commons.math.stat.StatUtils.max(doubleArray30);
        double double40 = org.apache.commons.math.stat.StatUtils.mean(doubleArray30);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.641588833612779d + "'", double23 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 101.0d + "'", double34 == 101.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 37.0d + "'", double36 == 37.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-1.0d) + "'", double37 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 12.0d + "'", double38 == 12.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 10.0d + "'", double39 == 10.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 3.0d + "'", double40 == 3.0d);
    }

    @Test
    public void test1907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1907");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 3.0d);
        double double11 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, 37.000000000000114d);
        double double12 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 27.0d + "'", double9 == 27.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 5.320000000000042d + "'", double11 == 5.320000000000042d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 100.0d + "'", double12 == 100.0d);
    }

    @Test
    public void test1908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1908");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10);
        double double11 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) (short) 100);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 12247.0d, (int) (byte) 0, (int) (short) 1);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    }

    @Test
    public void test1909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1909");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, 0.0d);
        double double28 = org.apache.commons.math.stat.StatUtils.product(doubleArray12);
        double double31 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray12, (int) (byte) 0, (int) (short) 0);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray12);
        double double33 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double double34 = org.apache.commons.math.stat.StatUtils.product(doubleArray12);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 127.0d + "'", double27 == 127.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-0.0d) + "'", double28 == (-0.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 37.0d + "'", double32 == 37.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 101.0d + "'", double33 == 101.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.0d) + "'", double34 == (-0.0d));
    }

    @Test
    public void test1910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1910");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 0, 1, (int) (short) 1);
        double double10 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double[] doubleArray11 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double13 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, 4.605170185988092d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 4.641588833612779d + "'", double10 == 4.641588833612779d);
    }

    @Test
    public void test1911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1911");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double11 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double13 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 26.999999999999886d);
        // The following exception was thrown during execution in test generation
        try {
            double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, (int) (short) 10, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 21.0d + "'", double7 == 21.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 21.0d + "'", double8 == 21.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 201.0d + "'", double9 == 201.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 27.0d + "'", double10 == 27.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 27.0d + "'", double13 == 27.0d);
    }

    @Test
    public void test1912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1912");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.variance(doubleArray18);
        double[] doubleArray27 = new double[] { (-1L), 0, 10L };
        double double30 = org.apache.commons.math.stat.StatUtils.max(doubleArray27, 0, 0);
        double double31 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray27);
        double[] doubleArray35 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double36 = org.apache.commons.math.stat.StatUtils.mean(doubleArray35);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35);
        double double38 = org.apache.commons.math.stat.StatUtils.sum(doubleArray35);
        double double39 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray27, doubleArray35);
        double double40 = org.apache.commons.math.stat.StatUtils.max(doubleArray27);
        double double42 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray18, doubleArray27, 27.0d);
        double double43 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray27);
        double double44 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double[] doubleArray48 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double49 = org.apache.commons.math.stat.StatUtils.mean(doubleArray48);
        double double51 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray48, (double) 100.0f);
        double[] doubleArray55 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double56 = org.apache.commons.math.stat.StatUtils.mean(doubleArray55);
        double double57 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray55);
        double double58 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray55);
        double double59 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray48, doubleArray55);
        double[] doubleArray63 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double64 = org.apache.commons.math.stat.StatUtils.mean(doubleArray63);
        double double65 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray63);
        double double66 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray48, doubleArray63);
        double[] doubleArray70 = new double[] { (-1L), 0, 10L };
        double double73 = org.apache.commons.math.stat.StatUtils.max(doubleArray70, 0, 0);
        double double74 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray70);
        double[] doubleArray78 = new double[] { (-1L), 0, 10L };
        double double81 = org.apache.commons.math.stat.StatUtils.max(doubleArray78, 0, 0);
        double double82 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray78);
        double double84 = org.apache.commons.math.stat.StatUtils.variance(doubleArray78, (double) 10);
        double double85 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray70, doubleArray78);
        double double87 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray48, doubleArray70, 100.0d);
        double double90 = org.apache.commons.math.stat.StatUtils.variance(doubleArray70, 1, 0);
        double double91 = org.apache.commons.math.stat.StatUtils.mean(doubleArray70);
        double double92 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray27, doubleArray70);
        double double93 = org.apache.commons.math.stat.StatUtils.max(doubleArray70);
        double double96 = org.apache.commons.math.stat.StatUtils.variance(doubleArray70, (int) (short) 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            double double99 = org.apache.commons.math.stat.StatUtils.min(doubleArray70, 1, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 27.0d + "'", double23 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 101.0d + "'", double31 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 7.0d + "'", double36 == 7.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 21.0d + "'", double38 == 21.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-4.0d) + "'", double39 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 10.0d + "'", double40 == 10.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 127.0d + "'", double42 == 127.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 3.0d + "'", double44 == 3.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 7.0d + "'", double49 == 7.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 10.0d + "'", double51 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 7.0d + "'", double56 == 7.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 4.641588833612779d + "'", double57 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 4.605170185988092d + "'", double58 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 7.0d + "'", double64 == 7.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 4.641588833612779d + "'", double65 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 101.0d + "'", double74 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 101.0d + "'", double82 == 101.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 37.0d + "'", double84 == 37.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 127.0d + "'", double87 == 127.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double90));
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 3.0d + "'", double91 == 3.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 10.0d + "'", double93 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double96));
    }

    @Test
    public void test1913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1913");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.variance(doubleArray18);
        double[] doubleArray27 = new double[] { (-1L), 0, 10L };
        double double30 = org.apache.commons.math.stat.StatUtils.max(doubleArray27, 0, 0);
        double double31 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray27);
        double[] doubleArray35 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double36 = org.apache.commons.math.stat.StatUtils.mean(doubleArray35);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35);
        double double38 = org.apache.commons.math.stat.StatUtils.sum(doubleArray35);
        double double39 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray27, doubleArray35);
        double double40 = org.apache.commons.math.stat.StatUtils.max(doubleArray27);
        double double42 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray18, doubleArray27, 27.0d);
        double double43 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray27);
        double double44 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double[] doubleArray48 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double49 = org.apache.commons.math.stat.StatUtils.mean(doubleArray48);
        double double51 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray48, (double) 100.0f);
        double[] doubleArray55 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double56 = org.apache.commons.math.stat.StatUtils.mean(doubleArray55);
        double double57 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray55);
        double double58 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray55);
        double double59 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray48, doubleArray55);
        double[] doubleArray63 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double64 = org.apache.commons.math.stat.StatUtils.mean(doubleArray63);
        double double65 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray63);
        double double66 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray48, doubleArray63);
        double[] doubleArray70 = new double[] { (-1L), 0, 10L };
        double double73 = org.apache.commons.math.stat.StatUtils.max(doubleArray70, 0, 0);
        double double74 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray70);
        double[] doubleArray78 = new double[] { (-1L), 0, 10L };
        double double81 = org.apache.commons.math.stat.StatUtils.max(doubleArray78, 0, 0);
        double double82 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray78);
        double double84 = org.apache.commons.math.stat.StatUtils.variance(doubleArray78, (double) 10);
        double double85 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray70, doubleArray78);
        double double87 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray48, doubleArray70, 100.0d);
        double double90 = org.apache.commons.math.stat.StatUtils.variance(doubleArray70, 1, 0);
        double double91 = org.apache.commons.math.stat.StatUtils.mean(doubleArray70);
        double double92 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray27, doubleArray70);
        double double93 = org.apache.commons.math.stat.StatUtils.max(doubleArray70);
        double double94 = org.apache.commons.math.stat.StatUtils.min(doubleArray70);
        double double95 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray70);
        double double96 = org.apache.commons.math.stat.StatUtils.min(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 27.0d + "'", double23 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 101.0d + "'", double31 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 7.0d + "'", double36 == 7.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 21.0d + "'", double38 == 21.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-4.0d) + "'", double39 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 10.0d + "'", double40 == 10.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 127.0d + "'", double42 == 127.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 3.0d + "'", double44 == 3.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 7.0d + "'", double49 == 7.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 10.0d + "'", double51 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 7.0d + "'", double56 == 7.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 4.641588833612779d + "'", double57 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 4.605170185988092d + "'", double58 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 7.0d + "'", double64 == 7.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 4.641588833612779d + "'", double65 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 101.0d + "'", double74 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 101.0d + "'", double82 == 101.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 37.0d + "'", double84 == 37.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 127.0d + "'", double87 == 127.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double90));
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 3.0d + "'", double91 == 3.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 10.0d + "'", double93 == 10.0d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + (-1.0d) + "'", double94 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 101.0d + "'", double95 == 101.0d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + (-1.0d) + "'", double96 == (-1.0d));
    }

    @Test
    public void test1914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1914");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double double16 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.variance(doubleArray20, 27.0d);
        double double25 = org.apache.commons.math.stat.StatUtils.variance(doubleArray20, (double) (byte) 10);
        double double26 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray20);
        double double27 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray20);
        double[] doubleArray31 = new double[] { (-1L), 0, 10L };
        double double34 = org.apache.commons.math.stat.StatUtils.max(doubleArray31, 0, 0);
        double double36 = org.apache.commons.math.stat.StatUtils.variance(doubleArray31, 21.0d);
        double double37 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray20, doubleArray31);
        double double38 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray20);
        double double40 = org.apache.commons.math.stat.StatUtils.variance(doubleArray20, 21.0d);
        double double42 = org.apache.commons.math.stat.StatUtils.variance(doubleArray20, 2.302585092994046d);
        double[] doubleArray46 = new double[] { (-1L), 0, 10L };
        double double49 = org.apache.commons.math.stat.StatUtils.max(doubleArray46, 0, 0);
        double double50 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray46);
        double double52 = org.apache.commons.math.stat.StatUtils.variance(doubleArray46, (double) 10);
        double[] doubleArray56 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double57 = org.apache.commons.math.stat.StatUtils.mean(doubleArray56);
        double double58 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray56);
        double double59 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray56);
        double double60 = org.apache.commons.math.stat.StatUtils.variance(doubleArray56);
        double double61 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray46, doubleArray56);
        double[] doubleArray65 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double66 = org.apache.commons.math.stat.StatUtils.mean(doubleArray65);
        double double67 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray46, doubleArray65);
        double double69 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray20, doubleArray65, (double) (short) 0);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 4.641588833612779d + "'", double8 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 7.0d + "'", double16 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 27.0d + "'", double23 == 27.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 27.0d + "'", double25 == 27.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 4.605170185988092d + "'", double27 == 4.605170185988092d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 37.0d + "'", double36 == 37.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 12.0d + "'", double37 == 12.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 27.0d + "'", double40 == 27.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 27.0d + "'", double42 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 101.0d + "'", double50 == 101.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 37.0d + "'", double52 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 7.0d + "'", double57 == 7.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 4.641588833612779d + "'", double58 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4.605170185988092d + "'", double59 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 27.0d + "'", double60 == 27.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-4.0d) + "'", double61 == (-4.0d));
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 7.0d + "'", double66 == 7.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-12.0d) + "'", double67 == (-12.0d));
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
    }

    @Test
    public void test1915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1915");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, 0.0d);
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double double34 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray31, (double) 100.0f);
        double double35 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double[] doubleArray39 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double40 = org.apache.commons.math.stat.StatUtils.mean(doubleArray39);
        double double42 = org.apache.commons.math.stat.StatUtils.variance(doubleArray39, 27.0d);
        double double44 = org.apache.commons.math.stat.StatUtils.variance(doubleArray39, (double) (byte) 10);
        double double45 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray31, doubleArray39);
        double double46 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray39);
        double double47 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 127.0d + "'", double27 == 127.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 7.0d + "'", double32 == 7.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 10.0d + "'", double34 == 10.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 7.0d + "'", double35 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 7.0d + "'", double40 == 7.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 27.0d + "'", double42 == 27.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 27.0d + "'", double44 == 27.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 27.0d + "'", double47 == 27.0d);
    }

    @Test
    public void test1916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1916");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double11 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double12 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double[] doubleArray16 = new double[] { (-1L), 0, 10L };
        double double19 = org.apache.commons.math.stat.StatUtils.max(doubleArray16, 0, 0);
        double double20 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray16);
        double double22 = org.apache.commons.math.stat.StatUtils.variance(doubleArray16, (double) 10);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        double double29 = org.apache.commons.math.stat.StatUtils.max(doubleArray26, 0, 0);
        double double30 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray26);
        double double31 = org.apache.commons.math.stat.StatUtils.min(doubleArray26);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray26);
        double double33 = org.apache.commons.math.stat.StatUtils.variance(doubleArray26);
        double double35 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray26, (double) 100.0f);
        double double36 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray16, doubleArray26);
        double double37 = org.apache.commons.math.stat.StatUtils.mean(doubleArray16);
        double double38 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray16);
        double double40 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray16, 16.52846869541907d);
        double double41 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double43 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (-4.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: invalid quantile value: -4.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 21.0d + "'", double7 == 21.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 21.0d + "'", double8 == 21.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 201.0d + "'", double9 == 201.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 27.0d + "'", double10 == 27.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 27.0d + "'", double12 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 101.0d + "'", double20 == 101.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 37.0d + "'", double22 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 101.0d + "'", double30 == 101.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-1.0d) + "'", double31 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 37.0d + "'", double32 == 37.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 37.0d + "'", double33 == 37.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 10.0d + "'", double35 == 10.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 3.0d + "'", double37 == 3.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 101.0d + "'", double38 == 101.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 126.99999999999997d + "'", double40 == 126.99999999999997d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 4.641588833612779d + "'", double41 == 4.641588833612779d);
    }

    @Test
    public void test1917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1917");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double24 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray18);
        // The following exception was thrown during execution in test generation
        try {
            double double27 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18, (int) (byte) 0, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.641588833612779d + "'", double23 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 201.0d + "'", double24 == 201.0d);
    }

    @Test
    public void test1918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1918");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        double double28 = org.apache.commons.math.stat.StatUtils.max(doubleArray25, 0, 0);
        double double29 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray25);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        double double36 = org.apache.commons.math.stat.StatUtils.max(doubleArray33, 0, 0);
        double double37 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray33);
        double double39 = org.apache.commons.math.stat.StatUtils.variance(doubleArray33, (double) 10);
        double double40 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray25, doubleArray33);
        double double42 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray25, 100.0d);
        double double43 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        double double44 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray48 = new double[] { (-1L), 0, 10L };
        double double51 = org.apache.commons.math.stat.StatUtils.max(doubleArray48, 0, 0);
        double double52 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray48);
        double[] doubleArray56 = new double[] { (-1L), 0, 10L };
        double double59 = org.apache.commons.math.stat.StatUtils.max(doubleArray56, 0, 0);
        double double60 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray56);
        double double62 = org.apache.commons.math.stat.StatUtils.variance(doubleArray56, (double) 10);
        double double63 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray48, doubleArray56);
        double double64 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray56);
        double double65 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 101.0d + "'", double29 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 101.0d + "'", double37 == 101.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 37.0d + "'", double39 == 37.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 127.0d + "'", double42 == 127.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 100.0d + "'", double43 == 100.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 21.0d + "'", double44 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 101.0d + "'", double52 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 101.0d + "'", double60 == 101.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 37.0d + "'", double62 == 37.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 12.0d + "'", double64 == 12.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 10.0d + "'", double65 == 10.0d);
    }

    @Test
    public void test1919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1919");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double11 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3, (int) (byte) 0, (int) (byte) 1);
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double[] doubleArray17 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray17);
        double double20 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray17, (double) 100.0f);
        double[] doubleArray24 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double25 = org.apache.commons.math.stat.StatUtils.mean(doubleArray24);
        double double26 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray24);
        double double27 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray24);
        double double28 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray17, doubleArray24);
        double[] doubleArray32 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double33 = org.apache.commons.math.stat.StatUtils.mean(doubleArray32);
        double double34 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray32);
        double double35 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray17, doubleArray32);
        double double36 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray32);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        double double43 = org.apache.commons.math.stat.StatUtils.max(doubleArray40, 0, 0);
        double double44 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray40);
        double[] doubleArray48 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double49 = org.apache.commons.math.stat.StatUtils.mean(doubleArray48);
        double double50 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray48);
        double double51 = org.apache.commons.math.stat.StatUtils.sum(doubleArray48);
        double double52 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray40, doubleArray48);
        double double53 = org.apache.commons.math.stat.StatUtils.sum(doubleArray40);
        double double56 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray40, (int) (short) 1, (int) (short) 0);
        double double57 = org.apache.commons.math.stat.StatUtils.product(doubleArray40);
        double double58 = org.apache.commons.math.stat.StatUtils.max(doubleArray40);
        double double59 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray32, doubleArray40);
        double double60 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray32);
        double double63 = org.apache.commons.math.stat.StatUtils.max(doubleArray32, 0, 0);
        double double64 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray32);
        double double65 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray32);
        double double68 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray32, 0, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            double double72 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray32, 10, 100, 126.99999999999977d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 4.641588833612779d + "'", double8 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.000000000000002d + "'", double11 == 10.000000000000002d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 10.0d + "'", double13 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 7.0d + "'", double18 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 10.0d + "'", double20 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 7.0d + "'", double25 == 7.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 4.641588833612779d + "'", double26 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 4.605170185988092d + "'", double27 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 7.0d + "'", double33 == 7.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4.641588833612779d + "'", double34 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 4.641588833612779d + "'", double36 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 101.0d + "'", double44 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 7.0d + "'", double49 == 7.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4.641588833612779d + "'", double50 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 21.0d + "'", double51 == 21.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-4.0d) + "'", double52 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 9.0d + "'", double53 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.0d) + "'", double57 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 10.0d + "'", double58 == 10.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 12.0d + "'", double59 == 12.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 4.641588833612779d + "'", double64 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 201.0d + "'", double65 == 201.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double68));
    }

    @Test
    public void test1920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1920");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        double[] doubleArray14 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray14);
        double double16 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray14);
        double double17 = org.apache.commons.math.stat.StatUtils.sum(doubleArray14);
        double double18 = org.apache.commons.math.stat.StatUtils.max(doubleArray14);
        double double19 = org.apache.commons.math.stat.StatUtils.variance(doubleArray14);
        double double20 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray14);
        double[] doubleArray24 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double25 = org.apache.commons.math.stat.StatUtils.mean(doubleArray24);
        double double27 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray24, (double) 100.0f);
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double double33 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray31);
        double double34 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray31);
        double double35 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray24, doubleArray31);
        double double36 = org.apache.commons.math.stat.StatUtils.variance(doubleArray31);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray31);
        double double39 = org.apache.commons.math.stat.StatUtils.variance(doubleArray31, (double) 10L);
        double double40 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray31);
        double[] doubleArray44 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double45 = org.apache.commons.math.stat.StatUtils.mean(doubleArray44);
        double double47 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray44, (double) 100.0f);
        double[] doubleArray51 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double52 = org.apache.commons.math.stat.StatUtils.mean(doubleArray51);
        double double53 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray51);
        double double54 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray51);
        double double55 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray44, doubleArray51);
        double[] doubleArray59 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double60 = org.apache.commons.math.stat.StatUtils.mean(doubleArray59);
        double double61 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray59);
        double double62 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray44, doubleArray59);
        double double63 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray59);
        double double64 = org.apache.commons.math.stat.StatUtils.variance(doubleArray59);
        double[] doubleArray68 = new double[] { (-1L), 0, 10L };
        double double71 = org.apache.commons.math.stat.StatUtils.max(doubleArray68, 0, 0);
        double double72 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray68);
        double[] doubleArray76 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double77 = org.apache.commons.math.stat.StatUtils.mean(doubleArray76);
        double double78 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray76);
        double double79 = org.apache.commons.math.stat.StatUtils.sum(doubleArray76);
        double double80 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray68, doubleArray76);
        double double81 = org.apache.commons.math.stat.StatUtils.max(doubleArray68);
        double double83 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray59, doubleArray68, 27.0d);
        double double84 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray68);
        double double85 = org.apache.commons.math.stat.StatUtils.mean(doubleArray68);
        double double86 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray68);
        double double87 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double88 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double89 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double90 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double91 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        double double92 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.0d + "'", double15 == 7.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.641588833612779d + "'", double16 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 21.0d + "'", double17 == 21.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 27.0d + "'", double19 == 27.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 7.0d + "'", double25 == 7.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 10.0d + "'", double27 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 7.0d + "'", double32 == 7.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4.641588833612779d + "'", double33 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4.605170185988092d + "'", double34 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 27.0d + "'", double36 == 27.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 27.0d + "'", double39 == 27.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 7.0d + "'", double45 == 7.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 10.0d + "'", double47 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 7.0d + "'", double52 == 7.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 4.641588833612779d + "'", double53 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 4.605170185988092d + "'", double54 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 7.0d + "'", double60 == 7.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 4.641588833612779d + "'", double61 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 4.641588833612779d + "'", double63 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 27.0d + "'", double64 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 101.0d + "'", double72 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 7.0d + "'", double77 == 7.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 4.641588833612779d + "'", double78 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 21.0d + "'", double79 == 21.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + (-4.0d) + "'", double80 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 10.0d + "'", double81 == 10.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 127.0d + "'", double83 == 127.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double84));
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 3.0d + "'", double85 == 3.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 4.0d + "'", double86 == 4.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 10.0d + "'", double87 == 10.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 4.641588833612779d + "'", double88 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 10.0d + "'", double89 == 10.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 21.0d + "'", double90 == 21.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 100.0d + "'", double91 == 100.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 4.641588833612779d + "'", double92 == 4.641588833612779d);
    }

    @Test
    public void test1921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1921");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray19);
        double double25 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, (-0.9199999999999999d));
        double double26 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double[] doubleArray30 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double31 = org.apache.commons.math.stat.StatUtils.mean(doubleArray30);
        double double32 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray30);
        double double33 = org.apache.commons.math.stat.StatUtils.sum(doubleArray30);
        double double34 = org.apache.commons.math.stat.StatUtils.max(doubleArray30);
        double[] doubleArray38 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double39 = org.apache.commons.math.stat.StatUtils.mean(doubleArray38);
        double double41 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray38, (double) 100.0f);
        double double42 = org.apache.commons.math.stat.StatUtils.mean(doubleArray38);
        double[] doubleArray46 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double47 = org.apache.commons.math.stat.StatUtils.mean(doubleArray46);
        double double49 = org.apache.commons.math.stat.StatUtils.variance(doubleArray46, 27.0d);
        double double51 = org.apache.commons.math.stat.StatUtils.variance(doubleArray46, (double) (byte) 10);
        double double52 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray38, doubleArray46);
        double double54 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray30, doubleArray38, (double) (short) 1);
        double double55 = org.apache.commons.math.stat.StatUtils.sum(doubleArray38);
        double double56 = org.apache.commons.math.stat.StatUtils.sum(doubleArray38);
        double double57 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray38);
        // The following exception was thrown during execution in test generation
        try {
            double double59 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, 127.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: invalid quantile value: 127.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.605170185988092d + "'", double22 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + (-2.220446049250313E-16d) + "'", double25 == (-2.220446049250313E-16d));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 27.0d + "'", double26 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 7.0d + "'", double31 == 7.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 4.641588833612779d + "'", double32 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 21.0d + "'", double33 == 21.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 10.0d + "'", double34 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 7.0d + "'", double39 == 7.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 10.0d + "'", double41 == 10.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 7.0d + "'", double42 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 7.0d + "'", double47 == 7.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 27.0d + "'", double49 == 27.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 27.0d + "'", double51 == 27.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 21.0d + "'", double55 == 21.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 21.0d + "'", double56 == 21.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
    }

    @Test
    public void test1922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1922");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray15 = new double[] { (-1L), 0, 10L };
        double double18 = org.apache.commons.math.stat.StatUtils.max(doubleArray15, 0, 0);
        double double19 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray15);
        double[] doubleArray23 = new double[] { (-1L), 0, 10L };
        double double26 = org.apache.commons.math.stat.StatUtils.max(doubleArray23, 0, 0);
        double double27 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray23);
        double double29 = org.apache.commons.math.stat.StatUtils.variance(doubleArray23, (double) 10);
        double double30 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray15, doubleArray23);
        double double31 = org.apache.commons.math.stat.StatUtils.variance(doubleArray15);
        double double32 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray15);
        double double35 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, 1, 1);
        double double36 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double40 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (int) ' ', (int) '#', (double) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 101.0d + "'", double19 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 101.0d + "'", double27 == 101.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 37.0d + "'", double29 == 37.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 37.0d + "'", double31 == 37.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 4.0d + "'", double32 == 4.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 10.0d + "'", double35 == 10.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 27.0d + "'", double36 == 27.0d);
    }

    @Test
    public void test1923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1923");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10);
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double double15 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13);
        double double16 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray13);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double18 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray13);
        double double19 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double20 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double21 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray25 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double26 = org.apache.commons.math.stat.StatUtils.mean(doubleArray25);
        double double27 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray25);
        double double28 = org.apache.commons.math.stat.StatUtils.sum(doubleArray25);
        double[] doubleArray32 = new double[] { (-1L), 0, 10L };
        double double35 = org.apache.commons.math.stat.StatUtils.max(doubleArray32, 0, 0);
        double double37 = org.apache.commons.math.stat.StatUtils.variance(doubleArray32, 21.0d);
        double double39 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray25, doubleArray32, 4.605170185988092d);
        double double40 = org.apache.commons.math.stat.StatUtils.mean(doubleArray32);
        double double41 = org.apache.commons.math.stat.StatUtils.max(doubleArray32);
        double[] doubleArray45 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double46 = org.apache.commons.math.stat.StatUtils.mean(doubleArray45);
        double double48 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray45, (double) 100.0f);
        double double49 = org.apache.commons.math.stat.StatUtils.mean(doubleArray45);
        double[] doubleArray53 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double54 = org.apache.commons.math.stat.StatUtils.mean(doubleArray53);
        double double56 = org.apache.commons.math.stat.StatUtils.variance(doubleArray53, 27.0d);
        double double58 = org.apache.commons.math.stat.StatUtils.variance(doubleArray53, (double) (byte) 10);
        double double59 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray45, doubleArray53);
        double double62 = org.apache.commons.math.stat.StatUtils.variance(doubleArray45, (int) (short) 0, (int) (byte) 0);
        double double63 = org.apache.commons.math.stat.StatUtils.product(doubleArray45);
        double double65 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray32, doubleArray45, 127.0d);
        double double67 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray32, (double) ' ');
        double double69 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray32, 0.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double71 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, 127.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: invalid quantile value: 127.0");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4.641588833612779d + "'", double15 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.605170185988092d + "'", double16 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 27.0d + "'", double17 == 27.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-4.0d) + "'", double18 == (-4.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 37.0d + "'", double20 == 37.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1.0d) + "'", double21 == (-1.0d));
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 7.0d + "'", double26 == 7.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 4.641588833612779d + "'", double27 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 21.0d + "'", double28 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 37.0d + "'", double37 == 37.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 127.00000000000001d + "'", double39 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 3.0d + "'", double40 == 3.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 10.0d + "'", double41 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 7.0d + "'", double46 == 7.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 10.0d + "'", double48 == 10.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 7.0d + "'", double49 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 7.0d + "'", double54 == 7.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 27.0d + "'", double56 == 27.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 27.0d + "'", double58 == 27.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 100.0d + "'", double63 == 100.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 127.0d + "'", double65 == 127.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-0.72d) + "'", double67 == (-0.72d));
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
    }

    @Test
    public void test1924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1924");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double24 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double[] doubleArray28 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double29 = org.apache.commons.math.stat.StatUtils.mean(doubleArray28);
        double double30 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray28);
        double double31 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray28);
        double double33 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray28);
        double double34 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28);
        double double37 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28, (int) (short) 1, 0);
        double double38 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray18, doubleArray28);
        double double39 = org.apache.commons.math.stat.StatUtils.min(doubleArray28);
        double double40 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.641588833612779d + "'", double23 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 7.0d + "'", double24 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 7.0d + "'", double29 == 7.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 4.641588833612779d + "'", double30 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.605170185988092d + "'", double31 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4.641588833612779d + "'", double33 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4.605170185988092d + "'", double34 == 4.605170185988092d);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 4.605170185988092d + "'", double40 == 4.605170185988092d);
    }

    @Test
    public void test1925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1925");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray20);
        double[] doubleArray29 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double30 = org.apache.commons.math.stat.StatUtils.mean(doubleArray29);
        double double31 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray29);
        double double32 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray29);
        double double33 = org.apache.commons.math.stat.StatUtils.variance(doubleArray29);
        double[] doubleArray37 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double38 = org.apache.commons.math.stat.StatUtils.mean(doubleArray37);
        double double39 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray29, doubleArray37);
        double double41 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray29, (double) 10.0f);
        // The following exception was thrown during execution in test generation
        try {
            double double44 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3, (int) 'a', (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 21.0d + "'", double8 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 7.0d + "'", double30 == 7.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.641588833612779d + "'", double31 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 4.605170185988092d + "'", double32 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 27.0d + "'", double33 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 7.0d + "'", double38 == 7.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
    }

    @Test
    public void test1926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1926");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) 10);
        double double18 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double22 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 127.00000000000001d);
        // The following exception was thrown during execution in test generation
        try {
            double double25 = org.apache.commons.math.stat.StatUtils.product(doubleArray3, (int) (short) 1, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 37.0d + "'", double17 == 37.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 37.0d + "'", double19 == 37.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 3.0d + "'", double20 == 3.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 37.00000000000364d + "'", double22 == 37.00000000000364d);
    }

    @Test
    public void test1927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1927");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, (int) (short) 1, 0);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray20, (double) 100.0f);
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double28 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double double29 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double30 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray27);
        double double31 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray20, doubleArray27);
        double[] doubleArray35 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double36 = org.apache.commons.math.stat.StatUtils.mean(doubleArray35);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35);
        double double38 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray20, doubleArray35);
        double[] doubleArray42 = new double[] { (-1L), 0, 10L };
        double double45 = org.apache.commons.math.stat.StatUtils.max(doubleArray42, 0, 0);
        double double46 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray42);
        double[] doubleArray50 = new double[] { (-1L), 0, 10L };
        double double53 = org.apache.commons.math.stat.StatUtils.max(doubleArray50, 0, 0);
        double double54 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray50);
        double double56 = org.apache.commons.math.stat.StatUtils.variance(doubleArray50, (double) 10);
        double double57 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray42, doubleArray50);
        double double59 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray20, doubleArray42, 100.0d);
        double double60 = org.apache.commons.math.stat.StatUtils.variance(doubleArray20);
        double double61 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray20);
        double double62 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double[] doubleArray66 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double67 = org.apache.commons.math.stat.StatUtils.mean(doubleArray66);
        double double68 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray66);
        double double69 = org.apache.commons.math.stat.StatUtils.sum(doubleArray66);
        double double70 = org.apache.commons.math.stat.StatUtils.max(doubleArray66);
        double[] doubleArray74 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double75 = org.apache.commons.math.stat.StatUtils.mean(doubleArray74);
        double double77 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray74, (double) 100.0f);
        double double78 = org.apache.commons.math.stat.StatUtils.mean(doubleArray74);
        double[] doubleArray82 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double83 = org.apache.commons.math.stat.StatUtils.mean(doubleArray82);
        double double85 = org.apache.commons.math.stat.StatUtils.variance(doubleArray82, 27.0d);
        double double87 = org.apache.commons.math.stat.StatUtils.variance(doubleArray82, (double) (byte) 10);
        double double88 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray74, doubleArray82);
        double double90 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray66, doubleArray74, (double) (short) 1);
        double double93 = org.apache.commons.math.stat.StatUtils.sum(doubleArray74, 0, (int) (byte) 0);
        double double94 = org.apache.commons.math.stat.StatUtils.product(doubleArray74);
        double double95 = org.apache.commons.math.stat.StatUtils.variance(doubleArray74);
        double double97 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray20, doubleArray74, (double) 10);
        double double98 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray20);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 7.0d + "'", double28 == 7.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4.641588833612779d + "'", double29 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 4.605170185988092d + "'", double30 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 7.0d + "'", double36 == 7.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 101.0d + "'", double46 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 101.0d + "'", double54 == 101.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 37.0d + "'", double56 == 37.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 127.0d + "'", double59 == 127.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 27.0d + "'", double60 == 27.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 4.605170185988092d + "'", double61 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 7.0d + "'", double62 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 7.0d + "'", double67 == 7.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 4.641588833612779d + "'", double68 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 21.0d + "'", double69 == 21.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 10.0d + "'", double70 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 7.0d + "'", double75 == 7.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 10.0d + "'", double77 == 10.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 7.0d + "'", double78 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 7.0d + "'", double83 == 7.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 27.0d + "'", double85 == 27.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 27.0d + "'", double87 == 27.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double93));
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 100.0d + "'", double94 == 100.0d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 27.0d + "'", double95 == 27.0d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 0.0d + "'", double97 == 0.0d);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 0.0d + "'", double98 == 0.0d);
    }

    @Test
    public void test1928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1928");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, 0.0d);
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double double33 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray31);
        double double34 = org.apache.commons.math.stat.StatUtils.sum(doubleArray31);
        double[] doubleArray38 = new double[] { (-1L), 0, 10L };
        double double41 = org.apache.commons.math.stat.StatUtils.max(doubleArray38, 0, 0);
        double double43 = org.apache.commons.math.stat.StatUtils.variance(doubleArray38, 21.0d);
        double double45 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray31, doubleArray38, 4.605170185988092d);
        double double46 = org.apache.commons.math.stat.StatUtils.mean(doubleArray38);
        double double47 = org.apache.commons.math.stat.StatUtils.max(doubleArray38);
        double double48 = org.apache.commons.math.stat.StatUtils.sum(doubleArray38);
        double[] doubleArray52 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double53 = org.apache.commons.math.stat.StatUtils.mean(doubleArray52);
        double double54 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray52);
        double double55 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray52);
        double double56 = org.apache.commons.math.stat.StatUtils.max(doubleArray52);
        double double59 = org.apache.commons.math.stat.StatUtils.sum(doubleArray52, (int) (short) 1, 0);
        double double62 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray52, (int) (short) 0, (int) (byte) 0);
        double double64 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray38, doubleArray52, (double) '#');
        double double65 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray52);
        double[] doubleArray69 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double70 = org.apache.commons.math.stat.StatUtils.mean(doubleArray69);
        double double71 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray69);
        double double72 = org.apache.commons.math.stat.StatUtils.sum(doubleArray69);
        double double73 = org.apache.commons.math.stat.StatUtils.sum(doubleArray69);
        double double74 = org.apache.commons.math.stat.StatUtils.min(doubleArray69);
        double double75 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray69);
        double double76 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray69);
        double double77 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray69);
        double double78 = org.apache.commons.math.stat.StatUtils.min(doubleArray69);
        double double80 = org.apache.commons.math.stat.StatUtils.variance(doubleArray69, 27.000000000000004d);
        double double81 = org.apache.commons.math.stat.StatUtils.mean(doubleArray69);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 127.0d + "'", double27 == 127.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 7.0d + "'", double32 == 7.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4.641588833612779d + "'", double33 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 21.0d + "'", double34 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 37.0d + "'", double43 == 37.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 127.00000000000001d + "'", double45 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 3.0d + "'", double46 == 3.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 10.0d + "'", double47 == 10.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 9.0d + "'", double48 == 9.0d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 7.0d + "'", double53 == 7.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 4.641588833612779d + "'", double54 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 4.605170185988092d + "'", double55 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 10.0d + "'", double56 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 127.0d + "'", double64 == 127.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 7.0d + "'", double70 == 7.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 4.641588833612779d + "'", double71 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 21.0d + "'", double72 == 21.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 21.0d + "'", double73 == 21.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 201.0d + "'", double75 == 201.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 4.605170185988092d + "'", double77 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.0d + "'", double78 == 1.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 26.999999999999886d + "'", double80 == 26.999999999999886d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 7.0d + "'", double81 == 7.0d);
    }

    @Test
    public void test1929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1929");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        double double28 = org.apache.commons.math.stat.StatUtils.max(doubleArray25, 0, 0);
        double double29 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray25);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        double double36 = org.apache.commons.math.stat.StatUtils.max(doubleArray33, 0, 0);
        double double37 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray33);
        double double39 = org.apache.commons.math.stat.StatUtils.variance(doubleArray33, (double) 10);
        double double40 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray25, doubleArray33);
        double double42 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray25, 100.0d);
        double double43 = org.apache.commons.math.stat.StatUtils.min(doubleArray25);
        double double44 = org.apache.commons.math.stat.StatUtils.sum(doubleArray25);
        // The following exception was thrown during execution in test generation
        try {
            double double47 = org.apache.commons.math.stat.StatUtils.min(doubleArray25, (int) '4', (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 101.0d + "'", double29 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 101.0d + "'", double37 == 101.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 37.0d + "'", double39 == 37.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 127.0d + "'", double42 == 127.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-1.0d) + "'", double43 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 9.0d + "'", double44 == 9.0d);
    }

    @Test
    public void test1930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1930");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double11 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 10, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 27.0d + "'", double6 == 27.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
    }

    @Test
    public void test1931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1931");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (-1L), 0, 10L };
        double double21 = org.apache.commons.math.stat.StatUtils.max(doubleArray18, 0, 0);
        double double22 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray18);
        double[] doubleArray26 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double27 = org.apache.commons.math.stat.StatUtils.mean(doubleArray26);
        double double28 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray26);
        double double29 = org.apache.commons.math.stat.StatUtils.sum(doubleArray26);
        double double30 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray18, doubleArray26);
        double double33 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray26, (int) (byte) 1, (int) (byte) 0);
        double double34 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray26);
        double double35 = org.apache.commons.math.stat.StatUtils.min(doubleArray26);
        double double37 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray10, doubleArray26, 1.7200000000000006d);
        double double38 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray10);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 101.0d + "'", double22 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 7.0d + "'", double27 == 7.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 4.641588833612779d + "'", double28 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 21.0d + "'", double29 == 21.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-4.0d) + "'", double30 == (-4.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4.605170185988092d + "'", double34 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 201.0d + "'", double38 == 201.0d);
    }

    @Test
    public void test1932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1932");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double double15 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13);
        double double16 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray13);
        double double17 = org.apache.commons.math.stat.StatUtils.max(doubleArray13);
        double double20 = org.apache.commons.math.stat.StatUtils.sum(doubleArray13, (int) (short) 1, 0);
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double double22 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray13);
        double double23 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double[] doubleArray27 = new double[] { (-1L), 0, 10L };
        double double30 = org.apache.commons.math.stat.StatUtils.max(doubleArray27, 0, 0);
        double double31 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray27);
        double double32 = org.apache.commons.math.stat.StatUtils.min(doubleArray27);
        double double33 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray27);
        double double34 = org.apache.commons.math.stat.StatUtils.product(doubleArray27);
        double double35 = org.apache.commons.math.stat.StatUtils.min(doubleArray27);
        double double36 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double37 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray13, doubleArray27);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-1.0d) + "'", double8 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4.641588833612779d + "'", double15 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.605170185988092d + "'", double16 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-4.0d) + "'", double22 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 7.0d + "'", double23 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 101.0d + "'", double31 == 101.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-1.0d) + "'", double32 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.0d) + "'", double34 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-1.0d) + "'", double35 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 12.0d + "'", double37 == 12.0d);
    }

    @Test
    public void test1933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1933");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (-1L), 0, 10L };
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray10, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, 21.0d);
        double double17 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, 4.605170185988092d);
        double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double19 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double23 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray10, (int) (byte) 1, (int) (byte) 1, 3.5200000000000005d);
        double[] doubleArray27 = new double[] { (-1L), 0, 10L };
        double double30 = org.apache.commons.math.stat.StatUtils.max(doubleArray27, 0, 0);
        double double31 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray27);
        double[] doubleArray35 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double36 = org.apache.commons.math.stat.StatUtils.mean(doubleArray35);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35);
        double double38 = org.apache.commons.math.stat.StatUtils.sum(doubleArray35);
        double double39 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray27, doubleArray35);
        double double40 = org.apache.commons.math.stat.StatUtils.max(doubleArray35);
        double double41 = org.apache.commons.math.stat.StatUtils.max(doubleArray35);
        double[] doubleArray45 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double46 = org.apache.commons.math.stat.StatUtils.mean(doubleArray45);
        double double48 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray45, (double) 100.0f);
        double double49 = org.apache.commons.math.stat.StatUtils.mean(doubleArray45);
        double[] doubleArray53 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double54 = org.apache.commons.math.stat.StatUtils.mean(doubleArray53);
        double double56 = org.apache.commons.math.stat.StatUtils.variance(doubleArray53, 27.0d);
        double double58 = org.apache.commons.math.stat.StatUtils.variance(doubleArray53, (double) (byte) 10);
        double double59 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray45, doubleArray53);
        double double60 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray35, doubleArray53);
        double double62 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray10, doubleArray53, (-4.0d));
        double[] doubleArray66 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double67 = org.apache.commons.math.stat.StatUtils.mean(doubleArray66);
        double double69 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray66, (double) 100.0f);
        double double71 = org.apache.commons.math.stat.StatUtils.variance(doubleArray66, 4.605170185988092d);
        double double72 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray66);
        double double74 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray53, doubleArray66, 37.00000000000023d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 37.0d + "'", double15 == 37.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 127.00000000000001d + "'", double17 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 3.0d + "'", double18 == 3.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 101.0d + "'", double31 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 7.0d + "'", double36 == 7.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 21.0d + "'", double38 == 21.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-4.0d) + "'", double39 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 10.0d + "'", double40 == 10.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 10.0d + "'", double41 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 7.0d + "'", double46 == 7.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 10.0d + "'", double48 == 10.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 7.0d + "'", double49 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 7.0d + "'", double54 == 7.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 27.0d + "'", double56 == 27.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 27.0d + "'", double58 == 27.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 127.0d + "'", double62 == 127.0d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 7.0d + "'", double67 == 7.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 10.0d + "'", double69 == 10.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 27.000000000000004d + "'", double71 == 27.000000000000004d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 4.605170185988092d + "'", double72 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 4.547473508864641E-13d + "'", double74 == 4.547473508864641E-13d);
    }

    @Test
    public void test1934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1934");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double13 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, (int) (short) -1, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 21.0d + "'", double7 == 21.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 201.0d + "'", double9 == 201.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 7.0d + "'", double10 == 7.0d);
    }

    @Test
    public void test1935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1935");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, 0.0d);
        double double28 = org.apache.commons.math.stat.StatUtils.variance(doubleArray12);
        double double31 = org.apache.commons.math.stat.StatUtils.variance(doubleArray12, 1, (int) (byte) 1);
        double[] doubleArray35 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double36 = org.apache.commons.math.stat.StatUtils.mean(doubleArray35);
        double double38 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray35, (double) 100.0f);
        double[] doubleArray42 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double43 = org.apache.commons.math.stat.StatUtils.mean(doubleArray42);
        double double44 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray42);
        double double45 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray42);
        double double46 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray35, doubleArray42);
        double[] doubleArray50 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double51 = org.apache.commons.math.stat.StatUtils.mean(doubleArray50);
        double double52 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray50);
        double double53 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray35, doubleArray50);
        double double54 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray50);
        double double55 = org.apache.commons.math.stat.StatUtils.variance(doubleArray50);
        double[] doubleArray59 = new double[] { (-1L), 0, 10L };
        double double62 = org.apache.commons.math.stat.StatUtils.max(doubleArray59, 0, 0);
        double double63 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray59);
        double[] doubleArray67 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double68 = org.apache.commons.math.stat.StatUtils.mean(doubleArray67);
        double double69 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray67);
        double double70 = org.apache.commons.math.stat.StatUtils.sum(doubleArray67);
        double double71 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray59, doubleArray67);
        double double72 = org.apache.commons.math.stat.StatUtils.max(doubleArray59);
        double double74 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray50, doubleArray59, 27.0d);
        double double75 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray59);
        double double76 = org.apache.commons.math.stat.StatUtils.product(doubleArray59);
        double double78 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray12, doubleArray59, (-0.72d));
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 127.0d + "'", double27 == 127.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 37.0d + "'", double28 == 37.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 7.0d + "'", double36 == 7.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 10.0d + "'", double38 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 7.0d + "'", double43 == 7.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 4.641588833612779d + "'", double44 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 4.605170185988092d + "'", double45 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 7.0d + "'", double51 == 7.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 4.641588833612779d + "'", double52 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 4.641588833612779d + "'", double54 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 27.0d + "'", double55 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 101.0d + "'", double63 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 7.0d + "'", double68 == 7.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 4.641588833612779d + "'", double69 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 21.0d + "'", double70 == 21.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-4.0d) + "'", double71 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 10.0d + "'", double72 == 10.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 127.0d + "'", double74 == 127.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-0.0d) + "'", double76 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-1.1102230246251565E-16d) + "'", double78 == (-1.1102230246251565E-16d));
    }

    @Test
    public void test1936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1936");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 3.0d);
        double double11 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, 37.000000000000114d);
        double[] doubleArray15 = new double[] { (-1L), 0, 10L };
        double double18 = org.apache.commons.math.stat.StatUtils.max(doubleArray15, 0, 0);
        double double19 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray15);
        double[] doubleArray23 = new double[] { (-1L), 0, 10L };
        double double26 = org.apache.commons.math.stat.StatUtils.max(doubleArray23, 0, 0);
        double double27 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray23);
        double double29 = org.apache.commons.math.stat.StatUtils.variance(doubleArray23, (double) 10);
        double double30 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray15, doubleArray23);
        double double31 = org.apache.commons.math.stat.StatUtils.variance(doubleArray15);
        double double34 = org.apache.commons.math.stat.StatUtils.product(doubleArray15, (int) (byte) 1, (int) (short) 1);
        double double36 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray15, 5.320000000001309d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 27.0d + "'", double9 == 27.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 5.320000000000042d + "'", double11 == 5.320000000000042d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 101.0d + "'", double19 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 101.0d + "'", double27 == 101.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 37.0d + "'", double29 == 37.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 37.0d + "'", double31 == 37.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 126.99999999999999d + "'", double36 == 126.99999999999999d);
    }

    @Test
    public void test1937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1937");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 27.0d);
        double double8 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) (byte) 10);
        double double9 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double11 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double14 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3, (int) (short) 10, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 27.0d + "'", double6 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 27.0d + "'", double8 == 27.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 201.0d + "'", double9 == 201.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 4.605170185988092d + "'", double10 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
    }

    @Test
    public void test1938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1938");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) 10);
        double double18 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11, 1, (int) (short) 0);
        double double23 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double26 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11, 0, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 37.0d + "'", double17 == 37.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
    }

    @Test
    public void test1939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1939");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sum(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray11, doubleArray19);
        double double24 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double27 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11, (int) (short) 1, (int) (short) 0);
        double double28 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double29 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11);
        double double31 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray11, (double) 100.0f);
        double double32 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        double double33 = org.apache.commons.math.stat.StatUtils.max(doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 21.0d + "'", double22 == 21.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-4.0d) + "'", double23 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 9.0d + "'", double24 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 12.0d + "'", double28 == 12.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 37.0d + "'", double29 == 37.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 10.0d + "'", double31 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 10.0d + "'", double33 == 10.0d);
    }

    @Test
    public void test1940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1940");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double[] doubleArray19 = new double[] { (-1L), 0, 10L };
        double double22 = org.apache.commons.math.stat.StatUtils.max(doubleArray19, 0, 0);
        double double23 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray19);
        double double25 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) 10);
        double double26 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11);
        double double29 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, 3.0d);
        double double30 = org.apache.commons.math.stat.StatUtils.min(doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double33 = org.apache.commons.math.stat.StatUtils.min(doubleArray11, (int) '#', (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 4.641588833612779d + "'", double7 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 101.0d + "'", double23 == 101.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 37.0d + "'", double25 == 37.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 37.0d + "'", double27 == 37.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 127.0d + "'", double29 == 127.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-1.0d) + "'", double30 == (-1.0d));
    }

    @Test
    public void test1941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1941");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, 27.0d);
        double double16 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) (byte) 10);
        double double17 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double20 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (int) (short) 0, (int) (byte) 0);
        double double21 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        double double22 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 27.0d + "'", double14 == 27.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 27.0d + "'", double16 == 27.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 100.0d + "'", double21 == 100.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 201.0d + "'", double22 == 201.0d);
    }

    @Test
    public void test1942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1942");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 27.0d);
        double double8 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) (byte) 10);
        double double9 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double11 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10L);
        double[] doubleArray15 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double16 = org.apache.commons.math.stat.StatUtils.mean(doubleArray15);
        double double18 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray15, (double) 100.0f);
        double[] doubleArray22 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double23 = org.apache.commons.math.stat.StatUtils.mean(doubleArray22);
        double double24 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray22);
        double double25 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray22);
        double double26 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray15, doubleArray22);
        double[] doubleArray30 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double31 = org.apache.commons.math.stat.StatUtils.mean(doubleArray30);
        double double32 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray30);
        double double33 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray15, doubleArray30);
        double[] doubleArray37 = new double[] { (-1L), 0, 10L };
        double double40 = org.apache.commons.math.stat.StatUtils.max(doubleArray37, 0, 0);
        double double41 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray37);
        double[] doubleArray45 = new double[] { (-1L), 0, 10L };
        double double48 = org.apache.commons.math.stat.StatUtils.max(doubleArray45, 0, 0);
        double double49 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray45);
        double double51 = org.apache.commons.math.stat.StatUtils.variance(doubleArray45, (double) 10);
        double double52 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray37, doubleArray45);
        double double54 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray15, doubleArray37, 100.0d);
        double double55 = org.apache.commons.math.stat.StatUtils.variance(doubleArray15);
        double[] doubleArray59 = new double[] { (-1L), 0, 10L };
        double double62 = org.apache.commons.math.stat.StatUtils.max(doubleArray59, 0, 0);
        double double63 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray59);
        double[] doubleArray67 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double68 = org.apache.commons.math.stat.StatUtils.mean(doubleArray67);
        double double69 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray67);
        double double70 = org.apache.commons.math.stat.StatUtils.sum(doubleArray67);
        double double71 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray59, doubleArray67);
        double double72 = org.apache.commons.math.stat.StatUtils.sum(doubleArray59);
        double double75 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray59, (int) (short) 1, (int) (short) 0);
        double double76 = org.apache.commons.math.stat.StatUtils.product(doubleArray59);
        double double78 = org.apache.commons.math.stat.StatUtils.variance(doubleArray59, (double) (byte) 10);
        double double80 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray15, doubleArray59, 0.0d);
        double double81 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray59);
        double double82 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray59);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 27.0d + "'", double6 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 27.0d + "'", double8 == 27.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 4.641588833612779d + "'", double9 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 27.0d + "'", double11 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 7.0d + "'", double16 == 7.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 7.0d + "'", double23 == 7.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 4.641588833612779d + "'", double24 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 4.605170185988092d + "'", double25 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 7.0d + "'", double31 == 7.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 4.641588833612779d + "'", double32 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 101.0d + "'", double41 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 101.0d + "'", double49 == 101.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 37.0d + "'", double51 == 37.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 127.0d + "'", double54 == 127.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 27.0d + "'", double55 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 101.0d + "'", double63 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 7.0d + "'", double68 == 7.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 4.641588833612779d + "'", double69 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 21.0d + "'", double70 == 21.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-4.0d) + "'", double71 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 9.0d + "'", double72 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-0.0d) + "'", double76 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 37.0d + "'", double78 == 37.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 127.0d + "'", double80 == 127.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 4.0d + "'", double81 == 4.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 101.0d + "'", double82 == 101.0d);
    }

    @Test
    public void test1943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1943");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        double[] doubleArray14 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray14);
        double double16 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray14);
        double double17 = org.apache.commons.math.stat.StatUtils.sum(doubleArray14);
        double double18 = org.apache.commons.math.stat.StatUtils.max(doubleArray14);
        double double19 = org.apache.commons.math.stat.StatUtils.variance(doubleArray14);
        double double20 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray14);
        // The following exception was thrown during execution in test generation
        try {
            double double23 = org.apache.commons.math.stat.StatUtils.min(doubleArray3, (int) 'a', 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.0d + "'", double15 == 7.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.641588833612779d + "'", double16 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 21.0d + "'", double17 == 21.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 27.0d + "'", double19 == 27.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
    }

    @Test
    public void test1944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1944");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double24 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double[] doubleArray28 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double29 = org.apache.commons.math.stat.StatUtils.mean(doubleArray28);
        double double30 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray28);
        double double31 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray28);
        double double33 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray28);
        double double34 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28);
        double double37 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28, (int) (short) 1, 0);
        double double38 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray18, doubleArray28);
        double double39 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.641588833612779d + "'", double23 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 7.0d + "'", double24 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 7.0d + "'", double29 == 7.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 4.641588833612779d + "'", double30 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.605170185988092d + "'", double31 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4.641588833612779d + "'", double33 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4.605170185988092d + "'", double34 == 4.605170185988092d);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 4.605170185988092d + "'", double39 == 4.605170185988092d);
    }

    @Test
    public void test1945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1945");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray20);
        double double26 = org.apache.commons.math.stat.StatUtils.min(doubleArray20);
        double double27 = org.apache.commons.math.stat.StatUtils.product(doubleArray20);
        // The following exception was thrown during execution in test generation
        try {
            double double30 = org.apache.commons.math.stat.StatUtils.variance(doubleArray20, (int) (short) 100, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 21.0d + "'", double8 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 100.0d + "'", double27 == 100.0d);
    }

    @Test
    public void test1946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1946");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 201.0d + "'", double7 == 201.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 201.0d + "'", double8 == 201.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
    }

    @Test
    public void test1947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1947");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) 10);
        double double18 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.max(doubleArray11);
        double double21 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) 10.0f);
        double double22 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 37.0d + "'", double17 == 37.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 37.0d + "'", double21 == 37.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 3.0d + "'", double22 == 3.0d);
    }

    @Test
    public void test1948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1948");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11, (int) (short) 1, 0);
        double double19 = org.apache.commons.math.stat.StatUtils.max(doubleArray11);
        double double20 = org.apache.commons.math.stat.StatUtils.min(doubleArray11);
        double double21 = org.apache.commons.math.stat.StatUtils.max(doubleArray11);
        double double23 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, (double) ' ');
        double double24 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double[] doubleArray28 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double29 = org.apache.commons.math.stat.StatUtils.mean(doubleArray28);
        double double30 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray28);
        double double31 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28);
        double double32 = org.apache.commons.math.stat.StatUtils.max(doubleArray28);
        double double35 = org.apache.commons.math.stat.StatUtils.sum(doubleArray28, (int) (short) 1, 0);
        double double36 = org.apache.commons.math.stat.StatUtils.mean(doubleArray28);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        double double43 = org.apache.commons.math.stat.StatUtils.max(doubleArray40, 0, 0);
        double double44 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray40);
        double[] doubleArray48 = new double[] { (-1L), 0, 10L };
        double double51 = org.apache.commons.math.stat.StatUtils.max(doubleArray48, 0, 0);
        double double52 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray48);
        double double54 = org.apache.commons.math.stat.StatUtils.variance(doubleArray48, (double) 10);
        double double55 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray40, doubleArray48);
        double double56 = org.apache.commons.math.stat.StatUtils.variance(doubleArray40);
        double double57 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray28, doubleArray40);
        double double58 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray40);
        // The following exception was thrown during execution in test generation
        try {
            double double61 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3, (int) ' ', (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 21.0d + "'", double7 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4.605170185988092d + "'", double14 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 10.0d + "'", double24 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 7.0d + "'", double29 == 7.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 4.641588833612779d + "'", double30 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.605170185988092d + "'", double31 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 10.0d + "'", double32 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 7.0d + "'", double36 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 101.0d + "'", double44 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 101.0d + "'", double52 == 101.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 37.0d + "'", double54 == 37.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 37.0d + "'", double56 == 37.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 4.0d + "'", double57 == 4.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 12.0d + "'", double58 == 12.0d);
    }

    @Test
    public void test1949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1949");
        double[] doubleArray5 = new double[] { '#', 10.0f, 'a', 12.0d, 37.0d };
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray5);
        double double7 = org.apache.commons.math.stat.StatUtils.min(doubleArray5);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray5, (double) 10.0f);
        double double11 = org.apache.commons.math.stat.StatUtils.variance(doubleArray5, 12247.0d);
        double double12 = org.apache.commons.math.stat.StatUtils.product(doubleArray5);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray5);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[35.0, 10.0, 97.0, 12.0, 37.0]");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 191.0d + "'", double6 == 191.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1237.7d + "'", double9 == 1237.7d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1237.699999988079d + "'", double11 == 1237.699999988079d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.50738E7d + "'", double12 == 1.50738E7d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 27.267451525600872d + "'", double13 == 27.267451525600872d);
    }

    @Test
    public void test1950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1950");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (-1L), 0, 10L };
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray10, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, 21.0d);
        double double17 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, 4.605170185988092d);
        double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double19 = org.apache.commons.math.stat.StatUtils.max(doubleArray10);
        double[] doubleArray23 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double24 = org.apache.commons.math.stat.StatUtils.mean(doubleArray23);
        double double25 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray23);
        double double26 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray23);
        double double27 = org.apache.commons.math.stat.StatUtils.variance(doubleArray23);
        double double28 = org.apache.commons.math.stat.StatUtils.min(doubleArray23);
        double[] doubleArray32 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double33 = org.apache.commons.math.stat.StatUtils.mean(doubleArray32);
        double double35 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray32, (double) 100.0f);
        double[] doubleArray39 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double40 = org.apache.commons.math.stat.StatUtils.mean(doubleArray39);
        double double41 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray39);
        double double42 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray39);
        double double43 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray32, doubleArray39);
        double[] doubleArray47 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double48 = org.apache.commons.math.stat.StatUtils.mean(doubleArray47);
        double double49 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray47);
        double double50 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray32, doubleArray47);
        double double51 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray47);
        double double52 = org.apache.commons.math.stat.StatUtils.variance(doubleArray47);
        double double53 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray23, doubleArray47);
        double double54 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray23);
        double double56 = org.apache.commons.math.stat.StatUtils.variance(doubleArray23, 0.0d);
        double double57 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray10, doubleArray23);
        double double58 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10);
        double double59 = org.apache.commons.math.stat.StatUtils.max(doubleArray10);
        double double62 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray10, (int) (byte) 0, (int) (byte) 1);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 37.0d + "'", double15 == 37.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 127.00000000000001d + "'", double17 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 3.0d + "'", double18 == 3.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 7.0d + "'", double24 == 7.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 4.641588833612779d + "'", double25 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 4.605170185988092d + "'", double26 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 27.0d + "'", double27 == 27.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 7.0d + "'", double33 == 7.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 10.0d + "'", double35 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 7.0d + "'", double40 == 7.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 4.641588833612779d + "'", double41 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 4.605170185988092d + "'", double42 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 7.0d + "'", double48 == 7.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 4.641588833612779d + "'", double49 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 4.641588833612779d + "'", double51 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 27.0d + "'", double52 == 27.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 201.0d + "'", double54 == 201.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 27.0d + "'", double56 == 27.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-12.0d) + "'", double57 == (-12.0d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 37.0d + "'", double58 == 37.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 10.0d + "'", double59 == 10.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
    }

    @Test
    public void test1951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1951");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, 0.0d);
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double double34 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray31, (double) 100.0f);
        double double35 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double[] doubleArray39 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double40 = org.apache.commons.math.stat.StatUtils.mean(doubleArray39);
        double double42 = org.apache.commons.math.stat.StatUtils.variance(doubleArray39, 27.0d);
        double double44 = org.apache.commons.math.stat.StatUtils.variance(doubleArray39, (double) (byte) 10);
        double double45 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray31, doubleArray39);
        double double46 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray39);
        double double47 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray39);
        double double49 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray39, 21.0d);
        double double52 = org.apache.commons.math.stat.StatUtils.mean(doubleArray39, (int) (short) 0, (int) (short) 1);
        double double55 = org.apache.commons.math.stat.StatUtils.product(doubleArray39, (int) (byte) 0, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            double double58 = org.apache.commons.math.stat.StatUtils.variance(doubleArray39, (int) 'a', (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 127.0d + "'", double27 == 127.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 7.0d + "'", double32 == 7.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 10.0d + "'", double34 == 10.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 7.0d + "'", double35 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 7.0d + "'", double40 == 7.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 27.0d + "'", double42 == 27.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 27.0d + "'", double44 == 27.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 201.0d + "'", double47 == 201.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 10.0d + "'", double52 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
    }

    @Test
    public void test1952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1952");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10);
        double double16 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double18 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, (double) 10L);
        double double19 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 27.0d + "'", double15 == 27.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.641588833612779d + "'", double16 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 27.0d + "'", double18 == 27.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4.605170185988092d + "'", double19 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
    }

    @Test
    public void test1953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1953");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double3 = org.apache.commons.math.stat.StatUtils.mean(doubleArray0, (int) (byte) 10, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1954");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, 0.0d);
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double double34 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray31, (double) 100.0f);
        double double35 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double[] doubleArray39 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double40 = org.apache.commons.math.stat.StatUtils.mean(doubleArray39);
        double double42 = org.apache.commons.math.stat.StatUtils.variance(doubleArray39, 27.0d);
        double double44 = org.apache.commons.math.stat.StatUtils.variance(doubleArray39, (double) (byte) 10);
        double double45 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray31, doubleArray39);
        double double46 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray39);
        double double47 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray39);
        double double49 = org.apache.commons.math.stat.StatUtils.variance(doubleArray39, (double) (short) 100);
        double double50 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray39);
        double double52 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray39, (double) 1L);
        double double53 = org.apache.commons.math.stat.StatUtils.product(doubleArray39);
        double double54 = org.apache.commons.math.stat.StatUtils.variance(doubleArray39);
        double double55 = org.apache.commons.math.stat.StatUtils.mean(doubleArray39);
        double double56 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 127.0d + "'", double27 == 127.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 7.0d + "'", double32 == 7.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 10.0d + "'", double34 == 10.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 7.0d + "'", double35 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 7.0d + "'", double40 == 7.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 27.0d + "'", double42 == 27.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 27.0d + "'", double44 == 27.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 201.0d + "'", double47 == 201.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 27.0d + "'", double49 == 27.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4.641588833612779d + "'", double50 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 100.0d + "'", double53 == 100.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 27.0d + "'", double54 == 27.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 7.0d + "'", double55 == 7.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 4.641588833612779d + "'", double56 == 4.641588833612779d);
    }

    @Test
    public void test1955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1955");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.variance(doubleArray18);
        double double25 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray18, 38.2d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 27.0d + "'", double23 == 27.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 5.752000000000001d + "'", double25 == 5.752000000000001d);
    }

    @Test
    public void test1956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1956");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) (byte) 100);
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double14 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        double double15 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13);
        double double16 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray13);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double19 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray13, 37.0d);
        double double20 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray13);
        double double21 = org.apache.commons.math.stat.StatUtils.product(doubleArray13);
        double double22 = org.apache.commons.math.stat.StatUtils.mean(doubleArray13);
        // The following exception was thrown during execution in test generation
        try {
            double double25 = org.apache.commons.math.stat.StatUtils.max(doubleArray13, (-1), (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 4.641588833612779d + "'", double15 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.605170185988092d + "'", double16 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 27.0d + "'", double17 == 27.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.605170185988092d + "'", double20 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 100.0d + "'", double21 == 100.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 7.0d + "'", double22 == 7.0d);
    }

    @Test
    public void test1957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1957");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        double double11 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double12 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double13 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        double double14 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray19, (double) 100.0f);
        double double23 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double28 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double double30 = org.apache.commons.math.stat.StatUtils.variance(doubleArray27, 27.0d);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray27, (double) (byte) 10);
        double double33 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray19, doubleArray27);
        double double34 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray27);
        double double35 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray27);
        double double36 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double37 = org.apache.commons.math.stat.StatUtils.product(doubleArray27);
        double double39 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray27, 37.000000000000114d);
        double double40 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double41 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 100.0d + "'", double13 == 100.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 201.0d + "'", double14 == 201.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 201.0d + "'", double15 == 201.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 7.0d + "'", double23 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 7.0d + "'", double28 == 7.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 27.0d + "'", double30 == 27.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4.605170185988092d + "'", double34 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 4.605170185988092d + "'", double35 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 4.641588833612779d + "'", double36 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 100.0d + "'", double37 == 100.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 4.605170185988092d + "'", double40 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 4.641588833612779d + "'", double41 == 4.641588833612779d);
    }

    @Test
    public void test1958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1958");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double[] doubleArray19 = new double[] { (-1L), 0, 10L };
        double double22 = org.apache.commons.math.stat.StatUtils.max(doubleArray19, 0, 0);
        double double23 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray19);
        double double25 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) 10);
        double double26 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11);
        double double29 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, 3.0d);
        double double30 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double31 = org.apache.commons.math.stat.StatUtils.product(doubleArray11);
        double[] doubleArray35 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double36 = org.apache.commons.math.stat.StatUtils.mean(doubleArray35);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35);
        double double38 = org.apache.commons.math.stat.StatUtils.sum(doubleArray35);
        double double39 = org.apache.commons.math.stat.StatUtils.sum(doubleArray35);
        double double40 = org.apache.commons.math.stat.StatUtils.sum(doubleArray35);
        double double41 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray35);
        double double42 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray35);
        double double44 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray35, 10.0d);
        double[] doubleArray48 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double49 = org.apache.commons.math.stat.StatUtils.mean(doubleArray48);
        double double51 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray48, (double) 100.0f);
        double double52 = org.apache.commons.math.stat.StatUtils.mean(doubleArray48);
        double[] doubleArray56 = new double[] { (-1L), 0, 10L };
        double double59 = org.apache.commons.math.stat.StatUtils.max(doubleArray56, 0, 0);
        double double60 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray56);
        double[] doubleArray64 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double65 = org.apache.commons.math.stat.StatUtils.mean(doubleArray64);
        double double66 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray64);
        double double67 = org.apache.commons.math.stat.StatUtils.sum(doubleArray64);
        double double68 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray56, doubleArray64);
        double double69 = org.apache.commons.math.stat.StatUtils.sum(doubleArray56);
        double double72 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray56, (int) (short) 1, (int) (short) 0);
        double double73 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray48, doubleArray56);
        double double75 = org.apache.commons.math.stat.StatUtils.variance(doubleArray56, (double) (short) 100);
        double double76 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray35, doubleArray56);
        double double78 = org.apache.commons.math.stat.StatUtils.variance(doubleArray35, (double) (short) 0);
        double double79 = org.apache.commons.math.stat.StatUtils.variance(doubleArray35);
        double double81 = org.apache.commons.math.stat.StatUtils.variance(doubleArray35, 1237.699999988079d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 4.641588833612779d + "'", double7 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 101.0d + "'", double23 == 101.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 37.0d + "'", double25 == 37.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 37.0d + "'", double27 == 37.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 127.0d + "'", double29 == 127.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.0d) + "'", double31 == (-0.0d));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 7.0d + "'", double36 == 7.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 21.0d + "'", double38 == 21.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 21.0d + "'", double39 == 21.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 21.0d + "'", double40 == 21.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 201.0d + "'", double41 == 201.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-12.0d) + "'", double42 == (-12.0d));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 7.0d + "'", double49 == 7.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 10.0d + "'", double51 == 10.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 7.0d + "'", double52 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 101.0d + "'", double60 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 7.0d + "'", double65 == 7.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 4.641588833612779d + "'", double66 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 21.0d + "'", double67 == 21.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-4.0d) + "'", double68 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 9.0d + "'", double69 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 12.0d + "'", double73 == 12.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 37.0d + "'", double75 == 37.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 12.0d + "'", double76 == 12.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 27.0d + "'", double78 == 27.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 27.0d + "'", double79 == 27.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 27.0d + "'", double81 == 27.0d);
    }

    @Test
    public void test1959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1959");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray11, (double) 100.0f);
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, 27.0d);
        double double24 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) (byte) 10);
        double double25 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, (double) (short) 1);
        double double30 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11, 0, (int) (byte) 0);
        double[] doubleArray34 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double35 = org.apache.commons.math.stat.StatUtils.mean(doubleArray34);
        double double36 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray34);
        double double37 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray34);
        double double38 = org.apache.commons.math.stat.StatUtils.variance(doubleArray34);
        double double39 = org.apache.commons.math.stat.StatUtils.min(doubleArray34);
        double[] doubleArray43 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double44 = org.apache.commons.math.stat.StatUtils.mean(doubleArray43);
        double double46 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray43, (double) 100.0f);
        double[] doubleArray50 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double51 = org.apache.commons.math.stat.StatUtils.mean(doubleArray50);
        double double52 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray50);
        double double53 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray50);
        double double54 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray43, doubleArray50);
        double double56 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray34, doubleArray43, (-0.9199999999999999d));
        double double57 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray11, doubleArray34);
        double[] doubleArray58 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double60 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray11, doubleArray58, (double) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.0d + "'", double15 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 27.0d + "'", double22 == 27.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 27.0d + "'", double24 == 27.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 7.0d + "'", double35 == 7.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 4.641588833612779d + "'", double36 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.605170185988092d + "'", double37 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 27.0d + "'", double38 == 27.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 7.0d + "'", double44 == 7.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 10.0d + "'", double46 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 7.0d + "'", double51 == 7.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 4.641588833612779d + "'", double52 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 4.605170185988092d + "'", double53 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-2.220446049250313E-16d) + "'", double56 == (-2.220446049250313E-16d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
    }

    @Test
    public void test1960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1960");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, 0.0d);
        double double28 = org.apache.commons.math.stat.StatUtils.variance(doubleArray12);
        double double31 = org.apache.commons.math.stat.StatUtils.variance(doubleArray12, 1, (int) (byte) 1);
        double double32 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        // The following exception was thrown during execution in test generation
        try {
            double double35 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray12, 100, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 127.0d + "'", double27 == 127.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 37.0d + "'", double28 == 37.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 101.0d + "'", double32 == 101.0d);
    }

    @Test
    public void test1961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1961");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray19);
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double28 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double double29 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double30 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray27);
        double double31 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray27);
        double double33 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray27);
        double double34 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double36 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) '#');
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double38 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double41 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double[] doubleArray45 = new double[] { (-1L), 0, 10L };
        double double48 = org.apache.commons.math.stat.StatUtils.max(doubleArray45, 0, 0);
        double double50 = org.apache.commons.math.stat.StatUtils.variance(doubleArray45, 0.0d);
        double double51 = org.apache.commons.math.stat.StatUtils.mean(doubleArray45);
        double double53 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray45, 0.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.605170185988092d + "'", double22 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 7.0d + "'", double28 == 7.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4.641588833612779d + "'", double29 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.641588833612779d + "'", double31 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 27.0d + "'", double36 == 27.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 21.0d + "'", double38 == 21.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 37.0d + "'", double50 == 37.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 3.0d + "'", double51 == 3.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 127.0d + "'", double53 == 127.0d);
    }

    @Test
    public void test1962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1962");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10);
        double double10 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        double double11 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double12 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 27.267451525600872d, 10, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-0.0d) + "'", double10 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 101.0d + "'", double11 == 101.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 10.0d + "'", double12 == 10.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 3.0d + "'", double13 == 3.0d);
    }

    @Test
    public void test1963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1963");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray19);
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double28 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double double29 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double30 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray27);
        double double31 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray27);
        double double33 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray27);
        double double34 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double36 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) '#');
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double38 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray42 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double43 = org.apache.commons.math.stat.StatUtils.mean(doubleArray42);
        double double45 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray42, (double) 100.0f);
        double[] doubleArray49 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double50 = org.apache.commons.math.stat.StatUtils.mean(doubleArray49);
        double double51 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray49);
        double double52 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray49);
        double double53 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray42, doubleArray49);
        double[] doubleArray57 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double58 = org.apache.commons.math.stat.StatUtils.mean(doubleArray57);
        double double59 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray57);
        double double60 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray42, doubleArray57);
        double double61 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray57);
        double double62 = org.apache.commons.math.stat.StatUtils.variance(doubleArray57);
        double double63 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray57);
        double double64 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double65 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double68 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, (int) (short) 100, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.605170185988092d + "'", double22 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 7.0d + "'", double28 == 7.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4.641588833612779d + "'", double29 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.641588833612779d + "'", double31 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 27.0d + "'", double36 == 27.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 21.0d + "'", double38 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 7.0d + "'", double43 == 7.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 10.0d + "'", double45 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 7.0d + "'", double50 == 7.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 4.641588833612779d + "'", double51 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 4.605170185988092d + "'", double52 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 7.0d + "'", double58 == 7.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4.641588833612779d + "'", double59 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 4.641588833612779d + "'", double61 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 27.0d + "'", double62 == 27.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 201.0d + "'", double64 == 201.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 27.0d + "'", double65 == 27.0d);
    }

    @Test
    public void test1964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1964");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (-1L), 0, 10L };
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray10, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, 21.0d);
        double double17 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, 4.605170185988092d);
        double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double19 = org.apache.commons.math.stat.StatUtils.max(doubleArray10);
        double[] doubleArray23 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double24 = org.apache.commons.math.stat.StatUtils.mean(doubleArray23);
        double double25 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray23);
        double double26 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray23);
        double double27 = org.apache.commons.math.stat.StatUtils.variance(doubleArray23);
        double double28 = org.apache.commons.math.stat.StatUtils.min(doubleArray23);
        double[] doubleArray32 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double33 = org.apache.commons.math.stat.StatUtils.mean(doubleArray32);
        double double35 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray32, (double) 100.0f);
        double[] doubleArray39 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double40 = org.apache.commons.math.stat.StatUtils.mean(doubleArray39);
        double double41 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray39);
        double double42 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray39);
        double double43 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray32, doubleArray39);
        double[] doubleArray47 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double48 = org.apache.commons.math.stat.StatUtils.mean(doubleArray47);
        double double49 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray47);
        double double50 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray32, doubleArray47);
        double double51 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray47);
        double double52 = org.apache.commons.math.stat.StatUtils.variance(doubleArray47);
        double double53 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray23, doubleArray47);
        double double54 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray23);
        double double56 = org.apache.commons.math.stat.StatUtils.variance(doubleArray23, 0.0d);
        double double57 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray10, doubleArray23);
        double double58 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double59 = org.apache.commons.math.stat.StatUtils.product(doubleArray10);
        double double60 = org.apache.commons.math.stat.StatUtils.product(doubleArray10);
        double double61 = org.apache.commons.math.stat.StatUtils.max(doubleArray10);
        double double62 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 37.0d + "'", double15 == 37.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 127.00000000000001d + "'", double17 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 3.0d + "'", double18 == 3.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 7.0d + "'", double24 == 7.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 4.641588833612779d + "'", double25 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 4.605170185988092d + "'", double26 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 27.0d + "'", double27 == 27.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 7.0d + "'", double33 == 7.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 10.0d + "'", double35 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 7.0d + "'", double40 == 7.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 4.641588833612779d + "'", double41 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 4.605170185988092d + "'", double42 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 7.0d + "'", double48 == 7.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 4.641588833612779d + "'", double49 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 4.641588833612779d + "'", double51 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 27.0d + "'", double52 == 27.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 201.0d + "'", double54 == 201.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 27.0d + "'", double56 == 27.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-12.0d) + "'", double57 == (-12.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-0.0d) + "'", double59 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-0.0d) + "'", double60 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 10.0d + "'", double61 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
    }

    @Test
    public void test1965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1965");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray19);
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double28 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double double29 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double30 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray27);
        double double31 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray27);
        double double33 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray27);
        double double34 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double35 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double38 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3, (int) (short) 100, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.605170185988092d + "'", double22 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 7.0d + "'", double28 == 7.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4.641588833612779d + "'", double29 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.641588833612779d + "'", double31 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 201.0d + "'", double34 == 201.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 27.0d + "'", double35 == 27.0d);
    }

    @Test
    public void test1966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1966");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray19);
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double28 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double double29 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double30 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray27);
        double double31 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray27);
        double double33 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray27);
        double double34 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double35 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray27);
        double double36 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double[] doubleArray40 = new double[] { (-1L), 0, 10L };
        double double43 = org.apache.commons.math.stat.StatUtils.max(doubleArray40, 0, 0);
        double double44 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray40);
        double double46 = org.apache.commons.math.stat.StatUtils.variance(doubleArray40, (double) 10);
        double[] doubleArray50 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double51 = org.apache.commons.math.stat.StatUtils.mean(doubleArray50);
        double double52 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray50);
        double double53 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray50);
        double double54 = org.apache.commons.math.stat.StatUtils.variance(doubleArray50);
        double double55 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray40, doubleArray50);
        double[] doubleArray59 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double60 = org.apache.commons.math.stat.StatUtils.mean(doubleArray59);
        double double61 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray59);
        double double62 = org.apache.commons.math.stat.StatUtils.sum(doubleArray59);
        double double63 = org.apache.commons.math.stat.StatUtils.max(doubleArray59);
        double double65 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray59, (double) (byte) 100);
        double[] doubleArray69 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double70 = org.apache.commons.math.stat.StatUtils.mean(doubleArray69);
        double double71 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray69);
        double double72 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray69);
        double double73 = org.apache.commons.math.stat.StatUtils.variance(doubleArray69);
        double double75 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray59, doubleArray69, 37.0d);
        double double76 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray50, doubleArray69);
        double double78 = org.apache.commons.math.stat.StatUtils.variance(doubleArray69, (-0.0d));
        double double80 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray27, doubleArray69, 27.0d);
        double double81 = org.apache.commons.math.stat.StatUtils.sum(doubleArray27);
        double double84 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray27, (int) (short) 0, 0);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 21.0d + "'", double7 == 21.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.605170185988092d + "'", double22 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 7.0d + "'", double28 == 7.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4.641588833612779d + "'", double29 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.641588833612779d + "'", double31 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4.641588833612779d + "'", double34 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 4.605170185988092d + "'", double35 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 4.641588833612779d + "'", double36 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 101.0d + "'", double44 == 101.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 37.0d + "'", double46 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 7.0d + "'", double51 == 7.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 4.641588833612779d + "'", double52 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 4.605170185988092d + "'", double53 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 27.0d + "'", double54 == 27.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-4.0d) + "'", double55 == (-4.0d));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 7.0d + "'", double60 == 7.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 4.641588833612779d + "'", double61 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 21.0d + "'", double62 == 21.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 10.0d + "'", double63 == 10.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 10.0d + "'", double65 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 7.0d + "'", double70 == 7.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 4.641588833612779d + "'", double71 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 4.605170185988092d + "'", double72 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 27.0d + "'", double73 == 27.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 27.0d + "'", double78 == 27.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 21.0d + "'", double81 == 21.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double84));
    }

    @Test
    public void test1967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1967");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double2 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray0, (-0.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1968");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11, (int) (byte) 1, (int) (byte) 0);
        double double19 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double[] doubleArray23 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double24 = org.apache.commons.math.stat.StatUtils.mean(doubleArray23);
        double double26 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray23, (double) 100.0f);
        double[] doubleArray30 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double31 = org.apache.commons.math.stat.StatUtils.mean(doubleArray30);
        double double32 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray30);
        double double33 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray30);
        double double34 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray23, doubleArray30);
        double[] doubleArray38 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double39 = org.apache.commons.math.stat.StatUtils.mean(doubleArray38);
        double double40 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray38);
        double double41 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray23, doubleArray38);
        double double42 = org.apache.commons.math.stat.StatUtils.mean(doubleArray38);
        double[] doubleArray46 = new double[] { (-1L), 0, 10L };
        double double49 = org.apache.commons.math.stat.StatUtils.max(doubleArray46, 0, 0);
        double double50 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray46);
        double[] doubleArray54 = new double[] { (-1L), 0, 10L };
        double double57 = org.apache.commons.math.stat.StatUtils.max(doubleArray54, 0, 0);
        double double58 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray54);
        double double60 = org.apache.commons.math.stat.StatUtils.variance(doubleArray54, (double) 10);
        double double61 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray46, doubleArray54);
        double double62 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray54);
        double double63 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray38, doubleArray54);
        double[] doubleArray67 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double68 = org.apache.commons.math.stat.StatUtils.mean(doubleArray67);
        double double70 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray67, (double) 100.0f);
        double double71 = org.apache.commons.math.stat.StatUtils.variance(doubleArray67);
        double double72 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray38, doubleArray67);
        double double73 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray67);
        double double75 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray67, (double) (byte) 100);
        double double76 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray67);
        double double77 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 201.0d + "'", double19 == 201.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 7.0d + "'", double24 == 7.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 7.0d + "'", double31 == 7.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 4.641588833612779d + "'", double32 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4.605170185988092d + "'", double33 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 7.0d + "'", double39 == 7.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 4.641588833612779d + "'", double40 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 7.0d + "'", double42 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 101.0d + "'", double50 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 101.0d + "'", double58 == 101.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 37.0d + "'", double60 == 37.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 101.0d + "'", double62 == 101.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 4.0d + "'", double63 == 4.0d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 7.0d + "'", double68 == 7.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 10.0d + "'", double70 == 10.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 27.0d + "'", double71 == 27.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 4.641588833612779d + "'", double73 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 10.0d + "'", double75 == 10.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 21.0d + "'", double77 == 21.0d);
    }

    @Test
    public void test1969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1969");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, 27.0d);
        double double16 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) (byte) 10);
        double double17 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray22 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double23 = org.apache.commons.math.stat.StatUtils.mean(doubleArray22);
        double double24 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray22);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray22);
        double double26 = org.apache.commons.math.stat.StatUtils.max(doubleArray22);
        double[] doubleArray30 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double31 = org.apache.commons.math.stat.StatUtils.mean(doubleArray30);
        double double33 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray30, (double) 100.0f);
        double double34 = org.apache.commons.math.stat.StatUtils.mean(doubleArray30);
        double[] doubleArray38 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double39 = org.apache.commons.math.stat.StatUtils.mean(doubleArray38);
        double double41 = org.apache.commons.math.stat.StatUtils.variance(doubleArray38, 27.0d);
        double double43 = org.apache.commons.math.stat.StatUtils.variance(doubleArray38, (double) (byte) 10);
        double double44 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray30, doubleArray38);
        double double46 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray22, doubleArray30, (double) (short) 1);
        double[] doubleArray50 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double51 = org.apache.commons.math.stat.StatUtils.mean(doubleArray50);
        double double52 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray50);
        double double53 = org.apache.commons.math.stat.StatUtils.sum(doubleArray50);
        double double54 = org.apache.commons.math.stat.StatUtils.max(doubleArray50);
        double double56 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray50, (double) (byte) 100);
        double[] doubleArray60 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double61 = org.apache.commons.math.stat.StatUtils.mean(doubleArray60);
        double double62 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray60);
        double double63 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray60);
        double double64 = org.apache.commons.math.stat.StatUtils.variance(doubleArray60);
        double double66 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray50, doubleArray60, 37.0d);
        double double67 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray30, doubleArray60);
        double double68 = org.apache.commons.math.stat.StatUtils.sum(doubleArray60);
        double double69 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray60);
        double double72 = org.apache.commons.math.stat.StatUtils.product(doubleArray60, 1, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            double double75 = org.apache.commons.math.stat.StatUtils.mean(doubleArray60, (int) (byte) -1, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 27.0d + "'", double14 == 27.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 27.0d + "'", double16 == 27.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 21.0d + "'", double18 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 7.0d + "'", double23 == 7.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 4.641588833612779d + "'", double24 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 21.0d + "'", double25 == 21.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 7.0d + "'", double31 == 7.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 10.0d + "'", double33 == 10.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 7.0d + "'", double34 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 7.0d + "'", double39 == 7.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 27.0d + "'", double41 == 27.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 27.0d + "'", double43 == 27.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 7.0d + "'", double51 == 7.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 4.641588833612779d + "'", double52 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 21.0d + "'", double53 == 21.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 10.0d + "'", double54 == 10.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 10.0d + "'", double56 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 7.0d + "'", double61 == 7.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 4.641588833612779d + "'", double62 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 4.605170185988092d + "'", double63 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 27.0d + "'", double64 == 27.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 21.0d + "'", double68 == 21.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 10.0d + "'", double72 == 10.0d);
    }

    @Test
    public void test1970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1970");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray10 = new double[] { (-1L), 0, 10L };
        double double13 = org.apache.commons.math.stat.StatUtils.max(doubleArray10, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.variance(doubleArray10, 21.0d);
        double double17 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray10, 4.605170185988092d);
        double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double19 = org.apache.commons.math.stat.StatUtils.max(doubleArray10);
        double double20 = org.apache.commons.math.stat.StatUtils.sum(doubleArray10);
        double[] doubleArray24 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double25 = org.apache.commons.math.stat.StatUtils.mean(doubleArray24);
        double double26 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray24);
        double double27 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray24);
        double double28 = org.apache.commons.math.stat.StatUtils.max(doubleArray24);
        double double31 = org.apache.commons.math.stat.StatUtils.sum(doubleArray24, (int) (short) 1, 0);
        double double34 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray24, (int) (short) 0, (int) (byte) 0);
        double double36 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray10, doubleArray24, (double) '#');
        double double39 = org.apache.commons.math.stat.StatUtils.min(doubleArray24, 0, (int) (short) 0);
        double double40 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray24);
        double double41 = org.apache.commons.math.stat.StatUtils.sum(doubleArray24);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 37.0d + "'", double15 == 37.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 127.00000000000001d + "'", double17 == 127.00000000000001d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 3.0d + "'", double18 == 3.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 9.0d + "'", double20 == 9.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 7.0d + "'", double25 == 7.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 4.641588833612779d + "'", double26 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 4.605170185988092d + "'", double27 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 10.0d + "'", double28 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 127.0d + "'", double36 == 127.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 4.605170185988092d + "'", double40 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 21.0d + "'", double41 == 21.0d);
    }

    @Test
    public void test1971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1971");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) 10);
        double double18 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double22 = org.apache.commons.math.stat.StatUtils.product(doubleArray3, (int) (byte) 1, (int) (short) 1);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double27 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (-1), 0, (double) (-1.0f));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 37.0d + "'", double17 == 37.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 37.0d + "'", double19 == 37.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 9.0d + "'", double23 == 9.0d);
    }

    @Test
    public void test1972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1972");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, 27.0d);
        double double16 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) (byte) 10);
        double double17 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double22 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11, (-1), (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 27.0d + "'", double14 == 27.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 27.0d + "'", double16 == 27.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4.605170185988092d + "'", double18 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 201.0d + "'", double19 == 201.0d);
    }

    @Test
    public void test1973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1973");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, 0.0d);
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double double34 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray31, (double) 100.0f);
        double double35 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double[] doubleArray39 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double40 = org.apache.commons.math.stat.StatUtils.mean(doubleArray39);
        double double42 = org.apache.commons.math.stat.StatUtils.variance(doubleArray39, 27.0d);
        double double44 = org.apache.commons.math.stat.StatUtils.variance(doubleArray39, (double) (byte) 10);
        double double45 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray31, doubleArray39);
        double double46 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray39);
        double double47 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double48 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double51 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3, 10, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 127.0d + "'", double27 == 127.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 7.0d + "'", double32 == 7.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 10.0d + "'", double34 == 10.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 7.0d + "'", double35 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 7.0d + "'", double40 == 7.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 27.0d + "'", double42 == 27.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 27.0d + "'", double44 == 27.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 7.0d + "'", double47 == 7.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 4.641588833612779d + "'", double48 == 4.641588833612779d);
    }

    @Test
    public void test1974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1974");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double[] doubleArray19 = new double[] { (-1L), 0, 10L };
        double double22 = org.apache.commons.math.stat.StatUtils.max(doubleArray19, 0, 0);
        double double23 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray19);
        double double25 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) 10);
        double double26 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11);
        double double29 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, 3.0d);
        double double30 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double31 = org.apache.commons.math.stat.StatUtils.product(doubleArray11);
        double[] doubleArray35 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double36 = org.apache.commons.math.stat.StatUtils.mean(doubleArray35);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35);
        double double38 = org.apache.commons.math.stat.StatUtils.sum(doubleArray35);
        double double39 = org.apache.commons.math.stat.StatUtils.sum(doubleArray35);
        double double40 = org.apache.commons.math.stat.StatUtils.sum(doubleArray35);
        double double41 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray35);
        double double42 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray35);
        double double44 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray35, 10.0d);
        double[] doubleArray48 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double49 = org.apache.commons.math.stat.StatUtils.mean(doubleArray48);
        double double51 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray48, (double) 100.0f);
        double double52 = org.apache.commons.math.stat.StatUtils.mean(doubleArray48);
        double[] doubleArray56 = new double[] { (-1L), 0, 10L };
        double double59 = org.apache.commons.math.stat.StatUtils.max(doubleArray56, 0, 0);
        double double60 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray56);
        double[] doubleArray64 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double65 = org.apache.commons.math.stat.StatUtils.mean(doubleArray64);
        double double66 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray64);
        double double67 = org.apache.commons.math.stat.StatUtils.sum(doubleArray64);
        double double68 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray56, doubleArray64);
        double double69 = org.apache.commons.math.stat.StatUtils.sum(doubleArray56);
        double double72 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray56, (int) (short) 1, (int) (short) 0);
        double double73 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray48, doubleArray56);
        double double75 = org.apache.commons.math.stat.StatUtils.variance(doubleArray56, (double) (short) 100);
        double double76 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray35, doubleArray56);
        double double77 = org.apache.commons.math.stat.StatUtils.mean(doubleArray56);
        double double78 = org.apache.commons.math.stat.StatUtils.max(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 4.641588833612779d + "'", double7 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 101.0d + "'", double23 == 101.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 37.0d + "'", double25 == 37.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 37.0d + "'", double27 == 37.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 127.0d + "'", double29 == 127.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.0d) + "'", double31 == (-0.0d));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 7.0d + "'", double36 == 7.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 21.0d + "'", double38 == 21.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 21.0d + "'", double39 == 21.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 21.0d + "'", double40 == 21.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 201.0d + "'", double41 == 201.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-12.0d) + "'", double42 == (-12.0d));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 7.0d + "'", double49 == 7.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 10.0d + "'", double51 == 10.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 7.0d + "'", double52 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 101.0d + "'", double60 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 7.0d + "'", double65 == 7.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 4.641588833612779d + "'", double66 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 21.0d + "'", double67 == 21.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-4.0d) + "'", double68 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 9.0d + "'", double69 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 12.0d + "'", double73 == 12.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 37.0d + "'", double75 == 37.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 12.0d + "'", double76 == 12.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 3.0d + "'", double77 == 3.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 10.0d + "'", double78 == 10.0d);
    }

    @Test
    public void test1975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1975");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double[] doubleArray11 = new double[] { (-1L), 0, 10L };
        double double14 = org.apache.commons.math.stat.StatUtils.max(doubleArray11, 0, 0);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray11);
        double[] doubleArray19 = new double[] { (-1L), 0, 10L };
        double double22 = org.apache.commons.math.stat.StatUtils.max(doubleArray19, 0, 0);
        double double23 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray19);
        double double25 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) 10);
        double double26 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11);
        double double29 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, 3.0d);
        double double30 = org.apache.commons.math.stat.StatUtils.min(doubleArray11);
        double double31 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double double34 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11, (int) (short) -1, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 4.641588833612779d + "'", double7 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 101.0d + "'", double15 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 101.0d + "'", double23 == 101.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 37.0d + "'", double25 == 37.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 37.0d + "'", double27 == 37.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 127.0d + "'", double29 == 127.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-1.0d) + "'", double30 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 3.0d + "'", double31 == 3.0d);
    }

    @Test
    public void test1976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1976");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double11 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double13 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 1.50738E7d);
        double[] doubleArray17 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double18 = org.apache.commons.math.stat.StatUtils.mean(doubleArray17);
        double double19 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray17);
        double double20 = org.apache.commons.math.stat.StatUtils.sum(doubleArray17);
        double double21 = org.apache.commons.math.stat.StatUtils.max(doubleArray17);
        double double23 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray17, (double) (byte) 100);
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double28 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double double29 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double30 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray27);
        double double31 = org.apache.commons.math.stat.StatUtils.variance(doubleArray27);
        double double33 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray17, doubleArray27, 37.0d);
        double double34 = org.apache.commons.math.stat.StatUtils.max(doubleArray17);
        double double36 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray17, 1.0d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 4.641588833612779d + "'", double8 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 7.0d + "'", double9 == 7.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 4.641588833612779d + "'", double11 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 27.0d + "'", double13 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 7.0d + "'", double18 == 7.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4.641588833612779d + "'", double19 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 21.0d + "'", double20 == 21.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 7.0d + "'", double28 == 7.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4.641588833612779d + "'", double29 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 4.605170185988092d + "'", double30 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 27.0d + "'", double31 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 10.0d + "'", double34 == 10.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
    }

    @Test
    public void test1977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1977");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double24 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double[] doubleArray28 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double29 = org.apache.commons.math.stat.StatUtils.mean(doubleArray28);
        double double30 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray28);
        double double31 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray28);
        double double33 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray28);
        double double34 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28);
        double double37 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28, (int) (short) 1, 0);
        double double38 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray18, doubleArray28);
        // The following exception was thrown during execution in test generation
        try {
            double double42 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray18, (int) (short) 10, 100, 7.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.641588833612779d + "'", double23 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 7.0d + "'", double24 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 7.0d + "'", double29 == 7.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 4.641588833612779d + "'", double30 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.605170185988092d + "'", double31 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4.641588833612779d + "'", double33 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 4.605170185988092d + "'", double34 == 4.605170185988092d);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
    }

    @Test
    public void test1978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1978");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        double double29 = org.apache.commons.math.stat.StatUtils.max(doubleArray26, 0, 0);
        double double30 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray26);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        double double37 = org.apache.commons.math.stat.StatUtils.max(doubleArray34, 0, 0);
        double double38 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray34);
        double double40 = org.apache.commons.math.stat.StatUtils.variance(doubleArray34, (double) 10);
        double double41 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray26, doubleArray34);
        double double42 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray34);
        double double43 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray18, doubleArray34);
        double double44 = org.apache.commons.math.stat.StatUtils.sum(doubleArray18);
        double double45 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray18);
        double double46 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray18);
        double double48 = org.apache.commons.math.stat.StatUtils.variance(doubleArray18, 4.641588833612779d);
        // The following exception was thrown during execution in test generation
        try {
            double double51 = org.apache.commons.math.stat.StatUtils.max(doubleArray18, 100, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 7.0d + "'", double22 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 101.0d + "'", double30 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 101.0d + "'", double38 == 101.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 37.0d + "'", double40 == 37.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 101.0d + "'", double42 == 101.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4.0d + "'", double43 == 4.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 21.0d + "'", double44 == 21.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 4.605170185988092d + "'", double45 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 4.605170185988092d + "'", double46 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 27.0d + "'", double48 == 27.0d);
    }

    @Test
    public void test1979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1979");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double13 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12);
        double double15 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray12, (double) 100.0f);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray12, doubleArray19);
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double28 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double double29 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double30 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray27);
        double double31 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray27);
        double double32 = org.apache.commons.math.stat.StatUtils.variance(doubleArray27);
        double double33 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray27);
        double double34 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double36 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) '#');
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double38 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray42 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double43 = org.apache.commons.math.stat.StatUtils.mean(doubleArray42);
        double double45 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray42, (double) 100.0f);
        double[] doubleArray49 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double50 = org.apache.commons.math.stat.StatUtils.mean(doubleArray49);
        double double51 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray49);
        double double52 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray49);
        double double53 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray42, doubleArray49);
        double[] doubleArray57 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double58 = org.apache.commons.math.stat.StatUtils.mean(doubleArray57);
        double double59 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray57);
        double double60 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray42, doubleArray57);
        double double61 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray57);
        double double62 = org.apache.commons.math.stat.StatUtils.variance(doubleArray57);
        double double63 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray57);
        double double64 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double65 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double66 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        double double67 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double70 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (-1), (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: start position cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 7.0d + "'", double13 == 7.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.605170185988092d + "'", double22 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 7.0d + "'", double28 == 7.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 4.641588833612779d + "'", double29 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.641588833612779d + "'", double31 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 27.0d + "'", double32 == 27.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 27.0d + "'", double36 == 27.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 21.0d + "'", double38 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 7.0d + "'", double43 == 7.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 10.0d + "'", double45 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 7.0d + "'", double50 == 7.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 4.641588833612779d + "'", double51 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 4.605170185988092d + "'", double52 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 7.0d + "'", double58 == 7.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4.641588833612779d + "'", double59 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 4.641588833612779d + "'", double61 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 27.0d + "'", double62 == 27.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 27.0d + "'", double64 == 27.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 21.0d + "'", double65 == 21.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 100.0d + "'", double66 == 100.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 7.0d + "'", double67 == 7.0d);
    }

    @Test
    public void test1980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1980");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        double double11 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double12 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double double13 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        double double14 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double15 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double18 = org.apache.commons.math.stat.StatUtils.min(doubleArray3, 10, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 100.0d + "'", double13 == 100.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 201.0d + "'", double14 == 201.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 201.0d + "'", double15 == 201.0d);
    }

    @Test
    public void test1981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1981");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray15 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double16 = org.apache.commons.math.stat.StatUtils.mean(doubleArray15);
        double double17 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray15);
        double double18 = org.apache.commons.math.stat.StatUtils.sum(doubleArray15);
        double[] doubleArray22 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double23 = org.apache.commons.math.stat.StatUtils.mean(doubleArray22);
        double double24 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray22);
        double double25 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray22);
        double double26 = org.apache.commons.math.stat.StatUtils.max(doubleArray22);
        double double28 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray15, doubleArray22, (double) '#');
        double double29 = org.apache.commons.math.stat.StatUtils.product(doubleArray22);
        double double30 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray22);
        // The following exception was thrown during execution in test generation
        try {
            double double34 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (int) (short) 10, (int) (short) 0, 4.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 7.0d + "'", double16 == 7.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 4.641588833612779d + "'", double17 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 21.0d + "'", double18 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 7.0d + "'", double23 == 7.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 4.641588833612779d + "'", double24 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 4.605170185988092d + "'", double25 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 100.0d + "'", double29 == 100.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
    }

    @Test
    public void test1982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1982");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        double double29 = org.apache.commons.math.stat.StatUtils.max(doubleArray26, 0, 0);
        double double30 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray26);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        double double37 = org.apache.commons.math.stat.StatUtils.max(doubleArray34, 0, 0);
        double double38 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray34);
        double double40 = org.apache.commons.math.stat.StatUtils.variance(doubleArray34, (double) 10);
        double double41 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray26, doubleArray34);
        double double42 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray34);
        double double43 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray18, doubleArray34);
        double[] doubleArray47 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double48 = org.apache.commons.math.stat.StatUtils.mean(doubleArray47);
        double double50 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray47, (double) 100.0f);
        double double51 = org.apache.commons.math.stat.StatUtils.variance(doubleArray47);
        double double52 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray18, doubleArray47);
        double double53 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray47);
        double double55 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray47, (double) (byte) 100);
        double double56 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray47);
        double double59 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray47, 1, 1);
        double double60 = org.apache.commons.math.stat.StatUtils.sum(doubleArray47);
        double double61 = org.apache.commons.math.stat.StatUtils.sum(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 7.0d + "'", double22 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 101.0d + "'", double30 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 101.0d + "'", double38 == 101.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 37.0d + "'", double40 == 37.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 101.0d + "'", double42 == 101.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4.0d + "'", double43 == 4.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 7.0d + "'", double48 == 7.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 27.0d + "'", double51 == 27.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 4.641588833612779d + "'", double53 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 10.0d + "'", double55 == 10.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 4.605170185988092d + "'", double56 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2.302585092994046d + "'", double59 == 2.302585092994046d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 21.0d + "'", double60 == 21.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 21.0d + "'", double61 == 21.0d);
    }

    @Test
    public void test1983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1983");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double24 = org.apache.commons.math.stat.StatUtils.min(doubleArray18);
        double double25 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray18);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 4.641588833612779d + "'", double23 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 201.0d + "'", double25 == 201.0d);
    }

    @Test
    public void test1984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1984");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray11, (double) 100.0f);
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, 27.0d);
        double double24 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) (byte) 10);
        double double25 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, (double) (short) 1);
        double double28 = org.apache.commons.math.stat.StatUtils.min(doubleArray11);
        double double31 = org.apache.commons.math.stat.StatUtils.product(doubleArray11, (int) (byte) 1, (int) (short) 0);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.0d + "'", double15 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 27.0d + "'", double22 == 27.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 27.0d + "'", double24 == 27.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
    }

    @Test
    public void test1985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1985");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, 27.0d);
        double double16 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) (byte) 10);
        double double17 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        double[] doubleArray22 = new double[] { (-1L), 0, 10L };
        double double25 = org.apache.commons.math.stat.StatUtils.max(doubleArray22, 0, 0);
        double double27 = org.apache.commons.math.stat.StatUtils.variance(doubleArray22, 21.0d);
        double double28 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray22);
        double double30 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray11, (double) 10.0f);
        double double31 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 27.0d + "'", double14 == 27.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 27.0d + "'", double16 == 27.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4.605170185988092d + "'", double18 == 4.605170185988092d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 37.0d + "'", double27 == 37.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 12.0d + "'", double28 == 12.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.605170185988092d + "'", double31 == 4.605170185988092d);
    }

    @Test
    public void test1986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1986");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.product(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double28 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12, (int) (short) 1, (int) (short) 0);
        double double29 = org.apache.commons.math.stat.StatUtils.product(doubleArray12);
        double double30 = org.apache.commons.math.stat.StatUtils.max(doubleArray12);
        double double31 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray12);
        double[] doubleArray35 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double36 = org.apache.commons.math.stat.StatUtils.mean(doubleArray35);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35);
        double double38 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray35);
        double double39 = org.apache.commons.math.stat.StatUtils.max(doubleArray35);
        double double40 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35);
        double double41 = org.apache.commons.math.stat.StatUtils.mean(doubleArray35);
        double double42 = org.apache.commons.math.stat.StatUtils.max(doubleArray35);
        double double44 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray35, 1237.7d);
        // The following exception was thrown during execution in test generation
        try {
            double double47 = org.apache.commons.math.stat.StatUtils.product(doubleArray3, (int) (short) 100, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 100.0d + "'", double8 == 100.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-0.0d) + "'", double29 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 4.0d + "'", double31 == 4.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 7.0d + "'", double36 == 7.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 4.605170185988092d + "'", double38 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 10.0d + "'", double39 == 10.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 4.641588833612779d + "'", double40 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 7.0d + "'", double41 == 7.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 10.0d + "'", double42 == 10.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-4.6566128730773926E-10d) + "'", double44 == (-4.6566128730773926E-10d));
    }

    @Test
    public void test1987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1987");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, (double) 10);
        double[] doubleArray13 = new double[] { (-1L), 0, 10L };
        double double16 = org.apache.commons.math.stat.StatUtils.max(doubleArray13, 0, 0);
        double double17 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray13);
        double double18 = org.apache.commons.math.stat.StatUtils.min(doubleArray13);
        double double19 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double20 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double22 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray13, (double) 100.0f);
        double double23 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray13);
        double double24 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray13);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray13);
        double double26 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray13);
        double double27 = org.apache.commons.math.stat.StatUtils.variance(doubleArray13);
        double double30 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray13, (int) (byte) 1, (int) (byte) 1);
        double[] doubleArray34 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double35 = org.apache.commons.math.stat.StatUtils.mean(doubleArray34);
        double double36 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray34);
        double double37 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray34);
        double double38 = org.apache.commons.math.stat.StatUtils.variance(doubleArray34);
        double double39 = org.apache.commons.math.stat.StatUtils.min(doubleArray34);
        double[] doubleArray43 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double44 = org.apache.commons.math.stat.StatUtils.mean(doubleArray43);
        double double46 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray43, (double) 100.0f);
        double[] doubleArray50 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double51 = org.apache.commons.math.stat.StatUtils.mean(doubleArray50);
        double double52 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray50);
        double double53 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray50);
        double double54 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray43, doubleArray50);
        double[] doubleArray58 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double59 = org.apache.commons.math.stat.StatUtils.mean(doubleArray58);
        double double60 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray58);
        double double61 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray43, doubleArray58);
        double double62 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray58);
        double double63 = org.apache.commons.math.stat.StatUtils.variance(doubleArray58);
        double double64 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray34, doubleArray58);
        double double65 = org.apache.commons.math.stat.StatUtils.min(doubleArray34);
        double double67 = org.apache.commons.math.stat.StatUtils.variance(doubleArray34, (double) '#');
        double double68 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray34);
        double double69 = org.apache.commons.math.stat.StatUtils.sum(doubleArray34);
        double[] doubleArray73 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double74 = org.apache.commons.math.stat.StatUtils.mean(doubleArray73);
        double double76 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray73, (double) 100.0f);
        double[] doubleArray80 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double81 = org.apache.commons.math.stat.StatUtils.mean(doubleArray80);
        double double82 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray80);
        double double83 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray80);
        double double84 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray73, doubleArray80);
        double[] doubleArray88 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double89 = org.apache.commons.math.stat.StatUtils.mean(doubleArray88);
        double double90 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray88);
        double double91 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray73, doubleArray88);
        double double92 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray88);
        double double93 = org.apache.commons.math.stat.StatUtils.variance(doubleArray88);
        double double94 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray34, doubleArray88);
        double double95 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray34);
        double double96 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray13, doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 37.0d + "'", double9 == 37.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 101.0d + "'", double17 == 101.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1.0d) + "'", double18 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 37.0d + "'", double19 == 37.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 37.0d + "'", double20 == 37.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 101.0d + "'", double24 == 101.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 37.0d + "'", double27 == 37.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 7.0d + "'", double35 == 7.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 4.641588833612779d + "'", double36 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.605170185988092d + "'", double37 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 27.0d + "'", double38 == 27.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 7.0d + "'", double44 == 7.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 10.0d + "'", double46 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 7.0d + "'", double51 == 7.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 4.641588833612779d + "'", double52 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 4.605170185988092d + "'", double53 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 7.0d + "'", double59 == 7.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 4.641588833612779d + "'", double60 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 4.641588833612779d + "'", double62 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 27.0d + "'", double63 == 27.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 27.0d + "'", double67 == 27.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 4.641588833612779d + "'", double68 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 21.0d + "'", double69 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 7.0d + "'", double74 == 7.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 10.0d + "'", double76 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 7.0d + "'", double81 == 7.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 4.641588833612779d + "'", double82 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 4.605170185988092d + "'", double83 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 7.0d + "'", double89 == 7.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 4.641588833612779d + "'", double90 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 4.641588833612779d + "'", double92 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 27.0d + "'", double93 == 27.0d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.0d + "'", double94 == 0.0d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 201.0d + "'", double95 == 201.0d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + (-4.0d) + "'", double96 == (-4.0d));
    }

    @Test
    public void test1988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1988");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double double15 = org.apache.commons.math.stat.StatUtils.min(doubleArray10);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double21 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.sum(doubleArray19);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray19);
        double double24 = org.apache.commons.math.stat.StatUtils.min(doubleArray19);
        double[] doubleArray28 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double29 = org.apache.commons.math.stat.StatUtils.mean(doubleArray28);
        double double31 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray28, (double) 100.0f);
        double[] doubleArray35 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double36 = org.apache.commons.math.stat.StatUtils.mean(doubleArray35);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35);
        double double38 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray35);
        double double39 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray28, doubleArray35);
        double[] doubleArray43 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double44 = org.apache.commons.math.stat.StatUtils.mean(doubleArray43);
        double double45 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray43);
        double double46 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray28, doubleArray43);
        double double47 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray43);
        double double48 = org.apache.commons.math.stat.StatUtils.variance(doubleArray43);
        double double49 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray19, doubleArray43);
        double double50 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray43);
        double double51 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray43);
        double double53 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray10, doubleArray43, (double) 0.0f);
        double double54 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray10);
        double double55 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray10);
        // The following exception was thrown during execution in test generation
        try {
            double double58 = org.apache.commons.math.stat.StatUtils.sum(doubleArray10, 0, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 4.641588833612779d + "'", double21 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 21.0d + "'", double22 == 21.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 7.0d + "'", double29 == 7.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 10.0d + "'", double31 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 7.0d + "'", double36 == 7.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 4.605170185988092d + "'", double38 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 7.0d + "'", double44 == 7.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 4.641588833612779d + "'", double45 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 4.641588833612779d + "'", double47 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 27.0d + "'", double48 == 27.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4.641588833612779d + "'", double50 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 4.605170185988092d + "'", double51 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 201.0d + "'", double54 == 201.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 201.0d + "'", double55 == 201.0d);
    }

    @Test
    public void test1989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1989");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray11, (double) 100.0f);
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double20 = org.apache.commons.math.stat.StatUtils.mean(doubleArray19);
        double double22 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, 27.0d);
        double double24 = org.apache.commons.math.stat.StatUtils.variance(doubleArray19, (double) (byte) 10);
        double double25 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray19);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, (double) (short) 1);
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double32 = org.apache.commons.math.stat.StatUtils.mean(doubleArray31);
        double double33 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray31);
        double double34 = org.apache.commons.math.stat.StatUtils.sum(doubleArray31);
        double double35 = org.apache.commons.math.stat.StatUtils.max(doubleArray31);
        double double37 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray31, (double) (byte) 100);
        double[] doubleArray41 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double42 = org.apache.commons.math.stat.StatUtils.mean(doubleArray41);
        double double43 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray41);
        double double44 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray41);
        double double45 = org.apache.commons.math.stat.StatUtils.variance(doubleArray41);
        double double47 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray31, doubleArray41, 37.0d);
        double double48 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray11, doubleArray41);
        double double49 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 21.0d + "'", double6 == 21.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.0d + "'", double15 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 7.0d + "'", double20 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 27.0d + "'", double22 == 27.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 27.0d + "'", double24 == 27.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 7.0d + "'", double32 == 7.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 4.641588833612779d + "'", double33 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 21.0d + "'", double34 == 21.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 10.0d + "'", double35 == 10.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 10.0d + "'", double37 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 7.0d + "'", double42 == 7.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4.641588833612779d + "'", double43 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 4.605170185988092d + "'", double44 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 27.0d + "'", double45 == 27.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 7.0d + "'", double49 == 7.0d);
    }

    @Test
    public void test1990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1990");
        double[] doubleArray3 = new double[] { (-1L), 0, 10L };
        double double6 = org.apache.commons.math.stat.StatUtils.max(doubleArray3, 0, 0);
        double double7 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray11);
        double double16 = org.apache.commons.math.stat.StatUtils.min(doubleArray11);
        double double17 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 101.0d + "'", double7 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 21.0d + "'", double14 == 21.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-4.0d) + "'", double15 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 4.605170185988092d + "'", double17 == 4.605170185988092d);
    }

    @Test
    public void test1991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1991");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double10 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3, (int) (short) 1, 0);
        double[] doubleArray14 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double15 = org.apache.commons.math.stat.StatUtils.mean(doubleArray14);
        double double16 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray14);
        double double17 = org.apache.commons.math.stat.StatUtils.sum(doubleArray14);
        double double18 = org.apache.commons.math.stat.StatUtils.max(doubleArray14);
        double double19 = org.apache.commons.math.stat.StatUtils.variance(doubleArray14);
        double double20 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray14);
        double[] doubleArray24 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double25 = org.apache.commons.math.stat.StatUtils.mean(doubleArray24);
        double double26 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray24);
        double double27 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray24);
        double double28 = org.apache.commons.math.stat.StatUtils.variance(doubleArray24);
        double double29 = org.apache.commons.math.stat.StatUtils.min(doubleArray24);
        double[] doubleArray33 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double34 = org.apache.commons.math.stat.StatUtils.mean(doubleArray33);
        double double36 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray33, (double) 100.0f);
        double[] doubleArray40 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double41 = org.apache.commons.math.stat.StatUtils.mean(doubleArray40);
        double double42 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray40);
        double double43 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray40);
        double double44 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray33, doubleArray40);
        double[] doubleArray48 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double49 = org.apache.commons.math.stat.StatUtils.mean(doubleArray48);
        double double50 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray48);
        double double51 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray33, doubleArray48);
        double double52 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray48);
        double double53 = org.apache.commons.math.stat.StatUtils.variance(doubleArray48);
        double double54 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray24, doubleArray48);
        double double55 = org.apache.commons.math.stat.StatUtils.min(doubleArray24);
        double double57 = org.apache.commons.math.stat.StatUtils.variance(doubleArray24, (double) '#');
        double double58 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray24);
        double double59 = org.apache.commons.math.stat.StatUtils.sum(doubleArray24);
        double double61 = org.apache.commons.math.stat.StatUtils.variance(doubleArray24, (double) (byte) 100);
        double double62 = org.apache.commons.math.stat.StatUtils.min(doubleArray24);
        double double64 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray24, 3.5200000000000005d);
        double double65 = org.apache.commons.math.stat.StatUtils.variance(doubleArray24);
        double double67 = org.apache.commons.math.stat.StatUtils.variance(doubleArray24, (double) (-1));
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 7.0d + "'", double15 == 7.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 4.641588833612779d + "'", double16 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 21.0d + "'", double17 == 21.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 27.0d + "'", double19 == 27.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 7.0d + "'", double25 == 7.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 4.641588833612779d + "'", double26 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 4.605170185988092d + "'", double27 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 27.0d + "'", double28 == 27.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 7.0d + "'", double34 == 7.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 10.0d + "'", double36 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 7.0d + "'", double41 == 7.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 4.641588833612779d + "'", double42 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4.605170185988092d + "'", double43 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 7.0d + "'", double49 == 7.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 4.641588833612779d + "'", double50 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 4.641588833612779d + "'", double52 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 27.0d + "'", double53 == 27.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 27.0d + "'", double57 == 27.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 4.641588833612779d + "'", double58 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 21.0d + "'", double59 == 21.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 27.0d + "'", double61 == 27.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-3.552713678800501E-15d) + "'", double64 == (-3.552713678800501E-15d));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 27.0d + "'", double65 == 27.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 27.0d + "'", double67 == 27.0d);
    }

    @Test
    public void test1992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1992");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        double double28 = org.apache.commons.math.stat.StatUtils.max(doubleArray25, 0, 0);
        double double29 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray25);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        double double36 = org.apache.commons.math.stat.StatUtils.max(doubleArray33, 0, 0);
        double double37 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray33);
        double double39 = org.apache.commons.math.stat.StatUtils.variance(doubleArray33, (double) 10);
        double double40 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray25, doubleArray33);
        double double42 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray25, 100.0d);
        double double43 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double45 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 3.0d);
        double double46 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double47 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            double double51 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3, 0.0d, 0, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 101.0d + "'", double29 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 101.0d + "'", double37 == 101.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 37.0d + "'", double39 == 37.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 127.0d + "'", double42 == 127.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4.641588833612779d + "'", double43 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 27.0d + "'", double45 == 27.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 27.0d + "'", double46 == 27.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 201.0d + "'", double47 == 201.0d);
    }

    @Test
    public void test1993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1993");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double[] doubleArray25 = new double[] { (-1L), 0, 10L };
        double double28 = org.apache.commons.math.stat.StatUtils.max(doubleArray25, 0, 0);
        double double29 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray25);
        double[] doubleArray33 = new double[] { (-1L), 0, 10L };
        double double36 = org.apache.commons.math.stat.StatUtils.max(doubleArray33, 0, 0);
        double double37 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray33);
        double double39 = org.apache.commons.math.stat.StatUtils.variance(doubleArray33, (double) 10);
        double double40 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray25, doubleArray33);
        double double42 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray25, 100.0d);
        double double43 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double44 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double double45 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double47 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, 27.00000000000003d);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 101.0d + "'", double29 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 101.0d + "'", double37 == 101.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 37.0d + "'", double39 == 37.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 127.0d + "'", double42 == 127.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 27.0d + "'", double43 == 27.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 21.0d + "'", double44 == 21.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 4.641588833612779d + "'", double45 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.7200000000000106d + "'", double47 == 1.7200000000000106d);
    }

    @Test
    public void test1994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1994");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.variance(doubleArray3);
        double double8 = org.apache.commons.math.stat.StatUtils.min(doubleArray3);
        double[] doubleArray12 = new double[] { (-1L), 0, 10L };
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray12, 0, 0);
        double double16 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray12);
        double[] doubleArray20 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double21 = org.apache.commons.math.stat.StatUtils.mean(doubleArray20);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray20);
        double double23 = org.apache.commons.math.stat.StatUtils.sum(doubleArray20);
        double double24 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray12, doubleArray20);
        double double25 = org.apache.commons.math.stat.StatUtils.sum(doubleArray12);
        double double27 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray12, 0.0d);
        double double28 = org.apache.commons.math.stat.StatUtils.variance(doubleArray12);
        double double30 = org.apache.commons.math.stat.StatUtils.variance(doubleArray12, 127.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double33 = org.apache.commons.math.stat.StatUtils.mean(doubleArray12, 10, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 27.0d + "'", double7 == 27.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 101.0d + "'", double16 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 7.0d + "'", double21 == 7.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 21.0d + "'", double23 == 21.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-4.0d) + "'", double24 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 9.0d + "'", double25 == 9.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 127.0d + "'", double27 == 127.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 37.0d + "'", double28 == 37.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 37.0d + "'", double30 == 37.0d);
    }

    @Test
    public void test1995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1995");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double double7 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, 27.0d);
        double double16 = org.apache.commons.math.stat.StatUtils.variance(doubleArray11, (double) (byte) 10);
        double double17 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        double double19 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double[] doubleArray23 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double24 = org.apache.commons.math.stat.StatUtils.mean(doubleArray23);
        double double25 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray23);
        double double26 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray23);
        double double27 = org.apache.commons.math.stat.StatUtils.max(doubleArray23);
        double double30 = org.apache.commons.math.stat.StatUtils.sum(doubleArray23, (int) (short) 1, 0);
        double double31 = org.apache.commons.math.stat.StatUtils.max(doubleArray23);
        double double32 = org.apache.commons.math.stat.StatUtils.min(doubleArray23);
        double double33 = org.apache.commons.math.stat.StatUtils.product(doubleArray23);
        double double34 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray23);
        double double35 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray23);
        double[] doubleArray39 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double40 = org.apache.commons.math.stat.StatUtils.mean(doubleArray39);
        double double42 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray39, (double) 100.0f);
        double double43 = org.apache.commons.math.stat.StatUtils.mean(doubleArray39);
        double[] doubleArray47 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double48 = org.apache.commons.math.stat.StatUtils.mean(doubleArray47);
        double double50 = org.apache.commons.math.stat.StatUtils.variance(doubleArray47, 27.0d);
        double double52 = org.apache.commons.math.stat.StatUtils.variance(doubleArray47, (double) (byte) 10);
        double double53 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray39, doubleArray47);
        double double54 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray47);
        double double55 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray47);
        double double56 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray47);
        double double57 = org.apache.commons.math.stat.StatUtils.product(doubleArray47);
        double double59 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray23, doubleArray47, 37.000000000000114d);
        double double60 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray11, doubleArray47);
        // The following exception was thrown during execution in test generation
        try {
            double double63 = org.apache.commons.math.stat.StatUtils.product(doubleArray11, (int) ' ', 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 7.0d + "'", double7 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 27.0d + "'", double14 == 27.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 27.0d + "'", double16 == 27.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4.605170185988092d + "'", double18 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 4.641588833612779d + "'", double19 == 4.641588833612779d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 7.0d + "'", double24 == 7.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 4.641588833612779d + "'", double25 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 4.605170185988092d + "'", double26 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 10.0d + "'", double27 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 10.0d + "'", double31 == 10.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 100.0d + "'", double33 == 100.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 201.0d + "'", double34 == 201.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 201.0d + "'", double35 == 201.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 7.0d + "'", double40 == 7.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 10.0d + "'", double42 == 10.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 7.0d + "'", double43 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 7.0d + "'", double48 == 7.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 27.0d + "'", double50 == 27.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 27.0d + "'", double52 == 27.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 4.605170185988092d + "'", double54 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 4.605170185988092d + "'", double55 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 4.641588833612779d + "'", double56 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 100.0d + "'", double57 == 100.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
    }

    @Test
    public void test1996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1996");
        double[] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double3 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray0, (int) (byte) -1, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: input value array is null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1997");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double5 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray3);
        double double7 = org.apache.commons.math.stat.StatUtils.sum(doubleArray3);
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double12 = org.apache.commons.math.stat.StatUtils.mean(doubleArray11);
        double double13 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray11);
        double double14 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray11);
        double double15 = org.apache.commons.math.stat.StatUtils.max(doubleArray11);
        double double18 = org.apache.commons.math.stat.StatUtils.sum(doubleArray11, (int) (short) 1, 0);
        double double19 = org.apache.commons.math.stat.StatUtils.max(doubleArray11);
        double double20 = org.apache.commons.math.stat.StatUtils.min(doubleArray11);
        double double21 = org.apache.commons.math.stat.StatUtils.max(doubleArray11);
        double double23 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray3, doubleArray11, (double) ' ');
        double double24 = org.apache.commons.math.stat.StatUtils.max(doubleArray3);
        double double25 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.641588833612779d + "'", double5 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.605170185988092d + "'", double6 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 21.0d + "'", double7 == 21.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 7.0d + "'", double12 == 7.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.641588833612779d + "'", double13 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 4.605170185988092d + "'", double14 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 10.0d + "'", double24 == 10.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 4.641588833612779d + "'", double25 == 4.641588833612779d);
    }

    @Test
    public void test1998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1998");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double23 = org.apache.commons.math.stat.StatUtils.variance(doubleArray18);
        double[] doubleArray27 = new double[] { (-1L), 0, 10L };
        double double30 = org.apache.commons.math.stat.StatUtils.max(doubleArray27, 0, 0);
        double double31 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray27);
        double[] doubleArray35 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double36 = org.apache.commons.math.stat.StatUtils.mean(doubleArray35);
        double double37 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray35);
        double double38 = org.apache.commons.math.stat.StatUtils.sum(doubleArray35);
        double double39 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray27, doubleArray35);
        double double40 = org.apache.commons.math.stat.StatUtils.max(doubleArray27);
        double double42 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray18, doubleArray27, 27.0d);
        double double43 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray27);
        double double44 = org.apache.commons.math.stat.StatUtils.mean(doubleArray27);
        double[] doubleArray48 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double49 = org.apache.commons.math.stat.StatUtils.mean(doubleArray48);
        double double51 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray48, (double) 100.0f);
        double[] doubleArray55 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double56 = org.apache.commons.math.stat.StatUtils.mean(doubleArray55);
        double double57 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray55);
        double double58 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray55);
        double double59 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray48, doubleArray55);
        double[] doubleArray63 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double64 = org.apache.commons.math.stat.StatUtils.mean(doubleArray63);
        double double65 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray63);
        double double66 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray48, doubleArray63);
        double[] doubleArray70 = new double[] { (-1L), 0, 10L };
        double double73 = org.apache.commons.math.stat.StatUtils.max(doubleArray70, 0, 0);
        double double74 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray70);
        double[] doubleArray78 = new double[] { (-1L), 0, 10L };
        double double81 = org.apache.commons.math.stat.StatUtils.max(doubleArray78, 0, 0);
        double double82 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray78);
        double double84 = org.apache.commons.math.stat.StatUtils.variance(doubleArray78, (double) 10);
        double double85 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray70, doubleArray78);
        double double87 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray48, doubleArray70, 100.0d);
        double double90 = org.apache.commons.math.stat.StatUtils.variance(doubleArray70, 1, 0);
        double double91 = org.apache.commons.math.stat.StatUtils.mean(doubleArray70);
        double double92 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray27, doubleArray70);
        double double93 = org.apache.commons.math.stat.StatUtils.product(doubleArray70);
        double double95 = org.apache.commons.math.stat.StatUtils.variance(doubleArray70, (double) 0L);
        // The following exception was thrown during execution in test generation
        try {
            double double98 = org.apache.commons.math.stat.StatUtils.min(doubleArray70, 10, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: begin + length > values.length");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 4.641588833612779d + "'", double22 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 27.0d + "'", double23 == 27.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 101.0d + "'", double31 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 7.0d + "'", double36 == 7.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 4.641588833612779d + "'", double37 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 21.0d + "'", double38 == 21.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-4.0d) + "'", double39 == (-4.0d));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 10.0d + "'", double40 == 10.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 127.0d + "'", double42 == 127.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 3.0d + "'", double44 == 3.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 7.0d + "'", double49 == 7.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 10.0d + "'", double51 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 7.0d + "'", double56 == 7.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 4.641588833612779d + "'", double57 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 4.605170185988092d + "'", double58 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 7.0d + "'", double64 == 7.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 4.641588833612779d + "'", double65 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 101.0d + "'", double74 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 101.0d + "'", double82 == 101.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 37.0d + "'", double84 == 37.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 127.0d + "'", double87 == 127.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double90));
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 3.0d + "'", double91 == 3.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + (-0.0d) + "'", double93 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 37.0d + "'", double95 == 37.0d);
    }

    @Test
    public void test1999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1999");
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double4 = org.apache.commons.math.stat.StatUtils.mean(doubleArray3);
        double double6 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray3, (double) 100.0f);
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double11 = org.apache.commons.math.stat.StatUtils.mean(doubleArray10);
        double double12 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray10);
        double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray10);
        double double14 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray3, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double19 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double double20 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray18);
        double double21 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray3, doubleArray18);
        double double22 = org.apache.commons.math.stat.StatUtils.mean(doubleArray18);
        double[] doubleArray26 = new double[] { (-1L), 0, 10L };
        double double29 = org.apache.commons.math.stat.StatUtils.max(doubleArray26, 0, 0);
        double double30 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray26);
        double[] doubleArray34 = new double[] { (-1L), 0, 10L };
        double double37 = org.apache.commons.math.stat.StatUtils.max(doubleArray34, 0, 0);
        double double38 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray34);
        double double40 = org.apache.commons.math.stat.StatUtils.variance(doubleArray34, (double) 10);
        double double41 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray26, doubleArray34);
        double double42 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray34);
        double double43 = org.apache.commons.math.stat.StatUtils.meanDifference(doubleArray18, doubleArray34);
        double[] doubleArray47 = new double[] { (byte) 10, (byte) 10, (short) 1 };
        double double48 = org.apache.commons.math.stat.StatUtils.mean(doubleArray47);
        double double50 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray47, (double) 100.0f);
        double double51 = org.apache.commons.math.stat.StatUtils.variance(doubleArray47);
        double double52 = org.apache.commons.math.stat.StatUtils.sumDifference(doubleArray18, doubleArray47);
        double double53 = org.apache.commons.math.stat.StatUtils.geometricMean(doubleArray47);
        double double54 = org.apache.commons.math.stat.StatUtils.sum(doubleArray47);
        double double56 = org.apache.commons.math.stat.StatUtils.percentile(doubleArray47, 3.5200000000000005d);
        double double57 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray47);
        double double58 = org.apache.commons.math.stat.StatUtils.sum(doubleArray47);
        double double59 = org.apache.commons.math.stat.StatUtils.min(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 7.0d + "'", double4 == 7.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 7.0d + "'", double11 == 7.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 4.641588833612779d + "'", double12 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 4.605170185988092d + "'", double13 == 4.605170185988092d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 7.0d + "'", double19 == 7.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.641588833612779d + "'", double20 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 7.0d + "'", double22 == 7.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 101.0d + "'", double30 == 101.0d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 101.0d + "'", double38 == 101.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 37.0d + "'", double40 == 37.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 101.0d + "'", double42 == 101.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 4.0d + "'", double43 == 4.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, 10.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 7.0d + "'", double48 == 7.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 27.0d + "'", double51 == 27.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 4.641588833612779d + "'", double53 == 4.641588833612779d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 21.0d + "'", double54 == 21.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 201.0d + "'", double57 == 201.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 21.0d + "'", double58 == 21.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
    }

    @Test
    public void test2000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test2000");
        double[] doubleArray5 = new double[] { '#', 10.0f, 'a', 12.0d, 37.0d };
        double double6 = org.apache.commons.math.stat.StatUtils.sum(doubleArray5);
        double double7 = org.apache.commons.math.stat.StatUtils.min(doubleArray5);
        double double9 = org.apache.commons.math.stat.StatUtils.variance(doubleArray5, (double) 10.0f);
        double double11 = org.apache.commons.math.stat.StatUtils.variance(doubleArray5, 12247.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double14 = org.apache.commons.math.stat.StatUtils.sum(doubleArray5, (int) (byte) 0, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length cannot be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[35.0, 10.0, 97.0, 12.0, 37.0]");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 191.0d + "'", double6 == 191.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1237.7d + "'", double9 == 1237.7d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1237.699999988079d + "'", double11 == 1237.699999988079d);
    }
}

