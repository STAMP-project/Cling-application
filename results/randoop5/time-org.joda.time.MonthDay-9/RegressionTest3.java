import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.Ignore;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest3 {

    public static boolean debug = false;

    @Test
    public void test1501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1501");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.MonthDay monthDay13 = property10.addWrapFieldToCopy((int) (short) 1);
        java.lang.String str14 = property10.getAsString();
        java.lang.String str15 = property10.getAsText();
        org.joda.time.DurationField durationField16 = property10.getRangeDurationField();
        int int17 = property10.getMinimumValue();
        org.joda.time.MonthDay monthDay19 = property10.addToCopy((int) (short) -1);
        org.joda.time.MonthDay monthDay21 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.MonthDay monthDay23 = monthDay21.withChronologyRetainFields(chronology22);
        org.joda.time.MonthDay monthDay25 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.MonthDay monthDay27 = monthDay25.withChronologyRetainFields(chronology26);
        org.joda.time.DateTimeFieldType dateTimeFieldType29 = monthDay25.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property30 = monthDay23.property(dateTimeFieldType29);
        int int31 = property30.get();
        org.joda.time.DurationField durationField32 = property30.getDurationField();
        org.joda.time.MonthDay monthDay34 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.MonthDay monthDay36 = monthDay34.withChronologyRetainFields(chronology35);
        org.joda.time.MonthDay monthDay38 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.MonthDay monthDay40 = monthDay38.withChronologyRetainFields(chronology39);
        org.joda.time.DateTimeFieldType dateTimeFieldType42 = monthDay38.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property43 = monthDay36.property(dateTimeFieldType42);
        boolean boolean44 = property30.equals((java.lang.Object) monthDay36);
        org.joda.time.MonthDay monthDay45 = new org.joda.time.MonthDay((java.lang.Object) monthDay36);
        boolean boolean46 = property10.equals((java.lang.Object) monthDay45);
        org.joda.time.MonthDay monthDay49 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.MonthDay monthDay51 = monthDay49.withChronologyRetainFields(chronology50);
        org.joda.time.DateTimeFieldType dateTimeFieldType53 = monthDay49.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property54 = monthDay49.dayOfMonth();
        org.joda.time.Chronology chronology55 = monthDay49.getChronology();
        org.joda.time.MonthDay monthDay56 = new org.joda.time.MonthDay((-1L), chronology55);
        org.joda.time.MonthDay monthDay57 = new org.joda.time.MonthDay(chronology55);
        org.joda.time.MonthDay monthDay58 = monthDay45.withChronologyRetainFields(chronology55);
        org.joda.time.MonthDay monthDay60 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.MonthDay monthDay62 = monthDay60.withChronologyRetainFields(chronology61);
        org.joda.time.DateTimeFieldType dateTimeFieldType64 = monthDay60.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod65 = null;
        org.joda.time.MonthDay monthDay66 = monthDay60.plus(readablePeriod65);
        org.joda.time.MonthDay monthDay68 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology69 = null;
        org.joda.time.MonthDay monthDay70 = monthDay68.withChronologyRetainFields(chronology69);
        org.joda.time.MonthDay monthDay72 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology73 = null;
        org.joda.time.MonthDay monthDay74 = monthDay72.withChronologyRetainFields(chronology73);
        org.joda.time.DateTimeFieldType dateTimeFieldType76 = monthDay72.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property77 = monthDay70.property(dateTimeFieldType76);
        int int78 = property77.get();
        org.joda.time.MonthDay monthDay80 = property77.addWrapFieldToCopy((int) (short) 1);
        boolean boolean81 = monthDay60.isBefore((org.joda.time.ReadablePartial) monthDay80);
        org.joda.time.DateTimeFieldType dateTimeFieldType83 = monthDay60.getFieldType(0);
        org.joda.time.MonthDay monthDay85 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology86 = null;
        org.joda.time.MonthDay monthDay87 = monthDay85.withChronologyRetainFields(chronology86);
        org.joda.time.DateTimeFieldType dateTimeFieldType89 = monthDay85.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property90 = monthDay85.dayOfMonth();
        org.joda.time.DateTimeFieldType dateTimeFieldType91 = property90.getFieldType();
        boolean boolean92 = monthDay60.isSupported(dateTimeFieldType91);
        int int93 = monthDay45.get(dateTimeFieldType91);
        java.lang.String str94 = monthDay45.toString();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1" + "'", str14, "1");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1" + "'", str15, "1");
        org.junit.Assert.assertNotNull(durationField16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(monthDay19);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertNotNull(monthDay23);
        org.junit.Assert.assertNotNull(monthDay25);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertNotNull(dateTimeFieldType29);
        org.junit.Assert.assertNotNull(property30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(durationField32);
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertNotNull(monthDay36);
        org.junit.Assert.assertNotNull(monthDay38);
        org.junit.Assert.assertNotNull(monthDay40);
        org.junit.Assert.assertNotNull(dateTimeFieldType42);
        org.junit.Assert.assertNotNull(property43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(monthDay49);
        org.junit.Assert.assertNotNull(monthDay51);
        org.junit.Assert.assertNotNull(dateTimeFieldType53);
        org.junit.Assert.assertNotNull(property54);
        org.junit.Assert.assertNotNull(chronology55);
        org.junit.Assert.assertNotNull(monthDay58);
        org.junit.Assert.assertNotNull(monthDay60);
        org.junit.Assert.assertNotNull(monthDay62);
        org.junit.Assert.assertNotNull(dateTimeFieldType64);
        org.junit.Assert.assertNotNull(monthDay66);
        org.junit.Assert.assertNotNull(monthDay68);
        org.junit.Assert.assertNotNull(monthDay70);
        org.junit.Assert.assertNotNull(monthDay72);
        org.junit.Assert.assertNotNull(monthDay74);
        org.junit.Assert.assertNotNull(dateTimeFieldType76);
        org.junit.Assert.assertNotNull(property77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertNotNull(monthDay80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(dateTimeFieldType83);
        org.junit.Assert.assertNotNull(monthDay85);
        org.junit.Assert.assertNotNull(monthDay87);
        org.junit.Assert.assertNotNull(dateTimeFieldType89);
        org.junit.Assert.assertNotNull(property90);
        org.junit.Assert.assertNotNull(dateTimeFieldType91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 1 + "'", int93 == 1);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "--01-01" + "'", str94, "--01-01");
    }

    @Test
    public void test1502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1502");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MonthDay monthDay24 = monthDay1.withChronologyRetainFields(chronology23);
        org.joda.time.Chronology chronology25 = monthDay24.getChronology();
        org.joda.time.MonthDay monthDay27 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod28 = null;
        org.joda.time.MonthDay monthDay30 = monthDay27.withPeriodAdded(readablePeriod28, 1);
        org.joda.time.MonthDay monthDay32 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.MonthDay monthDay34 = monthDay32.withChronologyRetainFields(chronology33);
        org.joda.time.DateTimeFieldType dateTimeFieldType36 = monthDay32.getFieldType((int) (byte) 1);
        int int37 = monthDay30.indexOf(dateTimeFieldType36);
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.MonthDay monthDay39 = monthDay30.withChronologyRetainFields(chronology38);
        boolean boolean40 = monthDay24.isAfter((org.joda.time.ReadablePartial) monthDay30);
        org.joda.time.MonthDay monthDay42 = monthDay30.plusDays((int) (byte) 0);
        org.joda.time.DateTimeFieldType[] dateTimeFieldTypeArray43 = monthDay30.getFieldTypes();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(chronology25);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertNotNull(dateTimeFieldType36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(monthDay42);
        org.junit.Assert.assertNotNull(dateTimeFieldTypeArray43);
    }

    @Test
    public void test1503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1503");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod2 = null;
        org.joda.time.MonthDay monthDay4 = monthDay1.withPeriodAdded(readablePeriod2, 1);
        org.joda.time.MonthDay monthDay6 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.MonthDay monthDay8 = monthDay6.withChronologyRetainFields(chronology7);
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = monthDay6.getFieldType((int) (byte) 1);
        int int11 = monthDay4.indexOf(dateTimeFieldType10);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MonthDay monthDay13 = monthDay4.withChronologyRetainFields(chronology12);
        org.joda.time.MonthDay.Property property14 = monthDay13.dayOfMonth();
        java.lang.String str15 = property14.toString();
        org.joda.time.MonthDay monthDay17 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.MonthDay monthDay19 = monthDay17.withChronologyRetainFields(chronology18);
        org.joda.time.DateTimeFieldType dateTimeFieldType21 = monthDay17.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod22 = null;
        org.joda.time.MonthDay monthDay23 = monthDay17.plus(readablePeriod22);
        org.joda.time.MonthDay monthDay25 = monthDay17.plusMonths((int) (byte) 1);
        org.joda.time.MonthDay monthDay27 = monthDay17.plusDays(31);
        int int28 = property14.compareTo((org.joda.time.ReadablePartial) monthDay27);
        java.lang.String str29 = property14.getAsString();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MonthDay monthDay31 = property14.setCopy("November");
            org.junit.Assert.fail("Expected exception of type org.joda.time.IllegalFieldValueException; message: Value \"November\" for dayOfMonth is not supported");
        } catch (org.joda.time.IllegalFieldValueException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay4);
        org.junit.Assert.assertNotNull(monthDay6);
        org.junit.Assert.assertNotNull(monthDay8);
        org.junit.Assert.assertNotNull(dateTimeFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(property14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Property[dayOfMonth]" + "'", str15, "Property[dayOfMonth]");
        org.junit.Assert.assertNotNull(monthDay17);
        org.junit.Assert.assertNotNull(monthDay19);
        org.junit.Assert.assertNotNull(dateTimeFieldType21);
        org.junit.Assert.assertNotNull(monthDay23);
        org.junit.Assert.assertNotNull(monthDay25);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1" + "'", str29, "1");
    }

    @Test
    public void test1504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1504");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay5.dayOfMonth();
        org.joda.time.Chronology chronology11 = monthDay5.getChronology();
        org.joda.time.MonthDay monthDay12 = org.joda.time.MonthDay.now(chronology11);
        org.joda.time.MonthDay monthDay13 = monthDay3.withChronologyRetainFields(chronology11);
        org.joda.time.MonthDay monthDay14 = new org.joda.time.MonthDay(chronology11);
        org.joda.time.ReadablePeriod readablePeriod15 = null;
        org.joda.time.MonthDay monthDay17 = monthDay14.withPeriodAdded(readablePeriod15, 0);
        java.lang.Object obj18 = null;
        org.joda.time.MonthDay monthDay20 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.MonthDay monthDay22 = monthDay20.withChronologyRetainFields(chronology21);
        org.joda.time.MonthDay monthDay24 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.MonthDay monthDay26 = monthDay24.withChronologyRetainFields(chronology25);
        org.joda.time.DateTimeFieldType dateTimeFieldType28 = monthDay24.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property29 = monthDay22.property(dateTimeFieldType28);
        int int30 = property29.get();
        org.joda.time.DurationField durationField31 = property29.getDurationField();
        org.joda.time.MonthDay monthDay33 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.MonthDay monthDay35 = monthDay33.withChronologyRetainFields(chronology34);
        org.joda.time.MonthDay monthDay37 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.MonthDay monthDay39 = monthDay37.withChronologyRetainFields(chronology38);
        org.joda.time.DateTimeFieldType dateTimeFieldType41 = monthDay37.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property42 = monthDay35.property(dateTimeFieldType41);
        boolean boolean43 = property29.equals((java.lang.Object) monthDay35);
        org.joda.time.DateTimeField dateTimeField44 = property29.getField();
        java.util.Locale locale45 = null;
        int int46 = property29.getMaximumShortTextLength(locale45);
        org.joda.time.MonthDay monthDay48 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.MonthDay monthDay50 = monthDay48.withChronologyRetainFields(chronology49);
        org.joda.time.MonthDay monthDay52 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.MonthDay monthDay54 = monthDay52.withChronologyRetainFields(chronology53);
        org.joda.time.DateTimeFieldType dateTimeFieldType56 = monthDay52.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property57 = monthDay50.property(dateTimeFieldType56);
        org.joda.time.MonthDay.Property property58 = monthDay50.monthOfYear();
        int int59 = monthDay50.getDayOfMonth();
        org.joda.time.MonthDay.Property property60 = monthDay50.dayOfMonth();
        int int61 = monthDay50.getDayOfMonth();
        org.joda.time.MonthDay monthDay63 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.MonthDay monthDay65 = monthDay63.withChronologyRetainFields(chronology64);
        org.joda.time.DateTimeFieldType dateTimeFieldType67 = monthDay63.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property68 = monthDay63.dayOfMonth();
        org.joda.time.Chronology chronology69 = monthDay63.getChronology();
        org.joda.time.MonthDay monthDay70 = monthDay50.withChronologyRetainFields(chronology69);
        org.joda.time.MonthDay monthDay71 = new org.joda.time.MonthDay((java.lang.Object) locale45, chronology69);
        org.joda.time.MonthDay monthDay72 = org.joda.time.MonthDay.now(chronology69);
        org.joda.time.MonthDay monthDay73 = new org.joda.time.MonthDay(chronology69);
        org.joda.time.MonthDay monthDay74 = new org.joda.time.MonthDay(obj18, chronology69);
        org.joda.time.MonthDay monthDay75 = new org.joda.time.MonthDay((java.lang.Object) readablePeriod15, chronology69);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertNotNull(chronology11);
        org.junit.Assert.assertNotNull(monthDay12);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay17);
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(dateTimeFieldType28);
        org.junit.Assert.assertNotNull(property29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(durationField31);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(monthDay37);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertNotNull(dateTimeFieldType41);
        org.junit.Assert.assertNotNull(property42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(dateTimeField44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
        org.junit.Assert.assertNotNull(monthDay48);
        org.junit.Assert.assertNotNull(monthDay50);
        org.junit.Assert.assertNotNull(monthDay52);
        org.junit.Assert.assertNotNull(monthDay54);
        org.junit.Assert.assertNotNull(dateTimeFieldType56);
        org.junit.Assert.assertNotNull(property57);
        org.junit.Assert.assertNotNull(property58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(property60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNotNull(monthDay63);
        org.junit.Assert.assertNotNull(monthDay65);
        org.junit.Assert.assertNotNull(dateTimeFieldType67);
        org.junit.Assert.assertNotNull(property68);
        org.junit.Assert.assertNotNull(chronology69);
        org.junit.Assert.assertNotNull(monthDay70);
        org.junit.Assert.assertNotNull(monthDay72);
    }

    @Test
    public void test1505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1505");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.format.DateTimeFormatter dateTimeFormatter6 = null;
        java.lang.String str7 = monthDay1.toString(dateTimeFormatter6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        java.lang.String str22 = property18.getAsString();
        java.lang.String str23 = property18.getAsText();
        org.joda.time.MonthDay monthDay24 = property18.getMonthDay();
        boolean boolean25 = monthDay1.isEqual((org.joda.time.ReadablePartial) monthDay24);
        org.joda.time.DateTimeFieldType[] dateTimeFieldTypeArray26 = monthDay24.getFieldTypes();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "--01-01" + "'", str7, "--01-01");
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1" + "'", str22, "1");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1" + "'", str23, "1");
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(dateTimeFieldTypeArray26);
    }

    @Test
    public void test1506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1506");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.MonthDay monthDay24 = monthDay21.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay26 = monthDay24.plusMonths(1);
        org.joda.time.ReadablePeriod readablePeriod27 = null;
        org.joda.time.MonthDay monthDay28 = monthDay24.minus(readablePeriod27);
        org.joda.time.MonthDay monthDay30 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod31 = null;
        org.joda.time.MonthDay monthDay33 = monthDay30.withPeriodAdded(readablePeriod31, 1);
        org.joda.time.MonthDay monthDay35 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.MonthDay monthDay37 = monthDay35.withChronologyRetainFields(chronology36);
        org.joda.time.DateTimeFieldType dateTimeFieldType39 = monthDay35.getFieldType((int) (byte) 1);
        int int40 = monthDay33.indexOf(dateTimeFieldType39);
        org.joda.time.MonthDay.Property property41 = monthDay28.property(dateTimeFieldType39);
        java.util.Locale locale42 = null;
        int int43 = property41.getMaximumShortTextLength(locale42);
        org.joda.time.MonthDay monthDay44 = property41.getMonthDay();
        java.lang.String str45 = property41.toString();
        java.util.Locale locale47 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MonthDay monthDay48 = property41.setCopy("--08-02", locale47);
            org.junit.Assert.fail("Expected exception of type org.joda.time.IllegalFieldValueException; message: Value \"--08-02\" for dayOfMonth is not supported");
        } catch (org.joda.time.IllegalFieldValueException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(monthDay37);
        org.junit.Assert.assertNotNull(dateTimeFieldType39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(property41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertNotNull(monthDay44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Property[dayOfMonth]" + "'", str45, "Property[dayOfMonth]");
    }

    @Test
    public void test1507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1507");
        org.joda.time.format.DateTimeFormatter dateTimeFormatter1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MonthDay monthDay2 = org.joda.time.MonthDay.parse("--12-31", dateTimeFormatter1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1508");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.MonthDay monthDay24 = monthDay21.minusMonths((int) (byte) 100);
        int int25 = monthDay24.getMonthOfYear();
        org.joda.time.MonthDay monthDay27 = monthDay24.withMonthOfYear(1);
        org.joda.time.ReadablePeriod readablePeriod28 = null;
        org.joda.time.MonthDay monthDay29 = monthDay24.plus(readablePeriod28);
        org.joda.time.MonthDay monthDay31 = monthDay29.withMonthOfYear(9);
        org.joda.time.DateTimeField[] dateTimeFieldArray32 = monthDay29.getFields();
        org.joda.time.MonthDay.Property property33 = monthDay29.monthOfYear();
        org.joda.time.MonthDay monthDay35 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod36 = null;
        org.joda.time.MonthDay monthDay38 = monthDay35.withPeriodAdded(readablePeriod36, 1);
        org.joda.time.MonthDay monthDay40 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.MonthDay monthDay42 = monthDay40.withChronologyRetainFields(chronology41);
        org.joda.time.DateTimeFieldType dateTimeFieldType44 = monthDay40.getFieldType((int) (byte) 1);
        int int45 = monthDay38.indexOf(dateTimeFieldType44);
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.MonthDay monthDay47 = monthDay38.withChronologyRetainFields(chronology46);
        org.joda.time.MonthDay monthDay49 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.MonthDay monthDay51 = monthDay49.withChronologyRetainFields(chronology50);
        org.joda.time.DateTimeFieldType dateTimeFieldType53 = monthDay49.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property54 = monthDay49.dayOfMonth();
        org.joda.time.Chronology chronology55 = monthDay49.getChronology();
        org.joda.time.Chronology chronology56 = monthDay49.getChronology();
        boolean boolean57 = monthDay38.isEqual((org.joda.time.ReadablePartial) monthDay49);
        int int58 = monthDay38.getMonthOfYear();
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.MonthDay monthDay61 = new org.joda.time.MonthDay((long) (short) 100, chronology60);
        org.joda.time.MonthDay monthDay63 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.MonthDay monthDay65 = monthDay63.withChronologyRetainFields(chronology64);
        org.joda.time.DateTimeFieldType dateTimeFieldType67 = monthDay63.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property68 = monthDay63.dayOfMonth();
        org.joda.time.Chronology chronology69 = monthDay63.getChronology();
        org.joda.time.Chronology chronology70 = monthDay63.getChronology();
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.DateTime dateTime72 = monthDay63.toDateTime(readableInstant71);
        org.joda.time.DateTime dateTime73 = monthDay61.toDateTime(readableInstant71);
        org.joda.time.DateTime dateTime74 = monthDay38.toDateTime((org.joda.time.ReadableInstant) dateTime73);
        int int75 = property33.compareTo((org.joda.time.ReadableInstant) dateTime74);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 9 + "'", int25 == 9);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertNotNull(monthDay29);
        org.junit.Assert.assertNotNull(monthDay31);
        org.junit.Assert.assertNotNull(dateTimeFieldArray32);
        org.junit.Assert.assertNotNull(property33);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(monthDay38);
        org.junit.Assert.assertNotNull(monthDay40);
        org.junit.Assert.assertNotNull(monthDay42);
        org.junit.Assert.assertNotNull(dateTimeFieldType44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(monthDay47);
        org.junit.Assert.assertNotNull(monthDay49);
        org.junit.Assert.assertNotNull(monthDay51);
        org.junit.Assert.assertNotNull(dateTimeFieldType53);
        org.junit.Assert.assertNotNull(property54);
        org.junit.Assert.assertNotNull(chronology55);
        org.junit.Assert.assertNotNull(chronology56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(monthDay63);
        org.junit.Assert.assertNotNull(monthDay65);
        org.junit.Assert.assertNotNull(dateTimeFieldType67);
        org.junit.Assert.assertNotNull(property68);
        org.junit.Assert.assertNotNull(chronology69);
        org.junit.Assert.assertNotNull(chronology70);
        org.junit.Assert.assertNotNull(dateTime72);
        org.junit.Assert.assertNotNull(dateTime73);
        org.junit.Assert.assertNotNull(dateTime74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
    }

    @Test
    public void test1509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1509");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.MonthDay monthDay13 = property10.addWrapFieldToCopy((int) (short) 1);
        org.joda.time.MonthDay.Property property14 = monthDay13.dayOfMonth();
        int int15 = property14.getMaximumValueOverall();
        java.util.Locale locale17 = null;
        org.joda.time.MonthDay monthDay18 = property14.setCopy("1", locale17);
        org.joda.time.MonthDay monthDay20 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod21 = null;
        org.joda.time.MonthDay monthDay23 = monthDay20.withPeriodAdded(readablePeriod21, 1);
        org.joda.time.MonthDay monthDay25 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.MonthDay monthDay27 = monthDay25.withChronologyRetainFields(chronology26);
        org.joda.time.DateTimeFieldType dateTimeFieldType29 = monthDay25.getFieldType((int) (byte) 1);
        int int30 = monthDay23.indexOf(dateTimeFieldType29);
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MonthDay monthDay32 = monthDay23.withChronologyRetainFields(chronology31);
        org.joda.time.MonthDay monthDay34 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.MonthDay monthDay36 = monthDay34.withChronologyRetainFields(chronology35);
        org.joda.time.DateTimeFieldType dateTimeFieldType38 = monthDay34.getFieldType((int) (byte) 1);
        int int39 = monthDay23.get(dateTimeFieldType38);
        org.joda.time.DateTimeFieldType dateTimeFieldType40 = null;
        boolean boolean41 = monthDay23.isSupported(dateTimeFieldType40);
        int int42 = monthDay18.compareTo((org.joda.time.ReadablePartial) monthDay23);
        org.joda.time.ReadablePeriod readablePeriod43 = null;
        org.joda.time.MonthDay monthDay44 = monthDay18.minus(readablePeriod43);
        org.joda.time.MonthDay.Property property45 = monthDay18.dayOfMonth();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MonthDay monthDay47 = monthDay18.withMonthOfYear(30);
            org.junit.Assert.fail("Expected exception of type org.joda.time.IllegalFieldValueException; message: Value 30 for monthOfYear must be in the range [1,12]");
        } catch (org.joda.time.IllegalFieldValueException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(property14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 31 + "'", int15 == 31);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(monthDay23);
        org.junit.Assert.assertNotNull(monthDay25);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertNotNull(dateTimeFieldType29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertNotNull(monthDay36);
        org.junit.Assert.assertNotNull(dateTimeFieldType38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(monthDay44);
        org.junit.Assert.assertNotNull(property45);
    }

    @Test
    public void test1510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1510");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property6 = monthDay1.dayOfMonth();
        java.util.Locale locale7 = null;
        java.lang.String str8 = property6.getAsShortText(locale7);
        org.joda.time.MonthDay monthDay10 = property6.addToCopy(0);
        org.joda.time.DurationField durationField11 = property6.getRangeDurationField();
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.MonthDay monthDay17 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.MonthDay monthDay19 = monthDay17.withChronologyRetainFields(chronology18);
        org.joda.time.DateTimeFieldType dateTimeFieldType21 = monthDay17.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property22 = monthDay15.property(dateTimeFieldType21);
        int int23 = property22.get();
        org.joda.time.MonthDay monthDay25 = property22.addWrapFieldToCopy((int) (short) 1);
        org.joda.time.MonthDay monthDay27 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.MonthDay monthDay29 = monthDay27.withChronologyRetainFields(chronology28);
        org.joda.time.DateTimeFieldType dateTimeFieldType31 = monthDay27.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod32 = null;
        org.joda.time.MonthDay monthDay33 = monthDay27.plus(readablePeriod32);
        org.joda.time.MonthDay monthDay35 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.MonthDay monthDay37 = monthDay35.withChronologyRetainFields(chronology36);
        org.joda.time.MonthDay monthDay39 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.MonthDay monthDay41 = monthDay39.withChronologyRetainFields(chronology40);
        org.joda.time.DateTimeFieldType dateTimeFieldType43 = monthDay39.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property44 = monthDay37.property(dateTimeFieldType43);
        int int45 = property44.get();
        org.joda.time.MonthDay monthDay47 = property44.addWrapFieldToCopy((int) (short) 1);
        boolean boolean48 = monthDay27.isBefore((org.joda.time.ReadablePartial) monthDay47);
        org.joda.time.MonthDay monthDay50 = monthDay47.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay52 = monthDay50.plusMonths(1);
        org.joda.time.ReadablePeriod readablePeriod53 = null;
        org.joda.time.MonthDay monthDay54 = monthDay50.minus(readablePeriod53);
        int int55 = monthDay25.compareTo((org.joda.time.ReadablePartial) monthDay50);
        org.joda.time.MonthDay monthDay57 = monthDay50.withMonthOfYear((int) (short) 1);
        org.joda.time.ReadablePeriod readablePeriod58 = null;
        org.joda.time.MonthDay monthDay60 = monthDay57.withPeriodAdded(readablePeriod58, 9);
        java.lang.String str61 = monthDay57.toString();
        int int62 = property6.compareTo((org.joda.time.ReadablePartial) monthDay57);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(property6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1" + "'", str8, "1");
        org.junit.Assert.assertNotNull(monthDay10);
        org.junit.Assert.assertNotNull(durationField11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(monthDay17);
        org.junit.Assert.assertNotNull(monthDay19);
        org.junit.Assert.assertNotNull(dateTimeFieldType21);
        org.junit.Assert.assertNotNull(property22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(monthDay25);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertNotNull(monthDay29);
        org.junit.Assert.assertNotNull(dateTimeFieldType31);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(monthDay37);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertNotNull(monthDay41);
        org.junit.Assert.assertNotNull(dateTimeFieldType43);
        org.junit.Assert.assertNotNull(property44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(monthDay47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(monthDay50);
        org.junit.Assert.assertNotNull(monthDay52);
        org.junit.Assert.assertNotNull(monthDay54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(monthDay57);
        org.junit.Assert.assertNotNull(monthDay60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "--01-02" + "'", str61, "--01-02");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
    }

    @Test
    public void test1511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1511");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property6 = monthDay1.dayOfMonth();
        org.joda.time.MonthDay monthDay8 = property6.addWrapFieldToCopy(1);
        org.joda.time.MonthDay monthDay10 = property6.addWrapFieldToCopy(0);
        org.joda.time.MonthDay monthDay12 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MonthDay monthDay14 = monthDay12.withChronologyRetainFields(chronology13);
        org.joda.time.MonthDay monthDay16 = monthDay12.minusMonths((int) (byte) -1);
        boolean boolean17 = property6.equals((java.lang.Object) monthDay16);
        int int18 = property6.get();
        int int19 = property6.getMinimumValue();
        int int20 = property6.getMinimumValueOverall();
        int int21 = property6.getMinimumValue();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(property6);
        org.junit.Assert.assertNotNull(monthDay8);
        org.junit.Assert.assertNotNull(monthDay10);
        org.junit.Assert.assertNotNull(monthDay12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
    }

    @Test
    public void test1512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1512");
        org.joda.time.MonthDay monthDay2 = new org.joda.time.MonthDay(2, 9);
    }

    @Test
    public void test1513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1513");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.DurationField durationField12 = property10.getDurationField();
        java.util.Locale locale13 = null;
        int int14 = property10.getMaximumTextLength(locale13);
        org.joda.time.MonthDay monthDay16 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MonthDay monthDay18 = monthDay16.withChronologyRetainFields(chronology17);
        org.joda.time.DateTimeFieldType dateTimeFieldType20 = monthDay16.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property21 = monthDay16.dayOfMonth();
        org.joda.time.Chronology chronology22 = monthDay16.getChronology();
        org.joda.time.Chronology chronology23 = monthDay16.getChronology();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.DateTime dateTime25 = monthDay16.toDateTime(readableInstant24);
        int int26 = property10.compareTo((org.joda.time.ReadableInstant) dateTime25);
        int int27 = property10.getMinimumValueOverall();
        java.lang.String str28 = property10.getAsText();
        int int29 = property10.get();
        java.util.Locale locale30 = null;
        java.lang.String str31 = property10.getAsText(locale30);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(durationField12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(dateTimeFieldType20);
        org.junit.Assert.assertNotNull(property21);
        org.junit.Assert.assertNotNull(chronology22);
        org.junit.Assert.assertNotNull(chronology23);
        org.junit.Assert.assertNotNull(dateTime25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1" + "'", str28, "1");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1" + "'", str31, "1");
    }

    @Test
    public void test1514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1514");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.MonthDay monthDay24 = monthDay21.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay26 = monthDay24.plusMonths(1);
        int int27 = monthDay26.getDayOfMonth();
        org.joda.time.MonthDay monthDay29 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.MonthDay monthDay31 = monthDay29.withChronologyRetainFields(chronology30);
        org.joda.time.MonthDay monthDay33 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.MonthDay monthDay35 = monthDay33.withChronologyRetainFields(chronology34);
        org.joda.time.DateTimeFieldType dateTimeFieldType37 = monthDay33.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property38 = monthDay31.property(dateTimeFieldType37);
        java.util.Locale locale39 = null;
        int int40 = property38.getMaximumTextLength(locale39);
        java.util.Locale locale41 = null;
        int int42 = property38.getMaximumShortTextLength(locale41);
        org.joda.time.DateTimeField dateTimeField43 = property38.getField();
        int int44 = property38.getMaximumValue();
        int int45 = property38.getMinimumValue();
        org.joda.time.DateTimeFieldType dateTimeFieldType46 = property38.getFieldType();
        boolean boolean47 = monthDay26.isSupported(dateTimeFieldType46);
        org.joda.time.MonthDay monthDay49 = monthDay26.minusMonths((int) (byte) 1);
        int int50 = monthDay49.size();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
        org.junit.Assert.assertNotNull(monthDay29);
        org.junit.Assert.assertNotNull(monthDay31);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(dateTimeFieldType37);
        org.junit.Assert.assertNotNull(property38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2 + "'", int40 == 2);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertNotNull(dateTimeField43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 31 + "'", int44 == 31);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(dateTimeFieldType46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(monthDay49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
    }

    @Test
    public void test1515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1515");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.MonthDay monthDay13 = property10.addWrapFieldToCopy((int) (short) 1);
        java.lang.String str14 = property10.getAsString();
        java.lang.String str15 = property10.getAsString();
        java.util.Locale locale16 = null;
        java.lang.String str17 = property10.getAsText(locale16);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1" + "'", str14, "1");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1" + "'", str15, "1");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1" + "'", str17, "1");
    }

    @Test
    public void test1516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1516");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.ReadablePeriod readablePeriod4 = null;
        org.joda.time.MonthDay monthDay5 = monthDay3.plus(readablePeriod4);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MonthDay monthDay7 = monthDay3.withDayOfMonth(0);
            org.junit.Assert.fail("Expected exception of type org.joda.time.IllegalFieldValueException; message: Value 0 for dayOfMonth must be in the range [1,31]");
        } catch (org.joda.time.IllegalFieldValueException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
    }

    @Test
    public void test1517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1517");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.MonthDay monthDay13 = property10.addWrapFieldToCopy((int) (short) 1);
        java.lang.String str14 = property10.getAsString();
        java.lang.String str15 = property10.getAsText();
        org.joda.time.DurationField durationField16 = property10.getRangeDurationField();
        int int17 = property10.getMinimumValue();
        java.lang.String str18 = property10.getAsText();
        java.util.Locale locale19 = null;
        java.lang.String str20 = property10.getAsText(locale19);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1" + "'", str14, "1");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1" + "'", str15, "1");
        org.junit.Assert.assertNotNull(durationField16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1" + "'", str18, "1");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1" + "'", str20, "1");
    }

    @Test
    public void test1518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1518");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.DurationField durationField12 = property10.getDurationField();
        org.joda.time.MonthDay monthDay14 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MonthDay monthDay16 = monthDay14.withChronologyRetainFields(chronology15);
        org.joda.time.MonthDay monthDay18 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MonthDay monthDay20 = monthDay18.withChronologyRetainFields(chronology19);
        org.joda.time.DateTimeFieldType dateTimeFieldType22 = monthDay18.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property23 = monthDay16.property(dateTimeFieldType22);
        boolean boolean24 = property10.equals((java.lang.Object) monthDay16);
        java.lang.String str25 = property10.getAsShortText();
        java.lang.String str26 = property10.toString();
        java.util.Locale locale27 = null;
        int int28 = property10.getMaximumShortTextLength(locale27);
        boolean boolean30 = property10.equals((java.lang.Object) 0.0d);
        java.util.Locale locale31 = null;
        java.lang.String str32 = property10.getAsText(locale31);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(durationField12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(dateTimeFieldType22);
        org.junit.Assert.assertNotNull(property23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1" + "'", str25, "1");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Property[dayOfMonth]" + "'", str26, "Property[dayOfMonth]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1" + "'", str32, "1");
    }

    @Test
    public void test1519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1519");
        org.joda.time.MonthDay monthDay1 = new org.joda.time.MonthDay((long) 0);
        org.joda.time.Chronology chronology2 = monthDay1.getChronology();
        org.junit.Assert.assertNotNull(chronology2);
    }

    @Test
    public void test1520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1520");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        org.joda.time.MonthDay.Property property11 = monthDay3.monthOfYear();
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay13.dayOfMonth();
        org.joda.time.DateTimeFieldType dateTimeFieldType19 = property18.getFieldType();
        org.joda.time.MonthDay.Property property20 = monthDay3.property(dateTimeFieldType19);
        org.joda.time.MonthDay monthDay22 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod23 = null;
        org.joda.time.MonthDay monthDay25 = monthDay22.withPeriodAdded(readablePeriod23, 1);
        org.joda.time.ReadablePeriod readablePeriod26 = null;
        org.joda.time.MonthDay monthDay27 = monthDay22.plus(readablePeriod26);
        org.joda.time.ReadablePeriod readablePeriod28 = null;
        org.joda.time.MonthDay monthDay29 = monthDay22.plus(readablePeriod28);
        org.joda.time.MonthDay monthDay31 = monthDay22.plusMonths(2);
        org.joda.time.MonthDay monthDay33 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.MonthDay monthDay35 = monthDay33.withChronologyRetainFields(chronology34);
        org.joda.time.MonthDay monthDay37 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.MonthDay monthDay39 = monthDay37.withChronologyRetainFields(chronology38);
        org.joda.time.DateTimeFieldType dateTimeFieldType41 = monthDay37.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property42 = monthDay35.property(dateTimeFieldType41);
        int int43 = property42.get();
        org.joda.time.MonthDay monthDay45 = property42.addWrapFieldToCopy((int) (short) 1);
        org.joda.time.MonthDay.Property property46 = monthDay45.dayOfMonth();
        int int47 = property46.getMaximumValueOverall();
        org.joda.time.MonthDay monthDay49 = property46.addWrapFieldToCopy((int) (short) 10);
        org.joda.time.DateTimeFieldType dateTimeFieldType50 = property46.getFieldType();
        org.joda.time.MonthDay.Property property51 = monthDay31.property(dateTimeFieldType50);
        java.util.Locale locale52 = null;
        java.lang.String str53 = property51.getAsShortText(locale52);
        org.joda.time.DateTimeFieldType dateTimeFieldType54 = property51.getFieldType();
        int int55 = monthDay3.get(dateTimeFieldType54);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertNotNull(property11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertNotNull(dateTimeFieldType19);
        org.junit.Assert.assertNotNull(property20);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertNotNull(monthDay25);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertNotNull(monthDay29);
        org.junit.Assert.assertNotNull(monthDay31);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(monthDay37);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertNotNull(dateTimeFieldType41);
        org.junit.Assert.assertNotNull(property42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(monthDay45);
        org.junit.Assert.assertNotNull(property46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 31 + "'", int47 == 31);
        org.junit.Assert.assertNotNull(monthDay49);
        org.junit.Assert.assertNotNull(dateTimeFieldType50);
        org.junit.Assert.assertNotNull(property51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "1" + "'", str53, "1");
        org.junit.Assert.assertNotNull(dateTimeFieldType54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
    }

    @Test
    public void test1521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1521");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.MonthDay monthDay13 = property10.addToCopy((int) (short) 0);
        int int14 = property10.getMinimumValueOverall();
        java.util.Locale locale16 = null;
        org.joda.time.MonthDay monthDay17 = property10.setCopy("25", locale16);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(monthDay17);
    }

    @Test
    public void test1522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1522");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        org.joda.time.MonthDay.Property property11 = monthDay3.monthOfYear();
        java.lang.String str12 = property11.getAsShortText();
        int int13 = property11.getMinimumValue();
        org.joda.time.MonthDay monthDay15 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MonthDay monthDay17 = monthDay15.withChronologyRetainFields(chronology16);
        org.joda.time.MonthDay monthDay19 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MonthDay monthDay21 = monthDay19.withChronologyRetainFields(chronology20);
        org.joda.time.DateTimeFieldType dateTimeFieldType23 = monthDay19.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property24 = monthDay17.property(dateTimeFieldType23);
        java.util.Locale locale25 = null;
        int int26 = property24.getMaximumTextLength(locale25);
        org.joda.time.MonthDay monthDay28 = property24.addWrapFieldToCopy((int) (byte) 0);
        org.joda.time.ReadablePeriod readablePeriod29 = null;
        org.joda.time.MonthDay monthDay30 = monthDay28.minus(readablePeriod29);
        boolean boolean31 = property11.equals((java.lang.Object) monthDay30);
        org.joda.time.MonthDay monthDay33 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.MonthDay monthDay35 = monthDay33.withChronologyRetainFields(chronology34);
        org.joda.time.MonthDay monthDay37 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.MonthDay monthDay39 = monthDay37.withChronologyRetainFields(chronology38);
        org.joda.time.DateTimeFieldType dateTimeFieldType41 = monthDay37.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property42 = monthDay35.property(dateTimeFieldType41);
        org.joda.time.MonthDay.Property property43 = monthDay35.monthOfYear();
        int int44 = monthDay35.getDayOfMonth();
        org.joda.time.MonthDay.Property property45 = monthDay35.dayOfMonth();
        int int46 = monthDay35.getDayOfMonth();
        org.joda.time.MonthDay monthDay48 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.MonthDay monthDay50 = monthDay48.withChronologyRetainFields(chronology49);
        org.joda.time.DateTimeFieldType dateTimeFieldType52 = monthDay48.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property53 = monthDay48.dayOfMonth();
        org.joda.time.Chronology chronology54 = monthDay48.getChronology();
        org.joda.time.MonthDay monthDay55 = monthDay35.withChronologyRetainFields(chronology54);
        org.joda.time.MonthDay monthDay56 = new org.joda.time.MonthDay(chronology54);
        org.joda.time.MonthDay monthDay57 = monthDay30.withChronologyRetainFields(chronology54);
        org.joda.time.MonthDay monthDay59 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.MonthDay monthDay61 = monthDay59.withChronologyRetainFields(chronology60);
        org.joda.time.DateTimeFieldType dateTimeFieldType63 = monthDay59.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod64 = null;
        org.joda.time.MonthDay monthDay65 = monthDay59.plus(readablePeriod64);
        org.joda.time.MonthDay monthDay67 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.MonthDay monthDay69 = monthDay67.withChronologyRetainFields(chronology68);
        org.joda.time.MonthDay monthDay71 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology72 = null;
        org.joda.time.MonthDay monthDay73 = monthDay71.withChronologyRetainFields(chronology72);
        org.joda.time.DateTimeFieldType dateTimeFieldType75 = monthDay71.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property76 = monthDay69.property(dateTimeFieldType75);
        int int77 = property76.get();
        org.joda.time.MonthDay monthDay79 = property76.addWrapFieldToCopy((int) (short) 1);
        boolean boolean80 = monthDay59.isBefore((org.joda.time.ReadablePartial) monthDay79);
        org.joda.time.Chronology chronology81 = null;
        org.joda.time.MonthDay monthDay82 = monthDay59.withChronologyRetainFields(chronology81);
        org.joda.time.Chronology chronology83 = monthDay82.getChronology();
        org.joda.time.MonthDay monthDay84 = new org.joda.time.MonthDay((java.lang.Object) monthDay30, chronology83);
        int[] intArray85 = monthDay84.getValues();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertNotNull(property11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Jan" + "'", str12, "Jan");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(monthDay17);
        org.junit.Assert.assertNotNull(monthDay19);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertNotNull(dateTimeFieldType23);
        org.junit.Assert.assertNotNull(property24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(monthDay37);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertNotNull(dateTimeFieldType41);
        org.junit.Assert.assertNotNull(property42);
        org.junit.Assert.assertNotNull(property43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(property45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(monthDay48);
        org.junit.Assert.assertNotNull(monthDay50);
        org.junit.Assert.assertNotNull(dateTimeFieldType52);
        org.junit.Assert.assertNotNull(property53);
        org.junit.Assert.assertNotNull(chronology54);
        org.junit.Assert.assertNotNull(monthDay55);
        org.junit.Assert.assertNotNull(monthDay57);
        org.junit.Assert.assertNotNull(monthDay59);
        org.junit.Assert.assertNotNull(monthDay61);
        org.junit.Assert.assertNotNull(dateTimeFieldType63);
        org.junit.Assert.assertNotNull(monthDay65);
        org.junit.Assert.assertNotNull(monthDay67);
        org.junit.Assert.assertNotNull(monthDay69);
        org.junit.Assert.assertNotNull(monthDay71);
        org.junit.Assert.assertNotNull(monthDay73);
        org.junit.Assert.assertNotNull(dateTimeFieldType75);
        org.junit.Assert.assertNotNull(property76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(monthDay79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(monthDay82);
        org.junit.Assert.assertNotNull(chronology83);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[1, 1]");
    }

    @Test
    public void test1523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1523");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.DurationField durationField12 = property10.getDurationField();
        org.joda.time.MonthDay monthDay14 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MonthDay monthDay16 = monthDay14.withChronologyRetainFields(chronology15);
        org.joda.time.MonthDay monthDay18 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MonthDay monthDay20 = monthDay18.withChronologyRetainFields(chronology19);
        org.joda.time.DateTimeFieldType dateTimeFieldType22 = monthDay18.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property23 = monthDay16.property(dateTimeFieldType22);
        boolean boolean24 = property10.equals((java.lang.Object) monthDay16);
        int int25 = monthDay16.size();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(durationField12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(dateTimeFieldType22);
        org.junit.Assert.assertNotNull(property23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
    }

    @Test
    public void test1524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1524");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        int int12 = property10.getMaximumValue();
        org.joda.time.MonthDay monthDay14 = property10.setCopy((int) (short) 1);
        org.joda.time.MonthDay monthDay16 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MonthDay monthDay18 = monthDay16.withChronologyRetainFields(chronology17);
        org.joda.time.DateTimeFieldType dateTimeFieldType20 = monthDay16.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod21 = null;
        org.joda.time.MonthDay monthDay22 = monthDay16.plus(readablePeriod21);
        int int23 = monthDay16.getDayOfMonth();
        int int24 = property10.compareTo((org.joda.time.ReadablePartial) monthDay16);
        org.joda.time.MonthDay monthDay26 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.MonthDay monthDay28 = monthDay26.withChronologyRetainFields(chronology27);
        org.joda.time.MonthDay monthDay30 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MonthDay monthDay32 = monthDay30.withChronologyRetainFields(chronology31);
        org.joda.time.DateTimeFieldType dateTimeFieldType34 = monthDay30.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property35 = monthDay28.property(dateTimeFieldType34);
        int int36 = property35.get();
        org.joda.time.MonthDay monthDay38 = property35.addWrapFieldToCopy((int) (short) 1);
        org.joda.time.MonthDay.Property property39 = monthDay38.dayOfMonth();
        int int40 = property39.getMaximumValueOverall();
        java.util.Locale locale42 = null;
        org.joda.time.MonthDay monthDay43 = property39.setCopy("1", locale42);
        int int44 = property10.compareTo((org.joda.time.ReadablePartial) monthDay43);
        int int45 = property10.get();
        org.joda.time.MonthDay monthDay46 = property10.getMonthDay();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DateTimeField dateTimeField48 = monthDay46.getField(28);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index: 28");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 31 + "'", int12 == 31);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(dateTimeFieldType20);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(dateTimeFieldType34);
        org.junit.Assert.assertNotNull(property35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(monthDay38);
        org.junit.Assert.assertNotNull(property39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 31 + "'", int40 == 31);
        org.junit.Assert.assertNotNull(monthDay43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(monthDay46);
    }

    @Test
    public void test1525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1525");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.MonthDay monthDay3 = monthDay1.minusDays((int) '#');
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay5.dayOfMonth();
        org.joda.time.Chronology chronology11 = monthDay5.getChronology();
        org.joda.time.Chronology chronology12 = monthDay5.getChronology();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.DateTime dateTime14 = monthDay5.toDateTime(readableInstant13);
        org.joda.time.MonthDay monthDay16 = monthDay5.plusMonths((int) ' ');
        boolean boolean17 = monthDay1.isAfter((org.joda.time.ReadablePartial) monthDay16);
        org.joda.time.MonthDay monthDay19 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MonthDay monthDay21 = monthDay19.withChronologyRetainFields(chronology20);
        org.joda.time.DateTimeFieldType dateTimeFieldType23 = monthDay19.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod24 = null;
        org.joda.time.MonthDay monthDay25 = monthDay19.plus(readablePeriod24);
        org.joda.time.MonthDay monthDay27 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.MonthDay monthDay29 = monthDay27.withChronologyRetainFields(chronology28);
        org.joda.time.MonthDay monthDay31 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.MonthDay monthDay33 = monthDay31.withChronologyRetainFields(chronology32);
        org.joda.time.DateTimeFieldType dateTimeFieldType35 = monthDay31.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property36 = monthDay29.property(dateTimeFieldType35);
        int int37 = property36.get();
        org.joda.time.MonthDay monthDay39 = property36.addWrapFieldToCopy((int) (short) 1);
        boolean boolean40 = monthDay19.isBefore((org.joda.time.ReadablePartial) monthDay39);
        org.joda.time.MonthDay monthDay42 = monthDay39.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay44 = monthDay42.plusMonths(1);
        int int45 = monthDay16.compareTo((org.joda.time.ReadablePartial) monthDay42);
        org.joda.time.ReadablePeriod readablePeriod46 = null;
        org.joda.time.MonthDay monthDay47 = monthDay42.plus(readablePeriod46);
        org.joda.time.MonthDay monthDay49 = monthDay47.minusMonths(12);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MonthDay monthDay51 = monthDay47.withMonthOfYear(30);
            org.junit.Assert.fail("Expected exception of type org.joda.time.IllegalFieldValueException; message: Value 30 for monthOfYear must be in the range [1,12]");
        } catch (org.joda.time.IllegalFieldValueException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertNotNull(chronology11);
        org.junit.Assert.assertNotNull(chronology12);
        org.junit.Assert.assertNotNull(dateTime14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(monthDay19);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertNotNull(dateTimeFieldType23);
        org.junit.Assert.assertNotNull(monthDay25);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertNotNull(monthDay29);
        org.junit.Assert.assertNotNull(monthDay31);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(dateTimeFieldType35);
        org.junit.Assert.assertNotNull(property36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(monthDay42);
        org.junit.Assert.assertNotNull(monthDay44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(monthDay47);
        org.junit.Assert.assertNotNull(monthDay49);
    }

    @Test
    public void test1526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1526");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        int int12 = property10.getMaximumValue();
        org.joda.time.MonthDay monthDay14 = property10.setCopy((int) (short) 1);
        org.joda.time.MonthDay monthDay16 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MonthDay monthDay18 = monthDay16.withChronologyRetainFields(chronology17);
        org.joda.time.DateTimeFieldType dateTimeFieldType20 = monthDay16.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod21 = null;
        org.joda.time.MonthDay monthDay22 = monthDay16.plus(readablePeriod21);
        int int23 = monthDay16.getDayOfMonth();
        int int24 = property10.compareTo((org.joda.time.ReadablePartial) monthDay16);
        org.joda.time.MonthDay monthDay26 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.MonthDay monthDay28 = monthDay26.withChronologyRetainFields(chronology27);
        org.joda.time.MonthDay monthDay30 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MonthDay monthDay32 = monthDay30.withChronologyRetainFields(chronology31);
        org.joda.time.DateTimeFieldType dateTimeFieldType34 = monthDay30.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property35 = monthDay28.property(dateTimeFieldType34);
        int int36 = property35.get();
        org.joda.time.MonthDay monthDay38 = property35.addWrapFieldToCopy((int) (short) 1);
        org.joda.time.MonthDay.Property property39 = monthDay38.dayOfMonth();
        int int40 = property39.getMaximumValueOverall();
        java.util.Locale locale42 = null;
        org.joda.time.MonthDay monthDay43 = property39.setCopy("1", locale42);
        int int44 = property10.compareTo((org.joda.time.ReadablePartial) monthDay43);
        int int45 = property10.get();
        org.joda.time.MonthDay monthDay46 = property10.getMonthDay();
        java.lang.String str47 = monthDay46.toString();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 31 + "'", int12 == 31);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(dateTimeFieldType20);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(dateTimeFieldType34);
        org.junit.Assert.assertNotNull(property35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(monthDay38);
        org.junit.Assert.assertNotNull(property39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 31 + "'", int40 == 31);
        org.junit.Assert.assertNotNull(monthDay43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(monthDay46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "--01-01" + "'", str47, "--01-01");
    }

    @Test
    public void test1527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1527");
        org.joda.time.MonthDay monthDay2 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.MonthDay monthDay4 = monthDay2.withChronologyRetainFields(chronology3);
        org.joda.time.DateTimeFieldType dateTimeFieldType6 = monthDay2.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property7 = monthDay2.dayOfMonth();
        org.joda.time.Chronology chronology8 = monthDay2.getChronology();
        org.joda.time.MonthDay monthDay9 = new org.joda.time.MonthDay((-1L), chronology8);
        org.joda.time.MonthDay monthDay10 = new org.joda.time.MonthDay((java.lang.Object) monthDay9);
        java.util.Locale locale12 = null;
        java.lang.String str13 = monthDay10.toString("2", locale12);
        // The following exception was thrown during execution in test generation
        try {
            int int15 = monthDay10.getValue((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 35");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(monthDay2);
        org.junit.Assert.assertNotNull(monthDay4);
        org.junit.Assert.assertNotNull(dateTimeFieldType6);
        org.junit.Assert.assertNotNull(property7);
        org.junit.Assert.assertNotNull(chronology8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "2" + "'", str13, "2");
    }

    @Test
    public void test1528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1528");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property6 = monthDay1.dayOfMonth();
        org.joda.time.MonthDay monthDay8 = property6.addWrapFieldToCopy(1);
        org.joda.time.MonthDay monthDay10 = property6.addWrapFieldToCopy(0);
        org.joda.time.MonthDay monthDay12 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MonthDay monthDay14 = monthDay12.withChronologyRetainFields(chronology13);
        org.joda.time.MonthDay monthDay16 = monthDay12.minusMonths((int) (byte) -1);
        boolean boolean17 = property6.equals((java.lang.Object) monthDay16);
        java.lang.String str18 = property6.getAsShortText();
        org.joda.time.MonthDay monthDay19 = property6.getMonthDay();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(property6);
        org.junit.Assert.assertNotNull(monthDay8);
        org.junit.Assert.assertNotNull(monthDay10);
        org.junit.Assert.assertNotNull(monthDay12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1" + "'", str18, "1");
        org.junit.Assert.assertNotNull(monthDay19);
    }

    @Test
    public void test1529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1529");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.MonthDay monthDay24 = monthDay21.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay26 = monthDay24.plusMonths(1);
        org.joda.time.ReadablePeriod readablePeriod27 = null;
        org.joda.time.MonthDay monthDay28 = monthDay24.minus(readablePeriod27);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DateTimeField dateTimeField30 = monthDay28.getField(31);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index: 31");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(monthDay28);
    }

    @Test
    public void test1530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1530");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        java.util.Locale locale11 = null;
        int int12 = property10.getMaximumTextLength(locale11);
        int int13 = property10.getMinimumValue();
        java.lang.String str14 = property10.getAsText();
        org.joda.time.MonthDay monthDay16 = property10.addWrapFieldToCopy(9);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MonthDay monthDay18 = property10.setCopy("--12-31");
            org.junit.Assert.fail("Expected exception of type org.joda.time.IllegalFieldValueException; message: Value \"--12-31\" for dayOfMonth is not supported");
        } catch (org.joda.time.IllegalFieldValueException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1" + "'", str14, "1");
        org.junit.Assert.assertNotNull(monthDay16);
    }

    @Test
    public void test1531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1531");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.MonthDay monthDay13 = property10.addWrapFieldToCopy((int) (short) 1);
        java.lang.String str14 = property10.getAsString();
        java.lang.String str15 = property10.getAsText();
        org.joda.time.MonthDay monthDay17 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.MonthDay monthDay19 = monthDay17.withChronologyRetainFields(chronology18);
        org.joda.time.DateTimeFieldType dateTimeFieldType21 = monthDay17.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property22 = monthDay17.dayOfMonth();
        org.joda.time.Chronology chronology23 = monthDay17.getChronology();
        org.joda.time.Chronology chronology24 = monthDay17.getChronology();
        org.joda.time.MonthDay monthDay25 = org.joda.time.MonthDay.now(chronology24);
        org.joda.time.MonthDay monthDay26 = org.joda.time.MonthDay.now(chronology24);
        boolean boolean27 = property10.equals((java.lang.Object) monthDay26);
        org.joda.time.DateTimeFieldType[] dateTimeFieldTypeArray28 = monthDay26.getFieldTypes();
        org.joda.time.MonthDay monthDay30 = org.joda.time.MonthDay.parse("");
        org.joda.time.MonthDay monthDay32 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.MonthDay monthDay34 = monthDay32.withChronologyRetainFields(chronology33);
        org.joda.time.DateTimeFieldType dateTimeFieldType36 = monthDay32.getFieldType((int) (byte) 1);
        boolean boolean37 = monthDay30.isSupported(dateTimeFieldType36);
        org.joda.time.MonthDay monthDay39 = org.joda.time.MonthDay.parse("");
        org.joda.time.MonthDay monthDay41 = monthDay39.minusDays((int) '#');
        org.joda.time.MonthDay monthDay43 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.MonthDay monthDay45 = monthDay43.withChronologyRetainFields(chronology44);
        org.joda.time.DateTimeFieldType dateTimeFieldType47 = monthDay43.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property48 = monthDay43.dayOfMonth();
        org.joda.time.Chronology chronology49 = monthDay43.getChronology();
        org.joda.time.Chronology chronology50 = monthDay43.getChronology();
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.DateTime dateTime52 = monthDay43.toDateTime(readableInstant51);
        org.joda.time.MonthDay monthDay54 = monthDay43.plusMonths((int) ' ');
        boolean boolean55 = monthDay39.isAfter((org.joda.time.ReadablePartial) monthDay54);
        boolean boolean56 = monthDay30.isBefore((org.joda.time.ReadablePartial) monthDay54);
        int int57 = monthDay30.getMonthOfYear();
        org.joda.time.ReadablePeriod readablePeriod58 = null;
        org.joda.time.MonthDay monthDay60 = monthDay30.withPeriodAdded(readablePeriod58, 31);
        org.joda.time.MonthDay monthDay62 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology63 = null;
        org.joda.time.MonthDay monthDay64 = monthDay62.withChronologyRetainFields(chronology63);
        org.joda.time.MonthDay monthDay66 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology67 = null;
        org.joda.time.MonthDay monthDay68 = monthDay66.withChronologyRetainFields(chronology67);
        org.joda.time.DateTimeFieldType dateTimeFieldType70 = monthDay66.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property71 = monthDay64.property(dateTimeFieldType70);
        org.joda.time.MonthDay.Property property72 = monthDay30.property(dateTimeFieldType70);
        org.joda.time.MonthDay.Property property73 = monthDay26.property(dateTimeFieldType70);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1" + "'", str14, "1");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1" + "'", str15, "1");
        org.junit.Assert.assertNotNull(monthDay17);
        org.junit.Assert.assertNotNull(monthDay19);
        org.junit.Assert.assertNotNull(dateTimeFieldType21);
        org.junit.Assert.assertNotNull(property22);
        org.junit.Assert.assertNotNull(chronology23);
        org.junit.Assert.assertNotNull(chronology24);
        org.junit.Assert.assertNotNull(monthDay25);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(dateTimeFieldTypeArray28);
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertNotNull(dateTimeFieldType36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertNotNull(monthDay41);
        org.junit.Assert.assertNotNull(monthDay43);
        org.junit.Assert.assertNotNull(monthDay45);
        org.junit.Assert.assertNotNull(dateTimeFieldType47);
        org.junit.Assert.assertNotNull(property48);
        org.junit.Assert.assertNotNull(chronology49);
        org.junit.Assert.assertNotNull(chronology50);
        org.junit.Assert.assertNotNull(dateTime52);
        org.junit.Assert.assertNotNull(monthDay54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(monthDay60);
        org.junit.Assert.assertNotNull(monthDay62);
        org.junit.Assert.assertNotNull(monthDay64);
        org.junit.Assert.assertNotNull(monthDay66);
        org.junit.Assert.assertNotNull(monthDay68);
        org.junit.Assert.assertNotNull(dateTimeFieldType70);
        org.junit.Assert.assertNotNull(property71);
        org.junit.Assert.assertNotNull(property72);
        org.junit.Assert.assertNotNull(property73);
    }

    @Test
    public void test1532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1532");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("--08-02");
        org.junit.Assert.assertNotNull(monthDay1);
    }

    @Test
    public void test1533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1533");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        int int12 = property10.getMaximumValue();
        org.joda.time.MonthDay monthDay14 = property10.setCopy((int) (short) 1);
        org.joda.time.MonthDay monthDay16 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MonthDay monthDay18 = monthDay16.withChronologyRetainFields(chronology17);
        org.joda.time.DateTimeFieldType dateTimeFieldType20 = monthDay16.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod21 = null;
        org.joda.time.MonthDay monthDay22 = monthDay16.plus(readablePeriod21);
        int int23 = monthDay16.getDayOfMonth();
        int int24 = property10.compareTo((org.joda.time.ReadablePartial) monthDay16);
        java.lang.String str25 = property10.getName();
        java.util.Locale locale26 = null;
        java.lang.String str27 = property10.getAsShortText(locale26);
        org.joda.time.DurationField durationField28 = property10.getRangeDurationField();
        org.joda.time.DateTimeFieldType dateTimeFieldType29 = property10.getFieldType();
        java.lang.String str30 = property10.getAsShortText();
        org.joda.time.MonthDay monthDay31 = property10.getMonthDay();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 31 + "'", int12 == 31);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(dateTimeFieldType20);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "dayOfMonth" + "'", str25, "dayOfMonth");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1" + "'", str27, "1");
        org.junit.Assert.assertNotNull(durationField28);
        org.junit.Assert.assertNotNull(dateTimeFieldType29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1" + "'", str30, "1");
        org.junit.Assert.assertNotNull(monthDay31);
    }

    @Test
    @Ignore
  public void test1534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1534");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property6 = monthDay1.dayOfMonth();
        org.joda.time.Chronology chronology7 = monthDay1.getChronology();
        org.joda.time.Chronology chronology8 = monthDay1.getChronology();
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.now(chronology8);
        org.joda.time.MonthDay monthDay10 = org.joda.time.MonthDay.now(chronology8);
        org.joda.time.MonthDay monthDay11 = new org.joda.time.MonthDay(chronology8);
        int int12 = monthDay11.getDayOfMonth();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(property6);
        org.junit.Assert.assertNotNull(chronology7);
        org.junit.Assert.assertNotNull(chronology8);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 25 + "'", int12 == 25);
    }

    @Test
    public void test1535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1535");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod2 = null;
        org.joda.time.MonthDay monthDay4 = monthDay1.withPeriodAdded(readablePeriod2, 1);
        org.joda.time.ReadablePeriod readablePeriod5 = null;
        org.joda.time.MonthDay monthDay6 = monthDay1.plus(readablePeriod5);
        org.joda.time.MonthDay monthDay8 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.MonthDay monthDay10 = monthDay8.withChronologyRetainFields(chronology9);
        org.joda.time.DateTimeFieldType dateTimeFieldType12 = monthDay8.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod13 = null;
        org.joda.time.MonthDay monthDay14 = monthDay8.plus(readablePeriod13);
        org.joda.time.MonthDay monthDay16 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MonthDay monthDay18 = monthDay16.withChronologyRetainFields(chronology17);
        org.joda.time.MonthDay monthDay20 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.MonthDay monthDay22 = monthDay20.withChronologyRetainFields(chronology21);
        org.joda.time.DateTimeFieldType dateTimeFieldType24 = monthDay20.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property25 = monthDay18.property(dateTimeFieldType24);
        int int26 = property25.get();
        org.joda.time.MonthDay monthDay28 = property25.addWrapFieldToCopy((int) (short) 1);
        boolean boolean29 = monthDay8.isBefore((org.joda.time.ReadablePartial) monthDay28);
        org.joda.time.MonthDay monthDay31 = monthDay28.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay33 = monthDay31.plusMonths(1);
        org.joda.time.MonthDay monthDay35 = org.joda.time.MonthDay.parse("");
        org.joda.time.MonthDay monthDay37 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.MonthDay monthDay39 = monthDay37.withChronologyRetainFields(chronology38);
        org.joda.time.DateTimeFieldType dateTimeFieldType41 = monthDay37.getFieldType((int) (byte) 1);
        boolean boolean42 = monthDay35.isSupported(dateTimeFieldType41);
        boolean boolean43 = monthDay31.isSupported(dateTimeFieldType41);
        boolean boolean44 = monthDay6.isAfter((org.joda.time.ReadablePartial) monthDay31);
        org.joda.time.MonthDay monthDay46 = monthDay31.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay.Property property47 = monthDay31.monthOfYear();
        java.lang.String str48 = property47.toString();
        org.joda.time.MonthDay monthDay50 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.MonthDay monthDay52 = monthDay50.withChronologyRetainFields(chronology51);
        org.joda.time.MonthDay monthDay54 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.MonthDay monthDay56 = monthDay54.withChronologyRetainFields(chronology55);
        org.joda.time.DateTimeFieldType dateTimeFieldType58 = monthDay54.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property59 = monthDay52.property(dateTimeFieldType58);
        int int60 = property59.get();
        org.joda.time.DurationField durationField61 = property59.getDurationField();
        org.joda.time.MonthDay monthDay63 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.MonthDay monthDay65 = monthDay63.withChronologyRetainFields(chronology64);
        org.joda.time.MonthDay monthDay67 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.MonthDay monthDay69 = monthDay67.withChronologyRetainFields(chronology68);
        org.joda.time.DateTimeFieldType dateTimeFieldType71 = monthDay67.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property72 = monthDay65.property(dateTimeFieldType71);
        boolean boolean73 = property59.equals((java.lang.Object) monthDay65);
        org.joda.time.MonthDay.Property property74 = monthDay65.dayOfMonth();
        org.joda.time.MonthDay.Property property75 = monthDay65.monthOfYear();
        boolean boolean76 = property47.equals((java.lang.Object) property75);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay4);
        org.junit.Assert.assertNotNull(monthDay6);
        org.junit.Assert.assertNotNull(monthDay8);
        org.junit.Assert.assertNotNull(monthDay10);
        org.junit.Assert.assertNotNull(dateTimeFieldType12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertNotNull(dateTimeFieldType24);
        org.junit.Assert.assertNotNull(property25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(monthDay31);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(monthDay37);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertNotNull(dateTimeFieldType41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(monthDay46);
        org.junit.Assert.assertNotNull(property47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Property[monthOfYear]" + "'", str48, "Property[monthOfYear]");
        org.junit.Assert.assertNotNull(monthDay50);
        org.junit.Assert.assertNotNull(monthDay52);
        org.junit.Assert.assertNotNull(monthDay54);
        org.junit.Assert.assertNotNull(monthDay56);
        org.junit.Assert.assertNotNull(dateTimeFieldType58);
        org.junit.Assert.assertNotNull(property59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(durationField61);
        org.junit.Assert.assertNotNull(monthDay63);
        org.junit.Assert.assertNotNull(monthDay65);
        org.junit.Assert.assertNotNull(monthDay67);
        org.junit.Assert.assertNotNull(monthDay69);
        org.junit.Assert.assertNotNull(dateTimeFieldType71);
        org.junit.Assert.assertNotNull(property72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(property74);
        org.junit.Assert.assertNotNull(property75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test1536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1536");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        int int12 = property10.getMaximumValue();
        org.joda.time.MonthDay monthDay14 = property10.setCopy((int) (short) 1);
        org.joda.time.MonthDay monthDay16 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MonthDay monthDay18 = monthDay16.withChronologyRetainFields(chronology17);
        org.joda.time.DateTimeFieldType dateTimeFieldType20 = monthDay16.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod21 = null;
        org.joda.time.MonthDay monthDay22 = monthDay16.plus(readablePeriod21);
        int int23 = monthDay16.getDayOfMonth();
        int int24 = property10.compareTo((org.joda.time.ReadablePartial) monthDay16);
        org.joda.time.DurationField durationField25 = property10.getDurationField();
        java.util.Locale locale26 = null;
        java.lang.String str27 = property10.getAsShortText(locale26);
        java.util.Locale locale28 = null;
        int int29 = property10.getMaximumTextLength(locale28);
        org.joda.time.MonthDay monthDay31 = property10.setCopy(1);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 31 + "'", int12 == 31);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(dateTimeFieldType20);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(durationField25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1" + "'", str27, "1");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertNotNull(monthDay31);
    }

    @Test
    public void test1537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1537");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property6 = monthDay1.dayOfMonth();
        org.joda.time.MonthDay monthDay8 = property6.addWrapFieldToCopy(1);
        java.util.Locale locale9 = null;
        java.lang.String str10 = property6.getAsText(locale9);
        java.util.Locale locale11 = null;
        java.lang.String str12 = property6.getAsShortText(locale11);
        org.joda.time.DateTimeField dateTimeField13 = property6.getField();
        org.joda.time.MonthDay monthDay15 = property6.addWrapFieldToCopy(0);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(property6);
        org.junit.Assert.assertNotNull(monthDay8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1" + "'", str10, "1");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1" + "'", str12, "1");
        org.junit.Assert.assertNotNull(dateTimeField13);
        org.junit.Assert.assertNotNull(monthDay15);
    }

    @Test
    public void test1538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1538");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.DurationField durationField12 = property10.getDurationField();
        org.joda.time.MonthDay monthDay14 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MonthDay monthDay16 = monthDay14.withChronologyRetainFields(chronology15);
        org.joda.time.MonthDay monthDay18 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MonthDay monthDay20 = monthDay18.withChronologyRetainFields(chronology19);
        org.joda.time.DateTimeFieldType dateTimeFieldType22 = monthDay18.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property23 = monthDay16.property(dateTimeFieldType22);
        boolean boolean24 = property10.equals((java.lang.Object) monthDay16);
        int int25 = property10.getMaximumValueOverall();
        java.lang.String str26 = property10.getAsShortText();
        java.util.Locale locale27 = null;
        java.lang.String str28 = property10.getAsText(locale27);
        org.joda.time.MonthDay monthDay30 = property10.addToCopy(0);
        org.joda.time.DateTimeField dateTimeField32 = monthDay30.getField((int) (byte) 0);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(durationField12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(dateTimeFieldType22);
        org.junit.Assert.assertNotNull(property23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 31 + "'", int25 == 31);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1" + "'", str26, "1");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1" + "'", str28, "1");
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertNotNull(dateTimeField32);
    }

    @Test
    public void test1539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1539");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod2 = null;
        org.joda.time.MonthDay monthDay4 = monthDay1.withPeriodAdded(readablePeriod2, 1);
        org.joda.time.MonthDay monthDay6 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.MonthDay monthDay8 = monthDay6.withChronologyRetainFields(chronology7);
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = monthDay6.getFieldType((int) (byte) 1);
        int int11 = monthDay4.indexOf(dateTimeFieldType10);
        org.joda.time.MonthDay monthDay12 = new org.joda.time.MonthDay((java.lang.Object) monthDay4);
        java.lang.String str13 = monthDay12.toString();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay4);
        org.junit.Assert.assertNotNull(monthDay6);
        org.junit.Assert.assertNotNull(monthDay8);
        org.junit.Assert.assertNotNull(dateTimeFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "--01-01" + "'", str13, "--01-01");
    }

    @Test
    public void test1540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1540");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay monthDay7 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.MonthDay monthDay9 = monthDay7.withChronologyRetainFields(chronology8);
        org.joda.time.MonthDay monthDay11 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MonthDay monthDay13 = monthDay11.withChronologyRetainFields(chronology12);
        org.joda.time.DateTimeFieldType dateTimeFieldType15 = monthDay11.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property16 = monthDay9.property(dateTimeFieldType15);
        int int17 = monthDay1.indexOf(dateTimeFieldType15);
        org.joda.time.DateTimeZone dateTimeZone18 = null;
        org.joda.time.MonthDay monthDay19 = new org.joda.time.MonthDay(dateTimeZone18);
        org.joda.time.DateTimeField[] dateTimeFieldArray20 = monthDay19.getFields();
        org.joda.time.MonthDay monthDay22 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod23 = null;
        org.joda.time.MonthDay monthDay25 = monthDay22.withPeriodAdded(readablePeriod23, 1);
        boolean boolean26 = monthDay19.isBefore((org.joda.time.ReadablePartial) monthDay22);
        boolean boolean27 = monthDay1.isAfter((org.joda.time.ReadablePartial) monthDay22);
        org.joda.time.MonthDay monthDay29 = monthDay1.plusMonths((int) ' ');
        org.joda.time.format.DateTimeFormatter dateTimeFormatter30 = null;
        java.lang.String str31 = monthDay1.toString(dateTimeFormatter30);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(dateTimeFieldType15);
        org.junit.Assert.assertNotNull(property16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(dateTimeFieldArray20);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertNotNull(monthDay25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(monthDay29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "--01-01" + "'", str31, "--01-01");
    }

    @Test
    public void test1541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1541");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.ReadablePeriod readablePeriod8 = null;
        org.joda.time.MonthDay monthDay10 = monthDay7.withPeriodAdded(readablePeriod8, 21);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay10);
    }

    @Test
    public void test1542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1542");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property6 = monthDay1.dayOfMonth();
        org.joda.time.Chronology chronology7 = monthDay1.getChronology();
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        boolean boolean19 = monthDay1.isSupported(dateTimeFieldType17);
        org.joda.time.MonthDay.Property property20 = monthDay1.monthOfYear();
        org.joda.time.MonthDay monthDay22 = monthDay1.minusDays((int) (short) 1);
        org.joda.time.MonthDay monthDay24 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.MonthDay monthDay26 = monthDay24.withChronologyRetainFields(chronology25);
        org.joda.time.DateTimeFieldType dateTimeFieldType28 = monthDay24.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod29 = null;
        org.joda.time.MonthDay monthDay30 = monthDay24.plus(readablePeriod29);
        int int31 = monthDay30.getMonthOfYear();
        org.joda.time.MonthDay monthDay33 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.MonthDay monthDay35 = monthDay33.withChronologyRetainFields(chronology34);
        org.joda.time.MonthDay monthDay37 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.MonthDay monthDay39 = monthDay37.withChronologyRetainFields(chronology38);
        org.joda.time.DateTimeFieldType dateTimeFieldType41 = monthDay37.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property42 = monthDay35.property(dateTimeFieldType41);
        java.util.Locale locale43 = null;
        int int44 = property42.getMaximumTextLength(locale43);
        org.joda.time.MonthDay monthDay46 = property42.addWrapFieldToCopy((int) (byte) 0);
        org.joda.time.ReadablePeriod readablePeriod47 = null;
        org.joda.time.MonthDay monthDay48 = monthDay46.minus(readablePeriod47);
        boolean boolean49 = monthDay30.isAfter((org.joda.time.ReadablePartial) monthDay46);
        boolean boolean50 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay46);
        org.joda.time.MonthDay monthDay52 = monthDay46.plusDays((int) (byte) 100);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(property6);
        org.junit.Assert.assertNotNull(chronology7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(property20);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(dateTimeFieldType28);
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(monthDay37);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertNotNull(dateTimeFieldType41);
        org.junit.Assert.assertNotNull(property42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertNotNull(monthDay46);
        org.junit.Assert.assertNotNull(monthDay48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(monthDay52);
    }

    @Test
    public void test1543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1543");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        int int12 = property10.getMaximumValue();
        org.joda.time.MonthDay monthDay14 = property10.setCopy((int) (short) 1);
        org.joda.time.MonthDay monthDay16 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MonthDay monthDay18 = monthDay16.withChronologyRetainFields(chronology17);
        org.joda.time.DateTimeFieldType dateTimeFieldType20 = monthDay16.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod21 = null;
        org.joda.time.MonthDay monthDay22 = monthDay16.plus(readablePeriod21);
        int int23 = monthDay16.getDayOfMonth();
        int int24 = property10.compareTo((org.joda.time.ReadablePartial) monthDay16);
        org.joda.time.DateTimeField[] dateTimeFieldArray25 = monthDay16.getFields();
        org.joda.time.MonthDay monthDay27 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.MonthDay monthDay29 = monthDay27.withChronologyRetainFields(chronology28);
        org.joda.time.MonthDay monthDay31 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.MonthDay monthDay33 = monthDay31.withChronologyRetainFields(chronology32);
        org.joda.time.DateTimeFieldType dateTimeFieldType35 = monthDay31.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property36 = monthDay29.property(dateTimeFieldType35);
        int int37 = property36.get();
        org.joda.time.DurationField durationField38 = property36.getDurationField();
        org.joda.time.MonthDay monthDay40 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.MonthDay monthDay42 = monthDay40.withChronologyRetainFields(chronology41);
        org.joda.time.MonthDay monthDay44 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.MonthDay monthDay46 = monthDay44.withChronologyRetainFields(chronology45);
        org.joda.time.DateTimeFieldType dateTimeFieldType48 = monthDay44.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property49 = monthDay42.property(dateTimeFieldType48);
        boolean boolean50 = property36.equals((java.lang.Object) monthDay42);
        int int51 = property36.getMinimumValueOverall();
        org.joda.time.DateTimeFieldType dateTimeFieldType52 = property36.getFieldType();
        org.joda.time.MonthDay monthDay54 = monthDay16.withField(dateTimeFieldType52, (int) (short) 10);
        org.joda.time.MonthDay monthDay56 = monthDay16.minusDays((-1));
        int int57 = monthDay16.size();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 31 + "'", int12 == 31);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(dateTimeFieldType20);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(dateTimeFieldArray25);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertNotNull(monthDay29);
        org.junit.Assert.assertNotNull(monthDay31);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(dateTimeFieldType35);
        org.junit.Assert.assertNotNull(property36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(durationField38);
        org.junit.Assert.assertNotNull(monthDay40);
        org.junit.Assert.assertNotNull(monthDay42);
        org.junit.Assert.assertNotNull(monthDay44);
        org.junit.Assert.assertNotNull(monthDay46);
        org.junit.Assert.assertNotNull(dateTimeFieldType48);
        org.junit.Assert.assertNotNull(property49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(dateTimeFieldType52);
        org.junit.Assert.assertNotNull(monthDay54);
        org.junit.Assert.assertNotNull(monthDay56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
    }

    @Test
    public void test1544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1544");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.DurationField durationField12 = property10.getDurationField();
        org.joda.time.MonthDay monthDay14 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MonthDay monthDay16 = monthDay14.withChronologyRetainFields(chronology15);
        org.joda.time.MonthDay monthDay18 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MonthDay monthDay20 = monthDay18.withChronologyRetainFields(chronology19);
        org.joda.time.DateTimeFieldType dateTimeFieldType22 = monthDay18.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property23 = monthDay16.property(dateTimeFieldType22);
        boolean boolean24 = property10.equals((java.lang.Object) monthDay16);
        org.joda.time.DateTimeField dateTimeField25 = property10.getField();
        java.lang.String str26 = property10.getName();
        java.lang.String str27 = property10.toString();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(durationField12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(dateTimeFieldType22);
        org.junit.Assert.assertNotNull(property23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(dateTimeField25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "dayOfMonth" + "'", str26, "dayOfMonth");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Property[dayOfMonth]" + "'", str27, "Property[dayOfMonth]");
    }

    @Test
    public void test1545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1545");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        org.joda.time.MonthDay.Property property11 = monthDay3.monthOfYear();
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay monthDay19 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MonthDay monthDay21 = monthDay19.withChronologyRetainFields(chronology20);
        org.joda.time.MonthDay monthDay23 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MonthDay monthDay25 = monthDay23.withChronologyRetainFields(chronology24);
        org.joda.time.DateTimeFieldType dateTimeFieldType27 = monthDay23.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property28 = monthDay21.property(dateTimeFieldType27);
        int int29 = monthDay13.indexOf(dateTimeFieldType27);
        boolean boolean30 = monthDay3.equals((java.lang.Object) int29);
        org.joda.time.MonthDay monthDay32 = monthDay3.withMonthOfYear(9);
        org.joda.time.MonthDay monthDay34 = monthDay32.plusDays(3);
        org.joda.time.MonthDay.Property property35 = monthDay34.monthOfYear();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertNotNull(property11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(monthDay19);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertNotNull(monthDay23);
        org.junit.Assert.assertNotNull(monthDay25);
        org.junit.Assert.assertNotNull(dateTimeFieldType27);
        org.junit.Assert.assertNotNull(property28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertNotNull(property35);
    }

    @Test
    public void test1546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1546");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        java.lang.String str12 = property10.toString();
        org.joda.time.MonthDay monthDay14 = property10.addWrapFieldToCopy((int) (short) -1);
        java.lang.String str15 = property10.toString();
        org.joda.time.MonthDay monthDay17 = property10.addWrapFieldToCopy(11);
        java.lang.String str18 = property10.getName();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Property[dayOfMonth]" + "'", str12, "Property[dayOfMonth]");
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Property[dayOfMonth]" + "'", str15, "Property[dayOfMonth]");
        org.junit.Assert.assertNotNull(monthDay17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "dayOfMonth" + "'", str18, "dayOfMonth");
    }

    @Test
    public void test1547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1547");
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.DateTimeFieldType dateTimeFieldType13 = monthDay9.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property14 = monthDay7.property(dateTimeFieldType13);
        org.joda.time.MonthDay.Property property15 = monthDay7.monthOfYear();
        org.joda.time.MonthDay monthDay17 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.MonthDay monthDay19 = monthDay17.withChronologyRetainFields(chronology18);
        org.joda.time.DateTimeFieldType dateTimeFieldType21 = monthDay17.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property22 = monthDay17.dayOfMonth();
        org.joda.time.DateTimeFieldType dateTimeFieldType23 = property22.getFieldType();
        org.joda.time.MonthDay.Property property24 = monthDay7.property(dateTimeFieldType23);
        org.joda.time.MonthDay monthDay26 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.MonthDay monthDay28 = monthDay26.withChronologyRetainFields(chronology27);
        org.joda.time.DateTimeFieldType dateTimeFieldType30 = monthDay26.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod31 = null;
        org.joda.time.MonthDay monthDay32 = monthDay26.plus(readablePeriod31);
        org.joda.time.MonthDay monthDay34 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.MonthDay monthDay36 = monthDay34.withChronologyRetainFields(chronology35);
        org.joda.time.MonthDay monthDay38 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.MonthDay monthDay40 = monthDay38.withChronologyRetainFields(chronology39);
        org.joda.time.DateTimeFieldType dateTimeFieldType42 = monthDay38.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property43 = monthDay36.property(dateTimeFieldType42);
        int int44 = property43.get();
        org.joda.time.MonthDay monthDay46 = property43.addWrapFieldToCopy((int) (short) 1);
        boolean boolean47 = monthDay26.isBefore((org.joda.time.ReadablePartial) monthDay46);
        org.joda.time.MonthDay monthDay49 = monthDay46.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay51 = monthDay49.minusDays(31);
        org.joda.time.MonthDay monthDay53 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod54 = null;
        org.joda.time.MonthDay monthDay56 = monthDay53.withPeriodAdded(readablePeriod54, 1);
        org.joda.time.MonthDay monthDay58 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology59 = null;
        org.joda.time.MonthDay monthDay60 = monthDay58.withChronologyRetainFields(chronology59);
        org.joda.time.DateTimeFieldType dateTimeFieldType62 = monthDay58.getFieldType((int) (byte) 1);
        int int63 = monthDay56.indexOf(dateTimeFieldType62);
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.MonthDay monthDay65 = monthDay56.withChronologyRetainFields(chronology64);
        org.joda.time.MonthDay monthDay67 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.MonthDay monthDay69 = monthDay67.withChronologyRetainFields(chronology68);
        org.joda.time.DateTimeFieldType dateTimeFieldType71 = monthDay67.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod72 = null;
        org.joda.time.MonthDay monthDay73 = monthDay67.plus(readablePeriod72);
        org.joda.time.MonthDay monthDay75 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology76 = null;
        org.joda.time.MonthDay monthDay77 = monthDay75.withChronologyRetainFields(chronology76);
        org.joda.time.MonthDay monthDay79 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology80 = null;
        org.joda.time.MonthDay monthDay81 = monthDay79.withChronologyRetainFields(chronology80);
        org.joda.time.DateTimeFieldType dateTimeFieldType83 = monthDay79.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property84 = monthDay77.property(dateTimeFieldType83);
        int int85 = property84.get();
        org.joda.time.MonthDay monthDay87 = property84.addWrapFieldToCopy((int) (short) 1);
        boolean boolean88 = monthDay67.isBefore((org.joda.time.ReadablePartial) monthDay87);
        org.joda.time.Chronology chronology89 = null;
        org.joda.time.MonthDay monthDay90 = monthDay67.withChronologyRetainFields(chronology89);
        org.joda.time.Chronology chronology91 = monthDay90.getChronology();
        org.joda.time.MonthDay monthDay92 = monthDay65.withChronologyRetainFields(chronology91);
        org.joda.time.MonthDay monthDay93 = monthDay51.withChronologyRetainFields(chronology91);
        org.joda.time.Chronology chronology94 = monthDay93.getChronology();
        org.joda.time.MonthDay monthDay95 = monthDay7.withChronologyRetainFields(chronology94);
        org.joda.time.MonthDay monthDay96 = new org.joda.time.MonthDay((int) (short) 1, 12, chronology94);
        org.joda.time.MonthDay monthDay97 = org.joda.time.MonthDay.now(chronology94);
        org.joda.time.MonthDay monthDay98 = new org.joda.time.MonthDay((long) 'a', chronology94);
        org.joda.time.MonthDay monthDay99 = new org.joda.time.MonthDay((long) '#', chronology94);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(dateTimeFieldType13);
        org.junit.Assert.assertNotNull(property14);
        org.junit.Assert.assertNotNull(property15);
        org.junit.Assert.assertNotNull(monthDay17);
        org.junit.Assert.assertNotNull(monthDay19);
        org.junit.Assert.assertNotNull(dateTimeFieldType21);
        org.junit.Assert.assertNotNull(property22);
        org.junit.Assert.assertNotNull(dateTimeFieldType23);
        org.junit.Assert.assertNotNull(property24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertNotNull(dateTimeFieldType30);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertNotNull(monthDay36);
        org.junit.Assert.assertNotNull(monthDay38);
        org.junit.Assert.assertNotNull(monthDay40);
        org.junit.Assert.assertNotNull(dateTimeFieldType42);
        org.junit.Assert.assertNotNull(property43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(monthDay46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(monthDay49);
        org.junit.Assert.assertNotNull(monthDay51);
        org.junit.Assert.assertNotNull(monthDay53);
        org.junit.Assert.assertNotNull(monthDay56);
        org.junit.Assert.assertNotNull(monthDay58);
        org.junit.Assert.assertNotNull(monthDay60);
        org.junit.Assert.assertNotNull(dateTimeFieldType62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertNotNull(monthDay65);
        org.junit.Assert.assertNotNull(monthDay67);
        org.junit.Assert.assertNotNull(monthDay69);
        org.junit.Assert.assertNotNull(dateTimeFieldType71);
        org.junit.Assert.assertNotNull(monthDay73);
        org.junit.Assert.assertNotNull(monthDay75);
        org.junit.Assert.assertNotNull(monthDay77);
        org.junit.Assert.assertNotNull(monthDay79);
        org.junit.Assert.assertNotNull(monthDay81);
        org.junit.Assert.assertNotNull(dateTimeFieldType83);
        org.junit.Assert.assertNotNull(property84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertNotNull(monthDay87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(monthDay90);
        org.junit.Assert.assertNotNull(chronology91);
        org.junit.Assert.assertNotNull(monthDay92);
        org.junit.Assert.assertNotNull(monthDay93);
        org.junit.Assert.assertNotNull(chronology94);
        org.junit.Assert.assertNotNull(monthDay95);
        org.junit.Assert.assertNotNull(monthDay97);
    }

    @Test
    public void test1548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1548");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        java.util.Locale locale11 = null;
        int int12 = property10.getMaximumTextLength(locale11);
        org.joda.time.MonthDay monthDay14 = property10.addWrapFieldToCopy((int) (byte) 0);
        java.lang.String str15 = property10.getName();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "dayOfMonth" + "'", str15, "dayOfMonth");
    }

    @Test
    public void test1549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1549");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod2 = null;
        org.joda.time.MonthDay monthDay4 = monthDay1.withPeriodAdded(readablePeriod2, 1);
        org.joda.time.MonthDay monthDay6 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.MonthDay monthDay8 = monthDay6.withChronologyRetainFields(chronology7);
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = monthDay6.getFieldType((int) (byte) 1);
        int int11 = monthDay4.indexOf(dateTimeFieldType10);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MonthDay monthDay13 = monthDay4.withChronologyRetainFields(chronology12);
        org.joda.time.MonthDay.Property property14 = monthDay13.dayOfMonth();
        java.lang.String str15 = property14.toString();
        org.joda.time.MonthDay monthDay17 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.MonthDay monthDay19 = monthDay17.withChronologyRetainFields(chronology18);
        org.joda.time.DateTimeFieldType dateTimeFieldType21 = monthDay17.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod22 = null;
        org.joda.time.MonthDay monthDay23 = monthDay17.plus(readablePeriod22);
        org.joda.time.MonthDay monthDay25 = monthDay17.plusMonths((int) (byte) 1);
        org.joda.time.MonthDay monthDay27 = monthDay17.plusDays(31);
        int int28 = property14.compareTo((org.joda.time.ReadablePartial) monthDay27);
        java.util.Locale locale30 = null;
        java.lang.String str31 = monthDay27.toString("--01-09", locale30);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay4);
        org.junit.Assert.assertNotNull(monthDay6);
        org.junit.Assert.assertNotNull(monthDay8);
        org.junit.Assert.assertNotNull(dateTimeFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(property14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Property[dayOfMonth]" + "'", str15, "Property[dayOfMonth]");
        org.junit.Assert.assertNotNull(monthDay17);
        org.junit.Assert.assertNotNull(monthDay19);
        org.junit.Assert.assertNotNull(dateTimeFieldType21);
        org.junit.Assert.assertNotNull(monthDay23);
        org.junit.Assert.assertNotNull(monthDay25);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "--01-09" + "'", str31, "--01-09");
    }

    @Test
    public void test1550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1550");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property6 = monthDay1.dayOfMonth();
        org.joda.time.Chronology chronology7 = monthDay1.getChronology();
        org.joda.time.Chronology chronology8 = monthDay1.getChronology();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.DateTime dateTime10 = monthDay1.toDateTime(readableInstant9);
        org.joda.time.MonthDay monthDay12 = monthDay1.plusMonths((int) ' ');
        org.joda.time.MonthDay monthDay14 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MonthDay monthDay16 = monthDay14.withChronologyRetainFields(chronology15);
        org.joda.time.DateTimeFieldType dateTimeFieldType18 = monthDay14.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod19 = null;
        org.joda.time.MonthDay monthDay20 = monthDay14.plus(readablePeriod19);
        org.joda.time.MonthDay monthDay22 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MonthDay monthDay24 = monthDay22.withChronologyRetainFields(chronology23);
        org.joda.time.MonthDay monthDay26 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.MonthDay monthDay28 = monthDay26.withChronologyRetainFields(chronology27);
        org.joda.time.DateTimeFieldType dateTimeFieldType30 = monthDay26.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property31 = monthDay24.property(dateTimeFieldType30);
        int int32 = property31.get();
        org.joda.time.MonthDay monthDay34 = property31.addWrapFieldToCopy((int) (short) 1);
        boolean boolean35 = monthDay14.isBefore((org.joda.time.ReadablePartial) monthDay34);
        org.joda.time.MonthDay monthDay37 = monthDay34.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay39 = monthDay37.plusMonths(1);
        org.joda.time.ReadablePeriod readablePeriod40 = null;
        org.joda.time.MonthDay monthDay41 = monthDay37.minus(readablePeriod40);
        org.joda.time.DateTimeZone dateTimeZone42 = null;
        org.joda.time.MonthDay monthDay43 = new org.joda.time.MonthDay(dateTimeZone42);
        boolean boolean44 = monthDay41.isEqual((org.joda.time.ReadablePartial) monthDay43);
        boolean boolean45 = monthDay1.equals((java.lang.Object) monthDay41);
        org.joda.time.MonthDay.Property property46 = monthDay41.dayOfMonth();
        org.joda.time.ReadablePeriod readablePeriod47 = null;
        org.joda.time.MonthDay monthDay48 = monthDay41.plus(readablePeriod47);
        org.joda.time.MonthDay.Property property49 = monthDay41.monthOfYear();
        org.joda.time.MonthDay monthDay51 = monthDay41.plusDays(25);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(property6);
        org.junit.Assert.assertNotNull(chronology7);
        org.junit.Assert.assertNotNull(chronology8);
        org.junit.Assert.assertNotNull(dateTime10);
        org.junit.Assert.assertNotNull(monthDay12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(dateTimeFieldType18);
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertNotNull(dateTimeFieldType30);
        org.junit.Assert.assertNotNull(property31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(monthDay37);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertNotNull(monthDay41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(property46);
        org.junit.Assert.assertNotNull(monthDay48);
        org.junit.Assert.assertNotNull(property49);
        org.junit.Assert.assertNotNull(monthDay51);
    }

    @Test
    public void test1551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1551");
        org.joda.time.DateTimeZone dateTimeZone0 = null;
        org.joda.time.MonthDay monthDay1 = new org.joda.time.MonthDay(dateTimeZone0);
        org.joda.time.MonthDay monthDay3 = monthDay1.minusDays(100);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay5.dayOfMonth();
        org.joda.time.Chronology chronology11 = monthDay5.getChronology();
        org.joda.time.Chronology chronology12 = monthDay5.getChronology();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.DateTime dateTime14 = monthDay5.toDateTime(readableInstant13);
        org.joda.time.DateTime dateTime15 = monthDay1.toDateTime((org.joda.time.ReadableInstant) dateTime14);
        java.lang.Class<?> wildcardClass16 = dateTime14.getClass();
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertNotNull(chronology11);
        org.junit.Assert.assertNotNull(chronology12);
        org.junit.Assert.assertNotNull(dateTime14);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1552");
        org.joda.time.MonthDay monthDay2 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.MonthDay monthDay4 = monthDay2.withChronologyRetainFields(chronology3);
        org.joda.time.DateTimeFieldType dateTimeFieldType6 = monthDay2.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.MonthDay monthDay8 = monthDay2.plus(readablePeriod7);
        org.joda.time.MonthDay monthDay10 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.MonthDay monthDay12 = monthDay10.withChronologyRetainFields(chronology11);
        org.joda.time.MonthDay monthDay14 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MonthDay monthDay16 = monthDay14.withChronologyRetainFields(chronology15);
        org.joda.time.DateTimeFieldType dateTimeFieldType18 = monthDay14.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property19 = monthDay12.property(dateTimeFieldType18);
        int int20 = property19.get();
        org.joda.time.MonthDay monthDay22 = property19.addWrapFieldToCopy((int) (short) 1);
        boolean boolean23 = monthDay2.isBefore((org.joda.time.ReadablePartial) monthDay22);
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MonthDay monthDay25 = monthDay2.withChronologyRetainFields(chronology24);
        org.joda.time.Chronology chronology26 = monthDay25.getChronology();
        int[] intArray27 = monthDay25.getValues();
        org.joda.time.MonthDay monthDay29 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.MonthDay monthDay31 = monthDay29.withChronologyRetainFields(chronology30);
        org.joda.time.DateTimeFieldType dateTimeFieldType33 = monthDay29.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay monthDay35 = monthDay25.withField(dateTimeFieldType33, 10);
        org.joda.time.MonthDay monthDay37 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.MonthDay monthDay39 = monthDay37.withChronologyRetainFields(chronology38);
        org.joda.time.MonthDay monthDay41 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.MonthDay monthDay43 = monthDay41.withChronologyRetainFields(chronology42);
        org.joda.time.DateTimeFieldType dateTimeFieldType45 = monthDay41.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property46 = monthDay41.dayOfMonth();
        org.joda.time.Chronology chronology47 = monthDay41.getChronology();
        org.joda.time.MonthDay monthDay48 = org.joda.time.MonthDay.now(chronology47);
        org.joda.time.MonthDay monthDay49 = monthDay39.withChronologyRetainFields(chronology47);
        org.joda.time.Chronology chronology50 = monthDay39.getChronology();
        org.joda.time.MonthDay monthDay51 = new org.joda.time.MonthDay((java.lang.Object) monthDay35, chronology50);
        org.joda.time.MonthDay monthDay52 = new org.joda.time.MonthDay((long) 0, chronology50);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DateTimeField dateTimeField54 = monthDay52.getField(24);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index: 24");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(monthDay2);
        org.junit.Assert.assertNotNull(monthDay4);
        org.junit.Assert.assertNotNull(dateTimeFieldType6);
        org.junit.Assert.assertNotNull(monthDay8);
        org.junit.Assert.assertNotNull(monthDay10);
        org.junit.Assert.assertNotNull(monthDay12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(dateTimeFieldType18);
        org.junit.Assert.assertNotNull(property19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(monthDay25);
        org.junit.Assert.assertNotNull(chronology26);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1, 1]");
        org.junit.Assert.assertNotNull(monthDay29);
        org.junit.Assert.assertNotNull(monthDay31);
        org.junit.Assert.assertNotNull(dateTimeFieldType33);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(monthDay37);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertNotNull(monthDay41);
        org.junit.Assert.assertNotNull(monthDay43);
        org.junit.Assert.assertNotNull(dateTimeFieldType45);
        org.junit.Assert.assertNotNull(property46);
        org.junit.Assert.assertNotNull(chronology47);
        org.junit.Assert.assertNotNull(monthDay48);
        org.junit.Assert.assertNotNull(monthDay49);
        org.junit.Assert.assertNotNull(chronology50);
    }

    @Test
    public void test1553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1553");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.MonthDay monthDay13 = property10.addWrapFieldToCopy((int) (short) 1);
        org.joda.time.MonthDay.Property property14 = monthDay13.dayOfMonth();
        int int15 = property14.getMaximumValueOverall();
        int int16 = property14.getMinimumValueOverall();
        org.joda.time.MonthDay monthDay17 = property14.getMonthDay();
        org.joda.time.MonthDay monthDay19 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MonthDay monthDay21 = monthDay19.withChronologyRetainFields(chronology20);
        org.joda.time.DateTimeFieldType dateTimeFieldType23 = monthDay19.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod24 = null;
        org.joda.time.MonthDay monthDay25 = monthDay19.plus(readablePeriod24);
        org.joda.time.MonthDay monthDay27 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.MonthDay monthDay29 = monthDay27.withChronologyRetainFields(chronology28);
        org.joda.time.MonthDay monthDay31 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.MonthDay monthDay33 = monthDay31.withChronologyRetainFields(chronology32);
        org.joda.time.DateTimeFieldType dateTimeFieldType35 = monthDay31.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property36 = monthDay29.property(dateTimeFieldType35);
        int int37 = property36.get();
        org.joda.time.MonthDay monthDay39 = property36.addWrapFieldToCopy((int) (short) 1);
        boolean boolean40 = monthDay19.isBefore((org.joda.time.ReadablePartial) monthDay39);
        org.joda.time.MonthDay monthDay42 = monthDay39.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay44 = monthDay42.minusDays(31);
        org.joda.time.MonthDay monthDay46 = monthDay44.plusDays((int) (byte) 10);
        org.joda.time.MonthDay monthDay48 = monthDay44.minusMonths(2);
        org.joda.time.MonthDay monthDay50 = monthDay44.plusMonths((int) '#');
        org.joda.time.MonthDay monthDay52 = monthDay50.plusMonths((int) (byte) 1);
        boolean boolean53 = monthDay17.isEqual((org.joda.time.ReadablePartial) monthDay52);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(property14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 31 + "'", int15 == 31);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(monthDay17);
        org.junit.Assert.assertNotNull(monthDay19);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertNotNull(dateTimeFieldType23);
        org.junit.Assert.assertNotNull(monthDay25);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertNotNull(monthDay29);
        org.junit.Assert.assertNotNull(monthDay31);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(dateTimeFieldType35);
        org.junit.Assert.assertNotNull(property36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(monthDay42);
        org.junit.Assert.assertNotNull(monthDay44);
        org.junit.Assert.assertNotNull(monthDay46);
        org.junit.Assert.assertNotNull(monthDay48);
        org.junit.Assert.assertNotNull(monthDay50);
        org.junit.Assert.assertNotNull(monthDay52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test1554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1554");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("2");
        org.joda.time.MonthDay monthDay4 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.MonthDay monthDay6 = monthDay4.withChronologyRetainFields(chronology5);
        org.joda.time.MonthDay monthDay8 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.MonthDay monthDay10 = monthDay8.withChronologyRetainFields(chronology9);
        org.joda.time.DateTimeFieldType dateTimeFieldType12 = monthDay8.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property13 = monthDay8.dayOfMonth();
        org.joda.time.Chronology chronology14 = monthDay8.getChronology();
        org.joda.time.MonthDay monthDay15 = org.joda.time.MonthDay.now(chronology14);
        org.joda.time.MonthDay monthDay16 = monthDay6.withChronologyRetainFields(chronology14);
        org.joda.time.MonthDay monthDay17 = new org.joda.time.MonthDay(10L, chronology14);
        org.joda.time.MonthDay monthDay18 = monthDay1.withChronologyRetainFields(chronology14);
        org.joda.time.MonthDay monthDay19 = new org.joda.time.MonthDay(chronology14);
        org.joda.time.MonthDay monthDay20 = org.joda.time.MonthDay.now(chronology14);
        org.joda.time.MonthDay monthDay21 = org.joda.time.MonthDay.now(chronology14);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay4);
        org.junit.Assert.assertNotNull(monthDay6);
        org.junit.Assert.assertNotNull(monthDay8);
        org.junit.Assert.assertNotNull(monthDay10);
        org.junit.Assert.assertNotNull(dateTimeFieldType12);
        org.junit.Assert.assertNotNull(property13);
        org.junit.Assert.assertNotNull(chronology14);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(monthDay21);
    }

    @Test
    public void test1555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1555");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.MonthDay monthDay3 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MonthDay monthDay5 = monthDay3.withChronologyRetainFields(chronology4);
        org.joda.time.DateTimeFieldType dateTimeFieldType7 = monthDay3.getFieldType((int) (byte) 1);
        boolean boolean8 = monthDay1.isSupported(dateTimeFieldType7);
        org.joda.time.MonthDay monthDay10 = org.joda.time.MonthDay.parse("");
        org.joda.time.MonthDay monthDay12 = monthDay10.minusDays((int) '#');
        org.joda.time.MonthDay monthDay14 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MonthDay monthDay16 = monthDay14.withChronologyRetainFields(chronology15);
        org.joda.time.DateTimeFieldType dateTimeFieldType18 = monthDay14.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property19 = monthDay14.dayOfMonth();
        org.joda.time.Chronology chronology20 = monthDay14.getChronology();
        org.joda.time.Chronology chronology21 = monthDay14.getChronology();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.DateTime dateTime23 = monthDay14.toDateTime(readableInstant22);
        org.joda.time.MonthDay monthDay25 = monthDay14.plusMonths((int) ' ');
        boolean boolean26 = monthDay10.isAfter((org.joda.time.ReadablePartial) monthDay25);
        boolean boolean27 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay25);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DateTimeField dateTimeField29 = monthDay25.getField(22);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index: 22");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(dateTimeFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(monthDay10);
        org.junit.Assert.assertNotNull(monthDay12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(dateTimeFieldType18);
        org.junit.Assert.assertNotNull(property19);
        org.junit.Assert.assertNotNull(chronology20);
        org.junit.Assert.assertNotNull(chronology21);
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertNotNull(monthDay25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test1556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1556");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property6 = monthDay1.dayOfMonth();
        org.joda.time.MonthDay monthDay8 = property6.addWrapFieldToCopy(1);
        org.joda.time.MonthDay monthDay10 = property6.addWrapFieldToCopy(0);
        org.joda.time.MonthDay monthDay12 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MonthDay monthDay14 = monthDay12.withChronologyRetainFields(chronology13);
        org.joda.time.MonthDay monthDay16 = monthDay12.minusMonths((int) (byte) -1);
        boolean boolean17 = property6.equals((java.lang.Object) monthDay16);
        int int18 = property6.getMaximumValue();
        org.joda.time.DateTimeFieldType dateTimeFieldType19 = property6.getFieldType();
        int int20 = property6.getMinimumValue();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(property6);
        org.junit.Assert.assertNotNull(monthDay8);
        org.junit.Assert.assertNotNull(monthDay10);
        org.junit.Assert.assertNotNull(monthDay12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 31 + "'", int18 == 31);
        org.junit.Assert.assertNotNull(dateTimeFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
    }

    @Test
    public void test1557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1557");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.DurationField durationField12 = property10.getDurationField();
        org.joda.time.MonthDay monthDay14 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MonthDay monthDay16 = monthDay14.withChronologyRetainFields(chronology15);
        org.joda.time.MonthDay monthDay18 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MonthDay monthDay20 = monthDay18.withChronologyRetainFields(chronology19);
        org.joda.time.DateTimeFieldType dateTimeFieldType22 = monthDay18.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property23 = monthDay16.property(dateTimeFieldType22);
        boolean boolean24 = property10.equals((java.lang.Object) monthDay16);
        java.lang.String str25 = property10.getAsShortText();
        java.lang.String str26 = property10.toString();
        java.util.Locale locale27 = null;
        int int28 = property10.getMaximumShortTextLength(locale27);
        boolean boolean30 = property10.equals((java.lang.Object) 0.0d);
        org.joda.time.MonthDay monthDay32 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.MonthDay monthDay34 = monthDay32.withChronologyRetainFields(chronology33);
        org.joda.time.DateTimeFieldType dateTimeFieldType36 = monthDay32.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod37 = null;
        org.joda.time.MonthDay monthDay38 = monthDay32.plus(readablePeriod37);
        org.joda.time.MonthDay monthDay40 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.MonthDay monthDay42 = monthDay40.withChronologyRetainFields(chronology41);
        org.joda.time.MonthDay monthDay44 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.MonthDay monthDay46 = monthDay44.withChronologyRetainFields(chronology45);
        org.joda.time.DateTimeFieldType dateTimeFieldType48 = monthDay44.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property49 = monthDay42.property(dateTimeFieldType48);
        int int50 = property49.get();
        org.joda.time.MonthDay monthDay52 = property49.addWrapFieldToCopy((int) (short) 1);
        boolean boolean53 = monthDay32.isBefore((org.joda.time.ReadablePartial) monthDay52);
        int int54 = property10.compareTo((org.joda.time.ReadablePartial) monthDay52);
        org.joda.time.MonthDay.Property property55 = monthDay52.monthOfYear();
        java.util.Locale locale56 = null;
        int int57 = property55.getMaximumTextLength(locale56);
        java.lang.String str58 = property55.getAsText();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(durationField12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(dateTimeFieldType22);
        org.junit.Assert.assertNotNull(property23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1" + "'", str25, "1");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Property[dayOfMonth]" + "'", str26, "Property[dayOfMonth]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertNotNull(dateTimeFieldType36);
        org.junit.Assert.assertNotNull(monthDay38);
        org.junit.Assert.assertNotNull(monthDay40);
        org.junit.Assert.assertNotNull(monthDay42);
        org.junit.Assert.assertNotNull(monthDay44);
        org.junit.Assert.assertNotNull(monthDay46);
        org.junit.Assert.assertNotNull(dateTimeFieldType48);
        org.junit.Assert.assertNotNull(property49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(monthDay52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(property55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 9 + "'", int57 == 9);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "January" + "'", str58, "January");
    }

    @Test
    public void test1558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1558");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.MonthDay monthDay24 = monthDay21.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay26 = monthDay24.minusDays(31);
        org.joda.time.MonthDay monthDay28 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod29 = null;
        org.joda.time.MonthDay monthDay31 = monthDay28.withPeriodAdded(readablePeriod29, 1);
        org.joda.time.MonthDay monthDay33 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.MonthDay monthDay35 = monthDay33.withChronologyRetainFields(chronology34);
        org.joda.time.DateTimeFieldType dateTimeFieldType37 = monthDay33.getFieldType((int) (byte) 1);
        int int38 = monthDay31.indexOf(dateTimeFieldType37);
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.MonthDay monthDay40 = monthDay31.withChronologyRetainFields(chronology39);
        org.joda.time.MonthDay monthDay42 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.MonthDay monthDay44 = monthDay42.withChronologyRetainFields(chronology43);
        org.joda.time.DateTimeFieldType dateTimeFieldType46 = monthDay42.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod47 = null;
        org.joda.time.MonthDay monthDay48 = monthDay42.plus(readablePeriod47);
        org.joda.time.MonthDay monthDay50 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.MonthDay monthDay52 = monthDay50.withChronologyRetainFields(chronology51);
        org.joda.time.MonthDay monthDay54 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.MonthDay monthDay56 = monthDay54.withChronologyRetainFields(chronology55);
        org.joda.time.DateTimeFieldType dateTimeFieldType58 = monthDay54.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property59 = monthDay52.property(dateTimeFieldType58);
        int int60 = property59.get();
        org.joda.time.MonthDay monthDay62 = property59.addWrapFieldToCopy((int) (short) 1);
        boolean boolean63 = monthDay42.isBefore((org.joda.time.ReadablePartial) monthDay62);
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.MonthDay monthDay65 = monthDay42.withChronologyRetainFields(chronology64);
        org.joda.time.Chronology chronology66 = monthDay65.getChronology();
        org.joda.time.MonthDay monthDay67 = monthDay40.withChronologyRetainFields(chronology66);
        org.joda.time.MonthDay monthDay68 = monthDay26.withChronologyRetainFields(chronology66);
        org.joda.time.MonthDay monthDay69 = org.joda.time.MonthDay.now(chronology66);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertNotNull(monthDay31);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(dateTimeFieldType37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(monthDay40);
        org.junit.Assert.assertNotNull(monthDay42);
        org.junit.Assert.assertNotNull(monthDay44);
        org.junit.Assert.assertNotNull(dateTimeFieldType46);
        org.junit.Assert.assertNotNull(monthDay48);
        org.junit.Assert.assertNotNull(monthDay50);
        org.junit.Assert.assertNotNull(monthDay52);
        org.junit.Assert.assertNotNull(monthDay54);
        org.junit.Assert.assertNotNull(monthDay56);
        org.junit.Assert.assertNotNull(dateTimeFieldType58);
        org.junit.Assert.assertNotNull(property59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(monthDay62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(monthDay65);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(monthDay67);
        org.junit.Assert.assertNotNull(monthDay68);
        org.junit.Assert.assertNotNull(monthDay69);
    }

    @Test
    public void test1559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1559");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.DurationField durationField12 = property10.getDurationField();
        org.joda.time.MonthDay monthDay14 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MonthDay monthDay16 = monthDay14.withChronologyRetainFields(chronology15);
        org.joda.time.MonthDay monthDay18 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MonthDay monthDay20 = monthDay18.withChronologyRetainFields(chronology19);
        org.joda.time.DateTimeFieldType dateTimeFieldType22 = monthDay18.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property23 = monthDay16.property(dateTimeFieldType22);
        boolean boolean24 = property10.equals((java.lang.Object) monthDay16);
        java.lang.String str25 = property10.getAsShortText();
        java.lang.String str26 = property10.toString();
        org.joda.time.MonthDay monthDay28 = property10.addWrapFieldToCopy(9);
        org.joda.time.DurationField durationField29 = property10.getDurationField();
        org.joda.time.DurationField durationField30 = property10.getDurationField();
        java.lang.String str31 = property10.getAsShortText();
        java.lang.String str32 = property10.getName();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(durationField12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(dateTimeFieldType22);
        org.junit.Assert.assertNotNull(property23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1" + "'", str25, "1");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Property[dayOfMonth]" + "'", str26, "Property[dayOfMonth]");
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertNotNull(durationField29);
        org.junit.Assert.assertNotNull(durationField30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1" + "'", str31, "1");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "dayOfMonth" + "'", str32, "dayOfMonth");
    }

    @Test
    public void test1560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1560");
        org.joda.time.DateTimeZone dateTimeZone0 = null;
        org.joda.time.MonthDay monthDay1 = new org.joda.time.MonthDay(dateTimeZone0);
        org.joda.time.MonthDay.Property property2 = monthDay1.dayOfMonth();
        org.joda.time.MonthDay monthDay4 = property2.addToCopy(0);
        org.joda.time.MonthDay monthDay6 = property2.addToCopy(100);
        java.lang.String str7 = property2.getName();
        org.junit.Assert.assertNotNull(property2);
        org.junit.Assert.assertNotNull(monthDay4);
        org.junit.Assert.assertNotNull(monthDay6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "dayOfMonth" + "'", str7, "dayOfMonth");
    }

    @Test
    public void test1561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1561");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        org.joda.time.MonthDay.Property property11 = monthDay3.monthOfYear();
        java.util.Locale locale12 = null;
        int int13 = property11.getMaximumTextLength(locale12);
        int int14 = property11.getMaximumValue();
        org.joda.time.MonthDay monthDay16 = property11.addWrapFieldToCopy((int) '#');
        java.lang.String str17 = property11.toString();
        org.joda.time.DateTimeField dateTimeField18 = property11.getField();
        java.util.Locale locale19 = null;
        java.lang.String str20 = property11.getAsShortText(locale19);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertNotNull(property11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 9 + "'", int13 == 9);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 12 + "'", int14 == 12);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Property[monthOfYear]" + "'", str17, "Property[monthOfYear]");
        org.junit.Assert.assertNotNull(dateTimeField18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Jan" + "'", str20, "Jan");
    }

    @Test
    public void test1562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1562");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        int int12 = property10.getMaximumValue();
        org.joda.time.MonthDay monthDay14 = property10.setCopy((int) (short) 1);
        org.joda.time.MonthDay monthDay16 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MonthDay monthDay18 = monthDay16.withChronologyRetainFields(chronology17);
        org.joda.time.DateTimeFieldType dateTimeFieldType20 = monthDay16.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod21 = null;
        org.joda.time.MonthDay monthDay22 = monthDay16.plus(readablePeriod21);
        int int23 = monthDay16.getDayOfMonth();
        int int24 = property10.compareTo((org.joda.time.ReadablePartial) monthDay16);
        java.lang.String str25 = property10.getName();
        java.util.Locale locale26 = null;
        java.lang.String str27 = property10.getAsShortText(locale26);
        java.util.Locale locale28 = null;
        java.lang.String str29 = property10.getAsShortText(locale28);
        org.joda.time.MonthDay monthDay31 = property10.addToCopy(30);
        org.joda.time.DurationFieldType durationFieldType32 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MonthDay monthDay34 = monthDay31.withFieldAdded(durationFieldType32, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Field 'null' is not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 31 + "'", int12 == 31);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(dateTimeFieldType20);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "dayOfMonth" + "'", str25, "dayOfMonth");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1" + "'", str27, "1");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1" + "'", str29, "1");
        org.junit.Assert.assertNotNull(monthDay31);
    }

    @Test
    public void test1563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1563");
        org.joda.time.MonthDay monthDay1 = new org.joda.time.MonthDay(10L);
        int int2 = monthDay1.size();
        org.joda.time.MonthDay monthDay4 = monthDay1.minusDays((int) (byte) 1);
        org.joda.time.MonthDay monthDay6 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.MonthDay monthDay8 = monthDay6.withChronologyRetainFields(chronology7);
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = monthDay6.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod11 = null;
        org.joda.time.MonthDay monthDay12 = monthDay6.plus(readablePeriod11);
        org.joda.time.MonthDay monthDay14 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MonthDay monthDay16 = monthDay14.withChronologyRetainFields(chronology15);
        org.joda.time.MonthDay monthDay18 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MonthDay monthDay20 = monthDay18.withChronologyRetainFields(chronology19);
        org.joda.time.DateTimeFieldType dateTimeFieldType22 = monthDay18.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property23 = monthDay16.property(dateTimeFieldType22);
        int int24 = property23.get();
        org.joda.time.MonthDay monthDay26 = property23.addWrapFieldToCopy((int) (short) 1);
        boolean boolean27 = monthDay6.isBefore((org.joda.time.ReadablePartial) monthDay26);
        org.joda.time.MonthDay monthDay29 = monthDay26.minusMonths((int) (byte) -1);
        org.joda.time.MonthDay.Property property30 = monthDay29.monthOfYear();
        boolean boolean31 = monthDay4.isEqual((org.joda.time.ReadablePartial) monthDay29);
        org.joda.time.MonthDay monthDay33 = monthDay29.plusDays((int) (byte) 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertNotNull(monthDay4);
        org.junit.Assert.assertNotNull(monthDay6);
        org.junit.Assert.assertNotNull(monthDay8);
        org.junit.Assert.assertNotNull(dateTimeFieldType10);
        org.junit.Assert.assertNotNull(monthDay12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(dateTimeFieldType22);
        org.junit.Assert.assertNotNull(property23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(monthDay29);
        org.junit.Assert.assertNotNull(property30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(monthDay33);
    }

    @Test
    public void test1564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1564");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.DurationField durationField12 = property10.getDurationField();
        org.joda.time.MonthDay monthDay14 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MonthDay monthDay16 = monthDay14.withChronologyRetainFields(chronology15);
        org.joda.time.MonthDay monthDay18 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MonthDay monthDay20 = monthDay18.withChronologyRetainFields(chronology19);
        org.joda.time.DateTimeFieldType dateTimeFieldType22 = monthDay18.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property23 = monthDay16.property(dateTimeFieldType22);
        boolean boolean24 = property10.equals((java.lang.Object) monthDay16);
        java.lang.String str25 = property10.getAsShortText();
        java.lang.String str26 = property10.toString();
        java.util.Locale locale27 = null;
        int int28 = property10.getMaximumShortTextLength(locale27);
        boolean boolean30 = property10.equals((java.lang.Object) 0.0d);
        java.util.Locale locale31 = null;
        java.lang.String str32 = property10.getAsShortText(locale31);
        int int33 = property10.getMaximumValue();
        org.joda.time.DateTimeField dateTimeField34 = property10.getField();
        org.joda.time.DateTimeFieldType dateTimeFieldType35 = property10.getFieldType();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(durationField12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(dateTimeFieldType22);
        org.junit.Assert.assertNotNull(property23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1" + "'", str25, "1");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Property[dayOfMonth]" + "'", str26, "Property[dayOfMonth]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1" + "'", str32, "1");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 31 + "'", int33 == 31);
        org.junit.Assert.assertNotNull(dateTimeField34);
        org.junit.Assert.assertNotNull(dateTimeFieldType35);
    }

    @Test
    public void test1565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1565");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod2 = null;
        org.joda.time.MonthDay monthDay4 = monthDay1.withPeriodAdded(readablePeriod2, 1);
        org.joda.time.MonthDay monthDay6 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.MonthDay monthDay8 = monthDay6.withChronologyRetainFields(chronology7);
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = monthDay6.getFieldType((int) (byte) 1);
        int int11 = monthDay4.indexOf(dateTimeFieldType10);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MonthDay monthDay13 = monthDay4.withChronologyRetainFields(chronology12);
        org.joda.time.MonthDay monthDay15 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MonthDay monthDay17 = monthDay15.withChronologyRetainFields(chronology16);
        org.joda.time.DateTimeFieldType dateTimeFieldType19 = monthDay15.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod20 = null;
        org.joda.time.MonthDay monthDay21 = monthDay15.plus(readablePeriod20);
        org.joda.time.MonthDay monthDay23 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MonthDay monthDay25 = monthDay23.withChronologyRetainFields(chronology24);
        org.joda.time.MonthDay monthDay27 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.MonthDay monthDay29 = monthDay27.withChronologyRetainFields(chronology28);
        org.joda.time.DateTimeFieldType dateTimeFieldType31 = monthDay27.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property32 = monthDay25.property(dateTimeFieldType31);
        int int33 = property32.get();
        org.joda.time.MonthDay monthDay35 = property32.addWrapFieldToCopy((int) (short) 1);
        boolean boolean36 = monthDay15.isBefore((org.joda.time.ReadablePartial) monthDay35);
        org.joda.time.MonthDay monthDay38 = monthDay35.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay40 = monthDay38.plusMonths(1);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.MonthDay monthDay42 = monthDay38.minus(readablePeriod41);
        org.joda.time.DateTimeZone dateTimeZone43 = null;
        org.joda.time.MonthDay monthDay44 = new org.joda.time.MonthDay(dateTimeZone43);
        boolean boolean45 = monthDay42.isEqual((org.joda.time.ReadablePartial) monthDay44);
        org.joda.time.MonthDay monthDay47 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.MonthDay monthDay49 = monthDay47.withChronologyRetainFields(chronology48);
        org.joda.time.DateTimeFieldType dateTimeFieldType51 = monthDay47.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod52 = null;
        org.joda.time.MonthDay monthDay53 = monthDay47.plus(readablePeriod52);
        org.joda.time.MonthDay monthDay55 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.MonthDay monthDay57 = monthDay55.withChronologyRetainFields(chronology56);
        org.joda.time.MonthDay monthDay59 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.MonthDay monthDay61 = monthDay59.withChronologyRetainFields(chronology60);
        org.joda.time.DateTimeFieldType dateTimeFieldType63 = monthDay59.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property64 = monthDay57.property(dateTimeFieldType63);
        int int65 = property64.get();
        org.joda.time.MonthDay monthDay67 = property64.addWrapFieldToCopy((int) (short) 1);
        boolean boolean68 = monthDay47.isBefore((org.joda.time.ReadablePartial) monthDay67);
        org.joda.time.DateTimeFieldType dateTimeFieldType70 = monthDay47.getFieldType(0);
        int int71 = monthDay42.indexOf(dateTimeFieldType70);
        boolean boolean72 = monthDay13.isSupported(dateTimeFieldType70);
        org.joda.time.MonthDay monthDay74 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology75 = null;
        org.joda.time.MonthDay monthDay76 = monthDay74.withChronologyRetainFields(chronology75);
        org.joda.time.DateTimeFieldType dateTimeFieldType78 = monthDay74.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod79 = null;
        org.joda.time.MonthDay monthDay80 = monthDay74.plus(readablePeriod79);
        org.joda.time.ReadablePeriod readablePeriod81 = null;
        org.joda.time.MonthDay monthDay83 = monthDay74.withPeriodAdded(readablePeriod81, 9);
        org.joda.time.DateTimeField dateTimeField85 = monthDay83.getField(1);
        java.lang.String str87 = monthDay83.toString("--09-02");
        boolean boolean88 = monthDay13.isAfter((org.joda.time.ReadablePartial) monthDay83);
        int int89 = monthDay83.getDayOfMonth();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay4);
        org.junit.Assert.assertNotNull(monthDay6);
        org.junit.Assert.assertNotNull(monthDay8);
        org.junit.Assert.assertNotNull(dateTimeFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(monthDay17);
        org.junit.Assert.assertNotNull(dateTimeFieldType19);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertNotNull(monthDay23);
        org.junit.Assert.assertNotNull(monthDay25);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertNotNull(monthDay29);
        org.junit.Assert.assertNotNull(dateTimeFieldType31);
        org.junit.Assert.assertNotNull(property32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(monthDay38);
        org.junit.Assert.assertNotNull(monthDay40);
        org.junit.Assert.assertNotNull(monthDay42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(monthDay47);
        org.junit.Assert.assertNotNull(monthDay49);
        org.junit.Assert.assertNotNull(dateTimeFieldType51);
        org.junit.Assert.assertNotNull(monthDay53);
        org.junit.Assert.assertNotNull(monthDay55);
        org.junit.Assert.assertNotNull(monthDay57);
        org.junit.Assert.assertNotNull(monthDay59);
        org.junit.Assert.assertNotNull(monthDay61);
        org.junit.Assert.assertNotNull(dateTimeFieldType63);
        org.junit.Assert.assertNotNull(property64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNotNull(monthDay67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(dateTimeFieldType70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(monthDay74);
        org.junit.Assert.assertNotNull(monthDay76);
        org.junit.Assert.assertNotNull(dateTimeFieldType78);
        org.junit.Assert.assertNotNull(monthDay80);
        org.junit.Assert.assertNotNull(monthDay83);
        org.junit.Assert.assertNotNull(dateTimeField85);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "--09-02" + "'", str87, "--09-02");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
    }

    @Test
    public void test1566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1566");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.MonthDay monthDay13 = property10.addWrapFieldToCopy((int) (short) 1);
        java.lang.String str14 = property10.getAsString();
        java.lang.String str15 = property10.getAsText();
        org.joda.time.DurationField durationField16 = property10.getRangeDurationField();
        int int17 = property10.getMinimumValue();
        org.joda.time.MonthDay monthDay19 = property10.addToCopy((int) (short) -1);
        java.lang.String str20 = property10.toString();
        int int21 = property10.getMinimumValue();
        org.joda.time.MonthDay monthDay23 = property10.setCopy((int) (short) 1);
        org.joda.time.MonthDay monthDay25 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.MonthDay monthDay27 = monthDay25.withChronologyRetainFields(chronology26);
        org.joda.time.MonthDay monthDay29 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.MonthDay monthDay31 = monthDay29.withChronologyRetainFields(chronology30);
        org.joda.time.DateTimeFieldType dateTimeFieldType33 = monthDay29.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property34 = monthDay27.property(dateTimeFieldType33);
        int int35 = property34.get();
        java.lang.String str36 = property34.toString();
        org.joda.time.MonthDay monthDay38 = property34.addWrapFieldToCopy((int) (short) -1);
        boolean boolean39 = property10.equals((java.lang.Object) property34);
        org.joda.time.MonthDay monthDay41 = property34.setCopy("1");
        java.util.Locale locale42 = null;
        java.lang.String str43 = property34.getAsText(locale42);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1" + "'", str14, "1");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1" + "'", str15, "1");
        org.junit.Assert.assertNotNull(durationField16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(monthDay19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Property[dayOfMonth]" + "'", str20, "Property[dayOfMonth]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(monthDay23);
        org.junit.Assert.assertNotNull(monthDay25);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertNotNull(monthDay29);
        org.junit.Assert.assertNotNull(monthDay31);
        org.junit.Assert.assertNotNull(dateTimeFieldType33);
        org.junit.Assert.assertNotNull(property34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Property[dayOfMonth]" + "'", str36, "Property[dayOfMonth]");
        org.junit.Assert.assertNotNull(monthDay38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(monthDay41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1" + "'", str43, "1");
    }

    @Test
    public void test1567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1567");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod2 = null;
        org.joda.time.MonthDay monthDay4 = monthDay1.withPeriodAdded(readablePeriod2, 1);
        org.joda.time.ReadablePeriod readablePeriod5 = null;
        org.joda.time.MonthDay monthDay6 = monthDay1.plus(readablePeriod5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.MonthDay monthDay8 = monthDay1.plus(readablePeriod7);
        org.joda.time.MonthDay monthDay10 = monthDay1.plusMonths(2);
        int int11 = monthDay10.size();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay4);
        org.junit.Assert.assertNotNull(monthDay6);
        org.junit.Assert.assertNotNull(monthDay8);
        org.junit.Assert.assertNotNull(monthDay10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
    }

    @Test
    @Ignore
  public void test1568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1568");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        org.joda.time.MonthDay.Property property11 = monthDay3.monthOfYear();
        int int12 = monthDay3.getDayOfMonth();
        org.joda.time.MonthDay.Property property13 = monthDay3.dayOfMonth();
        int int14 = monthDay3.getDayOfMonth();
        org.joda.time.MonthDay monthDay16 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MonthDay monthDay18 = monthDay16.withChronologyRetainFields(chronology17);
        org.joda.time.DateTimeFieldType dateTimeFieldType20 = monthDay16.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property21 = monthDay16.dayOfMonth();
        org.joda.time.Chronology chronology22 = monthDay16.getChronology();
        org.joda.time.MonthDay monthDay23 = monthDay3.withChronologyRetainFields(chronology22);
        org.joda.time.MonthDay monthDay24 = new org.joda.time.MonthDay(chronology22);
        org.joda.time.DateTimeZone dateTimeZone25 = null;
        org.joda.time.MonthDay monthDay26 = new org.joda.time.MonthDay(dateTimeZone25);
        org.joda.time.DateTimeField[] dateTimeFieldArray27 = monthDay26.getFields();
        org.joda.time.MonthDay monthDay29 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.MonthDay monthDay31 = monthDay29.withChronologyRetainFields(chronology30);
        org.joda.time.DateTimeFieldType dateTimeFieldType33 = monthDay29.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property34 = monthDay29.dayOfMonth();
        org.joda.time.Chronology chronology35 = monthDay29.getChronology();
        org.joda.time.Chronology chronology36 = monthDay29.getChronology();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.DateTime dateTime38 = monthDay29.toDateTime(readableInstant37);
        org.joda.time.MonthDay monthDay40 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.MonthDay monthDay42 = monthDay40.withChronologyRetainFields(chronology41);
        org.joda.time.DateTimeFieldType dateTimeFieldType44 = monthDay40.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod45 = null;
        org.joda.time.MonthDay monthDay46 = monthDay40.plus(readablePeriod45);
        org.joda.time.MonthDay monthDay48 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.MonthDay monthDay50 = monthDay48.withChronologyRetainFields(chronology49);
        org.joda.time.MonthDay monthDay52 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.MonthDay monthDay54 = monthDay52.withChronologyRetainFields(chronology53);
        org.joda.time.DateTimeFieldType dateTimeFieldType56 = monthDay52.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property57 = monthDay50.property(dateTimeFieldType56);
        int int58 = property57.get();
        org.joda.time.MonthDay monthDay60 = property57.addWrapFieldToCopy((int) (short) 1);
        boolean boolean61 = monthDay40.isBefore((org.joda.time.ReadablePartial) monthDay60);
        org.joda.time.DateTimeFieldType dateTimeFieldType63 = monthDay40.getFieldType(0);
        int int64 = monthDay29.get(dateTimeFieldType63);
        boolean boolean65 = monthDay26.isSupported(dateTimeFieldType63);
        org.joda.time.MonthDay.Property property66 = monthDay24.property(dateTimeFieldType63);
        java.lang.String str67 = property66.getAsText();
        org.joda.time.MonthDay monthDay69 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology70 = null;
        org.joda.time.MonthDay monthDay71 = monthDay69.withChronologyRetainFields(chronology70);
        org.joda.time.DateTimeFieldType dateTimeFieldType73 = monthDay69.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod74 = null;
        org.joda.time.MonthDay monthDay75 = monthDay69.plus(readablePeriod74);
        org.joda.time.MonthDay monthDay77 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology78 = null;
        org.joda.time.MonthDay monthDay79 = monthDay77.withChronologyRetainFields(chronology78);
        org.joda.time.MonthDay monthDay81 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology82 = null;
        org.joda.time.MonthDay monthDay83 = monthDay81.withChronologyRetainFields(chronology82);
        org.joda.time.DateTimeFieldType dateTimeFieldType85 = monthDay81.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property86 = monthDay79.property(dateTimeFieldType85);
        int int87 = property86.get();
        org.joda.time.MonthDay monthDay89 = property86.addWrapFieldToCopy((int) (short) 1);
        boolean boolean90 = monthDay69.isBefore((org.joda.time.ReadablePartial) monthDay89);
        org.joda.time.Chronology chronology91 = null;
        org.joda.time.MonthDay monthDay92 = monthDay69.withChronologyRetainFields(chronology91);
        org.joda.time.Chronology chronology93 = monthDay92.getChronology();
        java.lang.String str94 = monthDay92.toString();
        org.joda.time.ReadableInstant readableInstant95 = null;
        org.joda.time.DateTime dateTime96 = monthDay92.toDateTime(readableInstant95);
        int int97 = property66.compareTo((org.joda.time.ReadableInstant) dateTime96);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertNotNull(property11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(property13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(dateTimeFieldType20);
        org.junit.Assert.assertNotNull(property21);
        org.junit.Assert.assertNotNull(chronology22);
        org.junit.Assert.assertNotNull(monthDay23);
        org.junit.Assert.assertNotNull(dateTimeFieldArray27);
        org.junit.Assert.assertNotNull(monthDay29);
        org.junit.Assert.assertNotNull(monthDay31);
        org.junit.Assert.assertNotNull(dateTimeFieldType33);
        org.junit.Assert.assertNotNull(property34);
        org.junit.Assert.assertNotNull(chronology35);
        org.junit.Assert.assertNotNull(chronology36);
        org.junit.Assert.assertNotNull(dateTime38);
        org.junit.Assert.assertNotNull(monthDay40);
        org.junit.Assert.assertNotNull(monthDay42);
        org.junit.Assert.assertNotNull(dateTimeFieldType44);
        org.junit.Assert.assertNotNull(monthDay46);
        org.junit.Assert.assertNotNull(monthDay48);
        org.junit.Assert.assertNotNull(monthDay50);
        org.junit.Assert.assertNotNull(monthDay52);
        org.junit.Assert.assertNotNull(monthDay54);
        org.junit.Assert.assertNotNull(dateTimeFieldType56);
        org.junit.Assert.assertNotNull(property57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(monthDay60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(dateTimeFieldType63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(property66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "November" + "'", str67, "November");
        org.junit.Assert.assertNotNull(monthDay69);
        org.junit.Assert.assertNotNull(monthDay71);
        org.junit.Assert.assertNotNull(dateTimeFieldType73);
        org.junit.Assert.assertNotNull(monthDay75);
        org.junit.Assert.assertNotNull(monthDay77);
        org.junit.Assert.assertNotNull(monthDay79);
        org.junit.Assert.assertNotNull(monthDay81);
        org.junit.Assert.assertNotNull(monthDay83);
        org.junit.Assert.assertNotNull(dateTimeFieldType85);
        org.junit.Assert.assertNotNull(property86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertNotNull(monthDay89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(monthDay92);
        org.junit.Assert.assertNotNull(chronology93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "--01-01" + "'", str94, "--01-01");
        org.junit.Assert.assertNotNull(dateTime96);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 1 + "'", int97 == 1);
    }

    @Test
    public void test1569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1569");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        int int12 = property10.getMaximumValue();
        org.joda.time.MonthDay monthDay14 = org.joda.time.MonthDay.parse("");
        org.joda.time.MonthDay monthDay16 = monthDay14.minusDays((int) '#');
        org.joda.time.DateTimeFieldType[] dateTimeFieldTypeArray17 = monthDay14.getFieldTypes();
        org.joda.time.ReadablePeriod readablePeriod18 = null;
        org.joda.time.MonthDay monthDay19 = monthDay14.plus(readablePeriod18);
        int int20 = property10.compareTo((org.joda.time.ReadablePartial) monthDay14);
        java.util.Locale locale21 = null;
        java.lang.String str22 = property10.getAsShortText(locale21);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 31 + "'", int12 == 31);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(dateTimeFieldTypeArray17);
        org.junit.Assert.assertNotNull(monthDay19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1" + "'", str22, "1");
    }

    @Test
    public void test1570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1570");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("--01-01");
        org.joda.time.DateTimeField[] dateTimeFieldArray2 = monthDay1.getFields();
        org.joda.time.ReadablePeriod readablePeriod3 = null;
        org.joda.time.MonthDay monthDay5 = monthDay1.withPeriodAdded(readablePeriod3, (int) '4');
        int[] intArray6 = monthDay5.getValues();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(dateTimeFieldArray2);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[1, 1]");
    }

    @Test
    public void test1571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1571");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.MonthDay monthDay13 = property10.addToCopy((int) (short) 0);
        org.joda.time.MonthDay monthDay15 = property10.addWrapFieldToCopy(10);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
    }

    @Test
    @Ignore
  public void test1572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1572");
        org.joda.time.MonthDay monthDay2 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.MonthDay monthDay4 = monthDay2.withChronologyRetainFields(chronology3);
        org.joda.time.DateTimeFieldType dateTimeFieldType6 = monthDay2.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property7 = monthDay2.dayOfMonth();
        org.joda.time.MonthDay monthDay9 = property7.addWrapFieldToCopy(1);
        org.joda.time.MonthDay monthDay11 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MonthDay monthDay13 = monthDay11.withChronologyRetainFields(chronology12);
        org.joda.time.DateTimeFieldType dateTimeFieldType15 = monthDay11.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod16 = null;
        org.joda.time.MonthDay monthDay17 = monthDay11.plus(readablePeriod16);
        org.joda.time.MonthDay monthDay19 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MonthDay monthDay21 = monthDay19.withChronologyRetainFields(chronology20);
        org.joda.time.MonthDay monthDay23 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MonthDay monthDay25 = monthDay23.withChronologyRetainFields(chronology24);
        org.joda.time.DateTimeFieldType dateTimeFieldType27 = monthDay23.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property28 = monthDay21.property(dateTimeFieldType27);
        int int29 = property28.get();
        org.joda.time.MonthDay monthDay31 = property28.addWrapFieldToCopy((int) (short) 1);
        boolean boolean32 = monthDay11.isBefore((org.joda.time.ReadablePartial) monthDay31);
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.MonthDay monthDay34 = monthDay11.withChronologyRetainFields(chronology33);
        org.joda.time.Chronology chronology35 = monthDay34.getChronology();
        org.joda.time.MonthDay monthDay36 = org.joda.time.MonthDay.now(chronology35);
        org.joda.time.MonthDay monthDay37 = new org.joda.time.MonthDay((java.lang.Object) monthDay9, chronology35);
        org.joda.time.MonthDay monthDay38 = new org.joda.time.MonthDay((long) (byte) -1, chronology35);
        org.joda.time.MonthDay monthDay39 = new org.joda.time.MonthDay(chronology35);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MonthDay monthDay41 = monthDay39.withDayOfMonth(31);
            org.junit.Assert.fail("Expected exception of type org.joda.time.IllegalFieldValueException; message: Value 31 for dayOfMonth must be in the range [1,30]");
        } catch (org.joda.time.IllegalFieldValueException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(monthDay2);
        org.junit.Assert.assertNotNull(monthDay4);
        org.junit.Assert.assertNotNull(dateTimeFieldType6);
        org.junit.Assert.assertNotNull(property7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(dateTimeFieldType15);
        org.junit.Assert.assertNotNull(monthDay17);
        org.junit.Assert.assertNotNull(monthDay19);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertNotNull(monthDay23);
        org.junit.Assert.assertNotNull(monthDay25);
        org.junit.Assert.assertNotNull(dateTimeFieldType27);
        org.junit.Assert.assertNotNull(property28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(monthDay31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertNotNull(chronology35);
        org.junit.Assert.assertNotNull(monthDay36);
    }

    @Test
    public void test1573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1573");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        java.util.Locale locale11 = null;
        int int12 = property10.getMaximumTextLength(locale11);
        int int13 = property10.getMinimumValue();
        java.lang.String str14 = property10.getAsText();
        org.joda.time.MonthDay monthDay16 = property10.addToCopy((int) ' ');
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1" + "'", str14, "1");
        org.junit.Assert.assertNotNull(monthDay16);
    }

    @Test
    public void test1574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1574");
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.DateTimeFieldType dateTimeFieldType13 = monthDay9.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property14 = monthDay7.property(dateTimeFieldType13);
        org.joda.time.MonthDay.Property property15 = monthDay7.monthOfYear();
        org.joda.time.MonthDay monthDay17 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.MonthDay monthDay19 = monthDay17.withChronologyRetainFields(chronology18);
        org.joda.time.DateTimeFieldType dateTimeFieldType21 = monthDay17.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay monthDay23 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MonthDay monthDay25 = monthDay23.withChronologyRetainFields(chronology24);
        org.joda.time.MonthDay monthDay27 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.MonthDay monthDay29 = monthDay27.withChronologyRetainFields(chronology28);
        org.joda.time.DateTimeFieldType dateTimeFieldType31 = monthDay27.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property32 = monthDay25.property(dateTimeFieldType31);
        int int33 = monthDay17.indexOf(dateTimeFieldType31);
        boolean boolean34 = monthDay7.equals((java.lang.Object) int33);
        org.joda.time.MonthDay monthDay36 = monthDay7.withMonthOfYear(9);
        int int38 = monthDay36.getValue((int) (byte) 0);
        org.joda.time.DateTimeFieldType[] dateTimeFieldTypeArray39 = monthDay36.getFieldTypes();
        org.joda.time.MonthDay monthDay41 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.MonthDay monthDay43 = monthDay41.withChronologyRetainFields(chronology42);
        org.joda.time.DateTimeFieldType dateTimeFieldType45 = monthDay41.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property46 = monthDay41.dayOfMonth();
        org.joda.time.Chronology chronology47 = monthDay41.getChronology();
        org.joda.time.Chronology chronology48 = monthDay41.getChronology();
        org.joda.time.MonthDay monthDay49 = monthDay36.withChronologyRetainFields(chronology48);
        org.joda.time.MonthDay monthDay50 = new org.joda.time.MonthDay((int) (byte) 10, (int) (byte) 1, chronology48);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MonthDay monthDay51 = new org.joda.time.MonthDay((int) (byte) 0, 100, chronology48);
            org.junit.Assert.fail("Expected exception of type org.joda.time.IllegalFieldValueException; message: Value 0 for monthOfYear must not be smaller than 1");
        } catch (org.joda.time.IllegalFieldValueException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(dateTimeFieldType13);
        org.junit.Assert.assertNotNull(property14);
        org.junit.Assert.assertNotNull(property15);
        org.junit.Assert.assertNotNull(monthDay17);
        org.junit.Assert.assertNotNull(monthDay19);
        org.junit.Assert.assertNotNull(dateTimeFieldType21);
        org.junit.Assert.assertNotNull(monthDay23);
        org.junit.Assert.assertNotNull(monthDay25);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertNotNull(monthDay29);
        org.junit.Assert.assertNotNull(dateTimeFieldType31);
        org.junit.Assert.assertNotNull(property32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(monthDay36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 9 + "'", int38 == 9);
        org.junit.Assert.assertNotNull(dateTimeFieldTypeArray39);
        org.junit.Assert.assertNotNull(monthDay41);
        org.junit.Assert.assertNotNull(monthDay43);
        org.junit.Assert.assertNotNull(dateTimeFieldType45);
        org.junit.Assert.assertNotNull(property46);
        org.junit.Assert.assertNotNull(chronology47);
        org.junit.Assert.assertNotNull(chronology48);
        org.junit.Assert.assertNotNull(monthDay49);
    }

    @Test
    public void test1575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1575");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay monthDay7 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.MonthDay monthDay9 = monthDay7.withChronologyRetainFields(chronology8);
        org.joda.time.MonthDay monthDay11 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MonthDay monthDay13 = monthDay11.withChronologyRetainFields(chronology12);
        org.joda.time.DateTimeFieldType dateTimeFieldType15 = monthDay11.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property16 = monthDay9.property(dateTimeFieldType15);
        int int17 = monthDay1.indexOf(dateTimeFieldType15);
        org.joda.time.MonthDay monthDay19 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MonthDay monthDay21 = monthDay19.withChronologyRetainFields(chronology20);
        org.joda.time.MonthDay monthDay23 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MonthDay monthDay25 = monthDay23.withChronologyRetainFields(chronology24);
        org.joda.time.DateTimeFieldType dateTimeFieldType27 = monthDay23.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property28 = monthDay21.property(dateTimeFieldType27);
        int int29 = property28.get();
        org.joda.time.MonthDay monthDay31 = property28.addToCopy((int) (short) 0);
        org.joda.time.MonthDay monthDay33 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.MonthDay monthDay35 = monthDay33.withChronologyRetainFields(chronology34);
        org.joda.time.MonthDay monthDay37 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.MonthDay monthDay39 = monthDay37.withChronologyRetainFields(chronology38);
        org.joda.time.DateTimeFieldType dateTimeFieldType41 = monthDay37.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property42 = monthDay35.property(dateTimeFieldType41);
        int int43 = property42.get();
        org.joda.time.DurationField durationField44 = property42.getDurationField();
        java.util.Locale locale45 = null;
        int int46 = property42.getMaximumTextLength(locale45);
        org.joda.time.MonthDay monthDay48 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.MonthDay monthDay50 = monthDay48.withChronologyRetainFields(chronology49);
        org.joda.time.DateTimeFieldType dateTimeFieldType52 = monthDay48.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property53 = monthDay48.dayOfMonth();
        org.joda.time.Chronology chronology54 = monthDay48.getChronology();
        org.joda.time.Chronology chronology55 = monthDay48.getChronology();
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.DateTime dateTime57 = monthDay48.toDateTime(readableInstant56);
        int int58 = property42.compareTo((org.joda.time.ReadableInstant) dateTime57);
        int int59 = property28.compareTo((org.joda.time.ReadableInstant) dateTime57);
        org.joda.time.DateTime dateTime60 = monthDay1.toDateTime((org.joda.time.ReadableInstant) dateTime57);
        org.joda.time.Chronology chronology61 = monthDay1.getChronology();
        org.joda.time.DateTimeFieldType[] dateTimeFieldTypeArray62 = monthDay1.getFieldTypes();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(dateTimeFieldType15);
        org.junit.Assert.assertNotNull(property16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(monthDay19);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertNotNull(monthDay23);
        org.junit.Assert.assertNotNull(monthDay25);
        org.junit.Assert.assertNotNull(dateTimeFieldType27);
        org.junit.Assert.assertNotNull(property28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(monthDay31);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(monthDay37);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertNotNull(dateTimeFieldType41);
        org.junit.Assert.assertNotNull(property42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(durationField44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
        org.junit.Assert.assertNotNull(monthDay48);
        org.junit.Assert.assertNotNull(monthDay50);
        org.junit.Assert.assertNotNull(dateTimeFieldType52);
        org.junit.Assert.assertNotNull(property53);
        org.junit.Assert.assertNotNull(chronology54);
        org.junit.Assert.assertNotNull(chronology55);
        org.junit.Assert.assertNotNull(dateTime57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(dateTime60);
        org.junit.Assert.assertNotNull(chronology61);
        org.junit.Assert.assertNotNull(dateTimeFieldTypeArray62);
    }

    @Test
    public void test1576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1576");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod2 = null;
        org.joda.time.MonthDay monthDay4 = monthDay1.withPeriodAdded(readablePeriod2, 1);
        org.joda.time.MonthDay monthDay6 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.MonthDay monthDay8 = monthDay6.withChronologyRetainFields(chronology7);
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = monthDay6.getFieldType((int) (byte) 1);
        int int11 = monthDay4.indexOf(dateTimeFieldType10);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MonthDay monthDay13 = monthDay4.withChronologyRetainFields(chronology12);
        org.joda.time.MonthDay monthDay15 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MonthDay monthDay17 = monthDay15.withChronologyRetainFields(chronology16);
        org.joda.time.DateTimeFieldType dateTimeFieldType19 = monthDay15.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property20 = monthDay15.dayOfMonth();
        org.joda.time.Chronology chronology21 = monthDay15.getChronology();
        org.joda.time.Chronology chronology22 = monthDay15.getChronology();
        boolean boolean23 = monthDay4.isEqual((org.joda.time.ReadablePartial) monthDay15);
        org.joda.time.MonthDay monthDay27 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.MonthDay monthDay29 = monthDay27.withChronologyRetainFields(chronology28);
        org.joda.time.MonthDay monthDay31 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.MonthDay monthDay33 = monthDay31.withChronologyRetainFields(chronology32);
        org.joda.time.DateTimeFieldType dateTimeFieldType35 = monthDay31.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property36 = monthDay29.property(dateTimeFieldType35);
        org.joda.time.MonthDay.Property property37 = monthDay29.monthOfYear();
        org.joda.time.MonthDay monthDay39 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.MonthDay monthDay41 = monthDay39.withChronologyRetainFields(chronology40);
        org.joda.time.DateTimeFieldType dateTimeFieldType43 = monthDay39.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay monthDay45 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.MonthDay monthDay47 = monthDay45.withChronologyRetainFields(chronology46);
        org.joda.time.MonthDay monthDay49 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.MonthDay monthDay51 = monthDay49.withChronologyRetainFields(chronology50);
        org.joda.time.DateTimeFieldType dateTimeFieldType53 = monthDay49.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property54 = monthDay47.property(dateTimeFieldType53);
        int int55 = monthDay39.indexOf(dateTimeFieldType53);
        boolean boolean56 = monthDay29.equals((java.lang.Object) int55);
        org.joda.time.MonthDay monthDay58 = monthDay29.withMonthOfYear(9);
        int int60 = monthDay58.getValue((int) (byte) 0);
        org.joda.time.DateTimeFieldType[] dateTimeFieldTypeArray61 = monthDay58.getFieldTypes();
        org.joda.time.MonthDay monthDay63 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.MonthDay monthDay65 = monthDay63.withChronologyRetainFields(chronology64);
        org.joda.time.DateTimeFieldType dateTimeFieldType67 = monthDay63.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property68 = monthDay63.dayOfMonth();
        org.joda.time.Chronology chronology69 = monthDay63.getChronology();
        org.joda.time.Chronology chronology70 = monthDay63.getChronology();
        org.joda.time.MonthDay monthDay71 = monthDay58.withChronologyRetainFields(chronology70);
        org.joda.time.MonthDay monthDay72 = new org.joda.time.MonthDay((int) (byte) 10, (int) (byte) 1, chronology70);
        org.joda.time.MonthDay monthDay73 = monthDay15.withChronologyRetainFields(chronology70);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay4);
        org.junit.Assert.assertNotNull(monthDay6);
        org.junit.Assert.assertNotNull(monthDay8);
        org.junit.Assert.assertNotNull(dateTimeFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(monthDay17);
        org.junit.Assert.assertNotNull(dateTimeFieldType19);
        org.junit.Assert.assertNotNull(property20);
        org.junit.Assert.assertNotNull(chronology21);
        org.junit.Assert.assertNotNull(chronology22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertNotNull(monthDay29);
        org.junit.Assert.assertNotNull(monthDay31);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(dateTimeFieldType35);
        org.junit.Assert.assertNotNull(property36);
        org.junit.Assert.assertNotNull(property37);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertNotNull(monthDay41);
        org.junit.Assert.assertNotNull(dateTimeFieldType43);
        org.junit.Assert.assertNotNull(monthDay45);
        org.junit.Assert.assertNotNull(monthDay47);
        org.junit.Assert.assertNotNull(monthDay49);
        org.junit.Assert.assertNotNull(monthDay51);
        org.junit.Assert.assertNotNull(dateTimeFieldType53);
        org.junit.Assert.assertNotNull(property54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(monthDay58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 9 + "'", int60 == 9);
        org.junit.Assert.assertNotNull(dateTimeFieldTypeArray61);
        org.junit.Assert.assertNotNull(monthDay63);
        org.junit.Assert.assertNotNull(monthDay65);
        org.junit.Assert.assertNotNull(dateTimeFieldType67);
        org.junit.Assert.assertNotNull(property68);
        org.junit.Assert.assertNotNull(chronology69);
        org.junit.Assert.assertNotNull(chronology70);
        org.junit.Assert.assertNotNull(monthDay71);
        org.junit.Assert.assertNotNull(monthDay73);
    }

    @Test
    public void test1577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1577");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.MonthDay monthDay24 = monthDay21.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay26 = monthDay24.minusDays(31);
        org.joda.time.MonthDay monthDay28 = monthDay26.plusDays((int) (byte) 10);
        org.joda.time.MonthDay monthDay30 = monthDay26.minusDays(0);
        org.joda.time.MonthDay monthDay32 = monthDay30.plusDays(0);
        int int33 = monthDay30.getDayOfMonth();
        org.joda.time.ReadablePeriod readablePeriod34 = null;
        org.joda.time.MonthDay monthDay35 = monthDay30.plus(readablePeriod34);
        org.joda.time.MonthDay monthDay37 = monthDay35.minusMonths(24);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(monthDay37);
    }

    @Test
    public void test1578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1578");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod2 = null;
        org.joda.time.MonthDay monthDay4 = monthDay1.withPeriodAdded(readablePeriod2, 1);
        org.joda.time.MonthDay monthDay6 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.MonthDay monthDay8 = monthDay6.withChronologyRetainFields(chronology7);
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = monthDay6.getFieldType((int) (byte) 1);
        int int11 = monthDay4.indexOf(dateTimeFieldType10);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MonthDay monthDay13 = monthDay4.withChronologyRetainFields(chronology12);
        org.joda.time.MonthDay monthDay15 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MonthDay monthDay17 = monthDay15.withChronologyRetainFields(chronology16);
        org.joda.time.DateTimeFieldType dateTimeFieldType19 = monthDay15.getFieldType((int) (byte) 1);
        int int20 = monthDay4.get(dateTimeFieldType19);
        org.joda.time.MonthDay monthDay22 = monthDay4.plusDays(0);
        org.joda.time.ReadablePeriod readablePeriod23 = null;
        org.joda.time.MonthDay monthDay24 = monthDay4.minus(readablePeriod23);
        org.joda.time.ReadablePeriod readablePeriod25 = null;
        org.joda.time.MonthDay monthDay26 = monthDay4.minus(readablePeriod25);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay4);
        org.junit.Assert.assertNotNull(monthDay6);
        org.junit.Assert.assertNotNull(monthDay8);
        org.junit.Assert.assertNotNull(dateTimeFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(monthDay17);
        org.junit.Assert.assertNotNull(dateTimeFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(monthDay26);
    }

    @Test
    @Ignore
  public void test1579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1579");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.MonthDay monthDay24 = monthDay21.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay26 = monthDay24.minusDays(31);
        org.joda.time.MonthDay monthDay28 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod29 = null;
        org.joda.time.MonthDay monthDay31 = monthDay28.withPeriodAdded(readablePeriod29, 1);
        org.joda.time.MonthDay monthDay33 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.MonthDay monthDay35 = monthDay33.withChronologyRetainFields(chronology34);
        org.joda.time.DateTimeFieldType dateTimeFieldType37 = monthDay33.getFieldType((int) (byte) 1);
        int int38 = monthDay31.indexOf(dateTimeFieldType37);
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.MonthDay monthDay40 = monthDay31.withChronologyRetainFields(chronology39);
        org.joda.time.MonthDay monthDay42 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.MonthDay monthDay44 = monthDay42.withChronologyRetainFields(chronology43);
        org.joda.time.DateTimeFieldType dateTimeFieldType46 = monthDay42.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod47 = null;
        org.joda.time.MonthDay monthDay48 = monthDay42.plus(readablePeriod47);
        org.joda.time.MonthDay monthDay50 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.MonthDay monthDay52 = monthDay50.withChronologyRetainFields(chronology51);
        org.joda.time.MonthDay monthDay54 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.MonthDay monthDay56 = monthDay54.withChronologyRetainFields(chronology55);
        org.joda.time.DateTimeFieldType dateTimeFieldType58 = monthDay54.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property59 = monthDay52.property(dateTimeFieldType58);
        int int60 = property59.get();
        org.joda.time.MonthDay monthDay62 = property59.addWrapFieldToCopy((int) (short) 1);
        boolean boolean63 = monthDay42.isBefore((org.joda.time.ReadablePartial) monthDay62);
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.MonthDay monthDay65 = monthDay42.withChronologyRetainFields(chronology64);
        org.joda.time.Chronology chronology66 = monthDay65.getChronology();
        org.joda.time.MonthDay monthDay67 = monthDay40.withChronologyRetainFields(chronology66);
        org.joda.time.MonthDay monthDay68 = monthDay26.withChronologyRetainFields(chronology66);
        org.joda.time.Chronology chronology69 = monthDay68.getChronology();
        org.joda.time.MonthDay monthDay70 = org.joda.time.MonthDay.now(chronology69);
        org.joda.time.MonthDay monthDay71 = new org.joda.time.MonthDay(chronology69);
        int int72 = monthDay71.getMonthOfYear();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertNotNull(monthDay31);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(dateTimeFieldType37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(monthDay40);
        org.junit.Assert.assertNotNull(monthDay42);
        org.junit.Assert.assertNotNull(monthDay44);
        org.junit.Assert.assertNotNull(dateTimeFieldType46);
        org.junit.Assert.assertNotNull(monthDay48);
        org.junit.Assert.assertNotNull(monthDay50);
        org.junit.Assert.assertNotNull(monthDay52);
        org.junit.Assert.assertNotNull(monthDay54);
        org.junit.Assert.assertNotNull(monthDay56);
        org.junit.Assert.assertNotNull(dateTimeFieldType58);
        org.junit.Assert.assertNotNull(property59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(monthDay62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(monthDay65);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(monthDay67);
        org.junit.Assert.assertNotNull(monthDay68);
        org.junit.Assert.assertNotNull(chronology69);
        org.junit.Assert.assertNotNull(monthDay70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 11 + "'", int72 == 11);
    }

    @Test
    public void test1580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1580");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        org.joda.time.MonthDay.Property property11 = monthDay3.monthOfYear();
        int int12 = monthDay3.getDayOfMonth();
        org.joda.time.MonthDay.Property property13 = monthDay3.dayOfMonth();
        int int14 = monthDay3.getDayOfMonth();
        org.joda.time.ReadablePeriod readablePeriod15 = null;
        org.joda.time.MonthDay monthDay16 = monthDay3.plus(readablePeriod15);
        org.joda.time.MonthDay monthDay18 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MonthDay monthDay20 = monthDay18.withChronologyRetainFields(chronology19);
        org.joda.time.MonthDay monthDay22 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MonthDay monthDay24 = monthDay22.withChronologyRetainFields(chronology23);
        org.joda.time.DateTimeFieldType dateTimeFieldType26 = monthDay22.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property27 = monthDay20.property(dateTimeFieldType26);
        org.joda.time.MonthDay.Property property28 = monthDay20.monthOfYear();
        int int29 = monthDay20.getDayOfMonth();
        org.joda.time.MonthDay.Property property30 = monthDay20.dayOfMonth();
        int int31 = monthDay20.getDayOfMonth();
        org.joda.time.MonthDay monthDay33 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.MonthDay monthDay35 = monthDay33.withChronologyRetainFields(chronology34);
        org.joda.time.DateTimeFieldType dateTimeFieldType37 = monthDay33.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property38 = monthDay33.dayOfMonth();
        org.joda.time.Chronology chronology39 = monthDay33.getChronology();
        org.joda.time.MonthDay monthDay40 = monthDay20.withChronologyRetainFields(chronology39);
        org.joda.time.MonthDay monthDay41 = monthDay16.withChronologyRetainFields(chronology39);
        org.joda.time.MonthDay monthDay42 = new org.joda.time.MonthDay(chronology39);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertNotNull(property11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(property13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(dateTimeFieldType26);
        org.junit.Assert.assertNotNull(property27);
        org.junit.Assert.assertNotNull(property28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(property30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(dateTimeFieldType37);
        org.junit.Assert.assertNotNull(property38);
        org.junit.Assert.assertNotNull(chronology39);
        org.junit.Assert.assertNotNull(monthDay40);
        org.junit.Assert.assertNotNull(monthDay41);
    }

    @Test
    public void test1581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1581");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.MonthDay monthDay24 = monthDay21.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay26 = monthDay24.plusMonths(1);
        org.joda.time.ReadablePeriod readablePeriod27 = null;
        org.joda.time.MonthDay monthDay28 = monthDay24.minus(readablePeriod27);
        org.joda.time.DateTimeZone dateTimeZone29 = null;
        org.joda.time.MonthDay monthDay30 = new org.joda.time.MonthDay(dateTimeZone29);
        boolean boolean31 = monthDay28.isEqual((org.joda.time.ReadablePartial) monthDay30);
        org.joda.time.MonthDay monthDay32 = new org.joda.time.MonthDay((java.lang.Object) monthDay30);
        org.joda.time.DateTimeField[] dateTimeFieldArray33 = monthDay32.getFields();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(dateTimeFieldArray33);
    }

    @Test
    public void test1582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1582");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        java.lang.String str12 = property10.toString();
        org.joda.time.MonthDay monthDay14 = property10.addToCopy(31);
        org.joda.time.MonthDay monthDay16 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MonthDay monthDay18 = monthDay16.withChronologyRetainFields(chronology17);
        org.joda.time.DateTimeFieldType dateTimeFieldType20 = monthDay16.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod21 = null;
        org.joda.time.MonthDay monthDay22 = monthDay16.plus(readablePeriod21);
        org.joda.time.MonthDay monthDay24 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.MonthDay monthDay26 = monthDay24.withChronologyRetainFields(chronology25);
        org.joda.time.MonthDay monthDay28 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.MonthDay monthDay30 = monthDay28.withChronologyRetainFields(chronology29);
        org.joda.time.DateTimeFieldType dateTimeFieldType32 = monthDay28.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property33 = monthDay26.property(dateTimeFieldType32);
        int int34 = property33.get();
        org.joda.time.MonthDay monthDay36 = property33.addWrapFieldToCopy((int) (short) 1);
        boolean boolean37 = monthDay16.isBefore((org.joda.time.ReadablePartial) monthDay36);
        org.joda.time.MonthDay monthDay39 = monthDay36.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay41 = monthDay39.minusDays(31);
        org.joda.time.MonthDay monthDay43 = monthDay41.plusDays((int) (byte) 10);
        org.joda.time.MonthDay monthDay45 = monthDay41.minusDays(0);
        org.joda.time.MonthDay monthDay47 = monthDay45.plusDays(0);
        int int48 = monthDay45.getDayOfMonth();
        org.joda.time.ReadablePeriod readablePeriod49 = null;
        org.joda.time.MonthDay monthDay50 = monthDay45.plus(readablePeriod49);
        boolean boolean51 = property10.equals((java.lang.Object) readablePeriod49);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Property[dayOfMonth]" + "'", str12, "Property[dayOfMonth]");
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(dateTimeFieldType20);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertNotNull(dateTimeFieldType32);
        org.junit.Assert.assertNotNull(property33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(monthDay36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertNotNull(monthDay41);
        org.junit.Assert.assertNotNull(monthDay43);
        org.junit.Assert.assertNotNull(monthDay45);
        org.junit.Assert.assertNotNull(monthDay47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2 + "'", int48 == 2);
        org.junit.Assert.assertNotNull(monthDay50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test1583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1583");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.MonthDay monthDay3 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MonthDay monthDay5 = monthDay3.withChronologyRetainFields(chronology4);
        org.joda.time.DateTimeFieldType dateTimeFieldType7 = monthDay3.getFieldType((int) (byte) 1);
        boolean boolean8 = monthDay1.isSupported(dateTimeFieldType7);
        org.joda.time.MonthDay monthDay10 = org.joda.time.MonthDay.parse("");
        org.joda.time.MonthDay monthDay12 = monthDay10.minusDays((int) '#');
        org.joda.time.MonthDay monthDay14 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MonthDay monthDay16 = monthDay14.withChronologyRetainFields(chronology15);
        org.joda.time.DateTimeFieldType dateTimeFieldType18 = monthDay14.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property19 = monthDay14.dayOfMonth();
        org.joda.time.Chronology chronology20 = monthDay14.getChronology();
        org.joda.time.Chronology chronology21 = monthDay14.getChronology();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.DateTime dateTime23 = monthDay14.toDateTime(readableInstant22);
        org.joda.time.MonthDay monthDay25 = monthDay14.plusMonths((int) ' ');
        boolean boolean26 = monthDay10.isAfter((org.joda.time.ReadablePartial) monthDay25);
        boolean boolean27 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay25);
        int int28 = monthDay1.getMonthOfYear();
        org.joda.time.ReadablePeriod readablePeriod29 = null;
        org.joda.time.MonthDay monthDay31 = monthDay1.withPeriodAdded(readablePeriod29, 31);
        org.joda.time.MonthDay monthDay33 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.MonthDay monthDay35 = monthDay33.withChronologyRetainFields(chronology34);
        org.joda.time.MonthDay monthDay37 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.MonthDay monthDay39 = monthDay37.withChronologyRetainFields(chronology38);
        org.joda.time.DateTimeFieldType dateTimeFieldType41 = monthDay37.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property42 = monthDay35.property(dateTimeFieldType41);
        int int43 = property42.get();
        org.joda.time.MonthDay monthDay45 = property42.addWrapFieldToCopy((int) (short) 1);
        org.joda.time.MonthDay.Property property46 = monthDay45.dayOfMonth();
        int int47 = property46.getMaximumValueOverall();
        java.util.Locale locale49 = null;
        org.joda.time.MonthDay monthDay50 = property46.setCopy("1", locale49);
        org.joda.time.MonthDay monthDay51 = new org.joda.time.MonthDay();
        boolean boolean52 = property46.equals((java.lang.Object) monthDay51);
        org.joda.time.MonthDay monthDay54 = property46.addToCopy((int) (byte) 100);
        boolean boolean55 = monthDay1.equals((java.lang.Object) property46);
        org.joda.time.MonthDay.Property property56 = monthDay1.dayOfMonth();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(dateTimeFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(monthDay10);
        org.junit.Assert.assertNotNull(monthDay12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(dateTimeFieldType18);
        org.junit.Assert.assertNotNull(property19);
        org.junit.Assert.assertNotNull(chronology20);
        org.junit.Assert.assertNotNull(chronology21);
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertNotNull(monthDay25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(monthDay31);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(monthDay37);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertNotNull(dateTimeFieldType41);
        org.junit.Assert.assertNotNull(property42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(monthDay45);
        org.junit.Assert.assertNotNull(property46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 31 + "'", int47 == 31);
        org.junit.Assert.assertNotNull(monthDay50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(monthDay54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(property56);
    }

    @Test
    public void test1584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1584");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        org.joda.time.MonthDay.Property property11 = monthDay3.monthOfYear();
        java.lang.String str12 = property11.getAsShortText();
        int int13 = property11.getMinimumValue();
        org.joda.time.DateTimeFieldType dateTimeFieldType14 = property11.getFieldType();
        org.joda.time.MonthDay monthDay16 = property11.addToCopy(11);
        org.joda.time.MonthDay monthDay18 = property11.addWrapFieldToCopy((int) (short) 0);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertNotNull(property11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Jan" + "'", str12, "Jan");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(dateTimeFieldType14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
    }

    @Test
    public void test1585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1585");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod2 = null;
        org.joda.time.MonthDay monthDay4 = monthDay1.withPeriodAdded(readablePeriod2, 1);
        org.joda.time.MonthDay monthDay6 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.MonthDay monthDay8 = monthDay6.withChronologyRetainFields(chronology7);
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = monthDay6.getFieldType((int) (byte) 1);
        int int11 = monthDay4.indexOf(dateTimeFieldType10);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MonthDay monthDay13 = monthDay4.withChronologyRetainFields(chronology12);
        org.joda.time.MonthDay monthDay14 = org.joda.time.MonthDay.now();
        boolean boolean15 = monthDay13.isBefore((org.joda.time.ReadablePartial) monthDay14);
        org.joda.time.MonthDay.Property property16 = monthDay13.dayOfMonth();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay4);
        org.junit.Assert.assertNotNull(monthDay6);
        org.junit.Assert.assertNotNull(monthDay8);
        org.junit.Assert.assertNotNull(dateTimeFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(property16);
    }

    @Test
    public void test1586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1586");
        org.joda.time.MonthDay monthDay1 = new org.joda.time.MonthDay((long) 10);
        org.joda.time.MonthDay monthDay3 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod4 = null;
        org.joda.time.MonthDay monthDay6 = monthDay3.withPeriodAdded(readablePeriod4, 1);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.MonthDay monthDay8 = monthDay3.plus(readablePeriod7);
        int int9 = monthDay1.compareTo((org.joda.time.ReadablePartial) monthDay8);
        org.joda.time.ReadablePeriod readablePeriod10 = null;
        org.joda.time.MonthDay monthDay12 = monthDay8.withPeriodAdded(readablePeriod10, (int) (byte) 10);
        org.joda.time.MonthDay monthDay14 = monthDay8.minusDays(8);
        java.lang.Class<?> wildcardClass15 = monthDay8.getClass();
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay6);
        org.junit.Assert.assertNotNull(monthDay8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(monthDay12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1587");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.DateTimeField[] dateTimeFieldArray23 = monthDay1.getFields();
        org.joda.time.DateTimeField[] dateTimeFieldArray24 = monthDay1.getFields();
        org.joda.time.MonthDay.Property property25 = monthDay1.monthOfYear();
        java.util.Locale locale26 = null;
        int int27 = property25.getMaximumTextLength(locale26);
        int int28 = property25.getMaximumValue();
        java.util.Locale locale29 = null;
        int int30 = property25.getMaximumShortTextLength(locale29);
        org.joda.time.MonthDay monthDay32 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.MonthDay monthDay34 = monthDay32.withChronologyRetainFields(chronology33);
        org.joda.time.MonthDay monthDay36 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.MonthDay monthDay38 = monthDay36.withChronologyRetainFields(chronology37);
        org.joda.time.DateTimeFieldType dateTimeFieldType40 = monthDay36.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property41 = monthDay34.property(dateTimeFieldType40);
        int int42 = property41.get();
        org.joda.time.DurationField durationField43 = property41.getDurationField();
        org.joda.time.MonthDay monthDay45 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.MonthDay monthDay47 = monthDay45.withChronologyRetainFields(chronology46);
        org.joda.time.MonthDay monthDay49 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.MonthDay monthDay51 = monthDay49.withChronologyRetainFields(chronology50);
        org.joda.time.DateTimeFieldType dateTimeFieldType53 = monthDay49.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property54 = monthDay47.property(dateTimeFieldType53);
        boolean boolean55 = property41.equals((java.lang.Object) monthDay47);
        java.lang.String str56 = property41.getAsShortText();
        java.lang.String str57 = property41.toString();
        org.joda.time.MonthDay monthDay59 = property41.addWrapFieldToCopy(9);
        org.joda.time.MonthDay monthDay61 = property41.addWrapFieldToCopy((int) '#');
        boolean boolean62 = property25.equals((java.lang.Object) '#');
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(dateTimeFieldArray23);
        org.junit.Assert.assertNotNull(dateTimeFieldArray24);
        org.junit.Assert.assertNotNull(property25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 9 + "'", int27 == 9);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 12 + "'", int28 == 12);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 3 + "'", int30 == 3);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertNotNull(monthDay36);
        org.junit.Assert.assertNotNull(monthDay38);
        org.junit.Assert.assertNotNull(dateTimeFieldType40);
        org.junit.Assert.assertNotNull(property41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(durationField43);
        org.junit.Assert.assertNotNull(monthDay45);
        org.junit.Assert.assertNotNull(monthDay47);
        org.junit.Assert.assertNotNull(monthDay49);
        org.junit.Assert.assertNotNull(monthDay51);
        org.junit.Assert.assertNotNull(dateTimeFieldType53);
        org.junit.Assert.assertNotNull(property54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "1" + "'", str56, "1");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Property[dayOfMonth]" + "'", str57, "Property[dayOfMonth]");
        org.junit.Assert.assertNotNull(monthDay59);
        org.junit.Assert.assertNotNull(monthDay61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test1588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1588");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        org.joda.time.MonthDay.Property property11 = monthDay3.monthOfYear();
        int int12 = monthDay3.getDayOfMonth();
        org.joda.time.MonthDay.Property property13 = monthDay3.dayOfMonth();
        org.joda.time.MonthDay monthDay15 = property13.addWrapFieldToCopy(0);
        java.lang.String str16 = property13.getName();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertNotNull(property11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(property13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "dayOfMonth" + "'", str16, "dayOfMonth");
    }

    @Test
    public void test1589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1589");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        int int12 = property10.getMaximumValue();
        org.joda.time.MonthDay monthDay14 = property10.setCopy((int) (short) 1);
        org.joda.time.MonthDay monthDay16 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MonthDay monthDay18 = monthDay16.withChronologyRetainFields(chronology17);
        org.joda.time.DateTimeFieldType dateTimeFieldType20 = monthDay16.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod21 = null;
        org.joda.time.MonthDay monthDay22 = monthDay16.plus(readablePeriod21);
        int int23 = monthDay16.getDayOfMonth();
        int int24 = property10.compareTo((org.joda.time.ReadablePartial) monthDay16);
        java.lang.String str25 = property10.getName();
        java.util.Locale locale26 = null;
        java.lang.String str27 = property10.getAsShortText(locale26);
        org.joda.time.DurationField durationField28 = property10.getRangeDurationField();
        java.lang.String str29 = property10.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MonthDay monthDay31 = property10.setCopy("Property[dayOfMonth]");
            org.junit.Assert.fail("Expected exception of type org.joda.time.IllegalFieldValueException; message: Value \"Property[dayOfMonth]\" for dayOfMonth is not supported");
        } catch (org.joda.time.IllegalFieldValueException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 31 + "'", int12 == 31);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(dateTimeFieldType20);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "dayOfMonth" + "'", str25, "dayOfMonth");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1" + "'", str27, "1");
        org.junit.Assert.assertNotNull(durationField28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Property[dayOfMonth]" + "'", str29, "Property[dayOfMonth]");
    }

    @Test
    public void test1590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1590");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.DurationField durationField12 = property10.getDurationField();
        org.joda.time.MonthDay monthDay14 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MonthDay monthDay16 = monthDay14.withChronologyRetainFields(chronology15);
        org.joda.time.MonthDay monthDay18 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MonthDay monthDay20 = monthDay18.withChronologyRetainFields(chronology19);
        org.joda.time.DateTimeFieldType dateTimeFieldType22 = monthDay18.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property23 = monthDay16.property(dateTimeFieldType22);
        boolean boolean24 = property10.equals((java.lang.Object) monthDay16);
        org.joda.time.MonthDay.Property property25 = monthDay16.dayOfMonth();
        org.joda.time.MonthDay.Property property26 = monthDay16.monthOfYear();
        org.joda.time.MonthDay monthDay28 = property26.addToCopy(4);
        int int29 = monthDay28.getMonthOfYear();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(durationField12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(dateTimeFieldType22);
        org.junit.Assert.assertNotNull(property23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(property25);
        org.junit.Assert.assertNotNull(property26);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 5 + "'", int29 == 5);
    }

    @Test
    public void test1591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1591");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        org.joda.time.MonthDay.Property property11 = monthDay3.monthOfYear();
        java.lang.String str12 = property11.getAsShortText();
        int int13 = property11.getMinimumValue();
        org.joda.time.DateTimeFieldType dateTimeFieldType14 = property11.getFieldType();
        int int15 = property11.getMaximumValue();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertNotNull(property11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Jan" + "'", str12, "Jan");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(dateTimeFieldType14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 12 + "'", int15 == 12);
    }

    @Test
    public void test1592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1592");
        org.joda.time.MonthDay monthDay2 = new org.joda.time.MonthDay((int) (byte) 10, 8);
    }

    @Test
    public void test1593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1593");
        org.joda.time.DateTimeZone dateTimeZone0 = null;
        org.joda.time.MonthDay monthDay1 = new org.joda.time.MonthDay(dateTimeZone0);
        org.joda.time.MonthDay monthDay3 = monthDay1.minusDays(100);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay8 = monthDay5.withPeriodAdded(readablePeriod6, 1);
        org.joda.time.MonthDay monthDay10 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.MonthDay monthDay12 = monthDay10.withChronologyRetainFields(chronology11);
        org.joda.time.DateTimeFieldType dateTimeFieldType14 = monthDay10.getFieldType((int) (byte) 1);
        int int15 = monthDay8.indexOf(dateTimeFieldType14);
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MonthDay monthDay17 = monthDay8.withChronologyRetainFields(chronology16);
        org.joda.time.MonthDay monthDay19 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MonthDay monthDay21 = monthDay19.withChronologyRetainFields(chronology20);
        org.joda.time.DateTimeFieldType dateTimeFieldType23 = monthDay19.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property24 = monthDay19.dayOfMonth();
        org.joda.time.Chronology chronology25 = monthDay19.getChronology();
        org.joda.time.Chronology chronology26 = monthDay19.getChronology();
        boolean boolean27 = monthDay8.isEqual((org.joda.time.ReadablePartial) monthDay19);
        boolean boolean28 = monthDay1.isEqual((org.joda.time.ReadablePartial) monthDay8);
        org.joda.time.MonthDay monthDay30 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MonthDay monthDay32 = monthDay30.withChronologyRetainFields(chronology31);
        org.joda.time.DateTimeFieldType dateTimeFieldType34 = monthDay30.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod35 = null;
        org.joda.time.MonthDay monthDay36 = monthDay30.plus(readablePeriod35);
        org.joda.time.MonthDay monthDay38 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.MonthDay monthDay40 = monthDay38.withChronologyRetainFields(chronology39);
        org.joda.time.MonthDay monthDay42 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.MonthDay monthDay44 = monthDay42.withChronologyRetainFields(chronology43);
        org.joda.time.DateTimeFieldType dateTimeFieldType46 = monthDay42.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property47 = monthDay40.property(dateTimeFieldType46);
        int int48 = property47.get();
        org.joda.time.MonthDay monthDay50 = property47.addWrapFieldToCopy((int) (short) 1);
        boolean boolean51 = monthDay30.isBefore((org.joda.time.ReadablePartial) monthDay50);
        org.joda.time.MonthDay monthDay53 = monthDay50.minusMonths((int) (byte) 100);
        int int54 = monthDay53.getDayOfMonth();
        org.joda.time.MonthDay monthDay56 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.MonthDay monthDay58 = monthDay56.withChronologyRetainFields(chronology57);
        org.joda.time.DateTimeFieldType dateTimeFieldType60 = monthDay56.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property61 = monthDay56.dayOfMonth();
        org.joda.time.Chronology chronology62 = monthDay56.getChronology();
        org.joda.time.Chronology chronology63 = monthDay56.getChronology();
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.DateTime dateTime65 = monthDay56.toDateTime(readableInstant64);
        org.joda.time.MonthDay monthDay67 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.MonthDay monthDay69 = monthDay67.withChronologyRetainFields(chronology68);
        org.joda.time.DateTimeFieldType dateTimeFieldType71 = monthDay67.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod72 = null;
        org.joda.time.MonthDay monthDay73 = monthDay67.plus(readablePeriod72);
        org.joda.time.MonthDay monthDay75 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology76 = null;
        org.joda.time.MonthDay monthDay77 = monthDay75.withChronologyRetainFields(chronology76);
        org.joda.time.MonthDay monthDay79 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology80 = null;
        org.joda.time.MonthDay monthDay81 = monthDay79.withChronologyRetainFields(chronology80);
        org.joda.time.DateTimeFieldType dateTimeFieldType83 = monthDay79.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property84 = monthDay77.property(dateTimeFieldType83);
        int int85 = property84.get();
        org.joda.time.MonthDay monthDay87 = property84.addWrapFieldToCopy((int) (short) 1);
        boolean boolean88 = monthDay67.isBefore((org.joda.time.ReadablePartial) monthDay87);
        org.joda.time.DateTimeFieldType dateTimeFieldType90 = monthDay67.getFieldType(0);
        int int91 = monthDay56.get(dateTimeFieldType90);
        org.joda.time.MonthDay.Property property92 = monthDay53.property(dateTimeFieldType90);
        boolean boolean93 = monthDay1.isSupported(dateTimeFieldType90);
        org.joda.time.Chronology chronology94 = monthDay1.getChronology();
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay8);
        org.junit.Assert.assertNotNull(monthDay10);
        org.junit.Assert.assertNotNull(monthDay12);
        org.junit.Assert.assertNotNull(dateTimeFieldType14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(monthDay17);
        org.junit.Assert.assertNotNull(monthDay19);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertNotNull(dateTimeFieldType23);
        org.junit.Assert.assertNotNull(property24);
        org.junit.Assert.assertNotNull(chronology25);
        org.junit.Assert.assertNotNull(chronology26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(dateTimeFieldType34);
        org.junit.Assert.assertNotNull(monthDay36);
        org.junit.Assert.assertNotNull(monthDay38);
        org.junit.Assert.assertNotNull(monthDay40);
        org.junit.Assert.assertNotNull(monthDay42);
        org.junit.Assert.assertNotNull(monthDay44);
        org.junit.Assert.assertNotNull(dateTimeFieldType46);
        org.junit.Assert.assertNotNull(property47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(monthDay50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(monthDay53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2 + "'", int54 == 2);
        org.junit.Assert.assertNotNull(monthDay56);
        org.junit.Assert.assertNotNull(monthDay58);
        org.junit.Assert.assertNotNull(dateTimeFieldType60);
        org.junit.Assert.assertNotNull(property61);
        org.junit.Assert.assertNotNull(chronology62);
        org.junit.Assert.assertNotNull(chronology63);
        org.junit.Assert.assertNotNull(dateTime65);
        org.junit.Assert.assertNotNull(monthDay67);
        org.junit.Assert.assertNotNull(monthDay69);
        org.junit.Assert.assertNotNull(dateTimeFieldType71);
        org.junit.Assert.assertNotNull(monthDay73);
        org.junit.Assert.assertNotNull(monthDay75);
        org.junit.Assert.assertNotNull(monthDay77);
        org.junit.Assert.assertNotNull(monthDay79);
        org.junit.Assert.assertNotNull(monthDay81);
        org.junit.Assert.assertNotNull(dateTimeFieldType83);
        org.junit.Assert.assertNotNull(property84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertNotNull(monthDay87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(dateTimeFieldType90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 1 + "'", int91 == 1);
        org.junit.Assert.assertNotNull(property92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(chronology94);
    }

    @Test
    public void test1594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1594");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.MonthDay monthDay24 = monthDay21.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay26 = monthDay24.plusMonths(1);
        int int27 = monthDay26.getDayOfMonth();
        org.joda.time.DateTimeField[] dateTimeFieldArray28 = monthDay26.getFields();
        org.joda.time.MonthDay monthDay30 = monthDay26.withMonthOfYear((int) (byte) 1);
        org.joda.time.Chronology chronology31 = monthDay30.getChronology();
        org.joda.time.MonthDay monthDay32 = new org.joda.time.MonthDay(chronology31);
        org.joda.time.MonthDay monthDay34 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.MonthDay monthDay36 = monthDay34.withChronologyRetainFields(chronology35);
        org.joda.time.MonthDay monthDay38 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.MonthDay monthDay40 = monthDay38.withChronologyRetainFields(chronology39);
        org.joda.time.DateTimeFieldType dateTimeFieldType42 = monthDay38.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property43 = monthDay36.property(dateTimeFieldType42);
        org.joda.time.MonthDay.Property property44 = monthDay36.monthOfYear();
        java.lang.String str45 = property44.getAsShortText();
        int int46 = property44.getMinimumValue();
        java.util.Locale locale48 = null;
        org.joda.time.MonthDay monthDay49 = property44.setCopy("2", locale48);
        org.joda.time.MonthDay monthDay51 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.MonthDay monthDay53 = monthDay51.withChronologyRetainFields(chronology52);
        org.joda.time.MonthDay monthDay55 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.MonthDay monthDay57 = monthDay55.withChronologyRetainFields(chronology56);
        org.joda.time.DateTimeFieldType dateTimeFieldType59 = monthDay55.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property60 = monthDay53.property(dateTimeFieldType59);
        org.joda.time.MonthDay.Property property61 = monthDay53.monthOfYear();
        org.joda.time.DurationField durationField62 = property61.getRangeDurationField();
        org.joda.time.MonthDay monthDay64 = property61.setCopy("1");
        org.joda.time.DateTimeFieldType dateTimeFieldType65 = property61.getFieldType();
        org.joda.time.MonthDay.Property property66 = monthDay49.property(dateTimeFieldType65);
        boolean boolean67 = monthDay32.isSupported(dateTimeFieldType65);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
        org.junit.Assert.assertNotNull(dateTimeFieldArray28);
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertNotNull(chronology31);
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertNotNull(monthDay36);
        org.junit.Assert.assertNotNull(monthDay38);
        org.junit.Assert.assertNotNull(monthDay40);
        org.junit.Assert.assertNotNull(dateTimeFieldType42);
        org.junit.Assert.assertNotNull(property43);
        org.junit.Assert.assertNotNull(property44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Jan" + "'", str45, "Jan");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(monthDay49);
        org.junit.Assert.assertNotNull(monthDay51);
        org.junit.Assert.assertNotNull(monthDay53);
        org.junit.Assert.assertNotNull(monthDay55);
        org.junit.Assert.assertNotNull(monthDay57);
        org.junit.Assert.assertNotNull(dateTimeFieldType59);
        org.junit.Assert.assertNotNull(property60);
        org.junit.Assert.assertNotNull(property61);
        org.junit.Assert.assertNotNull(durationField62);
        org.junit.Assert.assertNotNull(monthDay64);
        org.junit.Assert.assertNotNull(dateTimeFieldType65);
        org.junit.Assert.assertNotNull(property66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
    }

    @Test
    public void test1595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1595");
        org.joda.time.DateTimeZone dateTimeZone0 = null;
        org.joda.time.MonthDay monthDay1 = new org.joda.time.MonthDay(dateTimeZone0);
        org.joda.time.MonthDay monthDay3 = monthDay1.minusDays(100);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay5.dayOfMonth();
        org.joda.time.Chronology chronology11 = monthDay5.getChronology();
        org.joda.time.Chronology chronology12 = monthDay5.getChronology();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.DateTime dateTime14 = monthDay5.toDateTime(readableInstant13);
        org.joda.time.DateTime dateTime15 = monthDay1.toDateTime((org.joda.time.ReadableInstant) dateTime14);
        org.joda.time.DateTimeField dateTimeField17 = monthDay1.getField(1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertNotNull(chronology11);
        org.junit.Assert.assertNotNull(chronology12);
        org.junit.Assert.assertNotNull(dateTime14);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertNotNull(dateTimeField17);
    }

    @Test
    public void test1596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1596");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.MonthDay monthDay13 = property10.addWrapFieldToCopy((int) (short) 1);
        org.joda.time.MonthDay.Property property14 = monthDay13.dayOfMonth();
        int int15 = property14.getMaximumValue();
        java.lang.String str16 = property14.getAsText();
        java.util.Locale locale17 = null;
        java.lang.String str18 = property14.getAsShortText(locale17);
        org.joda.time.MonthDay monthDay20 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.MonthDay monthDay22 = monthDay20.withChronologyRetainFields(chronology21);
        org.joda.time.DateTimeFieldType dateTimeFieldType24 = monthDay20.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod25 = null;
        org.joda.time.MonthDay monthDay26 = monthDay20.plus(readablePeriod25);
        org.joda.time.MonthDay monthDay28 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.MonthDay monthDay30 = monthDay28.withChronologyRetainFields(chronology29);
        org.joda.time.MonthDay monthDay32 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.MonthDay monthDay34 = monthDay32.withChronologyRetainFields(chronology33);
        org.joda.time.DateTimeFieldType dateTimeFieldType36 = monthDay32.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property37 = monthDay30.property(dateTimeFieldType36);
        int int38 = property37.get();
        org.joda.time.MonthDay monthDay40 = property37.addWrapFieldToCopy((int) (short) 1);
        boolean boolean41 = monthDay20.isBefore((org.joda.time.ReadablePartial) monthDay40);
        org.joda.time.MonthDay monthDay43 = monthDay40.minusMonths((int) (byte) 100);
        int int44 = monthDay43.getMonthOfYear();
        org.joda.time.MonthDay monthDay46 = monthDay43.withMonthOfYear(1);
        org.joda.time.ReadablePeriod readablePeriod47 = null;
        org.joda.time.MonthDay monthDay48 = monthDay43.plus(readablePeriod47);
        int int49 = property14.compareTo((org.joda.time.ReadablePartial) monthDay48);
        org.joda.time.MonthDay monthDay51 = property14.addWrapFieldToCopy((int) '#');
        org.joda.time.MonthDay monthDay52 = property14.getMonthDay();
        java.util.Locale locale53 = null;
        java.lang.String str54 = property14.getAsText(locale53);
        org.joda.time.MonthDay monthDay55 = property14.getMonthDay();
        org.joda.time.MonthDay.Property property56 = monthDay55.dayOfMonth();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(property14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 31 + "'", int15 == 31);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "2" + "'", str16, "2");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "2" + "'", str18, "2");
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertNotNull(dateTimeFieldType24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertNotNull(dateTimeFieldType36);
        org.junit.Assert.assertNotNull(property37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(monthDay40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(monthDay43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 9 + "'", int44 == 9);
        org.junit.Assert.assertNotNull(monthDay46);
        org.junit.Assert.assertNotNull(monthDay48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(monthDay51);
        org.junit.Assert.assertNotNull(monthDay52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "2" + "'", str54, "2");
        org.junit.Assert.assertNotNull(monthDay55);
        org.junit.Assert.assertNotNull(property56);
    }

    @Test
    public void test1597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1597");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        java.util.Locale locale11 = null;
        int int12 = property10.getMaximumTextLength(locale11);
        org.joda.time.MonthDay monthDay14 = property10.addWrapFieldToCopy((int) (byte) 0);
        org.joda.time.MonthDay monthDay15 = new org.joda.time.MonthDay((java.lang.Object) monthDay14);
        org.joda.time.MonthDay monthDay17 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.MonthDay monthDay19 = monthDay17.withChronologyRetainFields(chronology18);
        org.joda.time.MonthDay monthDay21 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.MonthDay monthDay23 = monthDay21.withChronologyRetainFields(chronology22);
        org.joda.time.DateTimeFieldType dateTimeFieldType25 = monthDay21.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property26 = monthDay19.property(dateTimeFieldType25);
        org.joda.time.MonthDay.Property property27 = monthDay19.monthOfYear();
        int int28 = monthDay19.getDayOfMonth();
        org.joda.time.MonthDay.Property property29 = monthDay19.dayOfMonth();
        int int30 = monthDay19.getDayOfMonth();
        org.joda.time.ReadablePeriod readablePeriod31 = null;
        org.joda.time.MonthDay monthDay32 = monthDay19.plus(readablePeriod31);
        org.joda.time.MonthDay monthDay34 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.MonthDay monthDay36 = monthDay34.withChronologyRetainFields(chronology35);
        org.joda.time.MonthDay monthDay38 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.MonthDay monthDay40 = monthDay38.withChronologyRetainFields(chronology39);
        org.joda.time.DateTimeFieldType dateTimeFieldType42 = monthDay38.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property43 = monthDay36.property(dateTimeFieldType42);
        org.joda.time.MonthDay.Property property44 = monthDay36.monthOfYear();
        int int45 = monthDay36.getDayOfMonth();
        org.joda.time.MonthDay.Property property46 = monthDay36.dayOfMonth();
        int int47 = monthDay36.getDayOfMonth();
        org.joda.time.MonthDay monthDay49 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.MonthDay monthDay51 = monthDay49.withChronologyRetainFields(chronology50);
        org.joda.time.DateTimeFieldType dateTimeFieldType53 = monthDay49.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property54 = monthDay49.dayOfMonth();
        org.joda.time.Chronology chronology55 = monthDay49.getChronology();
        org.joda.time.MonthDay monthDay56 = monthDay36.withChronologyRetainFields(chronology55);
        org.joda.time.MonthDay monthDay57 = monthDay32.withChronologyRetainFields(chronology55);
        org.joda.time.format.DateTimeFormatter dateTimeFormatter58 = null;
        java.lang.String str59 = monthDay32.toString(dateTimeFormatter58);
        boolean boolean60 = monthDay15.isBefore((org.joda.time.ReadablePartial) monthDay32);
        java.lang.String str61 = monthDay15.toString();
        java.lang.String str63 = monthDay15.toString("--11-24");
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay17);
        org.junit.Assert.assertNotNull(monthDay19);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertNotNull(monthDay23);
        org.junit.Assert.assertNotNull(dateTimeFieldType25);
        org.junit.Assert.assertNotNull(property26);
        org.junit.Assert.assertNotNull(property27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(property29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertNotNull(monthDay36);
        org.junit.Assert.assertNotNull(monthDay38);
        org.junit.Assert.assertNotNull(monthDay40);
        org.junit.Assert.assertNotNull(dateTimeFieldType42);
        org.junit.Assert.assertNotNull(property43);
        org.junit.Assert.assertNotNull(property44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(property46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(monthDay49);
        org.junit.Assert.assertNotNull(monthDay51);
        org.junit.Assert.assertNotNull(dateTimeFieldType53);
        org.junit.Assert.assertNotNull(property54);
        org.junit.Assert.assertNotNull(chronology55);
        org.junit.Assert.assertNotNull(monthDay56);
        org.junit.Assert.assertNotNull(monthDay57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "--01-01" + "'", str59, "--01-01");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "--01-01" + "'", str61, "--01-01");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "--11-24" + "'", str63, "--11-24");
    }

    @Test
    public void test1598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1598");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        org.joda.time.MonthDay.Property property11 = monthDay3.monthOfYear();
        java.util.Locale locale12 = null;
        int int13 = property11.getMaximumTextLength(locale12);
        int int14 = property11.getMaximumValue();
        java.lang.String str15 = property11.getAsShortText();
        org.joda.time.DurationField durationField16 = property11.getDurationField();
        java.lang.String str17 = property11.getAsString();
        java.lang.String str18 = property11.getName();
        java.util.Locale locale19 = null;
        int int20 = property11.getMaximumTextLength(locale19);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertNotNull(property11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 9 + "'", int13 == 9);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 12 + "'", int14 == 12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Jan" + "'", str15, "Jan");
        org.junit.Assert.assertNotNull(durationField16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1" + "'", str17, "1");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "monthOfYear" + "'", str18, "monthOfYear");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 9 + "'", int20 == 9);
    }

    @Test
    public void test1599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1599");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        java.util.Locale locale11 = null;
        int int12 = property10.getMaximumTextLength(locale11);
        java.util.Locale locale13 = null;
        int int14 = property10.getMaximumShortTextLength(locale13);
        org.joda.time.DateTimeField dateTimeField15 = property10.getField();
        int int16 = property10.getMaximumValue();
        int int17 = property10.getMinimumValue();
        java.util.Locale locale18 = null;
        java.lang.String str19 = property10.getAsText(locale18);
        int int20 = property10.getMaximumValueOverall();
        int int21 = property10.getMinimumValueOverall();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(dateTimeField15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 31 + "'", int16 == 31);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1" + "'", str19, "1");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 31 + "'", int20 == 31);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
    }

    @Test
    public void test1600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1600");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        int int12 = property10.getMaximumValue();
        org.joda.time.MonthDay monthDay14 = property10.setCopy((int) (short) 1);
        org.joda.time.MonthDay monthDay16 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MonthDay monthDay18 = monthDay16.withChronologyRetainFields(chronology17);
        org.joda.time.DateTimeFieldType dateTimeFieldType20 = monthDay16.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod21 = null;
        org.joda.time.MonthDay monthDay22 = monthDay16.plus(readablePeriod21);
        int int23 = monthDay16.getDayOfMonth();
        int int24 = property10.compareTo((org.joda.time.ReadablePartial) monthDay16);
        org.joda.time.DurationField durationField25 = property10.getDurationField();
        java.util.Locale locale26 = null;
        int int27 = property10.getMaximumShortTextLength(locale26);
        int int28 = property10.getMinimumValue();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 31 + "'", int12 == 31);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(dateTimeFieldType20);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(durationField25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
    }

    @Test
    public void test1601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1601");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MonthDay monthDay24 = monthDay1.withChronologyRetainFields(chronology23);
        org.joda.time.Chronology chronology25 = monthDay24.getChronology();
        int[] intArray26 = monthDay24.getValues();
        org.joda.time.MonthDay monthDay28 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod29 = null;
        org.joda.time.MonthDay monthDay31 = monthDay28.withPeriodAdded(readablePeriod29, 1);
        org.joda.time.MonthDay monthDay33 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.MonthDay monthDay35 = monthDay33.withChronologyRetainFields(chronology34);
        org.joda.time.DateTimeFieldType dateTimeFieldType37 = monthDay33.getFieldType((int) (byte) 1);
        int int38 = monthDay31.indexOf(dateTimeFieldType37);
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.MonthDay monthDay40 = monthDay31.withChronologyRetainFields(chronology39);
        org.joda.time.MonthDay monthDay42 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.MonthDay monthDay44 = monthDay42.withChronologyRetainFields(chronology43);
        org.joda.time.DateTimeFieldType dateTimeFieldType46 = monthDay42.getFieldType((int) (byte) 1);
        int int47 = monthDay31.get(dateTimeFieldType46);
        boolean boolean48 = monthDay24.isAfter((org.joda.time.ReadablePartial) monthDay31);
        org.joda.time.DateTimeFieldType[] dateTimeFieldTypeArray49 = monthDay31.getFieldTypes();
        org.joda.time.ReadablePeriod readablePeriod50 = null;
        org.joda.time.MonthDay monthDay51 = monthDay31.minus(readablePeriod50);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(chronology25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[1, 1]");
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertNotNull(monthDay31);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(dateTimeFieldType37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(monthDay40);
        org.junit.Assert.assertNotNull(monthDay42);
        org.junit.Assert.assertNotNull(monthDay44);
        org.junit.Assert.assertNotNull(dateTimeFieldType46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(dateTimeFieldTypeArray49);
        org.junit.Assert.assertNotNull(monthDay51);
    }

    @Test
    @Ignore
  public void test1602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1602");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.MonthDay monthDay13 = property10.addWrapFieldToCopy((int) (short) 1);
        org.joda.time.MonthDay.Property property14 = monthDay13.dayOfMonth();
        int int15 = property14.getMaximumValueOverall();
        java.util.Locale locale17 = null;
        org.joda.time.MonthDay monthDay18 = property14.setCopy("1", locale17);
        org.joda.time.MonthDay monthDay20 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod21 = null;
        org.joda.time.MonthDay monthDay23 = monthDay20.withPeriodAdded(readablePeriod21, 1);
        org.joda.time.MonthDay monthDay25 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.MonthDay monthDay27 = monthDay25.withChronologyRetainFields(chronology26);
        org.joda.time.DateTimeFieldType dateTimeFieldType29 = monthDay25.getFieldType((int) (byte) 1);
        int int30 = monthDay23.indexOf(dateTimeFieldType29);
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MonthDay monthDay32 = monthDay23.withChronologyRetainFields(chronology31);
        org.joda.time.MonthDay monthDay34 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.MonthDay monthDay36 = monthDay34.withChronologyRetainFields(chronology35);
        org.joda.time.DateTimeFieldType dateTimeFieldType38 = monthDay34.getFieldType((int) (byte) 1);
        int int39 = monthDay23.get(dateTimeFieldType38);
        org.joda.time.DateTimeFieldType dateTimeFieldType40 = null;
        boolean boolean41 = monthDay23.isSupported(dateTimeFieldType40);
        int int42 = monthDay18.compareTo((org.joda.time.ReadablePartial) monthDay23);
        org.joda.time.ReadablePeriod readablePeriod43 = null;
        org.joda.time.MonthDay monthDay44 = monthDay18.minus(readablePeriod43);
        org.joda.time.MonthDay monthDay46 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.MonthDay monthDay48 = monthDay46.withChronologyRetainFields(chronology47);
        org.joda.time.DateTimeFieldType dateTimeFieldType50 = monthDay46.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod51 = null;
        org.joda.time.MonthDay monthDay52 = monthDay46.plus(readablePeriod51);
        org.joda.time.MonthDay monthDay54 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.MonthDay monthDay56 = monthDay54.withChronologyRetainFields(chronology55);
        org.joda.time.MonthDay monthDay58 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology59 = null;
        org.joda.time.MonthDay monthDay60 = monthDay58.withChronologyRetainFields(chronology59);
        org.joda.time.DateTimeFieldType dateTimeFieldType62 = monthDay58.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property63 = monthDay56.property(dateTimeFieldType62);
        int int64 = property63.get();
        org.joda.time.MonthDay monthDay66 = property63.addWrapFieldToCopy((int) (short) 1);
        boolean boolean67 = monthDay46.isBefore((org.joda.time.ReadablePartial) monthDay66);
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.MonthDay monthDay69 = monthDay46.withChronologyRetainFields(chronology68);
        org.joda.time.Chronology chronology70 = monthDay69.getChronology();
        org.joda.time.MonthDay monthDay71 = new org.joda.time.MonthDay(chronology70);
        boolean boolean72 = monthDay18.equals((java.lang.Object) monthDay71);
        java.lang.String str73 = monthDay71.toString();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(property14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 31 + "'", int15 == 31);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(monthDay23);
        org.junit.Assert.assertNotNull(monthDay25);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertNotNull(dateTimeFieldType29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertNotNull(monthDay36);
        org.junit.Assert.assertNotNull(dateTimeFieldType38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(monthDay44);
        org.junit.Assert.assertNotNull(monthDay46);
        org.junit.Assert.assertNotNull(monthDay48);
        org.junit.Assert.assertNotNull(dateTimeFieldType50);
        org.junit.Assert.assertNotNull(monthDay52);
        org.junit.Assert.assertNotNull(monthDay54);
        org.junit.Assert.assertNotNull(monthDay56);
        org.junit.Assert.assertNotNull(monthDay58);
        org.junit.Assert.assertNotNull(monthDay60);
        org.junit.Assert.assertNotNull(dateTimeFieldType62);
        org.junit.Assert.assertNotNull(property63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(monthDay66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(monthDay69);
        org.junit.Assert.assertNotNull(chronology70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "--11-25" + "'", str73, "--11-25");
    }

    @Test
    public void test1603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1603");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.MonthDay monthDay24 = monthDay21.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay26 = monthDay24.minusDays(31);
        int[] intArray27 = monthDay24.getValues();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[9, 2]");
    }

    @Test
    public void test1604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1604");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.MonthDay monthDay24 = monthDay21.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay26 = org.joda.time.MonthDay.parse("");
        org.joda.time.MonthDay monthDay28 = monthDay26.minusDays((int) '#');
        boolean boolean29 = monthDay24.isBefore((org.joda.time.ReadablePartial) monthDay28);
        org.joda.time.DateTimeFieldType[] dateTimeFieldTypeArray30 = monthDay24.getFieldTypes();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(dateTimeFieldTypeArray30);
    }

    @Test
    public void test1605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1605");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        org.joda.time.MonthDay.Property property11 = monthDay3.monthOfYear();
        java.util.Locale locale12 = null;
        int int13 = property11.getMaximumTextLength(locale12);
        int int14 = property11.getMaximumValue();
        org.joda.time.MonthDay monthDay16 = property11.addWrapFieldToCopy((int) '#');
        java.lang.String str17 = property11.toString();
        org.joda.time.MonthDay monthDay19 = property11.addToCopy(0);
        org.joda.time.DurationField durationField20 = property11.getDurationField();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertNotNull(property11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 9 + "'", int13 == 9);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 12 + "'", int14 == 12);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Property[monthOfYear]" + "'", str17, "Property[monthOfYear]");
        org.junit.Assert.assertNotNull(monthDay19);
        org.junit.Assert.assertNotNull(durationField20);
    }

    @Test
    public void test1606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1606");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        int int12 = property10.getMaximumValue();
        org.joda.time.MonthDay monthDay14 = property10.setCopy((int) (short) 1);
        org.joda.time.MonthDay monthDay16 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MonthDay monthDay18 = monthDay16.withChronologyRetainFields(chronology17);
        org.joda.time.DateTimeFieldType dateTimeFieldType20 = monthDay16.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod21 = null;
        org.joda.time.MonthDay monthDay22 = monthDay16.plus(readablePeriod21);
        int int23 = monthDay16.getDayOfMonth();
        int int24 = property10.compareTo((org.joda.time.ReadablePartial) monthDay16);
        org.joda.time.DateTimeField[] dateTimeFieldArray25 = monthDay16.getFields();
        org.joda.time.ReadablePeriod readablePeriod26 = null;
        org.joda.time.MonthDay monthDay27 = monthDay16.plus(readablePeriod26);
        org.joda.time.MonthDay monthDay28 = new org.joda.time.MonthDay((java.lang.Object) monthDay16);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 31 + "'", int12 == 31);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(dateTimeFieldType20);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(dateTimeFieldArray25);
        org.junit.Assert.assertNotNull(monthDay27);
    }

    @Test
    public void test1607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1607");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property6 = monthDay1.dayOfMonth();
        org.joda.time.MonthDay monthDay8 = property6.addWrapFieldToCopy(1);
        org.joda.time.MonthDay monthDay10 = property6.addWrapFieldToCopy(0);
        org.joda.time.MonthDay monthDay12 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MonthDay monthDay14 = monthDay12.withChronologyRetainFields(chronology13);
        org.joda.time.MonthDay monthDay16 = monthDay12.minusMonths((int) (byte) -1);
        boolean boolean17 = property6.equals((java.lang.Object) monthDay16);
        int int18 = property6.get();
        int int19 = property6.getMinimumValue();
        java.lang.String str20 = property6.getAsString();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(property6);
        org.junit.Assert.assertNotNull(monthDay8);
        org.junit.Assert.assertNotNull(monthDay10);
        org.junit.Assert.assertNotNull(monthDay12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1" + "'", str20, "1");
    }

    @Test
    public void test1608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1608");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property6 = monthDay1.dayOfMonth();
        org.joda.time.MonthDay monthDay8 = property6.addWrapFieldToCopy(1);
        org.joda.time.MonthDay monthDay10 = property6.addWrapFieldToCopy(0);
        org.joda.time.MonthDay monthDay12 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MonthDay monthDay14 = monthDay12.withChronologyRetainFields(chronology13);
        org.joda.time.MonthDay monthDay16 = monthDay12.minusMonths((int) (byte) -1);
        boolean boolean17 = property6.equals((java.lang.Object) monthDay16);
        int int18 = property6.get();
        org.joda.time.DurationField durationField19 = property6.getRangeDurationField();
        org.joda.time.MonthDay monthDay21 = property6.addWrapFieldToCopy((int) (byte) 1);
        int int22 = property6.get();
        int int23 = property6.getMaximumValue();
        org.joda.time.DurationField durationField24 = property6.getDurationField();
        org.joda.time.MonthDay monthDay27 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod28 = null;
        org.joda.time.MonthDay monthDay30 = monthDay27.withPeriodAdded(readablePeriod28, 1);
        org.joda.time.MonthDay monthDay32 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.MonthDay monthDay34 = monthDay32.withChronologyRetainFields(chronology33);
        org.joda.time.DateTimeFieldType dateTimeFieldType36 = monthDay32.getFieldType((int) (byte) 1);
        int int37 = monthDay30.indexOf(dateTimeFieldType36);
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.MonthDay monthDay39 = monthDay30.withChronologyRetainFields(chronology38);
        org.joda.time.MonthDay monthDay41 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.MonthDay monthDay43 = monthDay41.withChronologyRetainFields(chronology42);
        org.joda.time.DateTimeFieldType dateTimeFieldType45 = monthDay41.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod46 = null;
        org.joda.time.MonthDay monthDay47 = monthDay41.plus(readablePeriod46);
        org.joda.time.MonthDay monthDay49 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.MonthDay monthDay51 = monthDay49.withChronologyRetainFields(chronology50);
        org.joda.time.MonthDay monthDay53 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.MonthDay monthDay55 = monthDay53.withChronologyRetainFields(chronology54);
        org.joda.time.DateTimeFieldType dateTimeFieldType57 = monthDay53.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property58 = monthDay51.property(dateTimeFieldType57);
        int int59 = property58.get();
        org.joda.time.MonthDay monthDay61 = property58.addWrapFieldToCopy((int) (short) 1);
        boolean boolean62 = monthDay41.isBefore((org.joda.time.ReadablePartial) monthDay61);
        org.joda.time.Chronology chronology63 = null;
        org.joda.time.MonthDay monthDay64 = monthDay41.withChronologyRetainFields(chronology63);
        org.joda.time.Chronology chronology65 = monthDay64.getChronology();
        org.joda.time.MonthDay monthDay66 = monthDay39.withChronologyRetainFields(chronology65);
        org.joda.time.MonthDay monthDay67 = new org.joda.time.MonthDay((long) 9, chronology65);
        org.joda.time.MonthDay monthDay69 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod70 = null;
        org.joda.time.MonthDay monthDay72 = monthDay69.withPeriodAdded(readablePeriod70, 1);
        org.joda.time.MonthDay monthDay74 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology75 = null;
        org.joda.time.MonthDay monthDay76 = monthDay74.withChronologyRetainFields(chronology75);
        org.joda.time.DateTimeFieldType dateTimeFieldType78 = monthDay74.getFieldType((int) (byte) 1);
        int int79 = monthDay72.indexOf(dateTimeFieldType78);
        org.joda.time.Chronology chronology80 = null;
        org.joda.time.MonthDay monthDay81 = monthDay72.withChronologyRetainFields(chronology80);
        org.joda.time.MonthDay monthDay83 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology84 = null;
        org.joda.time.MonthDay monthDay85 = monthDay83.withChronologyRetainFields(chronology84);
        org.joda.time.DateTimeFieldType dateTimeFieldType87 = monthDay83.getFieldType((int) (byte) 1);
        int int88 = monthDay72.get(dateTimeFieldType87);
        org.joda.time.MonthDay monthDay90 = monthDay72.plusDays(0);
        org.joda.time.ReadablePeriod readablePeriod91 = null;
        org.joda.time.MonthDay monthDay92 = monthDay72.minus(readablePeriod91);
        int int93 = monthDay67.compareTo((org.joda.time.ReadablePartial) monthDay72);
        int int94 = property6.compareTo((org.joda.time.ReadablePartial) monthDay67);
        org.joda.time.MonthDay monthDay96 = property6.addWrapFieldToCopy(28);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(property6);
        org.junit.Assert.assertNotNull(monthDay8);
        org.junit.Assert.assertNotNull(monthDay10);
        org.junit.Assert.assertNotNull(monthDay12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(durationField19);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 31 + "'", int23 == 31);
        org.junit.Assert.assertNotNull(durationField24);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertNotNull(dateTimeFieldType36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertNotNull(monthDay41);
        org.junit.Assert.assertNotNull(monthDay43);
        org.junit.Assert.assertNotNull(dateTimeFieldType45);
        org.junit.Assert.assertNotNull(monthDay47);
        org.junit.Assert.assertNotNull(monthDay49);
        org.junit.Assert.assertNotNull(monthDay51);
        org.junit.Assert.assertNotNull(monthDay53);
        org.junit.Assert.assertNotNull(monthDay55);
        org.junit.Assert.assertNotNull(dateTimeFieldType57);
        org.junit.Assert.assertNotNull(property58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(monthDay61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(monthDay64);
        org.junit.Assert.assertNotNull(chronology65);
        org.junit.Assert.assertNotNull(monthDay66);
        org.junit.Assert.assertNotNull(monthDay69);
        org.junit.Assert.assertNotNull(monthDay72);
        org.junit.Assert.assertNotNull(monthDay74);
        org.junit.Assert.assertNotNull(monthDay76);
        org.junit.Assert.assertNotNull(dateTimeFieldType78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertNotNull(monthDay81);
        org.junit.Assert.assertNotNull(monthDay83);
        org.junit.Assert.assertNotNull(monthDay85);
        org.junit.Assert.assertNotNull(dateTimeFieldType87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1 + "'", int88 == 1);
        org.junit.Assert.assertNotNull(monthDay90);
        org.junit.Assert.assertNotNull(monthDay92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
        org.junit.Assert.assertNotNull(monthDay96);
    }

    @Test
    public void test1609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1609");
        org.joda.time.format.DateTimeFormatter dateTimeFormatter1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MonthDay monthDay2 = org.joda.time.MonthDay.parse("--11-25", dateTimeFormatter1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1610");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property6 = monthDay1.dayOfMonth();
        org.joda.time.MonthDay monthDay8 = property6.addWrapFieldToCopy(1);
        org.joda.time.MonthDay monthDay10 = property6.addWrapFieldToCopy(0);
        org.joda.time.MonthDay monthDay12 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MonthDay monthDay14 = monthDay12.withChronologyRetainFields(chronology13);
        org.joda.time.MonthDay monthDay16 = monthDay12.minusMonths((int) (byte) -1);
        boolean boolean17 = property6.equals((java.lang.Object) monthDay16);
        java.lang.String str18 = property6.getAsShortText();
        org.joda.time.DateTimeField dateTimeField19 = property6.getField();
        org.joda.time.MonthDay monthDay21 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod22 = null;
        org.joda.time.MonthDay monthDay24 = monthDay21.withPeriodAdded(readablePeriod22, 1);
        org.joda.time.MonthDay monthDay26 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.MonthDay monthDay28 = monthDay26.withChronologyRetainFields(chronology27);
        org.joda.time.DateTimeFieldType dateTimeFieldType30 = monthDay26.getFieldType((int) (byte) 1);
        int int31 = monthDay24.indexOf(dateTimeFieldType30);
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.MonthDay monthDay33 = monthDay24.withChronologyRetainFields(chronology32);
        int int34 = property6.compareTo((org.joda.time.ReadablePartial) monthDay24);
        java.util.Locale locale35 = null;
        int int36 = property6.getMaximumShortTextLength(locale35);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MonthDay monthDay38 = property6.setCopy("dayOfMonth");
            org.junit.Assert.fail("Expected exception of type org.joda.time.IllegalFieldValueException; message: Value \"dayOfMonth\" for dayOfMonth is not supported");
        } catch (org.joda.time.IllegalFieldValueException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(property6);
        org.junit.Assert.assertNotNull(monthDay8);
        org.junit.Assert.assertNotNull(monthDay10);
        org.junit.Assert.assertNotNull(monthDay12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1" + "'", str18, "1");
        org.junit.Assert.assertNotNull(dateTimeField19);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertNotNull(dateTimeFieldType30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
    }

    @Test
    public void test1611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1611");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.MonthDay monthDay24 = monthDay21.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay26 = monthDay24.minusDays(31);
        org.joda.time.MonthDay monthDay28 = monthDay26.plusDays((int) (byte) 10);
        org.joda.time.MonthDay monthDay30 = monthDay26.minusMonths(2);
        org.joda.time.MonthDay monthDay32 = monthDay26.plusMonths((int) '#');
        java.lang.String str34 = monthDay32.toString("--01-01");
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "--01-01" + "'", str34, "--01-01");
    }

    @Test
    public void test1612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1612");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.MonthDay monthDay3 = monthDay1.minusDays((int) '#');
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay5.dayOfMonth();
        org.joda.time.Chronology chronology11 = monthDay5.getChronology();
        org.joda.time.Chronology chronology12 = monthDay5.getChronology();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.DateTime dateTime14 = monthDay5.toDateTime(readableInstant13);
        org.joda.time.MonthDay monthDay16 = monthDay5.plusMonths((int) ' ');
        boolean boolean17 = monthDay1.isAfter((org.joda.time.ReadablePartial) monthDay16);
        int[] intArray18 = monthDay1.getValues();
        org.joda.time.DateTimeFieldType[] dateTimeFieldTypeArray19 = monthDay1.getFieldTypes();
        org.joda.time.MonthDay monthDay21 = monthDay1.withDayOfMonth(10);
        org.joda.time.MonthDay monthDay23 = monthDay1.minusMonths(0);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertNotNull(chronology11);
        org.junit.Assert.assertNotNull(chronology12);
        org.junit.Assert.assertNotNull(dateTime14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[1, 1]");
        org.junit.Assert.assertNotNull(dateTimeFieldTypeArray19);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertNotNull(monthDay23);
    }

    @Test
    public void test1613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1613");
        org.joda.time.format.DateTimeFormatter dateTimeFormatter1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MonthDay monthDay2 = org.joda.time.MonthDay.parse("February", dateTimeFormatter1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1614");
        org.joda.time.MonthDay monthDay2 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.MonthDay monthDay4 = monthDay2.withChronologyRetainFields(chronology3);
        org.joda.time.DateTimeFieldType dateTimeFieldType6 = monthDay2.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property7 = monthDay2.dayOfMonth();
        org.joda.time.Chronology chronology8 = monthDay2.getChronology();
        org.joda.time.Chronology chronology9 = monthDay2.getChronology();
        org.joda.time.MonthDay monthDay10 = org.joda.time.MonthDay.now(chronology9);
        org.joda.time.MonthDay monthDay11 = new org.joda.time.MonthDay((long) (short) -1, chronology9);
        org.junit.Assert.assertNotNull(monthDay2);
        org.junit.Assert.assertNotNull(monthDay4);
        org.junit.Assert.assertNotNull(dateTimeFieldType6);
        org.junit.Assert.assertNotNull(property7);
        org.junit.Assert.assertNotNull(chronology8);
        org.junit.Assert.assertNotNull(chronology9);
        org.junit.Assert.assertNotNull(monthDay10);
    }

    @Test
    public void test1615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1615");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        org.joda.time.MonthDay.Property property11 = monthDay3.monthOfYear();
        java.lang.String str12 = property11.getAsShortText();
        int int13 = property11.getMinimumValue();
        org.joda.time.MonthDay monthDay15 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MonthDay monthDay17 = monthDay15.withChronologyRetainFields(chronology16);
        org.joda.time.MonthDay monthDay19 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MonthDay monthDay21 = monthDay19.withChronologyRetainFields(chronology20);
        org.joda.time.DateTimeFieldType dateTimeFieldType23 = monthDay19.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property24 = monthDay17.property(dateTimeFieldType23);
        java.util.Locale locale25 = null;
        int int26 = property24.getMaximumTextLength(locale25);
        org.joda.time.MonthDay monthDay28 = property24.addWrapFieldToCopy((int) (byte) 0);
        org.joda.time.ReadablePeriod readablePeriod29 = null;
        org.joda.time.MonthDay monthDay30 = monthDay28.minus(readablePeriod29);
        boolean boolean31 = property11.equals((java.lang.Object) monthDay30);
        java.lang.Class<?> wildcardClass32 = monthDay30.getClass();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertNotNull(property11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Jan" + "'", str12, "Jan");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(monthDay17);
        org.junit.Assert.assertNotNull(monthDay19);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertNotNull(dateTimeFieldType23);
        org.junit.Assert.assertNotNull(property24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1616");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod2 = null;
        org.joda.time.MonthDay monthDay4 = monthDay1.withPeriodAdded(readablePeriod2, 1);
        org.joda.time.MonthDay monthDay6 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.MonthDay monthDay8 = monthDay6.withChronologyRetainFields(chronology7);
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = monthDay6.getFieldType((int) (byte) 1);
        int int11 = monthDay4.indexOf(dateTimeFieldType10);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MonthDay monthDay13 = monthDay4.withChronologyRetainFields(chronology12);
        org.joda.time.MonthDay monthDay15 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MonthDay monthDay17 = monthDay15.withChronologyRetainFields(chronology16);
        org.joda.time.MonthDay monthDay19 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MonthDay monthDay21 = monthDay19.withChronologyRetainFields(chronology20);
        org.joda.time.DateTimeFieldType dateTimeFieldType23 = monthDay19.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property24 = monthDay17.property(dateTimeFieldType23);
        int int25 = property24.get();
        org.joda.time.MonthDay monthDay27 = property24.addWrapFieldToCopy((int) (short) 1);
        java.lang.String str28 = property24.getAsString();
        java.lang.String str29 = property24.getAsText();
        org.joda.time.DurationField durationField30 = property24.getRangeDurationField();
        int int31 = property24.getMinimumValue();
        org.joda.time.MonthDay monthDay33 = property24.addToCopy(0);
        org.joda.time.MonthDay monthDay35 = monthDay33.plusDays((int) 'a');
        org.joda.time.MonthDay.Property property36 = monthDay33.monthOfYear();
        boolean boolean37 = monthDay4.isBefore((org.joda.time.ReadablePartial) monthDay33);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay4);
        org.junit.Assert.assertNotNull(monthDay6);
        org.junit.Assert.assertNotNull(monthDay8);
        org.junit.Assert.assertNotNull(dateTimeFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(monthDay17);
        org.junit.Assert.assertNotNull(monthDay19);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertNotNull(dateTimeFieldType23);
        org.junit.Assert.assertNotNull(property24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1" + "'", str28, "1");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1" + "'", str29, "1");
        org.junit.Assert.assertNotNull(durationField30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(property36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test1617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1617");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.MonthDay monthDay24 = monthDay21.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay26 = org.joda.time.MonthDay.parse("");
        org.joda.time.MonthDay monthDay28 = monthDay26.minusDays((int) '#');
        boolean boolean29 = monthDay24.isBefore((org.joda.time.ReadablePartial) monthDay28);
        org.joda.time.MonthDay monthDay31 = monthDay28.plusMonths((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod32 = null;
        org.joda.time.MonthDay monthDay33 = monthDay31.plus(readablePeriod32);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(monthDay31);
        org.junit.Assert.assertNotNull(monthDay33);
    }

    @Test
    public void test1618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1618");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property6 = monthDay1.dayOfMonth();
        org.joda.time.Chronology chronology7 = monthDay1.getChronology();
        org.joda.time.Chronology chronology8 = monthDay1.getChronology();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.DateTime dateTime10 = monthDay1.toDateTime(readableInstant9);
        org.joda.time.MonthDay monthDay12 = monthDay1.plusMonths((int) ' ');
        org.joda.time.MonthDay monthDay14 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MonthDay monthDay16 = monthDay14.withChronologyRetainFields(chronology15);
        org.joda.time.DateTimeFieldType dateTimeFieldType18 = monthDay14.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod19 = null;
        org.joda.time.MonthDay monthDay20 = monthDay14.plus(readablePeriod19);
        org.joda.time.MonthDay monthDay22 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MonthDay monthDay24 = monthDay22.withChronologyRetainFields(chronology23);
        org.joda.time.MonthDay monthDay26 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.MonthDay monthDay28 = monthDay26.withChronologyRetainFields(chronology27);
        org.joda.time.DateTimeFieldType dateTimeFieldType30 = monthDay26.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property31 = monthDay24.property(dateTimeFieldType30);
        int int32 = property31.get();
        org.joda.time.MonthDay monthDay34 = property31.addWrapFieldToCopy((int) (short) 1);
        boolean boolean35 = monthDay14.isBefore((org.joda.time.ReadablePartial) monthDay34);
        org.joda.time.MonthDay monthDay37 = monthDay34.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay39 = monthDay37.plusMonths(1);
        org.joda.time.ReadablePeriod readablePeriod40 = null;
        org.joda.time.MonthDay monthDay41 = monthDay37.minus(readablePeriod40);
        org.joda.time.DateTimeZone dateTimeZone42 = null;
        org.joda.time.MonthDay monthDay43 = new org.joda.time.MonthDay(dateTimeZone42);
        boolean boolean44 = monthDay41.isEqual((org.joda.time.ReadablePartial) monthDay43);
        boolean boolean45 = monthDay1.equals((java.lang.Object) monthDay41);
        org.joda.time.MonthDay monthDay47 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.MonthDay monthDay49 = monthDay47.withChronologyRetainFields(chronology48);
        org.joda.time.DateTimeFieldType dateTimeFieldType51 = monthDay47.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod52 = null;
        org.joda.time.MonthDay monthDay53 = monthDay47.plus(readablePeriod52);
        int int54 = monthDay53.getMonthOfYear();
        org.joda.time.MonthDay monthDay56 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.MonthDay monthDay58 = monthDay56.withChronologyRetainFields(chronology57);
        org.joda.time.MonthDay monthDay60 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.MonthDay monthDay62 = monthDay60.withChronologyRetainFields(chronology61);
        org.joda.time.DateTimeFieldType dateTimeFieldType64 = monthDay60.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property65 = monthDay58.property(dateTimeFieldType64);
        java.util.Locale locale66 = null;
        int int67 = property65.getMaximumTextLength(locale66);
        org.joda.time.MonthDay monthDay69 = property65.addWrapFieldToCopy((int) (byte) 0);
        org.joda.time.ReadablePeriod readablePeriod70 = null;
        org.joda.time.MonthDay monthDay71 = monthDay69.minus(readablePeriod70);
        boolean boolean72 = monthDay53.isAfter((org.joda.time.ReadablePartial) monthDay69);
        boolean boolean73 = monthDay1.equals((java.lang.Object) monthDay69);
        org.joda.time.MonthDay monthDay76 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology77 = null;
        org.joda.time.MonthDay monthDay78 = monthDay76.withChronologyRetainFields(chronology77);
        org.joda.time.MonthDay monthDay80 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology81 = null;
        org.joda.time.MonthDay monthDay82 = monthDay80.withChronologyRetainFields(chronology81);
        org.joda.time.DateTimeFieldType dateTimeFieldType84 = monthDay80.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property85 = monthDay80.dayOfMonth();
        org.joda.time.Chronology chronology86 = monthDay80.getChronology();
        org.joda.time.MonthDay monthDay87 = org.joda.time.MonthDay.now(chronology86);
        org.joda.time.MonthDay monthDay88 = monthDay78.withChronologyRetainFields(chronology86);
        org.joda.time.MonthDay monthDay89 = new org.joda.time.MonthDay(10L, chronology86);
        org.joda.time.MonthDay monthDay90 = org.joda.time.MonthDay.now(chronology86);
        org.joda.time.MonthDay monthDay91 = monthDay1.withChronologyRetainFields(chronology86);
        org.joda.time.MonthDay monthDay93 = monthDay91.plusDays((int) (byte) 1);
        int int94 = monthDay91.getMonthOfYear();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(property6);
        org.junit.Assert.assertNotNull(chronology7);
        org.junit.Assert.assertNotNull(chronology8);
        org.junit.Assert.assertNotNull(dateTime10);
        org.junit.Assert.assertNotNull(monthDay12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(dateTimeFieldType18);
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertNotNull(dateTimeFieldType30);
        org.junit.Assert.assertNotNull(property31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(monthDay37);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertNotNull(monthDay41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(monthDay47);
        org.junit.Assert.assertNotNull(monthDay49);
        org.junit.Assert.assertNotNull(dateTimeFieldType51);
        org.junit.Assert.assertNotNull(monthDay53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(monthDay56);
        org.junit.Assert.assertNotNull(monthDay58);
        org.junit.Assert.assertNotNull(monthDay60);
        org.junit.Assert.assertNotNull(monthDay62);
        org.junit.Assert.assertNotNull(dateTimeFieldType64);
        org.junit.Assert.assertNotNull(property65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2 + "'", int67 == 2);
        org.junit.Assert.assertNotNull(monthDay69);
        org.junit.Assert.assertNotNull(monthDay71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(monthDay76);
        org.junit.Assert.assertNotNull(monthDay78);
        org.junit.Assert.assertNotNull(monthDay80);
        org.junit.Assert.assertNotNull(monthDay82);
        org.junit.Assert.assertNotNull(dateTimeFieldType84);
        org.junit.Assert.assertNotNull(property85);
        org.junit.Assert.assertNotNull(chronology86);
        org.junit.Assert.assertNotNull(monthDay87);
        org.junit.Assert.assertNotNull(monthDay88);
        org.junit.Assert.assertNotNull(monthDay90);
        org.junit.Assert.assertNotNull(monthDay91);
        org.junit.Assert.assertNotNull(monthDay93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 1 + "'", int94 == 1);
    }

    @Test
    public void test1619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1619");
        org.joda.time.MonthDay monthDay0 = org.joda.time.MonthDay.now();
        org.joda.time.ReadablePeriod readablePeriod1 = null;
        org.joda.time.MonthDay monthDay2 = monthDay0.plus(readablePeriod1);
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.MonthDay monthDay4 = new org.joda.time.MonthDay((java.lang.Object) monthDay0, chronology3);
        org.joda.time.MonthDay monthDay6 = monthDay4.withDayOfMonth(21);
        org.junit.Assert.assertNotNull(monthDay0);
        org.junit.Assert.assertNotNull(monthDay2);
        org.junit.Assert.assertNotNull(monthDay6);
    }

    @Test
    public void test1620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1620");
        org.joda.time.MonthDay monthDay0 = org.joda.time.MonthDay.now();
        org.joda.time.ReadablePeriod readablePeriod1 = null;
        org.joda.time.MonthDay monthDay2 = monthDay0.plus(readablePeriod1);
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.MonthDay monthDay4 = new org.joda.time.MonthDay((java.lang.Object) monthDay2, chronology3);
        org.joda.time.DateTimeField dateTimeField6 = monthDay2.getField((int) (short) 1);
        org.junit.Assert.assertNotNull(monthDay0);
        org.junit.Assert.assertNotNull(monthDay2);
        org.junit.Assert.assertNotNull(dateTimeField6);
    }

    @Test
    public void test1621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1621");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.MonthDay monthDay13 = property10.addWrapFieldToCopy((int) (short) 1);
        org.joda.time.MonthDay.Property property14 = monthDay13.dayOfMonth();
        int int15 = property14.getMaximumValue();
        java.lang.String str16 = property14.getAsText();
        java.util.Locale locale17 = null;
        java.lang.String str18 = property14.getAsShortText(locale17);
        org.joda.time.MonthDay monthDay20 = property14.addToCopy((int) (short) 1);
        org.joda.time.MonthDay monthDay22 = property14.setCopy((int) (short) 10);
        org.joda.time.MonthDay monthDay24 = monthDay22.plusMonths((-1));
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(property14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 31 + "'", int15 == 31);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "2" + "'", str16, "2");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "2" + "'", str18, "2");
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertNotNull(monthDay24);
    }

    @Test
    public void test1622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1622");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MonthDay monthDay24 = monthDay1.withChronologyRetainFields(chronology23);
        org.joda.time.Chronology chronology25 = monthDay24.getChronology();
        org.joda.time.MonthDay monthDay27 = monthDay24.minusMonths(9);
        org.joda.time.MonthDay monthDay29 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod30 = null;
        org.joda.time.MonthDay monthDay32 = monthDay29.withPeriodAdded(readablePeriod30, 1);
        org.joda.time.MonthDay monthDay34 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.MonthDay monthDay36 = monthDay34.withChronologyRetainFields(chronology35);
        org.joda.time.DateTimeFieldType dateTimeFieldType38 = monthDay34.getFieldType((int) (byte) 1);
        int int39 = monthDay32.indexOf(dateTimeFieldType38);
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.MonthDay monthDay41 = monthDay32.withChronologyRetainFields(chronology40);
        org.joda.time.MonthDay monthDay43 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.MonthDay monthDay45 = monthDay43.withChronologyRetainFields(chronology44);
        org.joda.time.DateTimeFieldType dateTimeFieldType47 = monthDay43.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property48 = monthDay43.dayOfMonth();
        org.joda.time.Chronology chronology49 = monthDay43.getChronology();
        org.joda.time.Chronology chronology50 = monthDay43.getChronology();
        boolean boolean51 = monthDay32.isEqual((org.joda.time.ReadablePartial) monthDay43);
        org.joda.time.MonthDay monthDay53 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.MonthDay monthDay55 = monthDay53.withChronologyRetainFields(chronology54);
        org.joda.time.DateTimeFieldType dateTimeFieldType57 = monthDay53.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod58 = null;
        org.joda.time.MonthDay monthDay59 = monthDay53.plus(readablePeriod58);
        int int60 = monthDay59.getMonthOfYear();
        org.joda.time.MonthDay monthDay62 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology63 = null;
        org.joda.time.MonthDay monthDay64 = monthDay62.withChronologyRetainFields(chronology63);
        org.joda.time.MonthDay monthDay66 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology67 = null;
        org.joda.time.MonthDay monthDay68 = monthDay66.withChronologyRetainFields(chronology67);
        org.joda.time.DateTimeFieldType dateTimeFieldType70 = monthDay66.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property71 = monthDay64.property(dateTimeFieldType70);
        java.util.Locale locale72 = null;
        int int73 = property71.getMaximumTextLength(locale72);
        org.joda.time.MonthDay monthDay75 = property71.addWrapFieldToCopy((int) (byte) 0);
        org.joda.time.ReadablePeriod readablePeriod76 = null;
        org.joda.time.MonthDay monthDay77 = monthDay75.minus(readablePeriod76);
        boolean boolean78 = monthDay59.isAfter((org.joda.time.ReadablePartial) monthDay75);
        boolean boolean79 = monthDay32.equals((java.lang.Object) monthDay59);
        boolean boolean80 = monthDay24.isEqual((org.joda.time.ReadablePartial) monthDay32);
        // The following exception was thrown during execution in test generation
        try {
            int int82 = monthDay32.getValue(5);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(chronology25);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertNotNull(monthDay29);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertNotNull(monthDay36);
        org.junit.Assert.assertNotNull(dateTimeFieldType38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(monthDay41);
        org.junit.Assert.assertNotNull(monthDay43);
        org.junit.Assert.assertNotNull(monthDay45);
        org.junit.Assert.assertNotNull(dateTimeFieldType47);
        org.junit.Assert.assertNotNull(property48);
        org.junit.Assert.assertNotNull(chronology49);
        org.junit.Assert.assertNotNull(chronology50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(monthDay53);
        org.junit.Assert.assertNotNull(monthDay55);
        org.junit.Assert.assertNotNull(dateTimeFieldType57);
        org.junit.Assert.assertNotNull(monthDay59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(monthDay62);
        org.junit.Assert.assertNotNull(monthDay64);
        org.junit.Assert.assertNotNull(monthDay66);
        org.junit.Assert.assertNotNull(monthDay68);
        org.junit.Assert.assertNotNull(dateTimeFieldType70);
        org.junit.Assert.assertNotNull(property71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 2 + "'", int73 == 2);
        org.junit.Assert.assertNotNull(monthDay75);
        org.junit.Assert.assertNotNull(monthDay77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    }

    @Test
    @Ignore
  public void test1623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1623");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        org.joda.time.MonthDay.Property property11 = monthDay3.monthOfYear();
        int int12 = monthDay3.getDayOfMonth();
        org.joda.time.MonthDay.Property property13 = monthDay3.dayOfMonth();
        int int14 = monthDay3.getDayOfMonth();
        org.joda.time.MonthDay monthDay16 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MonthDay monthDay18 = monthDay16.withChronologyRetainFields(chronology17);
        org.joda.time.DateTimeFieldType dateTimeFieldType20 = monthDay16.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property21 = monthDay16.dayOfMonth();
        org.joda.time.Chronology chronology22 = monthDay16.getChronology();
        org.joda.time.MonthDay monthDay23 = monthDay3.withChronologyRetainFields(chronology22);
        org.joda.time.MonthDay monthDay24 = new org.joda.time.MonthDay(chronology22);
        org.joda.time.MonthDay monthDay25 = new org.joda.time.MonthDay(chronology22);
        org.joda.time.DateTimeZone dateTimeZone26 = null;
        org.joda.time.MonthDay monthDay27 = new org.joda.time.MonthDay(dateTimeZone26);
        org.joda.time.MonthDay monthDay29 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.MonthDay monthDay31 = monthDay29.withChronologyRetainFields(chronology30);
        org.joda.time.MonthDay monthDay33 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.MonthDay monthDay35 = monthDay33.withChronologyRetainFields(chronology34);
        org.joda.time.DateTimeFieldType dateTimeFieldType37 = monthDay33.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property38 = monthDay31.property(dateTimeFieldType37);
        int int39 = property38.get();
        int int40 = property38.getMaximumValue();
        org.joda.time.MonthDay monthDay42 = property38.setCopy((int) (short) 1);
        org.joda.time.MonthDay monthDay44 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod45 = null;
        org.joda.time.MonthDay monthDay47 = monthDay44.withPeriodAdded(readablePeriod45, 1);
        org.joda.time.MonthDay monthDay49 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.MonthDay monthDay51 = monthDay49.withChronologyRetainFields(chronology50);
        org.joda.time.DateTimeFieldType dateTimeFieldType53 = monthDay49.getFieldType((int) (byte) 1);
        int int54 = monthDay47.indexOf(dateTimeFieldType53);
        boolean boolean55 = monthDay42.isSupported(dateTimeFieldType53);
        int int56 = monthDay27.get(dateTimeFieldType53);
        org.joda.time.MonthDay.Property property57 = monthDay25.property(dateTimeFieldType53);
        org.joda.time.DateTimeFieldType[] dateTimeFieldTypeArray58 = monthDay25.getFieldTypes();
        org.joda.time.MonthDay monthDay60 = monthDay25.minusMonths(31);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertNotNull(property11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(property13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(dateTimeFieldType20);
        org.junit.Assert.assertNotNull(property21);
        org.junit.Assert.assertNotNull(chronology22);
        org.junit.Assert.assertNotNull(monthDay23);
        org.junit.Assert.assertNotNull(monthDay29);
        org.junit.Assert.assertNotNull(monthDay31);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(dateTimeFieldType37);
        org.junit.Assert.assertNotNull(property38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 31 + "'", int40 == 31);
        org.junit.Assert.assertNotNull(monthDay42);
        org.junit.Assert.assertNotNull(monthDay44);
        org.junit.Assert.assertNotNull(monthDay47);
        org.junit.Assert.assertNotNull(monthDay49);
        org.junit.Assert.assertNotNull(monthDay51);
        org.junit.Assert.assertNotNull(dateTimeFieldType53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 25 + "'", int56 == 25);
        org.junit.Assert.assertNotNull(property57);
        org.junit.Assert.assertNotNull(dateTimeFieldTypeArray58);
        org.junit.Assert.assertNotNull(monthDay60);
    }

    @Test
    public void test1624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1624");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MonthDay monthDay24 = monthDay1.withChronologyRetainFields(chronology23);
        org.joda.time.Chronology chronology25 = monthDay24.getChronology();
        org.joda.time.MonthDay monthDay27 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod28 = null;
        org.joda.time.MonthDay monthDay30 = monthDay27.withPeriodAdded(readablePeriod28, 1);
        org.joda.time.MonthDay monthDay32 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.MonthDay monthDay34 = monthDay32.withChronologyRetainFields(chronology33);
        org.joda.time.DateTimeFieldType dateTimeFieldType36 = monthDay32.getFieldType((int) (byte) 1);
        int int37 = monthDay30.indexOf(dateTimeFieldType36);
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.MonthDay monthDay39 = monthDay30.withChronologyRetainFields(chronology38);
        boolean boolean40 = monthDay24.isAfter((org.joda.time.ReadablePartial) monthDay30);
        org.joda.time.MonthDay monthDay42 = monthDay30.plusDays((int) (byte) 0);
        org.joda.time.DateTimeField[] dateTimeFieldArray43 = monthDay30.getFields();
        org.joda.time.format.DateTimeFormatter dateTimeFormatter44 = null;
        java.lang.String str45 = monthDay30.toString(dateTimeFormatter44);
        java.lang.Object obj46 = null;
        boolean boolean47 = monthDay30.equals(obj46);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(chronology25);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertNotNull(dateTimeFieldType36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(monthDay42);
        org.junit.Assert.assertNotNull(dateTimeFieldArray43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "--01-01" + "'", str45, "--01-01");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test1625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1625");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        org.joda.time.MonthDay.Property property11 = monthDay3.monthOfYear();
        java.lang.String str12 = property11.getAsShortText();
        int int13 = property11.getMinimumValue();
        java.util.Locale locale15 = null;
        org.joda.time.MonthDay monthDay16 = property11.setCopy("2", locale15);
        org.joda.time.MonthDay monthDay18 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MonthDay monthDay20 = monthDay18.withChronologyRetainFields(chronology19);
        org.joda.time.MonthDay monthDay22 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MonthDay monthDay24 = monthDay22.withChronologyRetainFields(chronology23);
        org.joda.time.DateTimeFieldType dateTimeFieldType26 = monthDay22.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property27 = monthDay20.property(dateTimeFieldType26);
        org.joda.time.MonthDay.Property property28 = monthDay20.monthOfYear();
        org.joda.time.DurationField durationField29 = property28.getRangeDurationField();
        org.joda.time.MonthDay monthDay31 = property28.setCopy("1");
        org.joda.time.DateTimeFieldType dateTimeFieldType32 = property28.getFieldType();
        org.joda.time.MonthDay.Property property33 = monthDay16.property(dateTimeFieldType32);
        org.joda.time.MonthDay.Property property34 = monthDay16.dayOfMonth();
        java.lang.String str35 = property34.toString();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertNotNull(property11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Jan" + "'", str12, "Jan");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(dateTimeFieldType26);
        org.junit.Assert.assertNotNull(property27);
        org.junit.Assert.assertNotNull(property28);
        org.junit.Assert.assertNotNull(durationField29);
        org.junit.Assert.assertNotNull(monthDay31);
        org.junit.Assert.assertNotNull(dateTimeFieldType32);
        org.junit.Assert.assertNotNull(property33);
        org.junit.Assert.assertNotNull(property34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Property[dayOfMonth]" + "'", str35, "Property[dayOfMonth]");
    }

    @Test
    @Ignore
  public void test1626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1626");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        org.joda.time.MonthDay.Property property11 = monthDay3.monthOfYear();
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay13.dayOfMonth();
        org.joda.time.DateTimeFieldType dateTimeFieldType19 = property18.getFieldType();
        org.joda.time.MonthDay.Property property20 = monthDay3.property(dateTimeFieldType19);
        org.joda.time.MonthDay monthDay22 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MonthDay monthDay24 = monthDay22.withChronologyRetainFields(chronology23);
        org.joda.time.DateTimeFieldType dateTimeFieldType26 = monthDay22.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod27 = null;
        org.joda.time.MonthDay monthDay28 = monthDay22.plus(readablePeriod27);
        org.joda.time.MonthDay monthDay30 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MonthDay monthDay32 = monthDay30.withChronologyRetainFields(chronology31);
        org.joda.time.MonthDay monthDay34 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.MonthDay monthDay36 = monthDay34.withChronologyRetainFields(chronology35);
        org.joda.time.DateTimeFieldType dateTimeFieldType38 = monthDay34.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property39 = monthDay32.property(dateTimeFieldType38);
        int int40 = property39.get();
        org.joda.time.MonthDay monthDay42 = property39.addWrapFieldToCopy((int) (short) 1);
        boolean boolean43 = monthDay22.isBefore((org.joda.time.ReadablePartial) monthDay42);
        org.joda.time.MonthDay monthDay45 = monthDay42.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay47 = monthDay45.minusDays(31);
        org.joda.time.MonthDay monthDay49 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod50 = null;
        org.joda.time.MonthDay monthDay52 = monthDay49.withPeriodAdded(readablePeriod50, 1);
        org.joda.time.MonthDay monthDay54 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.MonthDay monthDay56 = monthDay54.withChronologyRetainFields(chronology55);
        org.joda.time.DateTimeFieldType dateTimeFieldType58 = monthDay54.getFieldType((int) (byte) 1);
        int int59 = monthDay52.indexOf(dateTimeFieldType58);
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.MonthDay monthDay61 = monthDay52.withChronologyRetainFields(chronology60);
        org.joda.time.MonthDay monthDay63 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.MonthDay monthDay65 = monthDay63.withChronologyRetainFields(chronology64);
        org.joda.time.DateTimeFieldType dateTimeFieldType67 = monthDay63.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod68 = null;
        org.joda.time.MonthDay monthDay69 = monthDay63.plus(readablePeriod68);
        org.joda.time.MonthDay monthDay71 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology72 = null;
        org.joda.time.MonthDay monthDay73 = monthDay71.withChronologyRetainFields(chronology72);
        org.joda.time.MonthDay monthDay75 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology76 = null;
        org.joda.time.MonthDay monthDay77 = monthDay75.withChronologyRetainFields(chronology76);
        org.joda.time.DateTimeFieldType dateTimeFieldType79 = monthDay75.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property80 = monthDay73.property(dateTimeFieldType79);
        int int81 = property80.get();
        org.joda.time.MonthDay monthDay83 = property80.addWrapFieldToCopy((int) (short) 1);
        boolean boolean84 = monthDay63.isBefore((org.joda.time.ReadablePartial) monthDay83);
        org.joda.time.Chronology chronology85 = null;
        org.joda.time.MonthDay monthDay86 = monthDay63.withChronologyRetainFields(chronology85);
        org.joda.time.Chronology chronology87 = monthDay86.getChronology();
        org.joda.time.MonthDay monthDay88 = monthDay61.withChronologyRetainFields(chronology87);
        org.joda.time.MonthDay monthDay89 = monthDay47.withChronologyRetainFields(chronology87);
        org.joda.time.Chronology chronology90 = monthDay89.getChronology();
        org.joda.time.MonthDay monthDay91 = monthDay3.withChronologyRetainFields(chronology90);
        org.joda.time.MonthDay monthDay92 = new org.joda.time.MonthDay(chronology90);
        org.joda.time.format.DateTimeFormatter dateTimeFormatter93 = null;
        java.lang.String str94 = monthDay92.toString(dateTimeFormatter93);
        org.joda.time.ReadablePeriod readablePeriod95 = null;
        org.joda.time.MonthDay monthDay96 = monthDay92.minus(readablePeriod95);
        java.lang.String str97 = monthDay92.toString();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertNotNull(property11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertNotNull(dateTimeFieldType19);
        org.junit.Assert.assertNotNull(property20);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(dateTimeFieldType26);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertNotNull(monthDay36);
        org.junit.Assert.assertNotNull(dateTimeFieldType38);
        org.junit.Assert.assertNotNull(property39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(monthDay42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(monthDay45);
        org.junit.Assert.assertNotNull(monthDay47);
        org.junit.Assert.assertNotNull(monthDay49);
        org.junit.Assert.assertNotNull(monthDay52);
        org.junit.Assert.assertNotNull(monthDay54);
        org.junit.Assert.assertNotNull(monthDay56);
        org.junit.Assert.assertNotNull(dateTimeFieldType58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(monthDay61);
        org.junit.Assert.assertNotNull(monthDay63);
        org.junit.Assert.assertNotNull(monthDay65);
        org.junit.Assert.assertNotNull(dateTimeFieldType67);
        org.junit.Assert.assertNotNull(monthDay69);
        org.junit.Assert.assertNotNull(monthDay71);
        org.junit.Assert.assertNotNull(monthDay73);
        org.junit.Assert.assertNotNull(monthDay75);
        org.junit.Assert.assertNotNull(monthDay77);
        org.junit.Assert.assertNotNull(dateTimeFieldType79);
        org.junit.Assert.assertNotNull(property80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertNotNull(monthDay83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(monthDay86);
        org.junit.Assert.assertNotNull(chronology87);
        org.junit.Assert.assertNotNull(monthDay88);
        org.junit.Assert.assertNotNull(monthDay89);
        org.junit.Assert.assertNotNull(chronology90);
        org.junit.Assert.assertNotNull(monthDay91);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "--11-25" + "'", str94, "--11-25");
        org.junit.Assert.assertNotNull(monthDay96);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "--11-25" + "'", str97, "--11-25");
    }

    @Test
    public void test1627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1627");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.MonthDay monthDay13 = property10.addWrapFieldToCopy((int) (short) 1);
        org.joda.time.MonthDay.Property property14 = monthDay13.dayOfMonth();
        int int15 = property14.getMaximumValueOverall();
        java.util.Locale locale17 = null;
        org.joda.time.MonthDay monthDay18 = property14.setCopy("1", locale17);
        org.joda.time.MonthDay monthDay20 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod21 = null;
        org.joda.time.MonthDay monthDay23 = monthDay20.withPeriodAdded(readablePeriod21, 1);
        org.joda.time.MonthDay monthDay25 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.MonthDay monthDay27 = monthDay25.withChronologyRetainFields(chronology26);
        org.joda.time.DateTimeFieldType dateTimeFieldType29 = monthDay25.getFieldType((int) (byte) 1);
        int int30 = monthDay23.indexOf(dateTimeFieldType29);
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MonthDay monthDay32 = monthDay23.withChronologyRetainFields(chronology31);
        org.joda.time.MonthDay monthDay34 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.MonthDay monthDay36 = monthDay34.withChronologyRetainFields(chronology35);
        org.joda.time.DateTimeFieldType dateTimeFieldType38 = monthDay34.getFieldType((int) (byte) 1);
        int int39 = monthDay23.get(dateTimeFieldType38);
        org.joda.time.DateTimeFieldType dateTimeFieldType40 = null;
        boolean boolean41 = monthDay23.isSupported(dateTimeFieldType40);
        int int42 = monthDay18.compareTo((org.joda.time.ReadablePartial) monthDay23);
        org.joda.time.ReadablePeriod readablePeriod43 = null;
        org.joda.time.MonthDay monthDay44 = monthDay18.minus(readablePeriod43);
        org.joda.time.MonthDay monthDay46 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.MonthDay monthDay48 = monthDay46.withChronologyRetainFields(chronology47);
        org.joda.time.DateTimeFieldType dateTimeFieldType50 = monthDay46.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod51 = null;
        org.joda.time.MonthDay monthDay52 = monthDay46.plus(readablePeriod51);
        org.joda.time.MonthDay monthDay54 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.MonthDay monthDay56 = monthDay54.withChronologyRetainFields(chronology55);
        org.joda.time.MonthDay monthDay58 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology59 = null;
        org.joda.time.MonthDay monthDay60 = monthDay58.withChronologyRetainFields(chronology59);
        org.joda.time.DateTimeFieldType dateTimeFieldType62 = monthDay58.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property63 = monthDay56.property(dateTimeFieldType62);
        int int64 = property63.get();
        org.joda.time.MonthDay monthDay66 = property63.addWrapFieldToCopy((int) (short) 1);
        boolean boolean67 = monthDay46.isBefore((org.joda.time.ReadablePartial) monthDay66);
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.MonthDay monthDay69 = monthDay46.withChronologyRetainFields(chronology68);
        org.joda.time.Chronology chronology70 = monthDay69.getChronology();
        org.joda.time.MonthDay monthDay71 = new org.joda.time.MonthDay(chronology70);
        boolean boolean72 = monthDay18.equals((java.lang.Object) monthDay71);
        org.joda.time.ReadablePeriod readablePeriod73 = null;
        org.joda.time.MonthDay monthDay74 = monthDay18.plus(readablePeriod73);
        org.joda.time.ReadablePeriod readablePeriod75 = null;
        org.joda.time.MonthDay monthDay76 = monthDay18.plus(readablePeriod75);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(property14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 31 + "'", int15 == 31);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(monthDay23);
        org.junit.Assert.assertNotNull(monthDay25);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertNotNull(dateTimeFieldType29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertNotNull(monthDay36);
        org.junit.Assert.assertNotNull(dateTimeFieldType38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(monthDay44);
        org.junit.Assert.assertNotNull(monthDay46);
        org.junit.Assert.assertNotNull(monthDay48);
        org.junit.Assert.assertNotNull(dateTimeFieldType50);
        org.junit.Assert.assertNotNull(monthDay52);
        org.junit.Assert.assertNotNull(monthDay54);
        org.junit.Assert.assertNotNull(monthDay56);
        org.junit.Assert.assertNotNull(monthDay58);
        org.junit.Assert.assertNotNull(monthDay60);
        org.junit.Assert.assertNotNull(dateTimeFieldType62);
        org.junit.Assert.assertNotNull(property63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(monthDay66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(monthDay69);
        org.junit.Assert.assertNotNull(chronology70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(monthDay74);
        org.junit.Assert.assertNotNull(monthDay76);
    }

    @Test
    public void test1628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1628");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod2 = null;
        org.joda.time.MonthDay monthDay4 = monthDay1.withPeriodAdded(readablePeriod2, 1);
        org.joda.time.MonthDay monthDay6 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.MonthDay monthDay8 = monthDay6.withChronologyRetainFields(chronology7);
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = monthDay6.getFieldType((int) (byte) 1);
        int int11 = monthDay4.indexOf(dateTimeFieldType10);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MonthDay monthDay13 = monthDay4.withChronologyRetainFields(chronology12);
        org.joda.time.MonthDay.Property property14 = monthDay13.dayOfMonth();
        int int15 = property14.getMinimumValue();
        int int16 = property14.getMaximumValueOverall();
        java.lang.String str17 = property14.getName();
        java.util.Locale locale19 = null;
        org.joda.time.MonthDay monthDay20 = property14.setCopy("1", locale19);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay4);
        org.junit.Assert.assertNotNull(monthDay6);
        org.junit.Assert.assertNotNull(monthDay8);
        org.junit.Assert.assertNotNull(dateTimeFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(property14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 31 + "'", int16 == 31);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "dayOfMonth" + "'", str17, "dayOfMonth");
        org.junit.Assert.assertNotNull(monthDay20);
    }

    @Test
    public void test1629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1629");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.MonthDay monthDay24 = monthDay21.minusMonths((int) (byte) 100);
        int int25 = monthDay24.getMonthOfYear();
        org.joda.time.MonthDay monthDay27 = monthDay24.withMonthOfYear(1);
        org.joda.time.ReadablePeriod readablePeriod28 = null;
        org.joda.time.MonthDay monthDay29 = monthDay24.plus(readablePeriod28);
        org.joda.time.MonthDay monthDay31 = monthDay29.withMonthOfYear(9);
        org.joda.time.DateTimeField[] dateTimeFieldArray32 = monthDay29.getFields();
        org.joda.time.ReadablePeriod readablePeriod33 = null;
        org.joda.time.MonthDay monthDay35 = monthDay29.withPeriodAdded(readablePeriod33, 0);
        int int36 = monthDay35.getDayOfMonth();
        int int37 = monthDay35.getMonthOfYear();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 9 + "'", int25 == 9);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertNotNull(monthDay29);
        org.junit.Assert.assertNotNull(monthDay31);
        org.junit.Assert.assertNotNull(dateTimeFieldArray32);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 9 + "'", int37 == 9);
    }

    @Test
    public void test1630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1630");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.MonthDay monthDay24 = monthDay21.minusMonths((int) (byte) 100);
        int int25 = monthDay24.getMonthOfYear();
        org.joda.time.MonthDay monthDay27 = monthDay24.withMonthOfYear(1);
        int int28 = monthDay24.getMonthOfYear();
        org.joda.time.MonthDay monthDay30 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MonthDay monthDay32 = monthDay30.withChronologyRetainFields(chronology31);
        org.joda.time.DateTimeFieldType dateTimeFieldType34 = monthDay30.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod35 = null;
        org.joda.time.MonthDay monthDay36 = monthDay30.plus(readablePeriod35);
        org.joda.time.MonthDay monthDay38 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.MonthDay monthDay40 = monthDay38.withChronologyRetainFields(chronology39);
        org.joda.time.MonthDay monthDay42 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.MonthDay monthDay44 = monthDay42.withChronologyRetainFields(chronology43);
        org.joda.time.DateTimeFieldType dateTimeFieldType46 = monthDay42.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property47 = monthDay40.property(dateTimeFieldType46);
        int int48 = property47.get();
        org.joda.time.MonthDay monthDay50 = property47.addWrapFieldToCopy((int) (short) 1);
        boolean boolean51 = monthDay30.isBefore((org.joda.time.ReadablePartial) monthDay50);
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.MonthDay monthDay53 = monthDay30.withChronologyRetainFields(chronology52);
        org.joda.time.Chronology chronology54 = monthDay53.getChronology();
        org.joda.time.MonthDay monthDay56 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod57 = null;
        org.joda.time.MonthDay monthDay59 = monthDay56.withPeriodAdded(readablePeriod57, 1);
        org.joda.time.MonthDay monthDay61 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.MonthDay monthDay63 = monthDay61.withChronologyRetainFields(chronology62);
        org.joda.time.DateTimeFieldType dateTimeFieldType65 = monthDay61.getFieldType((int) (byte) 1);
        int int66 = monthDay59.indexOf(dateTimeFieldType65);
        org.joda.time.Chronology chronology67 = null;
        org.joda.time.MonthDay monthDay68 = monthDay59.withChronologyRetainFields(chronology67);
        boolean boolean69 = monthDay53.isAfter((org.joda.time.ReadablePartial) monthDay59);
        org.joda.time.MonthDay monthDay71 = monthDay59.plusDays((int) (byte) 0);
        org.joda.time.MonthDay monthDay73 = monthDay71.minusDays(100);
        org.joda.time.DateTimeFieldType dateTimeFieldType75 = monthDay71.getFieldType(0);
        boolean boolean76 = monthDay24.equals((java.lang.Object) 0);
        java.lang.String str77 = monthDay24.toString();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 9 + "'", int25 == 9);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 9 + "'", int28 == 9);
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(dateTimeFieldType34);
        org.junit.Assert.assertNotNull(monthDay36);
        org.junit.Assert.assertNotNull(monthDay38);
        org.junit.Assert.assertNotNull(monthDay40);
        org.junit.Assert.assertNotNull(monthDay42);
        org.junit.Assert.assertNotNull(monthDay44);
        org.junit.Assert.assertNotNull(dateTimeFieldType46);
        org.junit.Assert.assertNotNull(property47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(monthDay50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(monthDay53);
        org.junit.Assert.assertNotNull(chronology54);
        org.junit.Assert.assertNotNull(monthDay56);
        org.junit.Assert.assertNotNull(monthDay59);
        org.junit.Assert.assertNotNull(monthDay61);
        org.junit.Assert.assertNotNull(monthDay63);
        org.junit.Assert.assertNotNull(dateTimeFieldType65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(monthDay68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(monthDay71);
        org.junit.Assert.assertNotNull(monthDay73);
        org.junit.Assert.assertNotNull(dateTimeFieldType75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "--09-02" + "'", str77, "--09-02");
    }

    @Test
    public void test1631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1631");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.DurationField durationField12 = property10.getDurationField();
        org.joda.time.MonthDay monthDay14 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MonthDay monthDay16 = monthDay14.withChronologyRetainFields(chronology15);
        org.joda.time.MonthDay monthDay18 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MonthDay monthDay20 = monthDay18.withChronologyRetainFields(chronology19);
        org.joda.time.DateTimeFieldType dateTimeFieldType22 = monthDay18.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property23 = monthDay16.property(dateTimeFieldType22);
        boolean boolean24 = property10.equals((java.lang.Object) monthDay16);
        org.joda.time.MonthDay monthDay25 = new org.joda.time.MonthDay((java.lang.Object) monthDay16);
        org.joda.time.MonthDay monthDay27 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod28 = null;
        org.joda.time.MonthDay monthDay30 = monthDay27.withPeriodAdded(readablePeriod28, 1);
        org.joda.time.MonthDay monthDay32 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.MonthDay monthDay34 = monthDay32.withChronologyRetainFields(chronology33);
        org.joda.time.DateTimeFieldType dateTimeFieldType36 = monthDay32.getFieldType((int) (byte) 1);
        int int37 = monthDay30.indexOf(dateTimeFieldType36);
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.MonthDay monthDay39 = monthDay30.withChronologyRetainFields(chronology38);
        boolean boolean40 = monthDay25.isBefore((org.joda.time.ReadablePartial) monthDay39);
        org.joda.time.MonthDay monthDay42 = org.joda.time.MonthDay.parse("");
        org.joda.time.MonthDay monthDay44 = monthDay42.minusDays((int) '#');
        org.joda.time.MonthDay monthDay46 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.MonthDay monthDay48 = monthDay46.withChronologyRetainFields(chronology47);
        org.joda.time.DateTimeFieldType dateTimeFieldType50 = monthDay46.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property51 = monthDay46.dayOfMonth();
        org.joda.time.Chronology chronology52 = monthDay46.getChronology();
        org.joda.time.Chronology chronology53 = monthDay46.getChronology();
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.DateTime dateTime55 = monthDay46.toDateTime(readableInstant54);
        org.joda.time.MonthDay monthDay57 = monthDay46.plusMonths((int) ' ');
        boolean boolean58 = monthDay42.isAfter((org.joda.time.ReadablePartial) monthDay57);
        org.joda.time.MonthDay monthDay60 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.MonthDay monthDay62 = monthDay60.withChronologyRetainFields(chronology61);
        org.joda.time.DateTimeFieldType dateTimeFieldType64 = monthDay60.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod65 = null;
        org.joda.time.MonthDay monthDay66 = monthDay60.plus(readablePeriod65);
        org.joda.time.MonthDay monthDay68 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology69 = null;
        org.joda.time.MonthDay monthDay70 = monthDay68.withChronologyRetainFields(chronology69);
        org.joda.time.MonthDay monthDay72 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology73 = null;
        org.joda.time.MonthDay monthDay74 = monthDay72.withChronologyRetainFields(chronology73);
        org.joda.time.DateTimeFieldType dateTimeFieldType76 = monthDay72.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property77 = monthDay70.property(dateTimeFieldType76);
        int int78 = property77.get();
        org.joda.time.MonthDay monthDay80 = property77.addWrapFieldToCopy((int) (short) 1);
        boolean boolean81 = monthDay60.isBefore((org.joda.time.ReadablePartial) monthDay80);
        org.joda.time.MonthDay monthDay83 = monthDay80.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay85 = monthDay83.plusMonths(1);
        int int86 = monthDay57.compareTo((org.joda.time.ReadablePartial) monthDay83);
        int int87 = monthDay25.compareTo((org.joda.time.ReadablePartial) monthDay83);
        int int88 = monthDay83.getMonthOfYear();
        org.joda.time.MonthDay monthDay90 = monthDay83.plusDays(100);
        org.joda.time.MonthDay.Property property91 = monthDay90.dayOfMonth();
        org.joda.time.MonthDay monthDay92 = property91.getMonthDay();
        int[] intArray93 = monthDay92.getValues();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(durationField12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(dateTimeFieldType22);
        org.junit.Assert.assertNotNull(property23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertNotNull(dateTimeFieldType36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(monthDay42);
        org.junit.Assert.assertNotNull(monthDay44);
        org.junit.Assert.assertNotNull(monthDay46);
        org.junit.Assert.assertNotNull(monthDay48);
        org.junit.Assert.assertNotNull(dateTimeFieldType50);
        org.junit.Assert.assertNotNull(property51);
        org.junit.Assert.assertNotNull(chronology52);
        org.junit.Assert.assertNotNull(chronology53);
        org.junit.Assert.assertNotNull(dateTime55);
        org.junit.Assert.assertNotNull(monthDay57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(monthDay60);
        org.junit.Assert.assertNotNull(monthDay62);
        org.junit.Assert.assertNotNull(dateTimeFieldType64);
        org.junit.Assert.assertNotNull(monthDay66);
        org.junit.Assert.assertNotNull(monthDay68);
        org.junit.Assert.assertNotNull(monthDay70);
        org.junit.Assert.assertNotNull(monthDay72);
        org.junit.Assert.assertNotNull(monthDay74);
        org.junit.Assert.assertNotNull(dateTimeFieldType76);
        org.junit.Assert.assertNotNull(property77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertNotNull(monthDay80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(monthDay83);
        org.junit.Assert.assertNotNull(monthDay85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 9 + "'", int88 == 9);
        org.junit.Assert.assertNotNull(monthDay90);
        org.junit.Assert.assertNotNull(property91);
        org.junit.Assert.assertNotNull(monthDay92);
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[10, 10]");
    }

    @Test
    public void test1632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1632");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property6 = monthDay1.dayOfMonth();
        org.joda.time.MonthDay monthDay8 = property6.addWrapFieldToCopy(1);
        org.joda.time.MonthDay monthDay10 = property6.addWrapFieldToCopy(0);
        org.joda.time.MonthDay monthDay12 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MonthDay monthDay14 = monthDay12.withChronologyRetainFields(chronology13);
        org.joda.time.MonthDay monthDay16 = monthDay12.minusMonths((int) (byte) -1);
        boolean boolean17 = property6.equals((java.lang.Object) monthDay16);
        int int18 = property6.get();
        org.joda.time.DurationField durationField19 = property6.getRangeDurationField();
        org.joda.time.MonthDay monthDay21 = property6.addWrapFieldToCopy((int) (byte) 1);
        int int22 = property6.get();
        org.joda.time.MonthDay monthDay24 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.MonthDay monthDay26 = monthDay24.withChronologyRetainFields(chronology25);
        org.joda.time.MonthDay monthDay28 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.MonthDay monthDay30 = monthDay28.withChronologyRetainFields(chronology29);
        org.joda.time.DateTimeFieldType dateTimeFieldType32 = monthDay28.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property33 = monthDay26.property(dateTimeFieldType32);
        int int34 = property33.get();
        org.joda.time.DurationField durationField35 = property33.getDurationField();
        org.joda.time.MonthDay monthDay37 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.MonthDay monthDay39 = monthDay37.withChronologyRetainFields(chronology38);
        org.joda.time.MonthDay monthDay41 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.MonthDay monthDay43 = monthDay41.withChronologyRetainFields(chronology42);
        org.joda.time.DateTimeFieldType dateTimeFieldType45 = monthDay41.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property46 = monthDay39.property(dateTimeFieldType45);
        boolean boolean47 = property33.equals((java.lang.Object) monthDay39);
        int int48 = property33.getMaximumValueOverall();
        java.lang.String str49 = property33.getAsShortText();
        java.lang.String str50 = property33.getName();
        boolean boolean51 = property6.equals((java.lang.Object) str50);
        org.joda.time.DurationField durationField52 = property6.getRangeDurationField();
        int int53 = property6.get();
        int int54 = property6.getMaximumValueOverall();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(property6);
        org.junit.Assert.assertNotNull(monthDay8);
        org.junit.Assert.assertNotNull(monthDay10);
        org.junit.Assert.assertNotNull(monthDay12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(durationField19);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertNotNull(dateTimeFieldType32);
        org.junit.Assert.assertNotNull(property33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(durationField35);
        org.junit.Assert.assertNotNull(monthDay37);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertNotNull(monthDay41);
        org.junit.Assert.assertNotNull(monthDay43);
        org.junit.Assert.assertNotNull(dateTimeFieldType45);
        org.junit.Assert.assertNotNull(property46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 31 + "'", int48 == 31);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "1" + "'", str49, "1");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "dayOfMonth" + "'", str50, "dayOfMonth");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(durationField52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 31 + "'", int54 == 31);
    }

    @Test
    public void test1633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1633");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property6 = monthDay1.dayOfMonth();
        org.joda.time.MonthDay monthDay8 = property6.addWrapFieldToCopy(1);
        org.joda.time.MonthDay monthDay10 = property6.addWrapFieldToCopy(0);
        java.lang.String str11 = property6.getName();
        int int12 = property6.getMinimumValue();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(property6);
        org.junit.Assert.assertNotNull(monthDay8);
        org.junit.Assert.assertNotNull(monthDay10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "dayOfMonth" + "'", str11, "dayOfMonth");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
    }

    @Test
    public void test1634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1634");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.MonthDay monthDay13 = property10.addWrapFieldToCopy((int) (short) 1);
        java.lang.String str14 = property10.getAsString();
        java.lang.String str15 = property10.getAsText();
        org.joda.time.DurationField durationField16 = property10.getRangeDurationField();
        org.joda.time.MonthDay monthDay18 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MonthDay monthDay20 = monthDay18.withChronologyRetainFields(chronology19);
        org.joda.time.DateTimeFieldType dateTimeFieldType22 = monthDay18.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod23 = null;
        org.joda.time.MonthDay monthDay24 = monthDay18.plus(readablePeriod23);
        org.joda.time.MonthDay monthDay26 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.MonthDay monthDay28 = monthDay26.withChronologyRetainFields(chronology27);
        org.joda.time.MonthDay monthDay30 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MonthDay monthDay32 = monthDay30.withChronologyRetainFields(chronology31);
        org.joda.time.DateTimeFieldType dateTimeFieldType34 = monthDay30.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property35 = monthDay28.property(dateTimeFieldType34);
        int int36 = property35.get();
        org.joda.time.MonthDay monthDay38 = property35.addWrapFieldToCopy((int) (short) 1);
        boolean boolean39 = monthDay18.isBefore((org.joda.time.ReadablePartial) monthDay38);
        org.joda.time.MonthDay.Property property40 = monthDay18.monthOfYear();
        org.joda.time.MonthDay monthDay42 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.MonthDay monthDay44 = monthDay42.withChronologyRetainFields(chronology43);
        org.joda.time.DateTimeFieldType dateTimeFieldType46 = monthDay42.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod47 = null;
        org.joda.time.MonthDay monthDay48 = monthDay42.plus(readablePeriod47);
        org.joda.time.MonthDay monthDay50 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.MonthDay monthDay52 = monthDay50.withChronologyRetainFields(chronology51);
        org.joda.time.MonthDay monthDay54 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.MonthDay monthDay56 = monthDay54.withChronologyRetainFields(chronology55);
        org.joda.time.DateTimeFieldType dateTimeFieldType58 = monthDay54.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property59 = monthDay52.property(dateTimeFieldType58);
        int int60 = property59.get();
        org.joda.time.MonthDay monthDay62 = property59.addWrapFieldToCopy((int) (short) 1);
        boolean boolean63 = monthDay42.isBefore((org.joda.time.ReadablePartial) monthDay62);
        boolean boolean64 = monthDay18.isAfter((org.joda.time.ReadablePartial) monthDay62);
        int[] intArray65 = monthDay62.getValues();
        boolean boolean66 = property10.equals((java.lang.Object) intArray65);
        java.lang.String str67 = property10.getAsShortText();
        int int68 = property10.getMaximumValueOverall();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1" + "'", str14, "1");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1" + "'", str15, "1");
        org.junit.Assert.assertNotNull(durationField16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(dateTimeFieldType22);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(dateTimeFieldType34);
        org.junit.Assert.assertNotNull(property35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(monthDay38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(property40);
        org.junit.Assert.assertNotNull(monthDay42);
        org.junit.Assert.assertNotNull(monthDay44);
        org.junit.Assert.assertNotNull(dateTimeFieldType46);
        org.junit.Assert.assertNotNull(monthDay48);
        org.junit.Assert.assertNotNull(monthDay50);
        org.junit.Assert.assertNotNull(monthDay52);
        org.junit.Assert.assertNotNull(monthDay54);
        org.junit.Assert.assertNotNull(monthDay56);
        org.junit.Assert.assertNotNull(dateTimeFieldType58);
        org.junit.Assert.assertNotNull(property59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(monthDay62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[1, 2]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "1" + "'", str67, "1");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 31 + "'", int68 == 31);
    }

    @Test
    public void test1635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1635");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.MonthDay monthDay13 = property10.addWrapFieldToCopy((int) (short) 1);
        org.joda.time.MonthDay monthDay15 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MonthDay monthDay17 = monthDay15.withChronologyRetainFields(chronology16);
        org.joda.time.DateTimeFieldType dateTimeFieldType19 = monthDay15.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod20 = null;
        org.joda.time.MonthDay monthDay21 = monthDay15.plus(readablePeriod20);
        org.joda.time.MonthDay monthDay23 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MonthDay monthDay25 = monthDay23.withChronologyRetainFields(chronology24);
        org.joda.time.MonthDay monthDay27 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.MonthDay monthDay29 = monthDay27.withChronologyRetainFields(chronology28);
        org.joda.time.DateTimeFieldType dateTimeFieldType31 = monthDay27.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property32 = monthDay25.property(dateTimeFieldType31);
        int int33 = property32.get();
        org.joda.time.MonthDay monthDay35 = property32.addWrapFieldToCopy((int) (short) 1);
        boolean boolean36 = monthDay15.isBefore((org.joda.time.ReadablePartial) monthDay35);
        org.joda.time.MonthDay monthDay38 = monthDay35.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay40 = monthDay38.plusMonths(1);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.MonthDay monthDay42 = monthDay38.minus(readablePeriod41);
        int int43 = monthDay13.compareTo((org.joda.time.ReadablePartial) monthDay38);
        org.joda.time.MonthDay monthDay45 = monthDay38.withMonthOfYear((int) (short) 1);
        java.util.Locale locale47 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str48 = monthDay38.toString("Property[monthOfYear]", locale47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal pattern component: P");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(monthDay17);
        org.junit.Assert.assertNotNull(dateTimeFieldType19);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertNotNull(monthDay23);
        org.junit.Assert.assertNotNull(monthDay25);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertNotNull(monthDay29);
        org.junit.Assert.assertNotNull(dateTimeFieldType31);
        org.junit.Assert.assertNotNull(property32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(monthDay38);
        org.junit.Assert.assertNotNull(monthDay40);
        org.junit.Assert.assertNotNull(monthDay42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(monthDay45);
    }

    @Test
    public void test1636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1636");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.MonthDay monthDay13 = property10.addWrapFieldToCopy((int) (short) 1);
        java.lang.String str14 = property10.getAsString();
        java.lang.String str15 = property10.getAsText();
        org.joda.time.DurationField durationField16 = property10.getRangeDurationField();
        int int17 = property10.get();
        org.joda.time.MonthDay monthDay19 = property10.setCopy(9);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1" + "'", str14, "1");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1" + "'", str15, "1");
        org.junit.Assert.assertNotNull(durationField16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(monthDay19);
    }

    @Test
    public void test1637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1637");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.MonthDay.Property property23 = monthDay1.monthOfYear();
        org.joda.time.MonthDay monthDay25 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.MonthDay monthDay27 = monthDay25.withChronologyRetainFields(chronology26);
        org.joda.time.DateTimeFieldType dateTimeFieldType29 = monthDay25.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod30 = null;
        org.joda.time.MonthDay monthDay31 = monthDay25.plus(readablePeriod30);
        org.joda.time.MonthDay monthDay33 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.MonthDay monthDay35 = monthDay33.withChronologyRetainFields(chronology34);
        org.joda.time.MonthDay monthDay37 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.MonthDay monthDay39 = monthDay37.withChronologyRetainFields(chronology38);
        org.joda.time.DateTimeFieldType dateTimeFieldType41 = monthDay37.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property42 = monthDay35.property(dateTimeFieldType41);
        int int43 = property42.get();
        org.joda.time.MonthDay monthDay45 = property42.addWrapFieldToCopy((int) (short) 1);
        boolean boolean46 = monthDay25.isBefore((org.joda.time.ReadablePartial) monthDay45);
        boolean boolean47 = monthDay1.isAfter((org.joda.time.ReadablePartial) monthDay45);
        int[] intArray48 = monthDay45.getValues();
        org.joda.time.ReadablePeriod readablePeriod49 = null;
        org.joda.time.MonthDay monthDay50 = monthDay45.plus(readablePeriod49);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MonthDay monthDay52 = monthDay50.withMonthOfYear((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type org.joda.time.IllegalFieldValueException; message: Value -1 for monthOfYear must be in the range [1,12]");
        } catch (org.joda.time.IllegalFieldValueException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(property23);
        org.junit.Assert.assertNotNull(monthDay25);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertNotNull(dateTimeFieldType29);
        org.junit.Assert.assertNotNull(monthDay31);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(monthDay37);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertNotNull(dateTimeFieldType41);
        org.junit.Assert.assertNotNull(property42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(monthDay45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[1, 2]");
        org.junit.Assert.assertNotNull(monthDay50);
    }

    @Test
    public void test1638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1638");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.MonthDay monthDay24 = monthDay21.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay26 = monthDay21.minusDays(31);
        org.joda.time.DateTimeFieldType[] dateTimeFieldTypeArray27 = monthDay21.getFieldTypes();
        java.util.Locale locale29 = null;
        java.lang.String str30 = monthDay21.toString("--01-11", locale29);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(dateTimeFieldTypeArray27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "--01-11" + "'", str30, "--01-11");
    }

    @Test
    @Ignore
  public void test1639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1639");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property6 = monthDay1.dayOfMonth();
        org.joda.time.Chronology chronology7 = monthDay1.getChronology();
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        boolean boolean19 = monthDay1.isSupported(dateTimeFieldType17);
        org.joda.time.MonthDay monthDay21 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.MonthDay monthDay23 = monthDay21.withChronologyRetainFields(chronology22);
        org.joda.time.MonthDay monthDay25 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.MonthDay monthDay27 = monthDay25.withChronologyRetainFields(chronology26);
        org.joda.time.DateTimeFieldType dateTimeFieldType29 = monthDay25.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property30 = monthDay23.property(dateTimeFieldType29);
        int int31 = property30.get();
        org.joda.time.MonthDay monthDay33 = property30.addWrapFieldToCopy((int) (short) 1);
        java.lang.String str34 = property30.getAsString();
        java.lang.String str35 = property30.getAsText();
        org.joda.time.MonthDay monthDay37 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.MonthDay monthDay39 = monthDay37.withChronologyRetainFields(chronology38);
        org.joda.time.DateTimeFieldType dateTimeFieldType41 = monthDay37.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property42 = monthDay37.dayOfMonth();
        org.joda.time.Chronology chronology43 = monthDay37.getChronology();
        org.joda.time.Chronology chronology44 = monthDay37.getChronology();
        org.joda.time.MonthDay monthDay45 = org.joda.time.MonthDay.now(chronology44);
        org.joda.time.MonthDay monthDay46 = org.joda.time.MonthDay.now(chronology44);
        boolean boolean47 = property30.equals((java.lang.Object) monthDay46);
        int[] intArray48 = monthDay46.getValues();
        boolean boolean49 = monthDay1.isEqual((org.joda.time.ReadablePartial) monthDay46);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(property6);
        org.junit.Assert.assertNotNull(chronology7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertNotNull(monthDay23);
        org.junit.Assert.assertNotNull(monthDay25);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertNotNull(dateTimeFieldType29);
        org.junit.Assert.assertNotNull(property30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1" + "'", str34, "1");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1" + "'", str35, "1");
        org.junit.Assert.assertNotNull(monthDay37);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertNotNull(dateTimeFieldType41);
        org.junit.Assert.assertNotNull(property42);
        org.junit.Assert.assertNotNull(chronology43);
        org.junit.Assert.assertNotNull(chronology44);
        org.junit.Assert.assertNotNull(monthDay45);
        org.junit.Assert.assertNotNull(monthDay46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[11, 25]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test1640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1640");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.MonthDay monthDay13 = property10.addWrapFieldToCopy((int) (short) 1);
        java.lang.String str14 = property10.getAsString();
        java.lang.String str15 = property10.getAsText();
        org.joda.time.DurationField durationField16 = property10.getRangeDurationField();
        java.util.Locale locale17 = null;
        int int18 = property10.getMaximumShortTextLength(locale17);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1" + "'", str14, "1");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1" + "'", str15, "1");
        org.junit.Assert.assertNotNull(durationField16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
    }

    @Test
    public void test1641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1641");
        org.joda.time.MonthDay monthDay4 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.MonthDay monthDay6 = monthDay4.withChronologyRetainFields(chronology5);
        org.joda.time.MonthDay monthDay8 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.MonthDay monthDay10 = monthDay8.withChronologyRetainFields(chronology9);
        org.joda.time.DateTimeFieldType dateTimeFieldType12 = monthDay8.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property13 = monthDay6.property(dateTimeFieldType12);
        org.joda.time.MonthDay.Property property14 = monthDay6.monthOfYear();
        int int15 = monthDay6.getDayOfMonth();
        org.joda.time.MonthDay.Property property16 = monthDay6.dayOfMonth();
        int int17 = monthDay6.getDayOfMonth();
        org.joda.time.MonthDay monthDay19 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MonthDay monthDay21 = monthDay19.withChronologyRetainFields(chronology20);
        org.joda.time.DateTimeFieldType dateTimeFieldType23 = monthDay19.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property24 = monthDay19.dayOfMonth();
        org.joda.time.Chronology chronology25 = monthDay19.getChronology();
        org.joda.time.MonthDay monthDay26 = monthDay6.withChronologyRetainFields(chronology25);
        org.joda.time.MonthDay monthDay27 = new org.joda.time.MonthDay(chronology25);
        org.joda.time.MonthDay monthDay28 = new org.joda.time.MonthDay((long) '#', chronology25);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MonthDay monthDay29 = new org.joda.time.MonthDay(3, (int) (short) 100, chronology25);
            org.junit.Assert.fail("Expected exception of type org.joda.time.IllegalFieldValueException; message: Value 100 for dayOfMonth must not be larger than 31");
        } catch (org.joda.time.IllegalFieldValueException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(monthDay4);
        org.junit.Assert.assertNotNull(monthDay6);
        org.junit.Assert.assertNotNull(monthDay8);
        org.junit.Assert.assertNotNull(monthDay10);
        org.junit.Assert.assertNotNull(dateTimeFieldType12);
        org.junit.Assert.assertNotNull(property13);
        org.junit.Assert.assertNotNull(property14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(property16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(monthDay19);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertNotNull(dateTimeFieldType23);
        org.junit.Assert.assertNotNull(property24);
        org.junit.Assert.assertNotNull(chronology25);
        org.junit.Assert.assertNotNull(monthDay26);
    }

    @Test
    public void test1642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1642");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.DurationField durationField12 = property10.getDurationField();
        java.util.Locale locale13 = null;
        int int14 = property10.getMaximumTextLength(locale13);
        java.lang.String str15 = property10.getAsText();
        java.util.Locale locale16 = null;
        java.lang.String str17 = property10.getAsText(locale16);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(durationField12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1" + "'", str15, "1");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1" + "'", str17, "1");
    }

    @Test
    public void test1643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1643");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.MonthDay monthDay24 = monthDay21.minusMonths((int) (byte) -1);
        org.joda.time.MonthDay.Property property25 = monthDay24.monthOfYear();
        int int26 = property25.getMaximumValue();
        int int27 = property25.getMinimumValue();
        java.lang.String str28 = property25.getName();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(property25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 12 + "'", int26 == 12);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "monthOfYear" + "'", str28, "monthOfYear");
    }

    @Test
    public void test1644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1644");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod2 = null;
        org.joda.time.MonthDay monthDay4 = monthDay1.withPeriodAdded(readablePeriod2, 1);
        org.joda.time.MonthDay monthDay6 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.MonthDay monthDay8 = monthDay6.withChronologyRetainFields(chronology7);
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = monthDay6.getFieldType((int) (byte) 1);
        int int11 = monthDay4.indexOf(dateTimeFieldType10);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MonthDay monthDay13 = monthDay4.withChronologyRetainFields(chronology12);
        org.joda.time.MonthDay monthDay15 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MonthDay monthDay17 = monthDay15.withChronologyRetainFields(chronology16);
        org.joda.time.DateTimeFieldType dateTimeFieldType19 = monthDay15.getFieldType((int) (byte) 1);
        int int20 = monthDay4.get(dateTimeFieldType19);
        org.joda.time.DateTimeFieldType dateTimeFieldType21 = null;
        boolean boolean22 = monthDay4.isSupported(dateTimeFieldType21);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DateTimeFieldType dateTimeFieldType24 = monthDay4.getFieldType(10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay4);
        org.junit.Assert.assertNotNull(monthDay6);
        org.junit.Assert.assertNotNull(monthDay8);
        org.junit.Assert.assertNotNull(dateTimeFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(monthDay17);
        org.junit.Assert.assertNotNull(dateTimeFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test1645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1645");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.MonthDay monthDay24 = monthDay21.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay26 = monthDay24.minusDays(31);
        org.joda.time.MonthDay monthDay28 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod29 = null;
        org.joda.time.MonthDay monthDay31 = monthDay28.withPeriodAdded(readablePeriod29, 1);
        org.joda.time.MonthDay monthDay33 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.MonthDay monthDay35 = monthDay33.withChronologyRetainFields(chronology34);
        org.joda.time.DateTimeFieldType dateTimeFieldType37 = monthDay33.getFieldType((int) (byte) 1);
        int int38 = monthDay31.indexOf(dateTimeFieldType37);
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.MonthDay monthDay40 = monthDay31.withChronologyRetainFields(chronology39);
        org.joda.time.MonthDay monthDay42 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.MonthDay monthDay44 = monthDay42.withChronologyRetainFields(chronology43);
        org.joda.time.DateTimeFieldType dateTimeFieldType46 = monthDay42.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod47 = null;
        org.joda.time.MonthDay monthDay48 = monthDay42.plus(readablePeriod47);
        org.joda.time.MonthDay monthDay50 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.MonthDay monthDay52 = monthDay50.withChronologyRetainFields(chronology51);
        org.joda.time.MonthDay monthDay54 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.MonthDay monthDay56 = monthDay54.withChronologyRetainFields(chronology55);
        org.joda.time.DateTimeFieldType dateTimeFieldType58 = monthDay54.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property59 = monthDay52.property(dateTimeFieldType58);
        int int60 = property59.get();
        org.joda.time.MonthDay monthDay62 = property59.addWrapFieldToCopy((int) (short) 1);
        boolean boolean63 = monthDay42.isBefore((org.joda.time.ReadablePartial) monthDay62);
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.MonthDay monthDay65 = monthDay42.withChronologyRetainFields(chronology64);
        org.joda.time.Chronology chronology66 = monthDay65.getChronology();
        org.joda.time.MonthDay monthDay67 = monthDay40.withChronologyRetainFields(chronology66);
        org.joda.time.MonthDay monthDay68 = monthDay26.withChronologyRetainFields(chronology66);
        org.joda.time.Chronology chronology69 = monthDay68.getChronology();
        org.joda.time.MonthDay monthDay70 = org.joda.time.MonthDay.now(chronology69);
        org.joda.time.MonthDay monthDay71 = new org.joda.time.MonthDay(chronology69);
        org.joda.time.MonthDay monthDay72 = new org.joda.time.MonthDay(chronology69);
        org.joda.time.MonthDay monthDay73 = org.joda.time.MonthDay.now(chronology69);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertNotNull(monthDay31);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(dateTimeFieldType37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(monthDay40);
        org.junit.Assert.assertNotNull(monthDay42);
        org.junit.Assert.assertNotNull(monthDay44);
        org.junit.Assert.assertNotNull(dateTimeFieldType46);
        org.junit.Assert.assertNotNull(monthDay48);
        org.junit.Assert.assertNotNull(monthDay50);
        org.junit.Assert.assertNotNull(monthDay52);
        org.junit.Assert.assertNotNull(monthDay54);
        org.junit.Assert.assertNotNull(monthDay56);
        org.junit.Assert.assertNotNull(dateTimeFieldType58);
        org.junit.Assert.assertNotNull(property59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(monthDay62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(monthDay65);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(monthDay67);
        org.junit.Assert.assertNotNull(monthDay68);
        org.junit.Assert.assertNotNull(chronology69);
        org.junit.Assert.assertNotNull(monthDay70);
        org.junit.Assert.assertNotNull(monthDay73);
    }

    @Test
    @Ignore
  public void test1646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1646");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.MonthDay monthDay13 = property10.addWrapFieldToCopy((int) (short) 1);
        org.joda.time.MonthDay.Property property14 = monthDay13.dayOfMonth();
        int int15 = property14.getMaximumValueOverall();
        java.util.Locale locale17 = null;
        org.joda.time.MonthDay monthDay18 = property14.setCopy("1", locale17);
        org.joda.time.MonthDay monthDay19 = new org.joda.time.MonthDay();
        boolean boolean20 = property14.equals((java.lang.Object) monthDay19);
        org.joda.time.MonthDay monthDay22 = org.joda.time.MonthDay.parse("");
        org.joda.time.MonthDay monthDay24 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.MonthDay monthDay26 = monthDay24.withChronologyRetainFields(chronology25);
        org.joda.time.DateTimeFieldType dateTimeFieldType28 = monthDay24.getFieldType((int) (byte) 1);
        boolean boolean29 = monthDay22.isSupported(dateTimeFieldType28);
        org.joda.time.MonthDay monthDay31 = org.joda.time.MonthDay.parse("");
        org.joda.time.MonthDay monthDay33 = monthDay31.minusDays((int) '#');
        org.joda.time.MonthDay monthDay35 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.MonthDay monthDay37 = monthDay35.withChronologyRetainFields(chronology36);
        org.joda.time.DateTimeFieldType dateTimeFieldType39 = monthDay35.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property40 = monthDay35.dayOfMonth();
        org.joda.time.Chronology chronology41 = monthDay35.getChronology();
        org.joda.time.Chronology chronology42 = monthDay35.getChronology();
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.DateTime dateTime44 = monthDay35.toDateTime(readableInstant43);
        org.joda.time.MonthDay monthDay46 = monthDay35.plusMonths((int) ' ');
        boolean boolean47 = monthDay31.isAfter((org.joda.time.ReadablePartial) monthDay46);
        boolean boolean48 = monthDay22.isBefore((org.joda.time.ReadablePartial) monthDay46);
        org.joda.time.Chronology chronology49 = monthDay46.getChronology();
        org.joda.time.MonthDay monthDay50 = new org.joda.time.MonthDay(chronology49);
        org.joda.time.MonthDay monthDay52 = org.joda.time.MonthDay.parse("");
        org.joda.time.MonthDay monthDay54 = monthDay52.minusDays((int) '#');
        org.joda.time.MonthDay monthDay56 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.MonthDay monthDay58 = monthDay56.withChronologyRetainFields(chronology57);
        org.joda.time.DateTimeFieldType dateTimeFieldType60 = monthDay56.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property61 = monthDay56.dayOfMonth();
        org.joda.time.Chronology chronology62 = monthDay56.getChronology();
        org.joda.time.Chronology chronology63 = monthDay56.getChronology();
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.DateTime dateTime65 = monthDay56.toDateTime(readableInstant64);
        org.joda.time.MonthDay monthDay67 = monthDay56.plusMonths((int) ' ');
        boolean boolean68 = monthDay52.isAfter((org.joda.time.ReadablePartial) monthDay67);
        org.joda.time.MonthDay monthDay70 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology71 = null;
        org.joda.time.MonthDay monthDay72 = monthDay70.withChronologyRetainFields(chronology71);
        org.joda.time.DateTimeFieldType dateTimeFieldType74 = monthDay70.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property75 = monthDay70.dayOfMonth();
        org.joda.time.MonthDay monthDay77 = property75.addWrapFieldToCopy(1);
        org.joda.time.MonthDay monthDay79 = property75.addWrapFieldToCopy(0);
        org.joda.time.MonthDay monthDay81 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology82 = null;
        org.joda.time.MonthDay monthDay83 = monthDay81.withChronologyRetainFields(chronology82);
        org.joda.time.MonthDay monthDay85 = monthDay81.minusMonths((int) (byte) -1);
        boolean boolean86 = property75.equals((java.lang.Object) monthDay85);
        int int87 = property75.getMaximumValue();
        org.joda.time.DateTimeFieldType dateTimeFieldType88 = property75.getFieldType();
        org.joda.time.MonthDay.Property property89 = monthDay67.property(dateTimeFieldType88);
        boolean boolean90 = monthDay50.isSupported(dateTimeFieldType88);
        org.joda.time.MonthDay.Property property91 = monthDay19.property(dateTimeFieldType88);
        int[] intArray92 = monthDay19.getValues();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(property14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 31 + "'", int15 == 31);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(dateTimeFieldType28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(monthDay31);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(monthDay37);
        org.junit.Assert.assertNotNull(dateTimeFieldType39);
        org.junit.Assert.assertNotNull(property40);
        org.junit.Assert.assertNotNull(chronology41);
        org.junit.Assert.assertNotNull(chronology42);
        org.junit.Assert.assertNotNull(dateTime44);
        org.junit.Assert.assertNotNull(monthDay46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(chronology49);
        org.junit.Assert.assertNotNull(monthDay52);
        org.junit.Assert.assertNotNull(monthDay54);
        org.junit.Assert.assertNotNull(monthDay56);
        org.junit.Assert.assertNotNull(monthDay58);
        org.junit.Assert.assertNotNull(dateTimeFieldType60);
        org.junit.Assert.assertNotNull(property61);
        org.junit.Assert.assertNotNull(chronology62);
        org.junit.Assert.assertNotNull(chronology63);
        org.junit.Assert.assertNotNull(dateTime65);
        org.junit.Assert.assertNotNull(monthDay67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(monthDay70);
        org.junit.Assert.assertNotNull(monthDay72);
        org.junit.Assert.assertNotNull(dateTimeFieldType74);
        org.junit.Assert.assertNotNull(property75);
        org.junit.Assert.assertNotNull(monthDay77);
        org.junit.Assert.assertNotNull(monthDay79);
        org.junit.Assert.assertNotNull(monthDay81);
        org.junit.Assert.assertNotNull(monthDay83);
        org.junit.Assert.assertNotNull(monthDay85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 31 + "'", int87 == 31);
        org.junit.Assert.assertNotNull(dateTimeFieldType88);
        org.junit.Assert.assertNotNull(property89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(property91);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[11, 25]");
    }

    @Test
    public void test1647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1647");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.MonthDay monthDay13 = property10.addToCopy((int) (short) 0);
        int int14 = property10.getMinimumValueOverall();
        java.lang.String str15 = property10.getName();
        java.lang.String str16 = property10.getAsShortText();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "dayOfMonth" + "'", str15, "dayOfMonth");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1" + "'", str16, "1");
    }

    @Test
    public void test1648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1648");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        org.joda.time.MonthDay.Property property11 = monthDay3.monthOfYear();
        int int12 = monthDay3.getDayOfMonth();
        org.joda.time.MonthDay.Property property13 = monthDay3.dayOfMonth();
        int int14 = monthDay3.getDayOfMonth();
        org.joda.time.ReadablePeriod readablePeriod15 = null;
        org.joda.time.MonthDay monthDay16 = monthDay3.plus(readablePeriod15);
        org.joda.time.MonthDay monthDay18 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MonthDay monthDay20 = monthDay18.withChronologyRetainFields(chronology19);
        org.joda.time.MonthDay monthDay22 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MonthDay monthDay24 = monthDay22.withChronologyRetainFields(chronology23);
        org.joda.time.DateTimeFieldType dateTimeFieldType26 = monthDay22.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property27 = monthDay20.property(dateTimeFieldType26);
        org.joda.time.MonthDay.Property property28 = monthDay20.monthOfYear();
        int int29 = monthDay20.getDayOfMonth();
        org.joda.time.MonthDay.Property property30 = monthDay20.dayOfMonth();
        int int31 = monthDay20.getDayOfMonth();
        org.joda.time.MonthDay monthDay33 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.MonthDay monthDay35 = monthDay33.withChronologyRetainFields(chronology34);
        org.joda.time.DateTimeFieldType dateTimeFieldType37 = monthDay33.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property38 = monthDay33.dayOfMonth();
        org.joda.time.Chronology chronology39 = monthDay33.getChronology();
        org.joda.time.MonthDay monthDay40 = monthDay20.withChronologyRetainFields(chronology39);
        org.joda.time.MonthDay monthDay41 = monthDay16.withChronologyRetainFields(chronology39);
        org.joda.time.MonthDay monthDay43 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.MonthDay monthDay45 = monthDay43.withChronologyRetainFields(chronology44);
        org.joda.time.MonthDay monthDay47 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.MonthDay monthDay49 = monthDay47.withChronologyRetainFields(chronology48);
        org.joda.time.DateTimeFieldType dateTimeFieldType51 = monthDay47.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property52 = monthDay45.property(dateTimeFieldType51);
        org.joda.time.MonthDay.Property property53 = monthDay45.monthOfYear();
        int int54 = monthDay45.getDayOfMonth();
        org.joda.time.MonthDay.Property property55 = monthDay45.dayOfMonth();
        int int56 = monthDay45.getDayOfMonth();
        org.joda.time.MonthDay monthDay58 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology59 = null;
        org.joda.time.MonthDay monthDay60 = monthDay58.withChronologyRetainFields(chronology59);
        org.joda.time.DateTimeFieldType dateTimeFieldType62 = monthDay58.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property63 = monthDay58.dayOfMonth();
        org.joda.time.Chronology chronology64 = monthDay58.getChronology();
        org.joda.time.MonthDay monthDay65 = monthDay45.withChronologyRetainFields(chronology64);
        org.joda.time.MonthDay monthDay66 = new org.joda.time.MonthDay((java.lang.Object) monthDay16, chronology64);
        org.joda.time.MonthDay monthDay68 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology69 = null;
        org.joda.time.MonthDay monthDay70 = monthDay68.withChronologyRetainFields(chronology69);
        org.joda.time.MonthDay monthDay72 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology73 = null;
        org.joda.time.MonthDay monthDay74 = monthDay72.withChronologyRetainFields(chronology73);
        org.joda.time.DateTimeFieldType dateTimeFieldType76 = monthDay72.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property77 = monthDay72.dayOfMonth();
        org.joda.time.Chronology chronology78 = monthDay72.getChronology();
        org.joda.time.MonthDay monthDay79 = org.joda.time.MonthDay.now(chronology78);
        org.joda.time.MonthDay monthDay80 = monthDay70.withChronologyRetainFields(chronology78);
        org.joda.time.MonthDay monthDay81 = monthDay16.withChronologyRetainFields(chronology78);
        org.joda.time.MonthDay monthDay82 = org.joda.time.MonthDay.now(chronology78);
        org.joda.time.MonthDay monthDay83 = org.joda.time.MonthDay.now(chronology78);
        org.joda.time.MonthDay monthDay84 = org.joda.time.MonthDay.now(chronology78);
        org.joda.time.MonthDay monthDay85 = org.joda.time.MonthDay.now(chronology78);
        java.util.Locale locale87 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str88 = monthDay85.toString("September", locale87);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal pattern component: p");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertNotNull(property11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(property13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(dateTimeFieldType26);
        org.junit.Assert.assertNotNull(property27);
        org.junit.Assert.assertNotNull(property28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(property30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(dateTimeFieldType37);
        org.junit.Assert.assertNotNull(property38);
        org.junit.Assert.assertNotNull(chronology39);
        org.junit.Assert.assertNotNull(monthDay40);
        org.junit.Assert.assertNotNull(monthDay41);
        org.junit.Assert.assertNotNull(monthDay43);
        org.junit.Assert.assertNotNull(monthDay45);
        org.junit.Assert.assertNotNull(monthDay47);
        org.junit.Assert.assertNotNull(monthDay49);
        org.junit.Assert.assertNotNull(dateTimeFieldType51);
        org.junit.Assert.assertNotNull(property52);
        org.junit.Assert.assertNotNull(property53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(property55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(monthDay58);
        org.junit.Assert.assertNotNull(monthDay60);
        org.junit.Assert.assertNotNull(dateTimeFieldType62);
        org.junit.Assert.assertNotNull(property63);
        org.junit.Assert.assertNotNull(chronology64);
        org.junit.Assert.assertNotNull(monthDay65);
        org.junit.Assert.assertNotNull(monthDay68);
        org.junit.Assert.assertNotNull(monthDay70);
        org.junit.Assert.assertNotNull(monthDay72);
        org.junit.Assert.assertNotNull(monthDay74);
        org.junit.Assert.assertNotNull(dateTimeFieldType76);
        org.junit.Assert.assertNotNull(property77);
        org.junit.Assert.assertNotNull(chronology78);
        org.junit.Assert.assertNotNull(monthDay79);
        org.junit.Assert.assertNotNull(monthDay80);
        org.junit.Assert.assertNotNull(monthDay81);
        org.junit.Assert.assertNotNull(monthDay82);
        org.junit.Assert.assertNotNull(monthDay83);
        org.junit.Assert.assertNotNull(monthDay84);
        org.junit.Assert.assertNotNull(monthDay85);
    }

    @Test
    public void test1649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1649");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        java.util.Locale locale11 = null;
        int int12 = property10.getMaximumTextLength(locale11);
        java.util.Locale locale13 = null;
        int int14 = property10.getMaximumShortTextLength(locale13);
        org.joda.time.DateTimeField dateTimeField15 = property10.getField();
        int int16 = property10.getMaximumValue();
        org.joda.time.MonthDay monthDay18 = property10.addToCopy((int) ' ');
        java.lang.String str19 = property10.toString();
        int int20 = property10.get();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(dateTimeField15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 31 + "'", int16 == 31);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Property[dayOfMonth]" + "'", str19, "Property[dayOfMonth]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
    }

    @Test
    public void test1650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1650");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        java.util.Locale locale11 = null;
        int int12 = property10.getMaximumTextLength(locale11);
        java.util.Locale locale13 = null;
        int int14 = property10.getMaximumShortTextLength(locale13);
        org.joda.time.DateTimeField dateTimeField15 = property10.getField();
        java.lang.String str16 = property10.getAsShortText();
        java.util.Locale locale17 = null;
        java.lang.String str18 = property10.getAsShortText(locale17);
        org.joda.time.MonthDay monthDay20 = property10.addToCopy((int) 'a');
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(dateTimeField15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1" + "'", str16, "1");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1" + "'", str18, "1");
        org.junit.Assert.assertNotNull(monthDay20);
    }

    @Test
    @Ignore
  public void test1651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1651");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property6 = monthDay1.dayOfMonth();
        org.joda.time.MonthDay monthDay8 = property6.addWrapFieldToCopy(1);
        org.joda.time.MonthDay monthDay10 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.MonthDay monthDay12 = monthDay10.withChronologyRetainFields(chronology11);
        org.joda.time.DateTimeFieldType dateTimeFieldType14 = monthDay10.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod15 = null;
        org.joda.time.MonthDay monthDay16 = monthDay10.plus(readablePeriod15);
        org.joda.time.MonthDay monthDay18 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MonthDay monthDay20 = monthDay18.withChronologyRetainFields(chronology19);
        org.joda.time.MonthDay monthDay22 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MonthDay monthDay24 = monthDay22.withChronologyRetainFields(chronology23);
        org.joda.time.DateTimeFieldType dateTimeFieldType26 = monthDay22.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property27 = monthDay20.property(dateTimeFieldType26);
        int int28 = property27.get();
        org.joda.time.MonthDay monthDay30 = property27.addWrapFieldToCopy((int) (short) 1);
        boolean boolean31 = monthDay10.isBefore((org.joda.time.ReadablePartial) monthDay30);
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.MonthDay monthDay33 = monthDay10.withChronologyRetainFields(chronology32);
        org.joda.time.Chronology chronology34 = monthDay33.getChronology();
        org.joda.time.MonthDay monthDay35 = org.joda.time.MonthDay.now(chronology34);
        org.joda.time.MonthDay monthDay36 = new org.joda.time.MonthDay((java.lang.Object) monthDay8, chronology34);
        org.joda.time.MonthDay monthDay37 = org.joda.time.MonthDay.now(chronology34);
        org.joda.time.MonthDay monthDay39 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.MonthDay monthDay41 = monthDay39.withChronologyRetainFields(chronology40);
        org.joda.time.MonthDay monthDay43 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.MonthDay monthDay45 = monthDay43.withChronologyRetainFields(chronology44);
        org.joda.time.DateTimeFieldType dateTimeFieldType47 = monthDay43.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property48 = monthDay41.property(dateTimeFieldType47);
        int int49 = property48.get();
        org.joda.time.MonthDay monthDay51 = property48.addWrapFieldToCopy((int) (short) 1);
        org.joda.time.MonthDay.Property property52 = monthDay51.dayOfMonth();
        int int53 = property52.getMaximumValueOverall();
        org.joda.time.MonthDay monthDay55 = property52.addWrapFieldToCopy((int) (short) 10);
        int int56 = property52.getMinimumValueOverall();
        boolean boolean57 = monthDay37.equals((java.lang.Object) property52);
        int[] intArray58 = monthDay37.getValues();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(property6);
        org.junit.Assert.assertNotNull(monthDay8);
        org.junit.Assert.assertNotNull(monthDay10);
        org.junit.Assert.assertNotNull(monthDay12);
        org.junit.Assert.assertNotNull(dateTimeFieldType14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(dateTimeFieldType26);
        org.junit.Assert.assertNotNull(property27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(chronology34);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(monthDay37);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertNotNull(monthDay41);
        org.junit.Assert.assertNotNull(monthDay43);
        org.junit.Assert.assertNotNull(monthDay45);
        org.junit.Assert.assertNotNull(dateTimeFieldType47);
        org.junit.Assert.assertNotNull(property48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(monthDay51);
        org.junit.Assert.assertNotNull(property52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 31 + "'", int53 == 31);
        org.junit.Assert.assertNotNull(monthDay55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[11, 25]");
    }

    @Test
    public void test1652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1652");
        org.joda.time.MonthDay monthDay3 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MonthDay monthDay5 = monthDay3.withChronologyRetainFields(chronology4);
        org.joda.time.DateTimeFieldType dateTimeFieldType7 = monthDay3.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property8 = monthDay3.dayOfMonth();
        org.joda.time.Chronology chronology9 = monthDay3.getChronology();
        org.joda.time.MonthDay monthDay10 = new org.joda.time.MonthDay((-1L), chronology9);
        org.joda.time.MonthDay monthDay11 = new org.joda.time.MonthDay(chronology9);
        org.joda.time.MonthDay monthDay12 = new org.joda.time.MonthDay((long) 8, chronology9);
        org.joda.time.Chronology chronology13 = monthDay12.getChronology();
        org.joda.time.MonthDay monthDay14 = org.joda.time.MonthDay.now(chronology13);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(dateTimeFieldType7);
        org.junit.Assert.assertNotNull(property8);
        org.junit.Assert.assertNotNull(chronology9);
        org.junit.Assert.assertNotNull(chronology13);
        org.junit.Assert.assertNotNull(monthDay14);
    }

    @Test
    public void test1653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1653");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.MonthDay monthDay3 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MonthDay monthDay5 = monthDay3.withChronologyRetainFields(chronology4);
        org.joda.time.DateTimeFieldType dateTimeFieldType7 = monthDay3.getFieldType((int) (byte) 1);
        boolean boolean8 = monthDay1.isSupported(dateTimeFieldType7);
        org.joda.time.MonthDay monthDay10 = org.joda.time.MonthDay.parse("");
        org.joda.time.MonthDay monthDay12 = monthDay10.minusDays((int) '#');
        org.joda.time.MonthDay monthDay14 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MonthDay monthDay16 = monthDay14.withChronologyRetainFields(chronology15);
        org.joda.time.DateTimeFieldType dateTimeFieldType18 = monthDay14.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property19 = monthDay14.dayOfMonth();
        org.joda.time.Chronology chronology20 = monthDay14.getChronology();
        org.joda.time.Chronology chronology21 = monthDay14.getChronology();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.DateTime dateTime23 = monthDay14.toDateTime(readableInstant22);
        org.joda.time.MonthDay monthDay25 = monthDay14.plusMonths((int) ' ');
        boolean boolean26 = monthDay10.isAfter((org.joda.time.ReadablePartial) monthDay25);
        boolean boolean27 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay25);
        org.joda.time.ReadablePeriod readablePeriod28 = null;
        org.joda.time.MonthDay monthDay29 = monthDay1.minus(readablePeriod28);
        org.joda.time.MonthDay monthDay31 = monthDay29.withMonthOfYear(12);
        org.joda.time.ReadablePeriod readablePeriod32 = null;
        org.joda.time.MonthDay monthDay33 = monthDay31.plus(readablePeriod32);
        org.joda.time.MonthDay monthDay35 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.MonthDay monthDay37 = monthDay35.withChronologyRetainFields(chronology36);
        org.joda.time.DateTimeFieldType dateTimeFieldType39 = monthDay35.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property40 = monthDay35.dayOfMonth();
        org.joda.time.MonthDay monthDay42 = property40.addWrapFieldToCopy(1);
        org.joda.time.MonthDay monthDay44 = property40.addWrapFieldToCopy(0);
        org.joda.time.MonthDay monthDay46 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.MonthDay monthDay48 = monthDay46.withChronologyRetainFields(chronology47);
        org.joda.time.MonthDay monthDay50 = monthDay46.minusMonths((int) (byte) -1);
        boolean boolean51 = property40.equals((java.lang.Object) monthDay50);
        java.lang.String str52 = property40.getAsShortText();
        org.joda.time.DateTimeField dateTimeField53 = property40.getField();
        org.joda.time.MonthDay monthDay55 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod56 = null;
        org.joda.time.MonthDay monthDay58 = monthDay55.withPeriodAdded(readablePeriod56, 1);
        org.joda.time.MonthDay monthDay60 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.MonthDay monthDay62 = monthDay60.withChronologyRetainFields(chronology61);
        org.joda.time.DateTimeFieldType dateTimeFieldType64 = monthDay60.getFieldType((int) (byte) 1);
        int int65 = monthDay58.indexOf(dateTimeFieldType64);
        org.joda.time.Chronology chronology66 = null;
        org.joda.time.MonthDay monthDay67 = monthDay58.withChronologyRetainFields(chronology66);
        int int68 = property40.compareTo((org.joda.time.ReadablePartial) monthDay58);
        boolean boolean69 = monthDay33.isAfter((org.joda.time.ReadablePartial) monthDay58);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(dateTimeFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(monthDay10);
        org.junit.Assert.assertNotNull(monthDay12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(dateTimeFieldType18);
        org.junit.Assert.assertNotNull(property19);
        org.junit.Assert.assertNotNull(chronology20);
        org.junit.Assert.assertNotNull(chronology21);
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertNotNull(monthDay25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(monthDay29);
        org.junit.Assert.assertNotNull(monthDay31);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(monthDay37);
        org.junit.Assert.assertNotNull(dateTimeFieldType39);
        org.junit.Assert.assertNotNull(property40);
        org.junit.Assert.assertNotNull(monthDay42);
        org.junit.Assert.assertNotNull(monthDay44);
        org.junit.Assert.assertNotNull(monthDay46);
        org.junit.Assert.assertNotNull(monthDay48);
        org.junit.Assert.assertNotNull(monthDay50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "1" + "'", str52, "1");
        org.junit.Assert.assertNotNull(dateTimeField53);
        org.junit.Assert.assertNotNull(monthDay55);
        org.junit.Assert.assertNotNull(monthDay58);
        org.junit.Assert.assertNotNull(monthDay60);
        org.junit.Assert.assertNotNull(monthDay62);
        org.junit.Assert.assertNotNull(dateTimeFieldType64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNotNull(monthDay67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
    }

    @Test
    public void test1654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1654");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.MonthDay monthDay24 = monthDay21.minusMonths((int) (byte) -1);
        org.joda.time.MonthDay.Property property25 = monthDay24.monthOfYear();
        java.lang.String str26 = property25.getAsText();
        java.lang.String str27 = property25.getAsString();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MonthDay monthDay29 = property25.setCopy(22);
            org.junit.Assert.fail("Expected exception of type org.joda.time.IllegalFieldValueException; message: Value 22 for monthOfYear must be in the range [1,12]");
        } catch (org.joda.time.IllegalFieldValueException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(property25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "February" + "'", str26, "February");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "2" + "'", str27, "2");
    }

    @Test
    public void test1655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1655");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property6 = monthDay1.dayOfMonth();
        org.joda.time.MonthDay monthDay8 = property6.addWrapFieldToCopy(1);
        org.joda.time.MonthDay monthDay10 = property6.addWrapFieldToCopy(0);
        org.joda.time.MonthDay monthDay12 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MonthDay monthDay14 = monthDay12.withChronologyRetainFields(chronology13);
        org.joda.time.MonthDay monthDay16 = monthDay12.minusMonths((int) (byte) -1);
        boolean boolean17 = property6.equals((java.lang.Object) monthDay16);
        int int18 = property6.get();
        org.joda.time.DurationField durationField19 = property6.getRangeDurationField();
        org.joda.time.MonthDay monthDay21 = property6.addWrapFieldToCopy((int) (byte) 1);
        java.lang.String str22 = property6.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType23 = property6.getFieldType();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(property6);
        org.junit.Assert.assertNotNull(monthDay8);
        org.junit.Assert.assertNotNull(monthDay10);
        org.junit.Assert.assertNotNull(monthDay12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(durationField19);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Property[dayOfMonth]" + "'", str22, "Property[dayOfMonth]");
        org.junit.Assert.assertNotNull(dateTimeFieldType23);
    }

    @Test
    public void test1656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1656");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.DateTimeField[] dateTimeFieldArray23 = monthDay1.getFields();
        org.joda.time.ReadablePeriod readablePeriod24 = null;
        org.joda.time.MonthDay monthDay25 = monthDay1.minus(readablePeriod24);
        org.joda.time.ReadablePeriod readablePeriod26 = null;
        org.joda.time.MonthDay monthDay28 = monthDay1.withPeriodAdded(readablePeriod26, (int) (byte) -1);
        org.joda.time.Chronology chronology29 = monthDay1.getChronology();
        org.joda.time.MonthDay monthDay30 = org.joda.time.MonthDay.now(chronology29);
        org.joda.time.ReadablePeriod readablePeriod31 = null;
        org.joda.time.MonthDay monthDay32 = monthDay30.minus(readablePeriod31);
        java.util.Locale locale34 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str35 = monthDay30.toString("November", locale34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal pattern component: N");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(dateTimeFieldArray23);
        org.junit.Assert.assertNotNull(monthDay25);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertNotNull(chronology29);
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertNotNull(monthDay32);
    }

    @Test
    public void test1657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1657");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        java.lang.String str12 = property10.toString();
        org.joda.time.MonthDay monthDay14 = property10.addWrapFieldToCopy((int) (short) -1);
        org.joda.time.DateTimeFieldType dateTimeFieldType15 = property10.getFieldType();
        int int16 = property10.getMaximumValueOverall();
        java.lang.String str17 = property10.getAsShortText();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Property[dayOfMonth]" + "'", str12, "Property[dayOfMonth]");
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(dateTimeFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 31 + "'", int16 == 31);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1" + "'", str17, "1");
    }

    @Test
    public void test1658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1658");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.DurationField durationField12 = property10.getDurationField();
        org.joda.time.MonthDay monthDay14 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MonthDay monthDay16 = monthDay14.withChronologyRetainFields(chronology15);
        org.joda.time.MonthDay monthDay18 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MonthDay monthDay20 = monthDay18.withChronologyRetainFields(chronology19);
        org.joda.time.DateTimeFieldType dateTimeFieldType22 = monthDay18.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property23 = monthDay16.property(dateTimeFieldType22);
        boolean boolean24 = property10.equals((java.lang.Object) monthDay16);
        java.lang.String str25 = property10.getAsShortText();
        java.lang.String str26 = property10.toString();
        int int27 = property10.getMaximumValueOverall();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(durationField12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(dateTimeFieldType22);
        org.junit.Assert.assertNotNull(property23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1" + "'", str25, "1");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Property[dayOfMonth]" + "'", str26, "Property[dayOfMonth]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 31 + "'", int27 == 31);
    }

    @Test
    @Ignore
  public void test1659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1659");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.MonthDay monthDay3 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MonthDay monthDay5 = monthDay3.withChronologyRetainFields(chronology4);
        org.joda.time.DateTimeFieldType dateTimeFieldType7 = monthDay3.getFieldType((int) (byte) 1);
        boolean boolean8 = monthDay1.isSupported(dateTimeFieldType7);
        org.joda.time.MonthDay monthDay10 = org.joda.time.MonthDay.parse("");
        org.joda.time.MonthDay monthDay12 = monthDay10.minusDays((int) '#');
        org.joda.time.MonthDay monthDay14 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MonthDay monthDay16 = monthDay14.withChronologyRetainFields(chronology15);
        org.joda.time.DateTimeFieldType dateTimeFieldType18 = monthDay14.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property19 = monthDay14.dayOfMonth();
        org.joda.time.Chronology chronology20 = monthDay14.getChronology();
        org.joda.time.Chronology chronology21 = monthDay14.getChronology();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.DateTime dateTime23 = monthDay14.toDateTime(readableInstant22);
        org.joda.time.MonthDay monthDay25 = monthDay14.plusMonths((int) ' ');
        boolean boolean26 = monthDay10.isAfter((org.joda.time.ReadablePartial) monthDay25);
        boolean boolean27 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay25);
        org.joda.time.Chronology chronology28 = monthDay25.getChronology();
        org.joda.time.MonthDay monthDay29 = new org.joda.time.MonthDay(chronology28);
        org.joda.time.MonthDay monthDay31 = org.joda.time.MonthDay.parse("");
        org.joda.time.MonthDay monthDay33 = monthDay31.minusDays((int) '#');
        org.joda.time.MonthDay monthDay35 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.MonthDay monthDay37 = monthDay35.withChronologyRetainFields(chronology36);
        org.joda.time.DateTimeFieldType dateTimeFieldType39 = monthDay35.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property40 = monthDay35.dayOfMonth();
        org.joda.time.Chronology chronology41 = monthDay35.getChronology();
        org.joda.time.Chronology chronology42 = monthDay35.getChronology();
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.DateTime dateTime44 = monthDay35.toDateTime(readableInstant43);
        org.joda.time.MonthDay monthDay46 = monthDay35.plusMonths((int) ' ');
        boolean boolean47 = monthDay31.isAfter((org.joda.time.ReadablePartial) monthDay46);
        org.joda.time.MonthDay monthDay49 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.MonthDay monthDay51 = monthDay49.withChronologyRetainFields(chronology50);
        org.joda.time.DateTimeFieldType dateTimeFieldType53 = monthDay49.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property54 = monthDay49.dayOfMonth();
        org.joda.time.MonthDay monthDay56 = property54.addWrapFieldToCopy(1);
        org.joda.time.MonthDay monthDay58 = property54.addWrapFieldToCopy(0);
        org.joda.time.MonthDay monthDay60 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.MonthDay monthDay62 = monthDay60.withChronologyRetainFields(chronology61);
        org.joda.time.MonthDay monthDay64 = monthDay60.minusMonths((int) (byte) -1);
        boolean boolean65 = property54.equals((java.lang.Object) monthDay64);
        int int66 = property54.getMaximumValue();
        org.joda.time.DateTimeFieldType dateTimeFieldType67 = property54.getFieldType();
        org.joda.time.MonthDay.Property property68 = monthDay46.property(dateTimeFieldType67);
        boolean boolean69 = monthDay29.isSupported(dateTimeFieldType67);
        org.joda.time.MonthDay.Property property70 = monthDay29.monthOfYear();
        java.util.Locale locale71 = null;
        java.lang.String str72 = property70.getAsText(locale71);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(dateTimeFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(monthDay10);
        org.junit.Assert.assertNotNull(monthDay12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(dateTimeFieldType18);
        org.junit.Assert.assertNotNull(property19);
        org.junit.Assert.assertNotNull(chronology20);
        org.junit.Assert.assertNotNull(chronology21);
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertNotNull(monthDay25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(chronology28);
        org.junit.Assert.assertNotNull(monthDay31);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(monthDay37);
        org.junit.Assert.assertNotNull(dateTimeFieldType39);
        org.junit.Assert.assertNotNull(property40);
        org.junit.Assert.assertNotNull(chronology41);
        org.junit.Assert.assertNotNull(chronology42);
        org.junit.Assert.assertNotNull(dateTime44);
        org.junit.Assert.assertNotNull(monthDay46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(monthDay49);
        org.junit.Assert.assertNotNull(monthDay51);
        org.junit.Assert.assertNotNull(dateTimeFieldType53);
        org.junit.Assert.assertNotNull(property54);
        org.junit.Assert.assertNotNull(monthDay56);
        org.junit.Assert.assertNotNull(monthDay58);
        org.junit.Assert.assertNotNull(monthDay60);
        org.junit.Assert.assertNotNull(monthDay62);
        org.junit.Assert.assertNotNull(monthDay64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 31 + "'", int66 == 31);
        org.junit.Assert.assertNotNull(dateTimeFieldType67);
        org.junit.Assert.assertNotNull(property68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(property70);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "November" + "'", str72, "November");
    }

    @Test
    public void test1660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1660");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.MonthDay monthDay3 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MonthDay monthDay5 = monthDay3.withChronologyRetainFields(chronology4);
        org.joda.time.DateTimeFieldType dateTimeFieldType7 = monthDay3.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod8 = null;
        org.joda.time.MonthDay monthDay9 = monthDay3.plus(readablePeriod8);
        org.joda.time.MonthDay monthDay11 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MonthDay monthDay13 = monthDay11.withChronologyRetainFields(chronology12);
        org.joda.time.MonthDay monthDay15 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MonthDay monthDay17 = monthDay15.withChronologyRetainFields(chronology16);
        org.joda.time.DateTimeFieldType dateTimeFieldType19 = monthDay15.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property20 = monthDay13.property(dateTimeFieldType19);
        int int21 = property20.get();
        org.joda.time.MonthDay monthDay23 = property20.addWrapFieldToCopy((int) (short) 1);
        boolean boolean24 = monthDay3.isBefore((org.joda.time.ReadablePartial) monthDay23);
        org.joda.time.MonthDay monthDay26 = monthDay23.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay28 = monthDay26.plusMonths(1);
        org.joda.time.MonthDay monthDay30 = org.joda.time.MonthDay.parse("");
        org.joda.time.MonthDay monthDay32 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.MonthDay monthDay34 = monthDay32.withChronologyRetainFields(chronology33);
        org.joda.time.DateTimeFieldType dateTimeFieldType36 = monthDay32.getFieldType((int) (byte) 1);
        boolean boolean37 = monthDay30.isSupported(dateTimeFieldType36);
        boolean boolean38 = monthDay26.isSupported(dateTimeFieldType36);
        int int39 = monthDay1.compareTo((org.joda.time.ReadablePartial) monthDay26);
        org.joda.time.MonthDay monthDay40 = new org.joda.time.MonthDay((java.lang.Object) monthDay26);
        org.joda.time.MonthDay monthDay42 = org.joda.time.MonthDay.parse("");
        org.joda.time.MonthDay monthDay44 = monthDay42.minusDays((int) '#');
        org.joda.time.MonthDay monthDay46 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.MonthDay monthDay48 = monthDay46.withChronologyRetainFields(chronology47);
        org.joda.time.DateTimeFieldType dateTimeFieldType50 = monthDay46.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property51 = monthDay46.dayOfMonth();
        org.joda.time.Chronology chronology52 = monthDay46.getChronology();
        org.joda.time.Chronology chronology53 = monthDay46.getChronology();
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.DateTime dateTime55 = monthDay46.toDateTime(readableInstant54);
        org.joda.time.MonthDay monthDay57 = monthDay46.plusMonths((int) ' ');
        boolean boolean58 = monthDay42.isAfter((org.joda.time.ReadablePartial) monthDay57);
        org.joda.time.Chronology chronology59 = monthDay57.getChronology();
        org.joda.time.MonthDay monthDay60 = new org.joda.time.MonthDay((java.lang.Object) monthDay40, chronology59);
        org.joda.time.MonthDay monthDay62 = monthDay40.minusMonths(3);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(dateTimeFieldType7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(monthDay17);
        org.junit.Assert.assertNotNull(dateTimeFieldType19);
        org.junit.Assert.assertNotNull(property20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(monthDay23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertNotNull(dateTimeFieldType36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(monthDay42);
        org.junit.Assert.assertNotNull(monthDay44);
        org.junit.Assert.assertNotNull(monthDay46);
        org.junit.Assert.assertNotNull(monthDay48);
        org.junit.Assert.assertNotNull(dateTimeFieldType50);
        org.junit.Assert.assertNotNull(property51);
        org.junit.Assert.assertNotNull(chronology52);
        org.junit.Assert.assertNotNull(chronology53);
        org.junit.Assert.assertNotNull(dateTime55);
        org.junit.Assert.assertNotNull(monthDay57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(chronology59);
        org.junit.Assert.assertNotNull(monthDay62);
    }

    @Test
    public void test1661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1661");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.MonthDay monthDay13 = property10.addWrapFieldToCopy((int) (short) 1);
        java.lang.String str14 = property10.getAsString();
        java.lang.String str15 = property10.getAsText();
        org.joda.time.MonthDay monthDay17 = property10.addWrapFieldToCopy(11);
        org.joda.time.MonthDay monthDay19 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MonthDay monthDay21 = monthDay19.withChronologyRetainFields(chronology20);
        org.joda.time.DateTimeFieldType dateTimeFieldType23 = monthDay19.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod24 = null;
        org.joda.time.MonthDay monthDay25 = monthDay19.plus(readablePeriod24);
        org.joda.time.MonthDay monthDay27 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.MonthDay monthDay29 = monthDay27.withChronologyRetainFields(chronology28);
        org.joda.time.MonthDay monthDay31 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.MonthDay monthDay33 = monthDay31.withChronologyRetainFields(chronology32);
        org.joda.time.DateTimeFieldType dateTimeFieldType35 = monthDay31.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property36 = monthDay29.property(dateTimeFieldType35);
        int int37 = property36.get();
        org.joda.time.MonthDay monthDay39 = property36.addWrapFieldToCopy((int) (short) 1);
        boolean boolean40 = monthDay19.isBefore((org.joda.time.ReadablePartial) monthDay39);
        org.joda.time.DateTimeField[] dateTimeFieldArray41 = monthDay19.getFields();
        org.joda.time.ReadablePeriod readablePeriod42 = null;
        org.joda.time.MonthDay monthDay43 = monthDay19.minus(readablePeriod42);
        org.joda.time.ReadablePeriod readablePeriod44 = null;
        org.joda.time.MonthDay monthDay46 = monthDay19.withPeriodAdded(readablePeriod44, (int) (byte) -1);
        org.joda.time.Chronology chronology47 = monthDay19.getChronology();
        org.joda.time.MonthDay monthDay48 = org.joda.time.MonthDay.now(chronology47);
        org.joda.time.MonthDay monthDay49 = monthDay17.withChronologyRetainFields(chronology47);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1" + "'", str14, "1");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1" + "'", str15, "1");
        org.junit.Assert.assertNotNull(monthDay17);
        org.junit.Assert.assertNotNull(monthDay19);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertNotNull(dateTimeFieldType23);
        org.junit.Assert.assertNotNull(monthDay25);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertNotNull(monthDay29);
        org.junit.Assert.assertNotNull(monthDay31);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(dateTimeFieldType35);
        org.junit.Assert.assertNotNull(property36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(dateTimeFieldArray41);
        org.junit.Assert.assertNotNull(monthDay43);
        org.junit.Assert.assertNotNull(monthDay46);
        org.junit.Assert.assertNotNull(chronology47);
        org.junit.Assert.assertNotNull(monthDay48);
        org.junit.Assert.assertNotNull(monthDay49);
    }

    @Test
    public void test1662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1662");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        org.joda.time.MonthDay.Property property11 = monthDay3.monthOfYear();
        java.util.Locale locale12 = null;
        int int13 = property11.getMaximumTextLength(locale12);
        int int14 = property11.getMaximumValue();
        org.joda.time.DateTimeFieldType dateTimeFieldType15 = property11.getFieldType();
        java.lang.String str16 = property11.getName();
        org.joda.time.DateTimeField dateTimeField17 = property11.getField();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertNotNull(property11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 9 + "'", int13 == 9);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 12 + "'", int14 == 12);
        org.junit.Assert.assertNotNull(dateTimeFieldType15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "monthOfYear" + "'", str16, "monthOfYear");
        org.junit.Assert.assertNotNull(dateTimeField17);
    }

    @Test
    public void test1663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1663");
        org.joda.time.MonthDay monthDay2 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.MonthDay monthDay4 = monthDay2.withChronologyRetainFields(chronology3);
        org.joda.time.DateTimeFieldType dateTimeFieldType6 = monthDay2.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property7 = monthDay2.dayOfMonth();
        org.joda.time.Chronology chronology8 = monthDay2.getChronology();
        org.joda.time.MonthDay monthDay9 = new org.joda.time.MonthDay((-1L), chronology8);
        org.joda.time.MonthDay monthDay10 = new org.joda.time.MonthDay((java.lang.Object) monthDay9);
        int int11 = monthDay10.getMonthOfYear();
        org.junit.Assert.assertNotNull(monthDay2);
        org.junit.Assert.assertNotNull(monthDay4);
        org.junit.Assert.assertNotNull(dateTimeFieldType6);
        org.junit.Assert.assertNotNull(property7);
        org.junit.Assert.assertNotNull(chronology8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 12 + "'", int11 == 12);
    }

    @Test
    public void test1664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1664");
        org.joda.time.MonthDay monthDay2 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.MonthDay monthDay4 = monthDay2.withChronologyRetainFields(chronology3);
        org.joda.time.DateTimeFieldType dateTimeFieldType6 = monthDay2.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property7 = monthDay2.dayOfMonth();
        org.joda.time.Chronology chronology8 = monthDay2.getChronology();
        org.joda.time.MonthDay monthDay9 = new org.joda.time.MonthDay((-1L), chronology8);
        org.joda.time.MonthDay monthDay10 = new org.joda.time.MonthDay(chronology8);
        org.joda.time.MonthDay monthDay11 = new org.joda.time.MonthDay(chronology8);
        org.joda.time.DateTimeField[] dateTimeFieldArray12 = monthDay11.getFields();
        org.joda.time.ReadablePeriod readablePeriod13 = null;
        org.joda.time.MonthDay monthDay15 = monthDay11.withPeriodAdded(readablePeriod13, 4);
        java.lang.String str17 = monthDay11.toString("--02-01");
        org.junit.Assert.assertNotNull(monthDay2);
        org.junit.Assert.assertNotNull(monthDay4);
        org.junit.Assert.assertNotNull(dateTimeFieldType6);
        org.junit.Assert.assertNotNull(property7);
        org.junit.Assert.assertNotNull(chronology8);
        org.junit.Assert.assertNotNull(dateTimeFieldArray12);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "--02-01" + "'", str17, "--02-01");
    }

    @Test
    public void test1665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1665");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        org.joda.time.MonthDay.Property property11 = monthDay3.monthOfYear();
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay monthDay19 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MonthDay monthDay21 = monthDay19.withChronologyRetainFields(chronology20);
        org.joda.time.MonthDay monthDay23 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MonthDay monthDay25 = monthDay23.withChronologyRetainFields(chronology24);
        org.joda.time.DateTimeFieldType dateTimeFieldType27 = monthDay23.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property28 = monthDay21.property(dateTimeFieldType27);
        int int29 = monthDay13.indexOf(dateTimeFieldType27);
        boolean boolean30 = monthDay3.equals((java.lang.Object) int29);
        org.joda.time.MonthDay monthDay32 = monthDay3.withMonthOfYear(9);
        int int34 = monthDay32.getValue((int) (byte) 0);
        org.joda.time.DateTimeFieldType[] dateTimeFieldTypeArray35 = monthDay32.getFieldTypes();
        org.joda.time.MonthDay monthDay37 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.MonthDay monthDay39 = monthDay37.withChronologyRetainFields(chronology38);
        org.joda.time.DateTimeFieldType dateTimeFieldType41 = monthDay37.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property42 = monthDay37.dayOfMonth();
        org.joda.time.Chronology chronology43 = monthDay37.getChronology();
        org.joda.time.Chronology chronology44 = monthDay37.getChronology();
        org.joda.time.MonthDay monthDay45 = monthDay32.withChronologyRetainFields(chronology44);
        org.joda.time.MonthDay.Property property46 = monthDay45.dayOfMonth();
        int int47 = property46.getMinimumValueOverall();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertNotNull(property11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(monthDay19);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertNotNull(monthDay23);
        org.junit.Assert.assertNotNull(monthDay25);
        org.junit.Assert.assertNotNull(dateTimeFieldType27);
        org.junit.Assert.assertNotNull(property28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 9 + "'", int34 == 9);
        org.junit.Assert.assertNotNull(dateTimeFieldTypeArray35);
        org.junit.Assert.assertNotNull(monthDay37);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertNotNull(dateTimeFieldType41);
        org.junit.Assert.assertNotNull(property42);
        org.junit.Assert.assertNotNull(chronology43);
        org.junit.Assert.assertNotNull(chronology44);
        org.junit.Assert.assertNotNull(monthDay45);
        org.junit.Assert.assertNotNull(property46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
    }

    @Test
    public void test1666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1666");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.MonthDay.Property property23 = monthDay1.monthOfYear();
        int int24 = property23.getMinimumValueOverall();
        org.joda.time.MonthDay monthDay26 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.MonthDay monthDay28 = monthDay26.withChronologyRetainFields(chronology27);
        org.joda.time.MonthDay monthDay30 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MonthDay monthDay32 = monthDay30.withChronologyRetainFields(chronology31);
        org.joda.time.DateTimeFieldType dateTimeFieldType34 = monthDay30.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property35 = monthDay28.property(dateTimeFieldType34);
        int int36 = property35.get();
        org.joda.time.DurationField durationField37 = property35.getDurationField();
        org.joda.time.MonthDay monthDay39 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.MonthDay monthDay41 = monthDay39.withChronologyRetainFields(chronology40);
        org.joda.time.MonthDay monthDay43 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.MonthDay monthDay45 = monthDay43.withChronologyRetainFields(chronology44);
        org.joda.time.DateTimeFieldType dateTimeFieldType47 = monthDay43.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property48 = monthDay41.property(dateTimeFieldType47);
        boolean boolean49 = property35.equals((java.lang.Object) monthDay41);
        java.lang.String str50 = property35.getAsShortText();
        java.lang.String str51 = property35.toString();
        java.util.Locale locale52 = null;
        int int53 = property35.getMaximumShortTextLength(locale52);
        boolean boolean55 = property35.equals((java.lang.Object) 0.0d);
        org.joda.time.MonthDay monthDay57 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod58 = null;
        org.joda.time.MonthDay monthDay60 = monthDay57.withPeriodAdded(readablePeriod58, 1);
        org.joda.time.MonthDay monthDay62 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology63 = null;
        org.joda.time.MonthDay monthDay64 = monthDay62.withChronologyRetainFields(chronology63);
        org.joda.time.DateTimeFieldType dateTimeFieldType66 = monthDay62.getFieldType((int) (byte) 1);
        int int67 = monthDay60.indexOf(dateTimeFieldType66);
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.MonthDay monthDay69 = monthDay60.withChronologyRetainFields(chronology68);
        org.joda.time.MonthDay.Property property70 = monthDay69.dayOfMonth();
        java.lang.String str71 = property70.toString();
        org.joda.time.MonthDay monthDay73 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology74 = null;
        org.joda.time.MonthDay monthDay75 = monthDay73.withChronologyRetainFields(chronology74);
        org.joda.time.DateTimeFieldType dateTimeFieldType77 = monthDay73.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod78 = null;
        org.joda.time.MonthDay monthDay79 = monthDay73.plus(readablePeriod78);
        org.joda.time.MonthDay monthDay81 = monthDay73.plusMonths((int) (byte) 1);
        org.joda.time.MonthDay monthDay83 = monthDay73.plusDays(31);
        int int84 = property70.compareTo((org.joda.time.ReadablePartial) monthDay83);
        int int85 = property35.compareTo((org.joda.time.ReadablePartial) monthDay83);
        org.joda.time.MonthDay monthDay87 = property35.addToCopy(0);
        java.util.Locale locale88 = null;
        java.lang.String str89 = property35.getAsText(locale88);
        boolean boolean90 = property23.equals((java.lang.Object) property35);
        int int91 = property35.get();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(property23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(dateTimeFieldType34);
        org.junit.Assert.assertNotNull(property35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(durationField37);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertNotNull(monthDay41);
        org.junit.Assert.assertNotNull(monthDay43);
        org.junit.Assert.assertNotNull(monthDay45);
        org.junit.Assert.assertNotNull(dateTimeFieldType47);
        org.junit.Assert.assertNotNull(property48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "1" + "'", str50, "1");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Property[dayOfMonth]" + "'", str51, "Property[dayOfMonth]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(monthDay57);
        org.junit.Assert.assertNotNull(monthDay60);
        org.junit.Assert.assertNotNull(monthDay62);
        org.junit.Assert.assertNotNull(monthDay64);
        org.junit.Assert.assertNotNull(dateTimeFieldType66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertNotNull(monthDay69);
        org.junit.Assert.assertNotNull(property70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Property[dayOfMonth]" + "'", str71, "Property[dayOfMonth]");
        org.junit.Assert.assertNotNull(monthDay73);
        org.junit.Assert.assertNotNull(monthDay75);
        org.junit.Assert.assertNotNull(dateTimeFieldType77);
        org.junit.Assert.assertNotNull(monthDay79);
        org.junit.Assert.assertNotNull(monthDay81);
        org.junit.Assert.assertNotNull(monthDay83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNotNull(monthDay87);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "1" + "'", str89, "1");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 1 + "'", int91 == 1);
    }

    @Test
    public void test1667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1667");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MonthDay monthDay24 = monthDay1.withChronologyRetainFields(chronology23);
        org.joda.time.Chronology chronology25 = monthDay24.getChronology();
        org.joda.time.MonthDay monthDay27 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod28 = null;
        org.joda.time.MonthDay monthDay30 = monthDay27.withPeriodAdded(readablePeriod28, 1);
        org.joda.time.MonthDay monthDay32 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.MonthDay monthDay34 = monthDay32.withChronologyRetainFields(chronology33);
        org.joda.time.DateTimeFieldType dateTimeFieldType36 = monthDay32.getFieldType((int) (byte) 1);
        int int37 = monthDay30.indexOf(dateTimeFieldType36);
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.MonthDay monthDay39 = monthDay30.withChronologyRetainFields(chronology38);
        boolean boolean40 = monthDay24.isAfter((org.joda.time.ReadablePartial) monthDay30);
        org.joda.time.MonthDay monthDay42 = monthDay30.plusDays((int) (byte) 0);
        org.joda.time.MonthDay monthDay44 = new org.joda.time.MonthDay((long) 2);
        boolean boolean45 = monthDay30.isBefore((org.joda.time.ReadablePartial) monthDay44);
        org.joda.time.MonthDay monthDay47 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.MonthDay monthDay49 = monthDay47.withChronologyRetainFields(chronology48);
        org.joda.time.MonthDay monthDay51 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.MonthDay monthDay53 = monthDay51.withChronologyRetainFields(chronology52);
        org.joda.time.DateTimeFieldType dateTimeFieldType55 = monthDay51.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property56 = monthDay49.property(dateTimeFieldType55);
        int int57 = property56.get();
        org.joda.time.MonthDay monthDay59 = property56.addWrapFieldToCopy((int) (short) 1);
        org.joda.time.MonthDay monthDay61 = monthDay59.plusDays(2);
        org.joda.time.ReadablePeriod readablePeriod62 = null;
        org.joda.time.MonthDay monthDay63 = monthDay61.minus(readablePeriod62);
        org.joda.time.Chronology chronology64 = monthDay63.getChronology();
        org.joda.time.MonthDay monthDay65 = monthDay44.withChronologyRetainFields(chronology64);
        org.joda.time.MonthDay monthDay66 = org.joda.time.MonthDay.now(chronology64);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(chronology25);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertNotNull(dateTimeFieldType36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(monthDay42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(monthDay47);
        org.junit.Assert.assertNotNull(monthDay49);
        org.junit.Assert.assertNotNull(monthDay51);
        org.junit.Assert.assertNotNull(monthDay53);
        org.junit.Assert.assertNotNull(dateTimeFieldType55);
        org.junit.Assert.assertNotNull(property56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(monthDay59);
        org.junit.Assert.assertNotNull(monthDay61);
        org.junit.Assert.assertNotNull(monthDay63);
        org.junit.Assert.assertNotNull(chronology64);
        org.junit.Assert.assertNotNull(monthDay65);
        org.junit.Assert.assertNotNull(monthDay66);
    }

    @Test
    public void test1668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1668");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property6 = monthDay1.dayOfMonth();
        org.joda.time.MonthDay monthDay8 = property6.addWrapFieldToCopy(1);
        org.joda.time.MonthDay monthDay10 = property6.addWrapFieldToCopy(0);
        org.joda.time.MonthDay monthDay12 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MonthDay monthDay14 = monthDay12.withChronologyRetainFields(chronology13);
        org.joda.time.MonthDay monthDay16 = monthDay12.minusMonths((int) (byte) -1);
        boolean boolean17 = property6.equals((java.lang.Object) monthDay16);
        int int18 = property6.get();
        org.joda.time.DurationField durationField19 = property6.getRangeDurationField();
        org.joda.time.MonthDay monthDay21 = property6.addWrapFieldToCopy((int) (byte) 1);
        int int22 = property6.get();
        org.joda.time.DurationField durationField23 = property6.getDurationField();
        java.lang.String str24 = property6.getAsShortText();
        org.joda.time.MonthDay monthDay26 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.MonthDay monthDay28 = monthDay26.withChronologyRetainFields(chronology27);
        org.joda.time.MonthDay monthDay30 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MonthDay monthDay32 = monthDay30.withChronologyRetainFields(chronology31);
        org.joda.time.DateTimeFieldType dateTimeFieldType34 = monthDay30.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property35 = monthDay28.property(dateTimeFieldType34);
        org.joda.time.MonthDay.Property property36 = monthDay28.monthOfYear();
        java.util.Locale locale37 = null;
        int int38 = property36.getMaximumTextLength(locale37);
        int int39 = property36.getMaximumValue();
        org.joda.time.MonthDay monthDay41 = property36.addWrapFieldToCopy((int) '#');
        org.joda.time.ReadablePeriod readablePeriod42 = null;
        org.joda.time.MonthDay monthDay43 = monthDay41.minus(readablePeriod42);
        int int44 = property6.compareTo((org.joda.time.ReadablePartial) monthDay41);
        org.joda.time.MonthDay monthDay45 = property6.getMonthDay();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(property6);
        org.junit.Assert.assertNotNull(monthDay8);
        org.junit.Assert.assertNotNull(monthDay10);
        org.junit.Assert.assertNotNull(monthDay12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(durationField19);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(durationField23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1" + "'", str24, "1");
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(dateTimeFieldType34);
        org.junit.Assert.assertNotNull(property35);
        org.junit.Assert.assertNotNull(property36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 9 + "'", int38 == 9);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 12 + "'", int39 == 12);
        org.junit.Assert.assertNotNull(monthDay41);
        org.junit.Assert.assertNotNull(monthDay43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(monthDay45);
    }

    @Test
    public void test1669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1669");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        int int8 = monthDay7.getMonthOfYear();
        org.joda.time.MonthDay monthDay10 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.MonthDay monthDay12 = monthDay10.withChronologyRetainFields(chronology11);
        org.joda.time.DateTimeFieldType dateTimeFieldType14 = monthDay10.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod15 = null;
        org.joda.time.MonthDay monthDay16 = monthDay10.plus(readablePeriod15);
        org.joda.time.MonthDay monthDay18 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MonthDay monthDay20 = monthDay18.withChronologyRetainFields(chronology19);
        org.joda.time.MonthDay monthDay22 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MonthDay monthDay24 = monthDay22.withChronologyRetainFields(chronology23);
        org.joda.time.DateTimeFieldType dateTimeFieldType26 = monthDay22.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property27 = monthDay20.property(dateTimeFieldType26);
        int int28 = property27.get();
        org.joda.time.MonthDay monthDay30 = property27.addWrapFieldToCopy((int) (short) 1);
        boolean boolean31 = monthDay10.isBefore((org.joda.time.ReadablePartial) monthDay30);
        org.joda.time.MonthDay monthDay33 = monthDay30.minusMonths((int) (byte) 100);
        int int34 = monthDay33.getMonthOfYear();
        org.joda.time.MonthDay monthDay36 = monthDay33.withMonthOfYear(1);
        org.joda.time.ReadablePeriod readablePeriod37 = null;
        org.joda.time.MonthDay monthDay38 = monthDay33.plus(readablePeriod37);
        boolean boolean39 = monthDay7.isAfter((org.joda.time.ReadablePartial) monthDay38);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(monthDay10);
        org.junit.Assert.assertNotNull(monthDay12);
        org.junit.Assert.assertNotNull(dateTimeFieldType14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(dateTimeFieldType26);
        org.junit.Assert.assertNotNull(property27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 9 + "'", int34 == 9);
        org.junit.Assert.assertNotNull(monthDay36);
        org.junit.Assert.assertNotNull(monthDay38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test1670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1670");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.MonthDay monthDay13 = property10.addWrapFieldToCopy((int) (short) 1);
        org.joda.time.MonthDay.Property property14 = monthDay13.dayOfMonth();
        int int15 = property14.getMaximumValueOverall();
        int int16 = property14.getMinimumValueOverall();
        org.joda.time.MonthDay monthDay18 = property14.addWrapFieldToCopy((int) (byte) 1);
        org.joda.time.MonthDay monthDay20 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.MonthDay monthDay22 = monthDay20.withChronologyRetainFields(chronology21);
        org.joda.time.MonthDay monthDay24 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.MonthDay monthDay26 = monthDay24.withChronologyRetainFields(chronology25);
        org.joda.time.DateTimeFieldType dateTimeFieldType28 = monthDay24.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property29 = monthDay22.property(dateTimeFieldType28);
        int int30 = property29.get();
        org.joda.time.DurationField durationField31 = property29.getDurationField();
        org.joda.time.MonthDay monthDay33 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.MonthDay monthDay35 = monthDay33.withChronologyRetainFields(chronology34);
        org.joda.time.MonthDay monthDay37 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.MonthDay monthDay39 = monthDay37.withChronologyRetainFields(chronology38);
        org.joda.time.DateTimeFieldType dateTimeFieldType41 = monthDay37.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property42 = monthDay35.property(dateTimeFieldType41);
        boolean boolean43 = property29.equals((java.lang.Object) monthDay35);
        int int44 = property29.getMinimumValueOverall();
        org.joda.time.DateTimeFieldType dateTimeFieldType45 = property29.getFieldType();
        int int46 = property29.getMaximumValueOverall();
        org.joda.time.DateTimeFieldType dateTimeFieldType47 = property29.getFieldType();
        boolean boolean48 = monthDay18.isSupported(dateTimeFieldType47);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(property14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 31 + "'", int15 == 31);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(dateTimeFieldType28);
        org.junit.Assert.assertNotNull(property29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(durationField31);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(monthDay37);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertNotNull(dateTimeFieldType41);
        org.junit.Assert.assertNotNull(property42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(dateTimeFieldType45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 31 + "'", int46 == 31);
        org.junit.Assert.assertNotNull(dateTimeFieldType47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test1671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1671");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        java.util.Locale locale11 = null;
        int int12 = property10.getMaximumTextLength(locale11);
        int int13 = property10.getMinimumValue();
        org.joda.time.MonthDay monthDay15 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MonthDay monthDay17 = monthDay15.withChronologyRetainFields(chronology16);
        org.joda.time.DateTimeFieldType dateTimeFieldType19 = monthDay15.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay monthDay21 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.MonthDay monthDay23 = monthDay21.withChronologyRetainFields(chronology22);
        org.joda.time.MonthDay monthDay25 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.MonthDay monthDay27 = monthDay25.withChronologyRetainFields(chronology26);
        org.joda.time.DateTimeFieldType dateTimeFieldType29 = monthDay25.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property30 = monthDay23.property(dateTimeFieldType29);
        int int31 = monthDay15.indexOf(dateTimeFieldType29);
        org.joda.time.MonthDay monthDay33 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.MonthDay monthDay35 = monthDay33.withChronologyRetainFields(chronology34);
        org.joda.time.MonthDay monthDay37 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.MonthDay monthDay39 = monthDay37.withChronologyRetainFields(chronology38);
        org.joda.time.DateTimeFieldType dateTimeFieldType41 = monthDay37.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property42 = monthDay35.property(dateTimeFieldType41);
        int int43 = property42.get();
        org.joda.time.MonthDay monthDay45 = property42.addToCopy((int) (short) 0);
        org.joda.time.MonthDay monthDay47 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.MonthDay monthDay49 = monthDay47.withChronologyRetainFields(chronology48);
        org.joda.time.MonthDay monthDay51 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.MonthDay monthDay53 = monthDay51.withChronologyRetainFields(chronology52);
        org.joda.time.DateTimeFieldType dateTimeFieldType55 = monthDay51.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property56 = monthDay49.property(dateTimeFieldType55);
        int int57 = property56.get();
        org.joda.time.DurationField durationField58 = property56.getDurationField();
        java.util.Locale locale59 = null;
        int int60 = property56.getMaximumTextLength(locale59);
        org.joda.time.MonthDay monthDay62 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology63 = null;
        org.joda.time.MonthDay monthDay64 = monthDay62.withChronologyRetainFields(chronology63);
        org.joda.time.DateTimeFieldType dateTimeFieldType66 = monthDay62.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property67 = monthDay62.dayOfMonth();
        org.joda.time.Chronology chronology68 = monthDay62.getChronology();
        org.joda.time.Chronology chronology69 = monthDay62.getChronology();
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.DateTime dateTime71 = monthDay62.toDateTime(readableInstant70);
        int int72 = property56.compareTo((org.joda.time.ReadableInstant) dateTime71);
        int int73 = property42.compareTo((org.joda.time.ReadableInstant) dateTime71);
        org.joda.time.DateTime dateTime74 = monthDay15.toDateTime((org.joda.time.ReadableInstant) dateTime71);
        int int75 = property10.compareTo((org.joda.time.ReadableInstant) dateTime71);
        java.util.Locale locale76 = null;
        java.lang.String str77 = property10.getAsText(locale76);
        java.util.Locale locale78 = null;
        java.lang.String str79 = property10.getAsShortText(locale78);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(monthDay17);
        org.junit.Assert.assertNotNull(dateTimeFieldType19);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertNotNull(monthDay23);
        org.junit.Assert.assertNotNull(monthDay25);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertNotNull(dateTimeFieldType29);
        org.junit.Assert.assertNotNull(property30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(monthDay37);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertNotNull(dateTimeFieldType41);
        org.junit.Assert.assertNotNull(property42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(monthDay45);
        org.junit.Assert.assertNotNull(monthDay47);
        org.junit.Assert.assertNotNull(monthDay49);
        org.junit.Assert.assertNotNull(monthDay51);
        org.junit.Assert.assertNotNull(monthDay53);
        org.junit.Assert.assertNotNull(dateTimeFieldType55);
        org.junit.Assert.assertNotNull(property56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(durationField58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2 + "'", int60 == 2);
        org.junit.Assert.assertNotNull(monthDay62);
        org.junit.Assert.assertNotNull(monthDay64);
        org.junit.Assert.assertNotNull(dateTimeFieldType66);
        org.junit.Assert.assertNotNull(property67);
        org.junit.Assert.assertNotNull(chronology68);
        org.junit.Assert.assertNotNull(chronology69);
        org.junit.Assert.assertNotNull(dateTime71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(dateTime74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "1" + "'", str77, "1");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "1" + "'", str79, "1");
    }

    @Test
    public void test1672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1672");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod2 = null;
        org.joda.time.MonthDay monthDay4 = monthDay1.withPeriodAdded(readablePeriod2, 1);
        org.joda.time.ReadablePeriod readablePeriod5 = null;
        org.joda.time.MonthDay monthDay6 = monthDay1.plus(readablePeriod5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.MonthDay monthDay8 = monthDay1.plus(readablePeriod7);
        org.joda.time.MonthDay monthDay10 = monthDay1.plusMonths(2);
        org.joda.time.MonthDay monthDay12 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod13 = null;
        org.joda.time.MonthDay monthDay15 = monthDay12.withPeriodAdded(readablePeriod13, 1);
        org.joda.time.MonthDay monthDay17 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.MonthDay monthDay19 = monthDay17.withChronologyRetainFields(chronology18);
        org.joda.time.DateTimeFieldType dateTimeFieldType21 = monthDay17.getFieldType((int) (byte) 1);
        int int22 = monthDay15.indexOf(dateTimeFieldType21);
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MonthDay monthDay24 = monthDay15.withChronologyRetainFields(chronology23);
        org.joda.time.MonthDay monthDay26 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.MonthDay monthDay28 = monthDay26.withChronologyRetainFields(chronology27);
        org.joda.time.DateTimeFieldType dateTimeFieldType30 = monthDay26.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property31 = monthDay26.dayOfMonth();
        org.joda.time.Chronology chronology32 = monthDay26.getChronology();
        org.joda.time.Chronology chronology33 = monthDay26.getChronology();
        boolean boolean34 = monthDay15.isEqual((org.joda.time.ReadablePartial) monthDay26);
        org.joda.time.format.DateTimeFormatter dateTimeFormatter35 = null;
        java.lang.String str36 = monthDay26.toString(dateTimeFormatter35);
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.MonthDay monthDay38 = monthDay26.withChronologyRetainFields(chronology37);
        org.joda.time.MonthDay monthDay40 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.MonthDay monthDay42 = monthDay40.withChronologyRetainFields(chronology41);
        org.joda.time.MonthDay monthDay44 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.MonthDay monthDay46 = monthDay44.withChronologyRetainFields(chronology45);
        org.joda.time.DateTimeFieldType dateTimeFieldType48 = monthDay44.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property49 = monthDay42.property(dateTimeFieldType48);
        int int50 = property49.get();
        org.joda.time.MonthDay monthDay52 = property49.addWrapFieldToCopy((int) (short) 1);
        java.lang.String str53 = property49.getAsString();
        java.lang.String str54 = property49.getAsText();
        org.joda.time.DurationField durationField55 = property49.getRangeDurationField();
        int int56 = property49.getMinimumValue();
        org.joda.time.MonthDay monthDay58 = property49.addToCopy((int) (short) -1);
        org.joda.time.MonthDay monthDay60 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.MonthDay monthDay62 = monthDay60.withChronologyRetainFields(chronology61);
        org.joda.time.MonthDay monthDay64 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology65 = null;
        org.joda.time.MonthDay monthDay66 = monthDay64.withChronologyRetainFields(chronology65);
        org.joda.time.DateTimeFieldType dateTimeFieldType68 = monthDay64.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property69 = monthDay62.property(dateTimeFieldType68);
        int int70 = property69.get();
        org.joda.time.DurationField durationField71 = property69.getDurationField();
        org.joda.time.MonthDay monthDay73 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology74 = null;
        org.joda.time.MonthDay monthDay75 = monthDay73.withChronologyRetainFields(chronology74);
        org.joda.time.MonthDay monthDay77 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology78 = null;
        org.joda.time.MonthDay monthDay79 = monthDay77.withChronologyRetainFields(chronology78);
        org.joda.time.DateTimeFieldType dateTimeFieldType81 = monthDay77.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property82 = monthDay75.property(dateTimeFieldType81);
        boolean boolean83 = property69.equals((java.lang.Object) monthDay75);
        org.joda.time.MonthDay monthDay84 = new org.joda.time.MonthDay((java.lang.Object) monthDay75);
        boolean boolean85 = property49.equals((java.lang.Object) monthDay84);
        boolean boolean86 = monthDay38.isAfter((org.joda.time.ReadablePartial) monthDay84);
        boolean boolean87 = monthDay1.isEqual((org.joda.time.ReadablePartial) monthDay84);
        org.joda.time.MonthDay.Property property88 = monthDay1.monthOfYear();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay4);
        org.junit.Assert.assertNotNull(monthDay6);
        org.junit.Assert.assertNotNull(monthDay8);
        org.junit.Assert.assertNotNull(monthDay10);
        org.junit.Assert.assertNotNull(monthDay12);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(monthDay17);
        org.junit.Assert.assertNotNull(monthDay19);
        org.junit.Assert.assertNotNull(dateTimeFieldType21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertNotNull(dateTimeFieldType30);
        org.junit.Assert.assertNotNull(property31);
        org.junit.Assert.assertNotNull(chronology32);
        org.junit.Assert.assertNotNull(chronology33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "--01-01" + "'", str36, "--01-01");
        org.junit.Assert.assertNotNull(monthDay38);
        org.junit.Assert.assertNotNull(monthDay40);
        org.junit.Assert.assertNotNull(monthDay42);
        org.junit.Assert.assertNotNull(monthDay44);
        org.junit.Assert.assertNotNull(monthDay46);
        org.junit.Assert.assertNotNull(dateTimeFieldType48);
        org.junit.Assert.assertNotNull(property49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(monthDay52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "1" + "'", str53, "1");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "1" + "'", str54, "1");
        org.junit.Assert.assertNotNull(durationField55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(monthDay58);
        org.junit.Assert.assertNotNull(monthDay60);
        org.junit.Assert.assertNotNull(monthDay62);
        org.junit.Assert.assertNotNull(monthDay64);
        org.junit.Assert.assertNotNull(monthDay66);
        org.junit.Assert.assertNotNull(dateTimeFieldType68);
        org.junit.Assert.assertNotNull(property69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertNotNull(durationField71);
        org.junit.Assert.assertNotNull(monthDay73);
        org.junit.Assert.assertNotNull(monthDay75);
        org.junit.Assert.assertNotNull(monthDay77);
        org.junit.Assert.assertNotNull(monthDay79);
        org.junit.Assert.assertNotNull(dateTimeFieldType81);
        org.junit.Assert.assertNotNull(property82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(property88);
    }

    @Test
    public void test1673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1673");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.MonthDay monthDay24 = monthDay21.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay26 = monthDay24.minusDays(31);
        org.joda.time.MonthDay monthDay28 = monthDay26.plusDays((int) (byte) 10);
        org.joda.time.Chronology chronology29 = monthDay28.getChronology();
        org.joda.time.MonthDay monthDay30 = org.joda.time.MonthDay.now(chronology29);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertNotNull(chronology29);
        org.junit.Assert.assertNotNull(monthDay30);
    }

    @Test
    public void test1674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1674");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        java.lang.String str11 = property10.getAsText();
        org.joda.time.MonthDay monthDay13 = property10.setCopy((int) (byte) 1);
        int int14 = monthDay13.getMonthOfYear();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1" + "'", str11, "1");
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
    }

    @Test
    public void test1675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1675");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.DurationField durationField12 = property10.getDurationField();
        org.joda.time.MonthDay monthDay14 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MonthDay monthDay16 = monthDay14.withChronologyRetainFields(chronology15);
        org.joda.time.MonthDay monthDay18 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MonthDay monthDay20 = monthDay18.withChronologyRetainFields(chronology19);
        org.joda.time.DateTimeFieldType dateTimeFieldType22 = monthDay18.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property23 = monthDay16.property(dateTimeFieldType22);
        boolean boolean24 = property10.equals((java.lang.Object) monthDay16);
        java.util.Locale locale25 = null;
        java.lang.String str26 = property10.getAsShortText(locale25);
        java.lang.String str27 = property10.getAsShortText();
        java.lang.String str28 = property10.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType29 = property10.getFieldType();
        java.util.Locale locale30 = null;
        int int31 = property10.getMaximumShortTextLength(locale30);
        int int32 = property10.getMaximumValueOverall();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(durationField12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(dateTimeFieldType22);
        org.junit.Assert.assertNotNull(property23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1" + "'", str26, "1");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1" + "'", str27, "1");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Property[dayOfMonth]" + "'", str28, "Property[dayOfMonth]");
        org.junit.Assert.assertNotNull(dateTimeFieldType29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 31 + "'", int32 == 31);
    }

    @Test
    public void test1676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1676");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MonthDay monthDay2 = new org.joda.time.MonthDay((int) ' ', 100);
            org.junit.Assert.fail("Expected exception of type org.joda.time.IllegalFieldValueException; message: Value 32 for monthOfYear must not be larger than 12");
        } catch (org.joda.time.IllegalFieldValueException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1677");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.DateTimeFieldType dateTimeFieldType24 = monthDay1.getFieldType(0);
        org.joda.time.MonthDay monthDay26 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.MonthDay monthDay28 = monthDay26.withChronologyRetainFields(chronology27);
        org.joda.time.DateTimeFieldType dateTimeFieldType30 = monthDay26.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod31 = null;
        org.joda.time.MonthDay monthDay32 = monthDay26.plus(readablePeriod31);
        org.joda.time.ReadablePeriod readablePeriod33 = null;
        org.joda.time.MonthDay monthDay35 = monthDay26.withPeriodAdded(readablePeriod33, 9);
        org.joda.time.DateTimeField dateTimeField37 = monthDay35.getField(1);
        boolean boolean38 = monthDay1.isEqual((org.joda.time.ReadablePartial) monthDay35);
        org.joda.time.MonthDay monthDay40 = monthDay1.withDayOfMonth(9);
        java.lang.String str41 = monthDay1.toString();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(dateTimeFieldType24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertNotNull(dateTimeFieldType30);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(dateTimeField37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(monthDay40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "--01-01" + "'", str41, "--01-01");
    }

    @Test
    public void test1678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1678");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay monthDay7 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.MonthDay monthDay9 = monthDay7.withChronologyRetainFields(chronology8);
        org.joda.time.MonthDay monthDay11 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MonthDay monthDay13 = monthDay11.withChronologyRetainFields(chronology12);
        org.joda.time.DateTimeFieldType dateTimeFieldType15 = monthDay11.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property16 = monthDay9.property(dateTimeFieldType15);
        int int17 = monthDay1.indexOf(dateTimeFieldType15);
        org.joda.time.DateTimeZone dateTimeZone18 = null;
        org.joda.time.MonthDay monthDay19 = new org.joda.time.MonthDay(dateTimeZone18);
        org.joda.time.DateTimeField[] dateTimeFieldArray20 = monthDay19.getFields();
        org.joda.time.MonthDay monthDay22 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod23 = null;
        org.joda.time.MonthDay monthDay25 = monthDay22.withPeriodAdded(readablePeriod23, 1);
        boolean boolean26 = monthDay19.isBefore((org.joda.time.ReadablePartial) monthDay22);
        boolean boolean27 = monthDay1.isAfter((org.joda.time.ReadablePartial) monthDay22);
        org.joda.time.MonthDay.Property property28 = monthDay22.dayOfMonth();
        org.joda.time.MonthDay monthDay30 = property28.addWrapFieldToCopy(31);
        org.joda.time.DateTimeFieldType dateTimeFieldType31 = property28.getFieldType();
        org.joda.time.MonthDay monthDay33 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod34 = null;
        org.joda.time.MonthDay monthDay36 = monthDay33.withPeriodAdded(readablePeriod34, 1);
        org.joda.time.MonthDay monthDay38 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.MonthDay monthDay40 = monthDay38.withChronologyRetainFields(chronology39);
        org.joda.time.DateTimeFieldType dateTimeFieldType42 = monthDay38.getFieldType((int) (byte) 1);
        int int43 = monthDay36.indexOf(dateTimeFieldType42);
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.MonthDay monthDay45 = monthDay36.withChronologyRetainFields(chronology44);
        org.joda.time.MonthDay monthDay47 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.MonthDay monthDay49 = monthDay47.withChronologyRetainFields(chronology48);
        org.joda.time.DateTimeFieldType dateTimeFieldType51 = monthDay47.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property52 = monthDay47.dayOfMonth();
        org.joda.time.Chronology chronology53 = monthDay47.getChronology();
        org.joda.time.Chronology chronology54 = monthDay47.getChronology();
        boolean boolean55 = monthDay36.isEqual((org.joda.time.ReadablePartial) monthDay47);
        boolean boolean56 = property28.equals((java.lang.Object) boolean55);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(dateTimeFieldType15);
        org.junit.Assert.assertNotNull(property16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(dateTimeFieldArray20);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertNotNull(monthDay25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(property28);
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertNotNull(dateTimeFieldType31);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(monthDay36);
        org.junit.Assert.assertNotNull(monthDay38);
        org.junit.Assert.assertNotNull(monthDay40);
        org.junit.Assert.assertNotNull(dateTimeFieldType42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(monthDay45);
        org.junit.Assert.assertNotNull(monthDay47);
        org.junit.Assert.assertNotNull(monthDay49);
        org.junit.Assert.assertNotNull(dateTimeFieldType51);
        org.junit.Assert.assertNotNull(property52);
        org.junit.Assert.assertNotNull(chronology53);
        org.junit.Assert.assertNotNull(chronology54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test1679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1679");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        org.joda.time.MonthDay.Property property11 = monthDay3.monthOfYear();
        java.util.Locale locale12 = null;
        int int13 = property11.getMaximumTextLength(locale12);
        int int14 = property11.getMaximumValue();
        org.joda.time.MonthDay monthDay16 = property11.addWrapFieldToCopy((int) '#');
        java.lang.String str17 = property11.toString();
        org.joda.time.MonthDay monthDay18 = property11.getMonthDay();
        org.joda.time.MonthDay monthDay20 = monthDay18.plusDays((int) (byte) 10);
        org.joda.time.MonthDay monthDay22 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MonthDay monthDay24 = monthDay22.withChronologyRetainFields(chronology23);
        org.joda.time.MonthDay monthDay26 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.MonthDay monthDay28 = monthDay26.withChronologyRetainFields(chronology27);
        org.joda.time.DateTimeFieldType dateTimeFieldType30 = monthDay26.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property31 = monthDay24.property(dateTimeFieldType30);
        org.joda.time.MonthDay.Property property32 = monthDay24.monthOfYear();
        int int33 = monthDay24.getDayOfMonth();
        org.joda.time.MonthDay.Property property34 = monthDay24.dayOfMonth();
        int int35 = monthDay24.getDayOfMonth();
        org.joda.time.ReadablePeriod readablePeriod36 = null;
        org.joda.time.MonthDay monthDay37 = monthDay24.plus(readablePeriod36);
        org.joda.time.MonthDay monthDay39 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.MonthDay monthDay41 = monthDay39.withChronologyRetainFields(chronology40);
        org.joda.time.MonthDay monthDay43 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.MonthDay monthDay45 = monthDay43.withChronologyRetainFields(chronology44);
        org.joda.time.DateTimeFieldType dateTimeFieldType47 = monthDay43.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property48 = monthDay41.property(dateTimeFieldType47);
        org.joda.time.MonthDay.Property property49 = monthDay41.monthOfYear();
        int int50 = monthDay41.getDayOfMonth();
        org.joda.time.MonthDay.Property property51 = monthDay41.dayOfMonth();
        int int52 = monthDay41.getDayOfMonth();
        org.joda.time.MonthDay monthDay54 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.MonthDay monthDay56 = monthDay54.withChronologyRetainFields(chronology55);
        org.joda.time.DateTimeFieldType dateTimeFieldType58 = monthDay54.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property59 = monthDay54.dayOfMonth();
        org.joda.time.Chronology chronology60 = monthDay54.getChronology();
        org.joda.time.MonthDay monthDay61 = monthDay41.withChronologyRetainFields(chronology60);
        org.joda.time.MonthDay monthDay62 = monthDay37.withChronologyRetainFields(chronology60);
        boolean boolean63 = monthDay20.equals((java.lang.Object) monthDay62);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertNotNull(property11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 9 + "'", int13 == 9);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 12 + "'", int14 == 12);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Property[monthOfYear]" + "'", str17, "Property[monthOfYear]");
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertNotNull(dateTimeFieldType30);
        org.junit.Assert.assertNotNull(property31);
        org.junit.Assert.assertNotNull(property32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(property34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(monthDay37);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertNotNull(monthDay41);
        org.junit.Assert.assertNotNull(monthDay43);
        org.junit.Assert.assertNotNull(monthDay45);
        org.junit.Assert.assertNotNull(dateTimeFieldType47);
        org.junit.Assert.assertNotNull(property48);
        org.junit.Assert.assertNotNull(property49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(property51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(monthDay54);
        org.junit.Assert.assertNotNull(monthDay56);
        org.junit.Assert.assertNotNull(dateTimeFieldType58);
        org.junit.Assert.assertNotNull(property59);
        org.junit.Assert.assertNotNull(chronology60);
        org.junit.Assert.assertNotNull(monthDay61);
        org.junit.Assert.assertNotNull(monthDay62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test1680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1680");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay monthDay7 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.MonthDay monthDay9 = monthDay7.withChronologyRetainFields(chronology8);
        org.joda.time.MonthDay monthDay11 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MonthDay monthDay13 = monthDay11.withChronologyRetainFields(chronology12);
        org.joda.time.DateTimeFieldType dateTimeFieldType15 = monthDay11.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property16 = monthDay9.property(dateTimeFieldType15);
        int int17 = monthDay1.indexOf(dateTimeFieldType15);
        org.joda.time.DateTimeZone dateTimeZone18 = null;
        org.joda.time.MonthDay monthDay19 = new org.joda.time.MonthDay(dateTimeZone18);
        org.joda.time.DateTimeField[] dateTimeFieldArray20 = monthDay19.getFields();
        org.joda.time.MonthDay monthDay22 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod23 = null;
        org.joda.time.MonthDay monthDay25 = monthDay22.withPeriodAdded(readablePeriod23, 1);
        boolean boolean26 = monthDay19.isBefore((org.joda.time.ReadablePartial) monthDay22);
        boolean boolean27 = monthDay1.isAfter((org.joda.time.ReadablePartial) monthDay22);
        org.joda.time.MonthDay.Property property28 = monthDay22.dayOfMonth();
        java.util.Locale locale29 = null;
        java.lang.String str30 = property28.getAsText(locale29);
        org.joda.time.MonthDay monthDay32 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.MonthDay monthDay34 = monthDay32.withChronologyRetainFields(chronology33);
        org.joda.time.DateTimeFieldType dateTimeFieldType36 = monthDay32.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property37 = monthDay32.dayOfMonth();
        org.joda.time.Chronology chronology38 = monthDay32.getChronology();
        org.joda.time.Chronology chronology39 = monthDay32.getChronology();
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.DateTime dateTime41 = monthDay32.toDateTime(readableInstant40);
        org.joda.time.MonthDay monthDay43 = monthDay32.plusMonths((int) ' ');
        org.joda.time.MonthDay monthDay45 = monthDay43.minusMonths((int) (short) 10);
        boolean boolean46 = property28.equals((java.lang.Object) (short) 10);
        org.joda.time.MonthDay monthDay48 = property28.addWrapFieldToCopy((int) (short) 0);
        org.joda.time.MonthDay monthDay50 = property28.addToCopy((int) (byte) 100);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(dateTimeFieldType15);
        org.junit.Assert.assertNotNull(property16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(dateTimeFieldArray20);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertNotNull(monthDay25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(property28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1" + "'", str30, "1");
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertNotNull(dateTimeFieldType36);
        org.junit.Assert.assertNotNull(property37);
        org.junit.Assert.assertNotNull(chronology38);
        org.junit.Assert.assertNotNull(chronology39);
        org.junit.Assert.assertNotNull(dateTime41);
        org.junit.Assert.assertNotNull(monthDay43);
        org.junit.Assert.assertNotNull(monthDay45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(monthDay48);
        org.junit.Assert.assertNotNull(monthDay50);
    }

    @Test
    @Ignore
  public void test1681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1681");
        org.joda.time.MonthDay monthDay2 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.MonthDay monthDay4 = monthDay2.withChronologyRetainFields(chronology3);
        org.joda.time.DateTimeFieldType dateTimeFieldType6 = monthDay2.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property7 = monthDay2.dayOfMonth();
        org.joda.time.Chronology chronology8 = monthDay2.getChronology();
        org.joda.time.MonthDay monthDay9 = new org.joda.time.MonthDay((-1L), chronology8);
        org.joda.time.MonthDay monthDay10 = new org.joda.time.MonthDay(chronology8);
        org.joda.time.MonthDay monthDay11 = new org.joda.time.MonthDay(chronology8);
        org.joda.time.DateTimeField[] dateTimeFieldArray12 = monthDay11.getFields();
        int[] intArray13 = monthDay11.getValues();
        org.junit.Assert.assertNotNull(monthDay2);
        org.junit.Assert.assertNotNull(monthDay4);
        org.junit.Assert.assertNotNull(dateTimeFieldType6);
        org.junit.Assert.assertNotNull(property7);
        org.junit.Assert.assertNotNull(chronology8);
        org.junit.Assert.assertNotNull(dateTimeFieldArray12);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[11, 25]");
    }

    @Test
    public void test1682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1682");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        org.joda.time.MonthDay.Property property11 = monthDay3.monthOfYear();
        java.lang.String str12 = property11.getAsShortText();
        int int13 = property11.getMinimumValue();
        java.util.Locale locale15 = null;
        org.joda.time.MonthDay monthDay16 = property11.setCopy("2", locale15);
        org.joda.time.MonthDay monthDay18 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MonthDay monthDay20 = monthDay18.withChronologyRetainFields(chronology19);
        org.joda.time.MonthDay monthDay22 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MonthDay monthDay24 = monthDay22.withChronologyRetainFields(chronology23);
        org.joda.time.DateTimeFieldType dateTimeFieldType26 = monthDay22.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property27 = monthDay20.property(dateTimeFieldType26);
        org.joda.time.MonthDay.Property property28 = monthDay20.monthOfYear();
        org.joda.time.DurationField durationField29 = property28.getRangeDurationField();
        org.joda.time.MonthDay monthDay31 = property28.setCopy("1");
        org.joda.time.DateTimeFieldType dateTimeFieldType32 = property28.getFieldType();
        org.joda.time.MonthDay.Property property33 = monthDay16.property(dateTimeFieldType32);
        org.joda.time.DateTimeField dateTimeField34 = property33.getField();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertNotNull(property11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Jan" + "'", str12, "Jan");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(dateTimeFieldType26);
        org.junit.Assert.assertNotNull(property27);
        org.junit.Assert.assertNotNull(property28);
        org.junit.Assert.assertNotNull(durationField29);
        org.junit.Assert.assertNotNull(monthDay31);
        org.junit.Assert.assertNotNull(dateTimeFieldType32);
        org.junit.Assert.assertNotNull(property33);
        org.junit.Assert.assertNotNull(dateTimeField34);
    }

    @Test
    public void test1683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1683");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.DateTimeFieldType dateTimeFieldType24 = monthDay1.getFieldType(0);
        org.joda.time.MonthDay monthDay26 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.MonthDay monthDay28 = monthDay26.withChronologyRetainFields(chronology27);
        org.joda.time.DateTimeFieldType dateTimeFieldType30 = monthDay26.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod31 = null;
        org.joda.time.MonthDay monthDay32 = monthDay26.plus(readablePeriod31);
        org.joda.time.ReadablePeriod readablePeriod33 = null;
        org.joda.time.MonthDay monthDay35 = monthDay26.withPeriodAdded(readablePeriod33, 9);
        org.joda.time.DateTimeField dateTimeField37 = monthDay35.getField(1);
        boolean boolean38 = monthDay1.isEqual((org.joda.time.ReadablePartial) monthDay35);
        org.joda.time.MonthDay monthDay40 = monthDay1.withDayOfMonth(9);
        // The following exception was thrown during execution in test generation
        try {
            int int42 = monthDay1.getValue((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 100");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(dateTimeFieldType24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertNotNull(dateTimeFieldType30);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(dateTimeField37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(monthDay40);
    }

    @Test
    public void test1684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1684");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        int int12 = property10.getMaximumValue();
        org.joda.time.MonthDay monthDay14 = property10.setCopy((int) (short) 1);
        org.joda.time.MonthDay monthDay16 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MonthDay monthDay18 = monthDay16.withChronologyRetainFields(chronology17);
        org.joda.time.DateTimeFieldType dateTimeFieldType20 = monthDay16.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod21 = null;
        org.joda.time.MonthDay monthDay22 = monthDay16.plus(readablePeriod21);
        int int23 = monthDay16.getDayOfMonth();
        int int24 = property10.compareTo((org.joda.time.ReadablePartial) monthDay16);
        java.lang.String str25 = property10.getName();
        java.util.Locale locale26 = null;
        java.lang.String str27 = property10.getAsShortText(locale26);
        org.joda.time.DurationField durationField28 = property10.getRangeDurationField();
        java.lang.String str29 = property10.toString();
        java.util.Locale locale30 = null;
        java.lang.String str31 = property10.getAsText(locale30);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 31 + "'", int12 == 31);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(dateTimeFieldType20);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "dayOfMonth" + "'", str25, "dayOfMonth");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1" + "'", str27, "1");
        org.junit.Assert.assertNotNull(durationField28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Property[dayOfMonth]" + "'", str29, "Property[dayOfMonth]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1" + "'", str31, "1");
    }

    @Test
    public void test1685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1685");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.DateTimeField[] dateTimeFieldArray23 = monthDay1.getFields();
        org.joda.time.ReadablePeriod readablePeriod24 = null;
        org.joda.time.MonthDay monthDay25 = monthDay1.minus(readablePeriod24);
        java.lang.Class<?> wildcardClass26 = monthDay1.getClass();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(dateTimeFieldArray23);
        org.junit.Assert.assertNotNull(monthDay25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1686");
        org.joda.time.MonthDay monthDay4 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.MonthDay monthDay6 = monthDay4.withChronologyRetainFields(chronology5);
        org.joda.time.DateTimeFieldType dateTimeFieldType8 = monthDay4.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod9 = null;
        org.joda.time.MonthDay monthDay10 = monthDay4.plus(readablePeriod9);
        org.joda.time.MonthDay monthDay12 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MonthDay monthDay14 = monthDay12.withChronologyRetainFields(chronology13);
        org.joda.time.MonthDay monthDay16 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MonthDay monthDay18 = monthDay16.withChronologyRetainFields(chronology17);
        org.joda.time.DateTimeFieldType dateTimeFieldType20 = monthDay16.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property21 = monthDay14.property(dateTimeFieldType20);
        int int22 = property21.get();
        org.joda.time.MonthDay monthDay24 = property21.addWrapFieldToCopy((int) (short) 1);
        boolean boolean25 = monthDay4.isBefore((org.joda.time.ReadablePartial) monthDay24);
        org.joda.time.MonthDay monthDay27 = monthDay24.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay29 = monthDay27.minusDays(31);
        org.joda.time.MonthDay monthDay31 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod32 = null;
        org.joda.time.MonthDay monthDay34 = monthDay31.withPeriodAdded(readablePeriod32, 1);
        org.joda.time.MonthDay monthDay36 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.MonthDay monthDay38 = monthDay36.withChronologyRetainFields(chronology37);
        org.joda.time.DateTimeFieldType dateTimeFieldType40 = monthDay36.getFieldType((int) (byte) 1);
        int int41 = monthDay34.indexOf(dateTimeFieldType40);
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.MonthDay monthDay43 = monthDay34.withChronologyRetainFields(chronology42);
        org.joda.time.MonthDay monthDay45 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.MonthDay monthDay47 = monthDay45.withChronologyRetainFields(chronology46);
        org.joda.time.DateTimeFieldType dateTimeFieldType49 = monthDay45.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod50 = null;
        org.joda.time.MonthDay monthDay51 = monthDay45.plus(readablePeriod50);
        org.joda.time.MonthDay monthDay53 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.MonthDay monthDay55 = monthDay53.withChronologyRetainFields(chronology54);
        org.joda.time.MonthDay monthDay57 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology58 = null;
        org.joda.time.MonthDay monthDay59 = monthDay57.withChronologyRetainFields(chronology58);
        org.joda.time.DateTimeFieldType dateTimeFieldType61 = monthDay57.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property62 = monthDay55.property(dateTimeFieldType61);
        int int63 = property62.get();
        org.joda.time.MonthDay monthDay65 = property62.addWrapFieldToCopy((int) (short) 1);
        boolean boolean66 = monthDay45.isBefore((org.joda.time.ReadablePartial) monthDay65);
        org.joda.time.Chronology chronology67 = null;
        org.joda.time.MonthDay monthDay68 = monthDay45.withChronologyRetainFields(chronology67);
        org.joda.time.Chronology chronology69 = monthDay68.getChronology();
        org.joda.time.MonthDay monthDay70 = monthDay43.withChronologyRetainFields(chronology69);
        org.joda.time.MonthDay monthDay71 = monthDay29.withChronologyRetainFields(chronology69);
        org.joda.time.Chronology chronology72 = monthDay71.getChronology();
        org.joda.time.MonthDay monthDay73 = org.joda.time.MonthDay.now(chronology72);
        org.joda.time.MonthDay monthDay74 = new org.joda.time.MonthDay((long) (byte) 0, chronology72);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MonthDay monthDay75 = new org.joda.time.MonthDay((-1), 28, chronology72);
            org.junit.Assert.fail("Expected exception of type org.joda.time.IllegalFieldValueException; message: Value -1 for monthOfYear must not be smaller than 1");
        } catch (org.joda.time.IllegalFieldValueException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(monthDay4);
        org.junit.Assert.assertNotNull(monthDay6);
        org.junit.Assert.assertNotNull(dateTimeFieldType8);
        org.junit.Assert.assertNotNull(monthDay10);
        org.junit.Assert.assertNotNull(monthDay12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(dateTimeFieldType20);
        org.junit.Assert.assertNotNull(property21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertNotNull(monthDay29);
        org.junit.Assert.assertNotNull(monthDay31);
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertNotNull(monthDay36);
        org.junit.Assert.assertNotNull(monthDay38);
        org.junit.Assert.assertNotNull(dateTimeFieldType40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(monthDay43);
        org.junit.Assert.assertNotNull(monthDay45);
        org.junit.Assert.assertNotNull(monthDay47);
        org.junit.Assert.assertNotNull(dateTimeFieldType49);
        org.junit.Assert.assertNotNull(monthDay51);
        org.junit.Assert.assertNotNull(monthDay53);
        org.junit.Assert.assertNotNull(monthDay55);
        org.junit.Assert.assertNotNull(monthDay57);
        org.junit.Assert.assertNotNull(monthDay59);
        org.junit.Assert.assertNotNull(dateTimeFieldType61);
        org.junit.Assert.assertNotNull(property62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertNotNull(monthDay65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(monthDay68);
        org.junit.Assert.assertNotNull(chronology69);
        org.junit.Assert.assertNotNull(monthDay70);
        org.junit.Assert.assertNotNull(monthDay71);
        org.junit.Assert.assertNotNull(chronology72);
        org.junit.Assert.assertNotNull(monthDay73);
    }

    @Test
    public void test1687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1687");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.MonthDay monthDay13 = property10.addWrapFieldToCopy((int) (short) 1);
        org.joda.time.MonthDay.Property property14 = monthDay13.dayOfMonth();
        int int15 = property14.getMaximumValueOverall();
        int int16 = property14.getMinimumValueOverall();
        org.joda.time.MonthDay monthDay18 = property14.addWrapFieldToCopy((int) (byte) 1);
        int int19 = property14.getMinimumValueOverall();
        org.joda.time.DurationField durationField20 = property14.getRangeDurationField();
        org.joda.time.MonthDay monthDay21 = property14.getMonthDay();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(property14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 31 + "'", int15 == 31);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(durationField20);
        org.junit.Assert.assertNotNull(monthDay21);
    }

    @Test
    public void test1688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1688");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.MonthDay.Property property23 = monthDay1.monthOfYear();
        int int24 = property23.getMinimumValueOverall();
        org.joda.time.MonthDay monthDay26 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.MonthDay monthDay28 = monthDay26.withChronologyRetainFields(chronology27);
        org.joda.time.MonthDay monthDay30 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MonthDay monthDay32 = monthDay30.withChronologyRetainFields(chronology31);
        org.joda.time.DateTimeFieldType dateTimeFieldType34 = monthDay30.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property35 = monthDay28.property(dateTimeFieldType34);
        int int36 = property35.get();
        org.joda.time.DurationField durationField37 = property35.getDurationField();
        org.joda.time.MonthDay monthDay39 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.MonthDay monthDay41 = monthDay39.withChronologyRetainFields(chronology40);
        org.joda.time.MonthDay monthDay43 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.MonthDay monthDay45 = monthDay43.withChronologyRetainFields(chronology44);
        org.joda.time.DateTimeFieldType dateTimeFieldType47 = monthDay43.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property48 = monthDay41.property(dateTimeFieldType47);
        boolean boolean49 = property35.equals((java.lang.Object) monthDay41);
        java.lang.String str50 = property35.getAsShortText();
        java.lang.String str51 = property35.toString();
        java.util.Locale locale52 = null;
        int int53 = property35.getMaximumShortTextLength(locale52);
        boolean boolean55 = property35.equals((java.lang.Object) 0.0d);
        org.joda.time.MonthDay monthDay57 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod58 = null;
        org.joda.time.MonthDay monthDay60 = monthDay57.withPeriodAdded(readablePeriod58, 1);
        org.joda.time.MonthDay monthDay62 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology63 = null;
        org.joda.time.MonthDay monthDay64 = monthDay62.withChronologyRetainFields(chronology63);
        org.joda.time.DateTimeFieldType dateTimeFieldType66 = monthDay62.getFieldType((int) (byte) 1);
        int int67 = monthDay60.indexOf(dateTimeFieldType66);
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.MonthDay monthDay69 = monthDay60.withChronologyRetainFields(chronology68);
        org.joda.time.MonthDay.Property property70 = monthDay69.dayOfMonth();
        java.lang.String str71 = property70.toString();
        org.joda.time.MonthDay monthDay73 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology74 = null;
        org.joda.time.MonthDay monthDay75 = monthDay73.withChronologyRetainFields(chronology74);
        org.joda.time.DateTimeFieldType dateTimeFieldType77 = monthDay73.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod78 = null;
        org.joda.time.MonthDay monthDay79 = monthDay73.plus(readablePeriod78);
        org.joda.time.MonthDay monthDay81 = monthDay73.plusMonths((int) (byte) 1);
        org.joda.time.MonthDay monthDay83 = monthDay73.plusDays(31);
        int int84 = property70.compareTo((org.joda.time.ReadablePartial) monthDay83);
        int int85 = property35.compareTo((org.joda.time.ReadablePartial) monthDay83);
        org.joda.time.MonthDay monthDay87 = property35.addToCopy(0);
        java.util.Locale locale88 = null;
        java.lang.String str89 = property35.getAsText(locale88);
        boolean boolean90 = property23.equals((java.lang.Object) property35);
        java.util.Locale locale91 = null;
        java.lang.String str92 = property35.getAsText(locale91);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(property23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(dateTimeFieldType34);
        org.junit.Assert.assertNotNull(property35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(durationField37);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertNotNull(monthDay41);
        org.junit.Assert.assertNotNull(monthDay43);
        org.junit.Assert.assertNotNull(monthDay45);
        org.junit.Assert.assertNotNull(dateTimeFieldType47);
        org.junit.Assert.assertNotNull(property48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "1" + "'", str50, "1");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Property[dayOfMonth]" + "'", str51, "Property[dayOfMonth]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(monthDay57);
        org.junit.Assert.assertNotNull(monthDay60);
        org.junit.Assert.assertNotNull(monthDay62);
        org.junit.Assert.assertNotNull(monthDay64);
        org.junit.Assert.assertNotNull(dateTimeFieldType66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertNotNull(monthDay69);
        org.junit.Assert.assertNotNull(property70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Property[dayOfMonth]" + "'", str71, "Property[dayOfMonth]");
        org.junit.Assert.assertNotNull(monthDay73);
        org.junit.Assert.assertNotNull(monthDay75);
        org.junit.Assert.assertNotNull(dateTimeFieldType77);
        org.junit.Assert.assertNotNull(monthDay79);
        org.junit.Assert.assertNotNull(monthDay81);
        org.junit.Assert.assertNotNull(monthDay83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNotNull(monthDay87);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "1" + "'", str89, "1");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "1" + "'", str92, "1");
    }

    @Test
    public void test1689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1689");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay5.dayOfMonth();
        org.joda.time.Chronology chronology11 = monthDay5.getChronology();
        org.joda.time.MonthDay monthDay12 = org.joda.time.MonthDay.now(chronology11);
        org.joda.time.MonthDay monthDay13 = monthDay3.withChronologyRetainFields(chronology11);
        org.joda.time.ReadablePeriod readablePeriod14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay3.minus(readablePeriod14);
        org.joda.time.MonthDay monthDay17 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.MonthDay monthDay19 = monthDay17.withChronologyRetainFields(chronology18);
        org.joda.time.MonthDay monthDay21 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.MonthDay monthDay23 = monthDay21.withChronologyRetainFields(chronology22);
        org.joda.time.DateTimeFieldType dateTimeFieldType25 = monthDay21.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property26 = monthDay19.property(dateTimeFieldType25);
        int int27 = property26.get();
        int int28 = property26.getMaximumValue();
        org.joda.time.MonthDay monthDay30 = property26.setCopy((int) (short) 1);
        org.joda.time.MonthDay monthDay32 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.MonthDay monthDay34 = monthDay32.withChronologyRetainFields(chronology33);
        org.joda.time.DateTimeFieldType dateTimeFieldType36 = monthDay32.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod37 = null;
        org.joda.time.MonthDay monthDay38 = monthDay32.plus(readablePeriod37);
        int int39 = monthDay32.getDayOfMonth();
        int int40 = property26.compareTo((org.joda.time.ReadablePartial) monthDay32);
        boolean boolean41 = monthDay15.isBefore((org.joda.time.ReadablePartial) monthDay32);
        java.lang.String str42 = monthDay15.toString();
        org.joda.time.MonthDay monthDay44 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.MonthDay monthDay46 = monthDay44.withChronologyRetainFields(chronology45);
        org.joda.time.MonthDay monthDay48 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.MonthDay monthDay50 = monthDay48.withChronologyRetainFields(chronology49);
        org.joda.time.DateTimeFieldType dateTimeFieldType52 = monthDay48.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property53 = monthDay46.property(dateTimeFieldType52);
        int int54 = property53.get();
        int int55 = property53.getMaximumValue();
        org.joda.time.MonthDay monthDay57 = property53.setCopy((int) (short) 1);
        org.joda.time.MonthDay monthDay59 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.MonthDay monthDay61 = monthDay59.withChronologyRetainFields(chronology60);
        org.joda.time.DateTimeFieldType dateTimeFieldType63 = monthDay59.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod64 = null;
        org.joda.time.MonthDay monthDay65 = monthDay59.plus(readablePeriod64);
        int int66 = monthDay59.getDayOfMonth();
        int int67 = property53.compareTo((org.joda.time.ReadablePartial) monthDay59);
        org.joda.time.DateTimeField[] dateTimeFieldArray68 = monthDay59.getFields();
        org.joda.time.MonthDay monthDay70 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology71 = null;
        org.joda.time.MonthDay monthDay72 = monthDay70.withChronologyRetainFields(chronology71);
        org.joda.time.DateTimeFieldType dateTimeFieldType74 = monthDay70.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property75 = monthDay70.dayOfMonth();
        org.joda.time.MonthDay monthDay77 = property75.addWrapFieldToCopy(1);
        boolean boolean78 = monthDay59.isEqual((org.joda.time.ReadablePartial) monthDay77);
        boolean boolean79 = monthDay15.equals((java.lang.Object) monthDay77);
        org.joda.time.MonthDay monthDay81 = monthDay77.minusDays((-1));
        java.lang.String str82 = monthDay81.toString();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertNotNull(chronology11);
        org.junit.Assert.assertNotNull(monthDay12);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(monthDay17);
        org.junit.Assert.assertNotNull(monthDay19);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertNotNull(monthDay23);
        org.junit.Assert.assertNotNull(dateTimeFieldType25);
        org.junit.Assert.assertNotNull(property26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 31 + "'", int28 == 31);
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertNotNull(dateTimeFieldType36);
        org.junit.Assert.assertNotNull(monthDay38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "--01-01" + "'", str42, "--01-01");
        org.junit.Assert.assertNotNull(monthDay44);
        org.junit.Assert.assertNotNull(monthDay46);
        org.junit.Assert.assertNotNull(monthDay48);
        org.junit.Assert.assertNotNull(monthDay50);
        org.junit.Assert.assertNotNull(dateTimeFieldType52);
        org.junit.Assert.assertNotNull(property53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 31 + "'", int55 == 31);
        org.junit.Assert.assertNotNull(monthDay57);
        org.junit.Assert.assertNotNull(monthDay59);
        org.junit.Assert.assertNotNull(monthDay61);
        org.junit.Assert.assertNotNull(dateTimeFieldType63);
        org.junit.Assert.assertNotNull(monthDay65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(dateTimeFieldArray68);
        org.junit.Assert.assertNotNull(monthDay70);
        org.junit.Assert.assertNotNull(monthDay72);
        org.junit.Assert.assertNotNull(dateTimeFieldType74);
        org.junit.Assert.assertNotNull(property75);
        org.junit.Assert.assertNotNull(monthDay77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(monthDay81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "--01-03" + "'", str82, "--01-03");
    }

    @Test
    @Ignore
  public void test1690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1690");
        org.joda.time.DateTimeZone dateTimeZone0 = null;
        org.joda.time.MonthDay monthDay1 = new org.joda.time.MonthDay(dateTimeZone0);
        org.joda.time.DateTimeField[] dateTimeFieldArray2 = monthDay1.getFields();
        org.joda.time.MonthDay monthDay4 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod5 = null;
        org.joda.time.MonthDay monthDay7 = monthDay4.withPeriodAdded(readablePeriod5, 1);
        boolean boolean8 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay4);
        org.joda.time.MonthDay monthDay10 = monthDay1.plusDays((int) (short) -1);
        org.joda.time.format.DateTimeFormatter dateTimeFormatter11 = null;
        java.lang.String str12 = monthDay10.toString(dateTimeFormatter11);
        java.lang.String str13 = monthDay10.toString();
        org.joda.time.format.DateTimeFormatter dateTimeFormatter14 = null;
        java.lang.String str15 = monthDay10.toString(dateTimeFormatter14);
        org.junit.Assert.assertNotNull(dateTimeFieldArray2);
        org.junit.Assert.assertNotNull(monthDay4);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(monthDay10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "--11-24" + "'", str12, "--11-24");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "--11-24" + "'", str13, "--11-24");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "--11-24" + "'", str15, "--11-24");
    }

    @Test
    public void test1691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1691");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.MonthDay monthDay13 = property10.addWrapFieldToCopy((int) (short) 1);
        org.joda.time.MonthDay.Property property14 = monthDay13.dayOfMonth();
        int int15 = property14.getMaximumValueOverall();
        int int16 = property14.getMinimumValueOverall();
        java.util.Locale locale18 = null;
        org.joda.time.MonthDay monthDay19 = property14.setCopy("2", locale18);
        java.lang.String str20 = property14.getAsString();
        java.lang.String str21 = property14.getAsText();
        java.util.Locale locale22 = null;
        int int23 = property14.getMaximumTextLength(locale22);
        org.joda.time.DateTimeFieldType dateTimeFieldType24 = property14.getFieldType();
        java.util.Locale locale25 = null;
        int int26 = property14.getMaximumTextLength(locale25);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(property14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 31 + "'", int15 == 31);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(monthDay19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "2" + "'", str20, "2");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "2" + "'", str21, "2");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertNotNull(dateTimeFieldType24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
    }

    @Test
    public void test1692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1692");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.MonthDay.Property property23 = monthDay1.monthOfYear();
        int int24 = property23.getMinimumValueOverall();
        java.lang.String str25 = property23.getAsString();
        java.lang.String str26 = property23.getAsShortText();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MonthDay monthDay28 = property23.setCopy(0);
            org.junit.Assert.fail("Expected exception of type org.joda.time.IllegalFieldValueException; message: Value 0 for monthOfYear must be in the range [1,12]");
        } catch (org.joda.time.IllegalFieldValueException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(property23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1" + "'", str25, "1");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Jan" + "'", str26, "Jan");
    }

    @Test
    public void test1693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1693");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        org.joda.time.MonthDay.Property property11 = monthDay3.monthOfYear();
        java.lang.String str12 = property11.getAsShortText();
        java.util.Locale locale13 = null;
        java.lang.String str14 = property11.getAsShortText(locale13);
        int int15 = property11.getMinimumValueOverall();
        org.joda.time.MonthDay monthDay17 = property11.addToCopy(2);
        int int18 = monthDay17.getMonthOfYear();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertNotNull(property11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Jan" + "'", str12, "Jan");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Jan" + "'", str14, "Jan");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(monthDay17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
    }

    @Test
    public void test1694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1694");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        org.joda.time.MonthDay monthDay12 = property10.addWrapFieldToCopy(100);
        java.util.Locale locale13 = null;
        java.lang.String str14 = property10.getAsText(locale13);
        org.joda.time.MonthDay monthDay16 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MonthDay monthDay18 = monthDay16.withChronologyRetainFields(chronology17);
        org.joda.time.DateTimeFieldType dateTimeFieldType20 = monthDay16.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property21 = monthDay16.dayOfMonth();
        org.joda.time.Chronology chronology22 = monthDay16.getChronology();
        org.joda.time.Chronology chronology23 = monthDay16.getChronology();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.DateTime dateTime25 = monthDay16.toDateTime(readableInstant24);
        org.joda.time.MonthDay monthDay27 = monthDay16.plusMonths((int) ' ');
        org.joda.time.MonthDay monthDay29 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.MonthDay monthDay31 = monthDay29.withChronologyRetainFields(chronology30);
        org.joda.time.DateTimeFieldType dateTimeFieldType33 = monthDay29.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod34 = null;
        org.joda.time.MonthDay monthDay35 = monthDay29.plus(readablePeriod34);
        org.joda.time.MonthDay monthDay37 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.MonthDay monthDay39 = monthDay37.withChronologyRetainFields(chronology38);
        org.joda.time.MonthDay monthDay41 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.MonthDay monthDay43 = monthDay41.withChronologyRetainFields(chronology42);
        org.joda.time.DateTimeFieldType dateTimeFieldType45 = monthDay41.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property46 = monthDay39.property(dateTimeFieldType45);
        int int47 = property46.get();
        org.joda.time.MonthDay monthDay49 = property46.addWrapFieldToCopy((int) (short) 1);
        boolean boolean50 = monthDay29.isBefore((org.joda.time.ReadablePartial) monthDay49);
        org.joda.time.MonthDay monthDay52 = monthDay49.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay54 = monthDay52.plusMonths(1);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.MonthDay monthDay56 = monthDay52.minus(readablePeriod55);
        org.joda.time.DateTimeZone dateTimeZone57 = null;
        org.joda.time.MonthDay monthDay58 = new org.joda.time.MonthDay(dateTimeZone57);
        boolean boolean59 = monthDay56.isEqual((org.joda.time.ReadablePartial) monthDay58);
        boolean boolean60 = monthDay16.equals((java.lang.Object) monthDay56);
        org.joda.time.MonthDay.Property property61 = monthDay56.dayOfMonth();
        int int62 = property10.compareTo((org.joda.time.ReadablePartial) monthDay56);
        org.joda.time.MonthDay monthDay64 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology65 = null;
        org.joda.time.MonthDay monthDay66 = monthDay64.withChronologyRetainFields(chronology65);
        org.joda.time.DateTimeFieldType dateTimeFieldType68 = monthDay64.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay monthDay70 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology71 = null;
        org.joda.time.MonthDay monthDay72 = monthDay70.withChronologyRetainFields(chronology71);
        org.joda.time.MonthDay monthDay74 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology75 = null;
        org.joda.time.MonthDay monthDay76 = monthDay74.withChronologyRetainFields(chronology75);
        org.joda.time.DateTimeFieldType dateTimeFieldType78 = monthDay74.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property79 = monthDay72.property(dateTimeFieldType78);
        int int80 = monthDay64.indexOf(dateTimeFieldType78);
        org.joda.time.MonthDay.Property property81 = monthDay56.property(dateTimeFieldType78);
        org.joda.time.MonthDay monthDay83 = monthDay56.minusMonths(12);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertNotNull(monthDay12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1" + "'", str14, "1");
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(dateTimeFieldType20);
        org.junit.Assert.assertNotNull(property21);
        org.junit.Assert.assertNotNull(chronology22);
        org.junit.Assert.assertNotNull(chronology23);
        org.junit.Assert.assertNotNull(dateTime25);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertNotNull(monthDay29);
        org.junit.Assert.assertNotNull(monthDay31);
        org.junit.Assert.assertNotNull(dateTimeFieldType33);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(monthDay37);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertNotNull(monthDay41);
        org.junit.Assert.assertNotNull(monthDay43);
        org.junit.Assert.assertNotNull(dateTimeFieldType45);
        org.junit.Assert.assertNotNull(property46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(monthDay49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(monthDay52);
        org.junit.Assert.assertNotNull(monthDay54);
        org.junit.Assert.assertNotNull(monthDay56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(property61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(monthDay64);
        org.junit.Assert.assertNotNull(monthDay66);
        org.junit.Assert.assertNotNull(dateTimeFieldType68);
        org.junit.Assert.assertNotNull(monthDay70);
        org.junit.Assert.assertNotNull(monthDay72);
        org.junit.Assert.assertNotNull(monthDay74);
        org.junit.Assert.assertNotNull(monthDay76);
        org.junit.Assert.assertNotNull(dateTimeFieldType78);
        org.junit.Assert.assertNotNull(property79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertNotNull(property81);
        org.junit.Assert.assertNotNull(monthDay83);
    }

    @Test
    @Ignore
  public void test1695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1695");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.DurationField durationField12 = property10.getDurationField();
        org.joda.time.MonthDay monthDay14 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MonthDay monthDay16 = monthDay14.withChronologyRetainFields(chronology15);
        org.joda.time.MonthDay monthDay18 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MonthDay monthDay20 = monthDay18.withChronologyRetainFields(chronology19);
        org.joda.time.DateTimeFieldType dateTimeFieldType22 = monthDay18.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property23 = monthDay16.property(dateTimeFieldType22);
        boolean boolean24 = property10.equals((java.lang.Object) monthDay16);
        int int25 = property10.getMinimumValueOverall();
        org.joda.time.DateTimeFieldType dateTimeFieldType26 = property10.getFieldType();
        int int27 = property10.getMaximumValueOverall();
        org.joda.time.MonthDay monthDay29 = property10.addToCopy((int) 'a');
        int int30 = property10.getMinimumValueOverall();
        int int31 = property10.get();
        org.joda.time.MonthDay monthDay33 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.MonthDay monthDay35 = monthDay33.withChronologyRetainFields(chronology34);
        org.joda.time.DateTimeFieldType dateTimeFieldType37 = monthDay33.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property38 = monthDay33.dayOfMonth();
        org.joda.time.Chronology chronology39 = monthDay33.getChronology();
        org.joda.time.Chronology chronology40 = monthDay33.getChronology();
        org.joda.time.MonthDay monthDay41 = org.joda.time.MonthDay.now(chronology40);
        org.joda.time.format.DateTimeFormatter dateTimeFormatter42 = null;
        java.lang.String str43 = monthDay41.toString(dateTimeFormatter42);
        int int44 = monthDay41.getMonthOfYear();
        int[] intArray45 = monthDay41.getValues();
        org.joda.time.MonthDay monthDay47 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod48 = null;
        org.joda.time.MonthDay monthDay50 = monthDay47.withPeriodAdded(readablePeriod48, 1);
        org.joda.time.MonthDay monthDay52 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.MonthDay monthDay54 = monthDay52.withChronologyRetainFields(chronology53);
        org.joda.time.DateTimeFieldType dateTimeFieldType56 = monthDay52.getFieldType((int) (byte) 1);
        int int57 = monthDay50.indexOf(dateTimeFieldType56);
        org.joda.time.Chronology chronology58 = null;
        org.joda.time.MonthDay monthDay59 = monthDay50.withChronologyRetainFields(chronology58);
        org.joda.time.MonthDay monthDay61 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.MonthDay monthDay63 = monthDay61.withChronologyRetainFields(chronology62);
        org.joda.time.DateTimeFieldType dateTimeFieldType65 = monthDay61.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property66 = monthDay61.dayOfMonth();
        org.joda.time.Chronology chronology67 = monthDay61.getChronology();
        org.joda.time.Chronology chronology68 = monthDay61.getChronology();
        boolean boolean69 = monthDay50.isEqual((org.joda.time.ReadablePartial) monthDay61);
        int int70 = monthDay50.getMonthOfYear();
        org.joda.time.Chronology chronology72 = null;
        org.joda.time.MonthDay monthDay73 = new org.joda.time.MonthDay((long) (short) 100, chronology72);
        org.joda.time.MonthDay monthDay75 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology76 = null;
        org.joda.time.MonthDay monthDay77 = monthDay75.withChronologyRetainFields(chronology76);
        org.joda.time.DateTimeFieldType dateTimeFieldType79 = monthDay75.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property80 = monthDay75.dayOfMonth();
        org.joda.time.Chronology chronology81 = monthDay75.getChronology();
        org.joda.time.Chronology chronology82 = monthDay75.getChronology();
        org.joda.time.ReadableInstant readableInstant83 = null;
        org.joda.time.DateTime dateTime84 = monthDay75.toDateTime(readableInstant83);
        org.joda.time.DateTime dateTime85 = monthDay73.toDateTime(readableInstant83);
        org.joda.time.DateTime dateTime86 = monthDay50.toDateTime((org.joda.time.ReadableInstant) dateTime85);
        org.joda.time.DateTime dateTime87 = monthDay41.toDateTime((org.joda.time.ReadableInstant) dateTime85);
        int int88 = property10.compareTo((org.joda.time.ReadableInstant) dateTime85);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(durationField12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(dateTimeFieldType22);
        org.junit.Assert.assertNotNull(property23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(dateTimeFieldType26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 31 + "'", int27 == 31);
        org.junit.Assert.assertNotNull(monthDay29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(dateTimeFieldType37);
        org.junit.Assert.assertNotNull(property38);
        org.junit.Assert.assertNotNull(chronology39);
        org.junit.Assert.assertNotNull(chronology40);
        org.junit.Assert.assertNotNull(monthDay41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "--11-25" + "'", str43, "--11-25");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 11 + "'", int44 == 11);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[11, 25]");
        org.junit.Assert.assertNotNull(monthDay47);
        org.junit.Assert.assertNotNull(monthDay50);
        org.junit.Assert.assertNotNull(monthDay52);
        org.junit.Assert.assertNotNull(monthDay54);
        org.junit.Assert.assertNotNull(dateTimeFieldType56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(monthDay59);
        org.junit.Assert.assertNotNull(monthDay61);
        org.junit.Assert.assertNotNull(monthDay63);
        org.junit.Assert.assertNotNull(dateTimeFieldType65);
        org.junit.Assert.assertNotNull(property66);
        org.junit.Assert.assertNotNull(chronology67);
        org.junit.Assert.assertNotNull(chronology68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertNotNull(monthDay75);
        org.junit.Assert.assertNotNull(monthDay77);
        org.junit.Assert.assertNotNull(dateTimeFieldType79);
        org.junit.Assert.assertNotNull(property80);
        org.junit.Assert.assertNotNull(chronology81);
        org.junit.Assert.assertNotNull(chronology82);
        org.junit.Assert.assertNotNull(dateTime84);
        org.junit.Assert.assertNotNull(dateTime85);
        org.junit.Assert.assertNotNull(dateTime86);
        org.junit.Assert.assertNotNull(dateTime87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
    }

    @Test
    public void test1696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1696");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.format.DateTimeFormatter dateTimeFormatter6 = null;
        java.lang.String str7 = monthDay1.toString(dateTimeFormatter6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.DateTimeFieldType dateTimeFieldType13 = monthDay9.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay9.plus(readablePeriod14);
        org.joda.time.MonthDay monthDay17 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.MonthDay monthDay19 = monthDay17.withChronologyRetainFields(chronology18);
        org.joda.time.MonthDay monthDay21 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.MonthDay monthDay23 = monthDay21.withChronologyRetainFields(chronology22);
        org.joda.time.DateTimeFieldType dateTimeFieldType25 = monthDay21.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property26 = monthDay19.property(dateTimeFieldType25);
        int int27 = property26.get();
        org.joda.time.MonthDay monthDay29 = property26.addWrapFieldToCopy((int) (short) 1);
        boolean boolean30 = monthDay9.isBefore((org.joda.time.ReadablePartial) monthDay29);
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MonthDay monthDay32 = monthDay9.withChronologyRetainFields(chronology31);
        org.joda.time.MonthDay monthDay34 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.MonthDay monthDay36 = monthDay34.withChronologyRetainFields(chronology35);
        org.joda.time.MonthDay monthDay38 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.MonthDay monthDay40 = monthDay38.withChronologyRetainFields(chronology39);
        org.joda.time.DateTimeFieldType dateTimeFieldType42 = monthDay38.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property43 = monthDay36.property(dateTimeFieldType42);
        org.joda.time.MonthDay.Property property44 = monthDay36.monthOfYear();
        int int45 = monthDay36.getDayOfMonth();
        org.joda.time.MonthDay.Property property46 = monthDay36.dayOfMonth();
        int int47 = monthDay36.getDayOfMonth();
        org.joda.time.ReadablePeriod readablePeriod48 = null;
        org.joda.time.MonthDay monthDay49 = monthDay36.plus(readablePeriod48);
        boolean boolean50 = monthDay32.isBefore((org.joda.time.ReadablePartial) monthDay36);
        boolean boolean51 = monthDay1.isAfter((org.joda.time.ReadablePartial) monthDay32);
        org.joda.time.MonthDay monthDay53 = monthDay1.minusDays((int) (byte) 10);
        int int54 = monthDay53.getDayOfMonth();
        org.joda.time.MonthDay monthDay56 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.MonthDay monthDay58 = monthDay56.withChronologyRetainFields(chronology57);
        org.joda.time.DateTimeFieldType dateTimeFieldType60 = monthDay56.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay monthDay62 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology63 = null;
        org.joda.time.MonthDay monthDay64 = monthDay62.withChronologyRetainFields(chronology63);
        org.joda.time.MonthDay monthDay66 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology67 = null;
        org.joda.time.MonthDay monthDay68 = monthDay66.withChronologyRetainFields(chronology67);
        org.joda.time.DateTimeFieldType dateTimeFieldType70 = monthDay66.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property71 = monthDay64.property(dateTimeFieldType70);
        int int72 = monthDay56.indexOf(dateTimeFieldType70);
        org.joda.time.DateTimeZone dateTimeZone73 = null;
        org.joda.time.MonthDay monthDay74 = new org.joda.time.MonthDay(dateTimeZone73);
        org.joda.time.DateTimeField[] dateTimeFieldArray75 = monthDay74.getFields();
        org.joda.time.MonthDay monthDay77 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod78 = null;
        org.joda.time.MonthDay monthDay80 = monthDay77.withPeriodAdded(readablePeriod78, 1);
        boolean boolean81 = monthDay74.isBefore((org.joda.time.ReadablePartial) monthDay77);
        boolean boolean82 = monthDay56.isAfter((org.joda.time.ReadablePartial) monthDay77);
        org.joda.time.MonthDay.Property property83 = monthDay77.dayOfMonth();
        org.joda.time.MonthDay monthDay85 = property83.addWrapFieldToCopy(31);
        org.joda.time.DateTimeFieldType dateTimeFieldType86 = property83.getFieldType();
        org.joda.time.MonthDay monthDay88 = monthDay53.withField(dateTimeFieldType86, (int) (short) 10);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "--01-01" + "'", str7, "--01-01");
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(dateTimeFieldType13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(monthDay17);
        org.junit.Assert.assertNotNull(monthDay19);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertNotNull(monthDay23);
        org.junit.Assert.assertNotNull(dateTimeFieldType25);
        org.junit.Assert.assertNotNull(property26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(monthDay29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertNotNull(monthDay36);
        org.junit.Assert.assertNotNull(monthDay38);
        org.junit.Assert.assertNotNull(monthDay40);
        org.junit.Assert.assertNotNull(dateTimeFieldType42);
        org.junit.Assert.assertNotNull(property43);
        org.junit.Assert.assertNotNull(property44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(property46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(monthDay49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(monthDay53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 22 + "'", int54 == 22);
        org.junit.Assert.assertNotNull(monthDay56);
        org.junit.Assert.assertNotNull(monthDay58);
        org.junit.Assert.assertNotNull(dateTimeFieldType60);
        org.junit.Assert.assertNotNull(monthDay62);
        org.junit.Assert.assertNotNull(monthDay64);
        org.junit.Assert.assertNotNull(monthDay66);
        org.junit.Assert.assertNotNull(monthDay68);
        org.junit.Assert.assertNotNull(dateTimeFieldType70);
        org.junit.Assert.assertNotNull(property71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertNotNull(dateTimeFieldArray75);
        org.junit.Assert.assertNotNull(monthDay77);
        org.junit.Assert.assertNotNull(monthDay80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(property83);
        org.junit.Assert.assertNotNull(monthDay85);
        org.junit.Assert.assertNotNull(dateTimeFieldType86);
        org.junit.Assert.assertNotNull(monthDay88);
    }

    @Test
    public void test1697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1697");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay5.dayOfMonth();
        org.joda.time.Chronology chronology11 = monthDay5.getChronology();
        org.joda.time.MonthDay monthDay12 = org.joda.time.MonthDay.now(chronology11);
        org.joda.time.MonthDay monthDay13 = monthDay3.withChronologyRetainFields(chronology11);
        org.joda.time.ReadablePeriod readablePeriod14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay3.minus(readablePeriod14);
        org.joda.time.MonthDay monthDay17 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.MonthDay monthDay19 = monthDay17.withChronologyRetainFields(chronology18);
        org.joda.time.MonthDay monthDay21 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.MonthDay monthDay23 = monthDay21.withChronologyRetainFields(chronology22);
        org.joda.time.DateTimeFieldType dateTimeFieldType25 = monthDay21.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property26 = monthDay19.property(dateTimeFieldType25);
        int int27 = property26.get();
        int int28 = property26.getMaximumValue();
        org.joda.time.MonthDay monthDay30 = property26.setCopy((int) (short) 1);
        org.joda.time.MonthDay monthDay32 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.MonthDay monthDay34 = monthDay32.withChronologyRetainFields(chronology33);
        org.joda.time.DateTimeFieldType dateTimeFieldType36 = monthDay32.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod37 = null;
        org.joda.time.MonthDay monthDay38 = monthDay32.plus(readablePeriod37);
        int int39 = monthDay32.getDayOfMonth();
        int int40 = property26.compareTo((org.joda.time.ReadablePartial) monthDay32);
        boolean boolean41 = monthDay15.isBefore((org.joda.time.ReadablePartial) monthDay32);
        org.joda.time.Chronology chronology42 = monthDay32.getChronology();
        org.joda.time.MonthDay monthDay44 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod45 = null;
        org.joda.time.MonthDay monthDay47 = monthDay44.withPeriodAdded(readablePeriod45, 1);
        org.joda.time.MonthDay monthDay49 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.MonthDay monthDay51 = monthDay49.withChronologyRetainFields(chronology50);
        org.joda.time.DateTimeFieldType dateTimeFieldType53 = monthDay49.getFieldType((int) (byte) 1);
        int int54 = monthDay47.indexOf(dateTimeFieldType53);
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.MonthDay monthDay56 = monthDay47.withChronologyRetainFields(chronology55);
        org.joda.time.MonthDay monthDay58 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology59 = null;
        org.joda.time.MonthDay monthDay60 = monthDay58.withChronologyRetainFields(chronology59);
        org.joda.time.DateTimeFieldType dateTimeFieldType62 = monthDay58.getFieldType((int) (byte) 1);
        int int63 = monthDay47.get(dateTimeFieldType62);
        org.joda.time.DateTimeFieldType dateTimeFieldType64 = null;
        boolean boolean65 = monthDay47.isSupported(dateTimeFieldType64);
        int int66 = monthDay32.compareTo((org.joda.time.ReadablePartial) monthDay47);
        org.joda.time.MonthDay monthDay68 = monthDay47.plusMonths(24);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertNotNull(chronology11);
        org.junit.Assert.assertNotNull(monthDay12);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(monthDay17);
        org.junit.Assert.assertNotNull(monthDay19);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertNotNull(monthDay23);
        org.junit.Assert.assertNotNull(dateTimeFieldType25);
        org.junit.Assert.assertNotNull(property26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 31 + "'", int28 == 31);
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertNotNull(dateTimeFieldType36);
        org.junit.Assert.assertNotNull(monthDay38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(chronology42);
        org.junit.Assert.assertNotNull(monthDay44);
        org.junit.Assert.assertNotNull(monthDay47);
        org.junit.Assert.assertNotNull(monthDay49);
        org.junit.Assert.assertNotNull(monthDay51);
        org.junit.Assert.assertNotNull(dateTimeFieldType53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(monthDay56);
        org.junit.Assert.assertNotNull(monthDay58);
        org.junit.Assert.assertNotNull(monthDay60);
        org.junit.Assert.assertNotNull(dateTimeFieldType62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(monthDay68);
    }

    @Test
    public void test1698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1698");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.MonthDay monthDay13 = property10.addToCopy((int) (short) 0);
        org.joda.time.MonthDay monthDay15 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MonthDay monthDay17 = monthDay15.withChronologyRetainFields(chronology16);
        org.joda.time.MonthDay monthDay19 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MonthDay monthDay21 = monthDay19.withChronologyRetainFields(chronology20);
        org.joda.time.DateTimeFieldType dateTimeFieldType23 = monthDay19.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property24 = monthDay17.property(dateTimeFieldType23);
        int int25 = property24.get();
        org.joda.time.DurationField durationField26 = property24.getDurationField();
        java.util.Locale locale27 = null;
        int int28 = property24.getMaximumTextLength(locale27);
        org.joda.time.MonthDay monthDay30 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MonthDay monthDay32 = monthDay30.withChronologyRetainFields(chronology31);
        org.joda.time.DateTimeFieldType dateTimeFieldType34 = monthDay30.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property35 = monthDay30.dayOfMonth();
        org.joda.time.Chronology chronology36 = monthDay30.getChronology();
        org.joda.time.Chronology chronology37 = monthDay30.getChronology();
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.DateTime dateTime39 = monthDay30.toDateTime(readableInstant38);
        int int40 = property24.compareTo((org.joda.time.ReadableInstant) dateTime39);
        int int41 = property10.compareTo((org.joda.time.ReadableInstant) dateTime39);
        java.util.Locale locale42 = null;
        int int43 = property10.getMaximumShortTextLength(locale42);
        int int44 = property10.get();
        java.lang.String str45 = property10.toString();
        int int46 = property10.get();
        java.util.Locale locale47 = null;
        int int48 = property10.getMaximumShortTextLength(locale47);
        int int49 = property10.getMinimumValue();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(monthDay17);
        org.junit.Assert.assertNotNull(monthDay19);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertNotNull(dateTimeFieldType23);
        org.junit.Assert.assertNotNull(property24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(durationField26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(dateTimeFieldType34);
        org.junit.Assert.assertNotNull(property35);
        org.junit.Assert.assertNotNull(chronology36);
        org.junit.Assert.assertNotNull(chronology37);
        org.junit.Assert.assertNotNull(dateTime39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Property[dayOfMonth]" + "'", str45, "Property[dayOfMonth]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2 + "'", int48 == 2);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
    }

    @Test
    public void test1699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1699");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        org.joda.time.MonthDay monthDay12 = property10.addWrapFieldToCopy(100);
        java.util.Locale locale13 = null;
        java.lang.String str14 = property10.getAsText(locale13);
        org.joda.time.MonthDay monthDay16 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MonthDay monthDay18 = monthDay16.withChronologyRetainFields(chronology17);
        org.joda.time.DateTimeFieldType dateTimeFieldType20 = monthDay16.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property21 = monthDay16.dayOfMonth();
        org.joda.time.Chronology chronology22 = monthDay16.getChronology();
        org.joda.time.Chronology chronology23 = monthDay16.getChronology();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.DateTime dateTime25 = monthDay16.toDateTime(readableInstant24);
        org.joda.time.MonthDay monthDay27 = monthDay16.plusMonths((int) ' ');
        org.joda.time.MonthDay monthDay29 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.MonthDay monthDay31 = monthDay29.withChronologyRetainFields(chronology30);
        org.joda.time.DateTimeFieldType dateTimeFieldType33 = monthDay29.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod34 = null;
        org.joda.time.MonthDay monthDay35 = monthDay29.plus(readablePeriod34);
        org.joda.time.MonthDay monthDay37 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.MonthDay monthDay39 = monthDay37.withChronologyRetainFields(chronology38);
        org.joda.time.MonthDay monthDay41 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.MonthDay monthDay43 = monthDay41.withChronologyRetainFields(chronology42);
        org.joda.time.DateTimeFieldType dateTimeFieldType45 = monthDay41.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property46 = monthDay39.property(dateTimeFieldType45);
        int int47 = property46.get();
        org.joda.time.MonthDay monthDay49 = property46.addWrapFieldToCopy((int) (short) 1);
        boolean boolean50 = monthDay29.isBefore((org.joda.time.ReadablePartial) monthDay49);
        org.joda.time.MonthDay monthDay52 = monthDay49.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay54 = monthDay52.plusMonths(1);
        org.joda.time.ReadablePeriod readablePeriod55 = null;
        org.joda.time.MonthDay monthDay56 = monthDay52.minus(readablePeriod55);
        org.joda.time.DateTimeZone dateTimeZone57 = null;
        org.joda.time.MonthDay monthDay58 = new org.joda.time.MonthDay(dateTimeZone57);
        boolean boolean59 = monthDay56.isEqual((org.joda.time.ReadablePartial) monthDay58);
        boolean boolean60 = monthDay16.equals((java.lang.Object) monthDay56);
        org.joda.time.MonthDay.Property property61 = monthDay56.dayOfMonth();
        int int62 = property10.compareTo((org.joda.time.ReadablePartial) monthDay56);
        org.joda.time.MonthDay monthDay64 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology65 = null;
        org.joda.time.MonthDay monthDay66 = monthDay64.withChronologyRetainFields(chronology65);
        org.joda.time.MonthDay monthDay68 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology69 = null;
        org.joda.time.MonthDay monthDay70 = monthDay68.withChronologyRetainFields(chronology69);
        org.joda.time.DateTimeFieldType dateTimeFieldType72 = monthDay68.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property73 = monthDay66.property(dateTimeFieldType72);
        org.joda.time.MonthDay monthDay75 = property73.addWrapFieldToCopy(100);
        boolean boolean76 = monthDay56.isEqual((org.joda.time.ReadablePartial) monthDay75);
        org.joda.time.DurationFieldType durationFieldType77 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MonthDay monthDay79 = monthDay75.withFieldAdded(durationFieldType77, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Field 'null' is not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertNotNull(monthDay12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1" + "'", str14, "1");
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(dateTimeFieldType20);
        org.junit.Assert.assertNotNull(property21);
        org.junit.Assert.assertNotNull(chronology22);
        org.junit.Assert.assertNotNull(chronology23);
        org.junit.Assert.assertNotNull(dateTime25);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertNotNull(monthDay29);
        org.junit.Assert.assertNotNull(monthDay31);
        org.junit.Assert.assertNotNull(dateTimeFieldType33);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(monthDay37);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertNotNull(monthDay41);
        org.junit.Assert.assertNotNull(monthDay43);
        org.junit.Assert.assertNotNull(dateTimeFieldType45);
        org.junit.Assert.assertNotNull(property46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(monthDay49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(monthDay52);
        org.junit.Assert.assertNotNull(monthDay54);
        org.junit.Assert.assertNotNull(monthDay56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(property61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(monthDay64);
        org.junit.Assert.assertNotNull(monthDay66);
        org.junit.Assert.assertNotNull(monthDay68);
        org.junit.Assert.assertNotNull(monthDay70);
        org.junit.Assert.assertNotNull(dateTimeFieldType72);
        org.junit.Assert.assertNotNull(property73);
        org.junit.Assert.assertNotNull(monthDay75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test1700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1700");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        java.lang.String str11 = property10.getAsText();
        org.joda.time.MonthDay monthDay13 = property10.setCopy((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.plus(readablePeriod14);
        int int16 = monthDay15.getMonthOfYear();
        int int17 = monthDay15.getDayOfMonth();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1" + "'", str11, "1");
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
    }

    @Test
    public void test1701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1701");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.DurationField durationField12 = property10.getDurationField();
        org.joda.time.MonthDay monthDay14 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MonthDay monthDay16 = monthDay14.withChronologyRetainFields(chronology15);
        org.joda.time.MonthDay monthDay18 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MonthDay monthDay20 = monthDay18.withChronologyRetainFields(chronology19);
        org.joda.time.DateTimeFieldType dateTimeFieldType22 = monthDay18.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property23 = monthDay16.property(dateTimeFieldType22);
        boolean boolean24 = property10.equals((java.lang.Object) monthDay16);
        java.lang.String str25 = property10.getAsShortText();
        java.lang.String str26 = property10.toString();
        java.util.Locale locale27 = null;
        int int28 = property10.getMaximumShortTextLength(locale27);
        boolean boolean30 = property10.equals((java.lang.Object) 0.0d);
        org.joda.time.MonthDay monthDay32 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.MonthDay monthDay34 = monthDay32.withChronologyRetainFields(chronology33);
        org.joda.time.DateTimeFieldType dateTimeFieldType36 = monthDay32.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod37 = null;
        org.joda.time.MonthDay monthDay38 = monthDay32.plus(readablePeriod37);
        org.joda.time.MonthDay monthDay40 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.MonthDay monthDay42 = monthDay40.withChronologyRetainFields(chronology41);
        org.joda.time.MonthDay monthDay44 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.MonthDay monthDay46 = monthDay44.withChronologyRetainFields(chronology45);
        org.joda.time.DateTimeFieldType dateTimeFieldType48 = monthDay44.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property49 = monthDay42.property(dateTimeFieldType48);
        int int50 = property49.get();
        org.joda.time.MonthDay monthDay52 = property49.addWrapFieldToCopy((int) (short) 1);
        boolean boolean53 = monthDay32.isBefore((org.joda.time.ReadablePartial) monthDay52);
        int int54 = property10.compareTo((org.joda.time.ReadablePartial) monthDay52);
        java.lang.String str55 = property10.getAsText();
        java.lang.String str56 = property10.getName();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(durationField12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(dateTimeFieldType22);
        org.junit.Assert.assertNotNull(property23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1" + "'", str25, "1");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Property[dayOfMonth]" + "'", str26, "Property[dayOfMonth]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertNotNull(dateTimeFieldType36);
        org.junit.Assert.assertNotNull(monthDay38);
        org.junit.Assert.assertNotNull(monthDay40);
        org.junit.Assert.assertNotNull(monthDay42);
        org.junit.Assert.assertNotNull(monthDay44);
        org.junit.Assert.assertNotNull(monthDay46);
        org.junit.Assert.assertNotNull(dateTimeFieldType48);
        org.junit.Assert.assertNotNull(property49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(monthDay52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "1" + "'", str55, "1");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "dayOfMonth" + "'", str56, "dayOfMonth");
    }

    @Test
    public void test1702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1702");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        org.joda.time.MonthDay.Property property11 = monthDay3.monthOfYear();
        org.joda.time.DurationField durationField12 = property11.getRangeDurationField();
        org.joda.time.MonthDay monthDay14 = property11.setCopy("1");
        org.joda.time.MonthDay monthDay17 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.MonthDay monthDay19 = monthDay17.withChronologyRetainFields(chronology18);
        org.joda.time.DateTimeFieldType dateTimeFieldType21 = monthDay17.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property22 = monthDay17.dayOfMonth();
        org.joda.time.Chronology chronology23 = monthDay17.getChronology();
        org.joda.time.MonthDay monthDay24 = new org.joda.time.MonthDay((-1L), chronology23);
        boolean boolean25 = monthDay14.isBefore((org.joda.time.ReadablePartial) monthDay24);
        org.joda.time.MonthDay.Property property26 = monthDay24.monthOfYear();
        org.joda.time.MonthDay monthDay28 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.MonthDay monthDay30 = monthDay28.withChronologyRetainFields(chronology29);
        org.joda.time.MonthDay monthDay32 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.MonthDay monthDay34 = monthDay32.withChronologyRetainFields(chronology33);
        org.joda.time.DateTimeFieldType dateTimeFieldType36 = monthDay32.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property37 = monthDay30.property(dateTimeFieldType36);
        org.joda.time.MonthDay.Property property38 = monthDay30.monthOfYear();
        org.joda.time.DurationField durationField39 = property38.getRangeDurationField();
        org.joda.time.MonthDay monthDay41 = property38.setCopy("1");
        org.joda.time.MonthDay monthDay44 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.MonthDay monthDay46 = monthDay44.withChronologyRetainFields(chronology45);
        org.joda.time.DateTimeFieldType dateTimeFieldType48 = monthDay44.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property49 = monthDay44.dayOfMonth();
        org.joda.time.Chronology chronology50 = monthDay44.getChronology();
        org.joda.time.MonthDay monthDay51 = new org.joda.time.MonthDay((-1L), chronology50);
        boolean boolean52 = monthDay41.isBefore((org.joda.time.ReadablePartial) monthDay51);
        org.joda.time.MonthDay.Property property53 = monthDay51.monthOfYear();
        int int54 = monthDay24.compareTo((org.joda.time.ReadablePartial) monthDay51);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertNotNull(property11);
        org.junit.Assert.assertNotNull(durationField12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay17);
        org.junit.Assert.assertNotNull(monthDay19);
        org.junit.Assert.assertNotNull(dateTimeFieldType21);
        org.junit.Assert.assertNotNull(property22);
        org.junit.Assert.assertNotNull(chronology23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(property26);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertNotNull(dateTimeFieldType36);
        org.junit.Assert.assertNotNull(property37);
        org.junit.Assert.assertNotNull(property38);
        org.junit.Assert.assertNotNull(durationField39);
        org.junit.Assert.assertNotNull(monthDay41);
        org.junit.Assert.assertNotNull(monthDay44);
        org.junit.Assert.assertNotNull(monthDay46);
        org.junit.Assert.assertNotNull(dateTimeFieldType48);
        org.junit.Assert.assertNotNull(property49);
        org.junit.Assert.assertNotNull(chronology50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(property53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
    }

    @Test
    public void test1703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1703");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.MonthDay monthDay24 = monthDay21.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay26 = monthDay24.plusMonths(1);
        org.joda.time.MonthDay monthDay28 = monthDay24.minusMonths((int) (short) 10);
        org.joda.time.MonthDay monthDay30 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MonthDay monthDay32 = monthDay30.withChronologyRetainFields(chronology31);
        org.joda.time.MonthDay monthDay34 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.MonthDay monthDay36 = monthDay34.withChronologyRetainFields(chronology35);
        org.joda.time.DateTimeFieldType dateTimeFieldType38 = monthDay34.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property39 = monthDay32.property(dateTimeFieldType38);
        int int40 = property39.get();
        org.joda.time.MonthDay monthDay42 = property39.addToCopy((int) (short) 0);
        int int43 = property39.getMaximumValue();
        org.joda.time.DateTimeFieldType dateTimeFieldType44 = property39.getFieldType();
        org.joda.time.MonthDay monthDay46 = monthDay24.withField(dateTimeFieldType44, (int) (byte) 1);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertNotNull(monthDay36);
        org.junit.Assert.assertNotNull(dateTimeFieldType38);
        org.junit.Assert.assertNotNull(property39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(monthDay42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 31 + "'", int43 == 31);
        org.junit.Assert.assertNotNull(dateTimeFieldType44);
        org.junit.Assert.assertNotNull(monthDay46);
    }

    @Test
    public void test1704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1704");
        org.joda.time.MonthDay monthDay1 = new org.joda.time.MonthDay(10L);
        int int2 = monthDay1.size();
        org.joda.time.MonthDay monthDay4 = monthDay1.minusDays((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod5 = null;
        org.joda.time.MonthDay monthDay6 = monthDay4.plus(readablePeriod5);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.MonthDay monthDay8 = monthDay6.minus(readablePeriod7);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertNotNull(monthDay4);
        org.junit.Assert.assertNotNull(monthDay6);
        org.junit.Assert.assertNotNull(monthDay8);
    }

    @Test
    public void test1705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1705");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.MonthDay monthDay3 = monthDay1.minusDays((int) '#');
        int int4 = monthDay3.size();
        org.joda.time.MonthDay monthDay6 = monthDay3.withMonthOfYear(9);
        int int8 = monthDay6.getValue((int) (short) 1);
        org.joda.time.MonthDay monthDay10 = monthDay6.plusMonths((int) 'a');
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertNotNull(monthDay6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 28 + "'", int8 == 28);
        org.junit.Assert.assertNotNull(monthDay10);
    }

    @Test
    public void test1706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1706");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.MonthDay monthDay13 = property10.addWrapFieldToCopy((int) (short) 1);
        org.joda.time.MonthDay.Property property14 = monthDay13.dayOfMonth();
        int int15 = property14.getMaximumValueOverall();
        int int16 = property14.getMinimumValueOverall();
        org.joda.time.MonthDay monthDay18 = property14.setCopy(31);
        java.util.Locale locale19 = null;
        java.lang.String str20 = property14.getAsShortText(locale19);
        java.lang.String str21 = property14.getAsString();
        int int22 = property14.getMaximumValue();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(property14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 31 + "'", int15 == 31);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "2" + "'", str20, "2");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "2" + "'", str21, "2");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 31 + "'", int22 == 31);
    }

    @Test
    public void test1707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1707");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod2 = null;
        org.joda.time.MonthDay monthDay4 = monthDay1.withPeriodAdded(readablePeriod2, 1);
        org.joda.time.MonthDay monthDay6 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.MonthDay monthDay8 = monthDay6.withChronologyRetainFields(chronology7);
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = monthDay6.getFieldType((int) (byte) 1);
        int int11 = monthDay4.indexOf(dateTimeFieldType10);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MonthDay monthDay13 = monthDay4.withChronologyRetainFields(chronology12);
        org.joda.time.MonthDay.Property property14 = monthDay13.dayOfMonth();
        java.lang.String str15 = property14.toString();
        org.joda.time.MonthDay monthDay17 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.MonthDay monthDay19 = monthDay17.withChronologyRetainFields(chronology18);
        org.joda.time.DateTimeFieldType dateTimeFieldType21 = monthDay17.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod22 = null;
        org.joda.time.MonthDay monthDay23 = monthDay17.plus(readablePeriod22);
        org.joda.time.MonthDay monthDay25 = monthDay17.plusMonths((int) (byte) 1);
        org.joda.time.MonthDay monthDay27 = monthDay17.plusDays(31);
        int int28 = property14.compareTo((org.joda.time.ReadablePartial) monthDay27);
        org.joda.time.MonthDay monthDay30 = monthDay27.minusMonths(0);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay4);
        org.junit.Assert.assertNotNull(monthDay6);
        org.junit.Assert.assertNotNull(monthDay8);
        org.junit.Assert.assertNotNull(dateTimeFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(property14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Property[dayOfMonth]" + "'", str15, "Property[dayOfMonth]");
        org.junit.Assert.assertNotNull(monthDay17);
        org.junit.Assert.assertNotNull(monthDay19);
        org.junit.Assert.assertNotNull(dateTimeFieldType21);
        org.junit.Assert.assertNotNull(monthDay23);
        org.junit.Assert.assertNotNull(monthDay25);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(monthDay30);
    }

    @Test
    public void test1708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1708");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        java.util.Locale locale11 = null;
        int int12 = property10.getMaximumTextLength(locale11);
        int int13 = property10.getMinimumValue();
        org.joda.time.MonthDay monthDay15 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MonthDay monthDay17 = monthDay15.withChronologyRetainFields(chronology16);
        org.joda.time.DateTimeFieldType dateTimeFieldType19 = monthDay15.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay monthDay21 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.MonthDay monthDay23 = monthDay21.withChronologyRetainFields(chronology22);
        org.joda.time.MonthDay monthDay25 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.MonthDay monthDay27 = monthDay25.withChronologyRetainFields(chronology26);
        org.joda.time.DateTimeFieldType dateTimeFieldType29 = monthDay25.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property30 = monthDay23.property(dateTimeFieldType29);
        int int31 = monthDay15.indexOf(dateTimeFieldType29);
        org.joda.time.MonthDay monthDay33 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.MonthDay monthDay35 = monthDay33.withChronologyRetainFields(chronology34);
        org.joda.time.MonthDay monthDay37 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.MonthDay monthDay39 = monthDay37.withChronologyRetainFields(chronology38);
        org.joda.time.DateTimeFieldType dateTimeFieldType41 = monthDay37.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property42 = monthDay35.property(dateTimeFieldType41);
        int int43 = property42.get();
        org.joda.time.MonthDay monthDay45 = property42.addToCopy((int) (short) 0);
        org.joda.time.MonthDay monthDay47 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.MonthDay monthDay49 = monthDay47.withChronologyRetainFields(chronology48);
        org.joda.time.MonthDay monthDay51 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.MonthDay monthDay53 = monthDay51.withChronologyRetainFields(chronology52);
        org.joda.time.DateTimeFieldType dateTimeFieldType55 = monthDay51.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property56 = monthDay49.property(dateTimeFieldType55);
        int int57 = property56.get();
        org.joda.time.DurationField durationField58 = property56.getDurationField();
        java.util.Locale locale59 = null;
        int int60 = property56.getMaximumTextLength(locale59);
        org.joda.time.MonthDay monthDay62 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology63 = null;
        org.joda.time.MonthDay monthDay64 = monthDay62.withChronologyRetainFields(chronology63);
        org.joda.time.DateTimeFieldType dateTimeFieldType66 = monthDay62.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property67 = monthDay62.dayOfMonth();
        org.joda.time.Chronology chronology68 = monthDay62.getChronology();
        org.joda.time.Chronology chronology69 = monthDay62.getChronology();
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.DateTime dateTime71 = monthDay62.toDateTime(readableInstant70);
        int int72 = property56.compareTo((org.joda.time.ReadableInstant) dateTime71);
        int int73 = property42.compareTo((org.joda.time.ReadableInstant) dateTime71);
        org.joda.time.DateTime dateTime74 = monthDay15.toDateTime((org.joda.time.ReadableInstant) dateTime71);
        int int75 = property10.compareTo((org.joda.time.ReadableInstant) dateTime71);
        java.util.Locale locale76 = null;
        java.lang.String str77 = property10.getAsText(locale76);
        org.joda.time.MonthDay monthDay79 = property10.addToCopy(0);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(monthDay17);
        org.junit.Assert.assertNotNull(dateTimeFieldType19);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertNotNull(monthDay23);
        org.junit.Assert.assertNotNull(monthDay25);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertNotNull(dateTimeFieldType29);
        org.junit.Assert.assertNotNull(property30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(monthDay37);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertNotNull(dateTimeFieldType41);
        org.junit.Assert.assertNotNull(property42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(monthDay45);
        org.junit.Assert.assertNotNull(monthDay47);
        org.junit.Assert.assertNotNull(monthDay49);
        org.junit.Assert.assertNotNull(monthDay51);
        org.junit.Assert.assertNotNull(monthDay53);
        org.junit.Assert.assertNotNull(dateTimeFieldType55);
        org.junit.Assert.assertNotNull(property56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(durationField58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2 + "'", int60 == 2);
        org.junit.Assert.assertNotNull(monthDay62);
        org.junit.Assert.assertNotNull(monthDay64);
        org.junit.Assert.assertNotNull(dateTimeFieldType66);
        org.junit.Assert.assertNotNull(property67);
        org.junit.Assert.assertNotNull(chronology68);
        org.junit.Assert.assertNotNull(chronology69);
        org.junit.Assert.assertNotNull(dateTime71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(dateTime74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "1" + "'", str77, "1");
        org.junit.Assert.assertNotNull(monthDay79);
    }

    @Test
    public void test1709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1709");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.MonthDay monthDay13 = property10.addWrapFieldToCopy((int) (short) 1);
        org.joda.time.MonthDay.Property property14 = monthDay13.dayOfMonth();
        int int15 = property14.getMaximumValueOverall();
        int int16 = property14.getMinimumValueOverall();
        java.util.Locale locale18 = null;
        org.joda.time.MonthDay monthDay19 = property14.setCopy("2", locale18);
        org.joda.time.MonthDay monthDay21 = monthDay19.minusMonths(11);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MonthDay monthDay24 = monthDay21.withFieldAdded(durationFieldType22, 12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Field 'null' is not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(property14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 31 + "'", int15 == 31);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(monthDay19);
        org.junit.Assert.assertNotNull(monthDay21);
    }

    @Test
    public void test1710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1710");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.DurationField durationField12 = property10.getDurationField();
        org.joda.time.MonthDay monthDay14 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MonthDay monthDay16 = monthDay14.withChronologyRetainFields(chronology15);
        org.joda.time.MonthDay monthDay18 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MonthDay monthDay20 = monthDay18.withChronologyRetainFields(chronology19);
        org.joda.time.DateTimeFieldType dateTimeFieldType22 = monthDay18.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property23 = monthDay16.property(dateTimeFieldType22);
        boolean boolean24 = property10.equals((java.lang.Object) monthDay16);
        int int25 = property10.getMinimumValueOverall();
        org.joda.time.DateTimeFieldType dateTimeFieldType26 = property10.getFieldType();
        java.util.Locale locale27 = null;
        java.lang.String str28 = property10.getAsText(locale27);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(durationField12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(dateTimeFieldType22);
        org.junit.Assert.assertNotNull(property23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(dateTimeFieldType26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1" + "'", str28, "1");
    }

    @Test
    @Ignore
  public void test1711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1711");
        org.joda.time.DateTimeZone dateTimeZone0 = null;
        org.joda.time.MonthDay monthDay1 = new org.joda.time.MonthDay(dateTimeZone0);
        org.joda.time.DateTimeField[] dateTimeFieldArray2 = monthDay1.getFields();
        org.joda.time.MonthDay monthDay4 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod5 = null;
        org.joda.time.MonthDay monthDay7 = monthDay4.withPeriodAdded(readablePeriod5, 1);
        boolean boolean8 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay4);
        org.joda.time.MonthDay monthDay10 = monthDay1.plusDays((int) (short) -1);
        org.joda.time.format.DateTimeFormatter dateTimeFormatter11 = null;
        java.lang.String str12 = monthDay10.toString(dateTimeFormatter11);
        org.joda.time.MonthDay monthDay14 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MonthDay monthDay16 = monthDay14.withChronologyRetainFields(chronology15);
        org.joda.time.DateTimeFieldType dateTimeFieldType18 = monthDay14.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod19 = null;
        org.joda.time.MonthDay monthDay20 = monthDay14.plus(readablePeriod19);
        org.joda.time.ReadablePeriod readablePeriod21 = null;
        org.joda.time.MonthDay monthDay23 = monthDay14.withPeriodAdded(readablePeriod21, 9);
        org.joda.time.DateTimeField dateTimeField25 = monthDay23.getField(1);
        java.lang.String str27 = monthDay23.toString("--09-02");
        org.joda.time.ReadablePeriod readablePeriod28 = null;
        org.joda.time.MonthDay monthDay29 = monthDay23.plus(readablePeriod28);
        org.joda.time.DateTimeFieldType[] dateTimeFieldTypeArray30 = monthDay29.getFieldTypes();
        org.joda.time.MonthDay monthDay32 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.MonthDay monthDay34 = monthDay32.withChronologyRetainFields(chronology33);
        org.joda.time.DateTimeFieldType dateTimeFieldType36 = monthDay32.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod37 = null;
        org.joda.time.MonthDay monthDay38 = monthDay32.plus(readablePeriod37);
        org.joda.time.MonthDay monthDay40 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.MonthDay monthDay42 = monthDay40.withChronologyRetainFields(chronology41);
        org.joda.time.MonthDay monthDay44 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.MonthDay monthDay46 = monthDay44.withChronologyRetainFields(chronology45);
        org.joda.time.DateTimeFieldType dateTimeFieldType48 = monthDay44.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property49 = monthDay42.property(dateTimeFieldType48);
        int int50 = property49.get();
        org.joda.time.MonthDay monthDay52 = property49.addWrapFieldToCopy((int) (short) 1);
        boolean boolean53 = monthDay32.isBefore((org.joda.time.ReadablePartial) monthDay52);
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.MonthDay monthDay55 = monthDay32.withChronologyRetainFields(chronology54);
        org.joda.time.Chronology chronology56 = monthDay55.getChronology();
        org.joda.time.MonthDay monthDay58 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod59 = null;
        org.joda.time.MonthDay monthDay61 = monthDay58.withPeriodAdded(readablePeriod59, 1);
        org.joda.time.MonthDay monthDay63 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.MonthDay monthDay65 = monthDay63.withChronologyRetainFields(chronology64);
        org.joda.time.DateTimeFieldType dateTimeFieldType67 = monthDay63.getFieldType((int) (byte) 1);
        int int68 = monthDay61.indexOf(dateTimeFieldType67);
        org.joda.time.Chronology chronology69 = null;
        org.joda.time.MonthDay monthDay70 = monthDay61.withChronologyRetainFields(chronology69);
        boolean boolean71 = monthDay55.isAfter((org.joda.time.ReadablePartial) monthDay61);
        org.joda.time.MonthDay monthDay73 = monthDay55.plusDays(2);
        org.joda.time.MonthDay monthDay75 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology76 = null;
        org.joda.time.MonthDay monthDay77 = monthDay75.withChronologyRetainFields(chronology76);
        org.joda.time.MonthDay monthDay79 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology80 = null;
        org.joda.time.MonthDay monthDay81 = monthDay79.withChronologyRetainFields(chronology80);
        org.joda.time.DateTimeFieldType dateTimeFieldType83 = monthDay79.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property84 = monthDay77.property(dateTimeFieldType83);
        int int85 = property84.get();
        org.joda.time.MonthDay monthDay87 = property84.addWrapFieldToCopy((int) (short) 1);
        org.joda.time.MonthDay monthDay89 = monthDay87.plusDays(2);
        boolean boolean90 = monthDay55.isEqual((org.joda.time.ReadablePartial) monthDay87);
        boolean boolean91 = monthDay29.isBefore((org.joda.time.ReadablePartial) monthDay87);
        boolean boolean92 = monthDay10.isEqual((org.joda.time.ReadablePartial) monthDay29);
        org.junit.Assert.assertNotNull(dateTimeFieldArray2);
        org.junit.Assert.assertNotNull(monthDay4);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(monthDay10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "--11-24" + "'", str12, "--11-24");
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(dateTimeFieldType18);
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(monthDay23);
        org.junit.Assert.assertNotNull(dateTimeField25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "--09-02" + "'", str27, "--09-02");
        org.junit.Assert.assertNotNull(monthDay29);
        org.junit.Assert.assertNotNull(dateTimeFieldTypeArray30);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertNotNull(dateTimeFieldType36);
        org.junit.Assert.assertNotNull(monthDay38);
        org.junit.Assert.assertNotNull(monthDay40);
        org.junit.Assert.assertNotNull(monthDay42);
        org.junit.Assert.assertNotNull(monthDay44);
        org.junit.Assert.assertNotNull(monthDay46);
        org.junit.Assert.assertNotNull(dateTimeFieldType48);
        org.junit.Assert.assertNotNull(property49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(monthDay52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(monthDay55);
        org.junit.Assert.assertNotNull(chronology56);
        org.junit.Assert.assertNotNull(monthDay58);
        org.junit.Assert.assertNotNull(monthDay61);
        org.junit.Assert.assertNotNull(monthDay63);
        org.junit.Assert.assertNotNull(monthDay65);
        org.junit.Assert.assertNotNull(dateTimeFieldType67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(monthDay70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(monthDay73);
        org.junit.Assert.assertNotNull(monthDay75);
        org.junit.Assert.assertNotNull(monthDay77);
        org.junit.Assert.assertNotNull(monthDay79);
        org.junit.Assert.assertNotNull(monthDay81);
        org.junit.Assert.assertNotNull(dateTimeFieldType83);
        org.junit.Assert.assertNotNull(property84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertNotNull(monthDay87);
        org.junit.Assert.assertNotNull(monthDay89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test1712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1712");
        org.joda.time.MonthDay monthDay3 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MonthDay monthDay5 = monthDay3.withChronologyRetainFields(chronology4);
        org.joda.time.MonthDay monthDay7 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.MonthDay monthDay9 = monthDay7.withChronologyRetainFields(chronology8);
        org.joda.time.DateTimeFieldType dateTimeFieldType11 = monthDay7.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property12 = monthDay5.property(dateTimeFieldType11);
        org.joda.time.MonthDay.Property property13 = monthDay5.monthOfYear();
        org.joda.time.MonthDay monthDay15 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MonthDay monthDay17 = monthDay15.withChronologyRetainFields(chronology16);
        org.joda.time.DateTimeFieldType dateTimeFieldType19 = monthDay15.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay monthDay21 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.MonthDay monthDay23 = monthDay21.withChronologyRetainFields(chronology22);
        org.joda.time.MonthDay monthDay25 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.MonthDay monthDay27 = monthDay25.withChronologyRetainFields(chronology26);
        org.joda.time.DateTimeFieldType dateTimeFieldType29 = monthDay25.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property30 = monthDay23.property(dateTimeFieldType29);
        int int31 = monthDay15.indexOf(dateTimeFieldType29);
        boolean boolean32 = monthDay5.equals((java.lang.Object) int31);
        org.joda.time.MonthDay monthDay34 = monthDay5.withMonthOfYear(9);
        int int36 = monthDay34.getValue((int) (byte) 0);
        org.joda.time.DateTimeFieldType[] dateTimeFieldTypeArray37 = monthDay34.getFieldTypes();
        org.joda.time.MonthDay monthDay39 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.MonthDay monthDay41 = monthDay39.withChronologyRetainFields(chronology40);
        org.joda.time.DateTimeFieldType dateTimeFieldType43 = monthDay39.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property44 = monthDay39.dayOfMonth();
        org.joda.time.Chronology chronology45 = monthDay39.getChronology();
        org.joda.time.Chronology chronology46 = monthDay39.getChronology();
        org.joda.time.MonthDay monthDay47 = monthDay34.withChronologyRetainFields(chronology46);
        org.joda.time.MonthDay monthDay48 = new org.joda.time.MonthDay((int) (byte) 10, (int) (byte) 1, chronology46);
        org.joda.time.MonthDay.Property property49 = monthDay48.dayOfMonth();
        java.util.Locale locale50 = null;
        int int51 = property49.getMaximumTextLength(locale50);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(dateTimeFieldType11);
        org.junit.Assert.assertNotNull(property12);
        org.junit.Assert.assertNotNull(property13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(monthDay17);
        org.junit.Assert.assertNotNull(dateTimeFieldType19);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertNotNull(monthDay23);
        org.junit.Assert.assertNotNull(monthDay25);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertNotNull(dateTimeFieldType29);
        org.junit.Assert.assertNotNull(property30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 9 + "'", int36 == 9);
        org.junit.Assert.assertNotNull(dateTimeFieldTypeArray37);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertNotNull(monthDay41);
        org.junit.Assert.assertNotNull(dateTimeFieldType43);
        org.junit.Assert.assertNotNull(property44);
        org.junit.Assert.assertNotNull(chronology45);
        org.junit.Assert.assertNotNull(chronology46);
        org.junit.Assert.assertNotNull(monthDay47);
        org.junit.Assert.assertNotNull(property49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
    }

    @Test
    public void test1713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1713");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property6 = monthDay1.dayOfMonth();
        java.util.Locale locale7 = null;
        java.lang.String str8 = property6.getAsText(locale7);
        java.util.Locale locale9 = null;
        java.lang.String str10 = property6.getAsShortText(locale9);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(property6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1" + "'", str8, "1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1" + "'", str10, "1");
    }

    @Test
    public void test1714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1714");
        org.joda.time.MonthDay monthDay4 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.MonthDay monthDay6 = monthDay4.withChronologyRetainFields(chronology5);
        org.joda.time.DateTimeFieldType dateTimeFieldType8 = monthDay4.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod9 = null;
        org.joda.time.MonthDay monthDay10 = monthDay4.plus(readablePeriod9);
        org.joda.time.MonthDay monthDay12 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MonthDay monthDay14 = monthDay12.withChronologyRetainFields(chronology13);
        org.joda.time.MonthDay monthDay16 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MonthDay monthDay18 = monthDay16.withChronologyRetainFields(chronology17);
        org.joda.time.DateTimeFieldType dateTimeFieldType20 = monthDay16.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property21 = monthDay14.property(dateTimeFieldType20);
        int int22 = property21.get();
        org.joda.time.MonthDay monthDay24 = property21.addWrapFieldToCopy((int) (short) 1);
        boolean boolean25 = monthDay4.isBefore((org.joda.time.ReadablePartial) monthDay24);
        org.joda.time.MonthDay monthDay27 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.MonthDay monthDay29 = monthDay27.withChronologyRetainFields(chronology28);
        org.joda.time.DateTimeFieldType dateTimeFieldType31 = monthDay27.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod32 = null;
        org.joda.time.MonthDay monthDay33 = monthDay27.plus(readablePeriod32);
        org.joda.time.MonthDay monthDay35 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.MonthDay monthDay37 = monthDay35.withChronologyRetainFields(chronology36);
        org.joda.time.MonthDay monthDay39 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.MonthDay monthDay41 = monthDay39.withChronologyRetainFields(chronology40);
        org.joda.time.DateTimeFieldType dateTimeFieldType43 = monthDay39.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property44 = monthDay37.property(dateTimeFieldType43);
        int int45 = property44.get();
        org.joda.time.MonthDay monthDay47 = property44.addWrapFieldToCopy((int) (short) 1);
        boolean boolean48 = monthDay27.isBefore((org.joda.time.ReadablePartial) monthDay47);
        org.joda.time.MonthDay monthDay50 = monthDay47.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay52 = monthDay50.plusMonths(1);
        int int53 = monthDay50.size();
        org.joda.time.MonthDay monthDay55 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.MonthDay monthDay57 = monthDay55.withChronologyRetainFields(chronology56);
        org.joda.time.MonthDay monthDay59 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.MonthDay monthDay61 = monthDay59.withChronologyRetainFields(chronology60);
        org.joda.time.DateTimeFieldType dateTimeFieldType63 = monthDay59.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property64 = monthDay57.property(dateTimeFieldType63);
        int int65 = property64.get();
        org.joda.time.DurationField durationField66 = property64.getDurationField();
        org.joda.time.MonthDay monthDay68 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology69 = null;
        org.joda.time.MonthDay monthDay70 = monthDay68.withChronologyRetainFields(chronology69);
        org.joda.time.MonthDay monthDay72 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology73 = null;
        org.joda.time.MonthDay monthDay74 = monthDay72.withChronologyRetainFields(chronology73);
        org.joda.time.DateTimeFieldType dateTimeFieldType76 = monthDay72.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property77 = monthDay70.property(dateTimeFieldType76);
        boolean boolean78 = property64.equals((java.lang.Object) monthDay70);
        int int79 = property64.getMinimumValueOverall();
        org.joda.time.DateTimeFieldType dateTimeFieldType80 = property64.getFieldType();
        org.joda.time.MonthDay monthDay82 = monthDay50.withField(dateTimeFieldType80, (int) (byte) 1);
        int int83 = monthDay4.indexOf(dateTimeFieldType80);
        org.joda.time.MonthDay monthDay85 = monthDay4.minusMonths((int) ' ');
        org.joda.time.Chronology chronology86 = monthDay4.getChronology();
        org.joda.time.MonthDay monthDay87 = new org.joda.time.MonthDay((long) ' ', chronology86);
        org.joda.time.MonthDay monthDay88 = org.joda.time.MonthDay.now(chronology86);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MonthDay monthDay89 = new org.joda.time.MonthDay(9, (int) (short) 0, chronology86);
            org.junit.Assert.fail("Expected exception of type org.joda.time.IllegalFieldValueException; message: Value 0 for dayOfMonth must not be smaller than 1");
        } catch (org.joda.time.IllegalFieldValueException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(monthDay4);
        org.junit.Assert.assertNotNull(monthDay6);
        org.junit.Assert.assertNotNull(dateTimeFieldType8);
        org.junit.Assert.assertNotNull(monthDay10);
        org.junit.Assert.assertNotNull(monthDay12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(dateTimeFieldType20);
        org.junit.Assert.assertNotNull(property21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertNotNull(monthDay29);
        org.junit.Assert.assertNotNull(dateTimeFieldType31);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(monthDay37);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertNotNull(monthDay41);
        org.junit.Assert.assertNotNull(dateTimeFieldType43);
        org.junit.Assert.assertNotNull(property44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(monthDay47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(monthDay50);
        org.junit.Assert.assertNotNull(monthDay52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertNotNull(monthDay55);
        org.junit.Assert.assertNotNull(monthDay57);
        org.junit.Assert.assertNotNull(monthDay59);
        org.junit.Assert.assertNotNull(monthDay61);
        org.junit.Assert.assertNotNull(dateTimeFieldType63);
        org.junit.Assert.assertNotNull(property64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNotNull(durationField66);
        org.junit.Assert.assertNotNull(monthDay68);
        org.junit.Assert.assertNotNull(monthDay70);
        org.junit.Assert.assertNotNull(monthDay72);
        org.junit.Assert.assertNotNull(monthDay74);
        org.junit.Assert.assertNotNull(dateTimeFieldType76);
        org.junit.Assert.assertNotNull(property77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertNotNull(dateTimeFieldType80);
        org.junit.Assert.assertNotNull(monthDay82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertNotNull(monthDay85);
        org.junit.Assert.assertNotNull(chronology86);
        org.junit.Assert.assertNotNull(monthDay88);
    }

    @Test
    public void test1715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1715");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.DurationField durationField12 = property10.getDurationField();
        java.util.Locale locale13 = null;
        int int14 = property10.getMaximumTextLength(locale13);
        org.joda.time.MonthDay monthDay16 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MonthDay monthDay18 = monthDay16.withChronologyRetainFields(chronology17);
        org.joda.time.DateTimeFieldType dateTimeFieldType20 = monthDay16.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property21 = monthDay16.dayOfMonth();
        org.joda.time.Chronology chronology22 = monthDay16.getChronology();
        org.joda.time.Chronology chronology23 = monthDay16.getChronology();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.DateTime dateTime25 = monthDay16.toDateTime(readableInstant24);
        int int26 = property10.compareTo((org.joda.time.ReadableInstant) dateTime25);
        org.joda.time.MonthDay monthDay28 = property10.addWrapFieldToCopy((int) '4');
        org.joda.time.Chronology chronology29 = monthDay28.getChronology();
        org.joda.time.MonthDay monthDay30 = new org.joda.time.MonthDay(chronology29);
        org.joda.time.ReadablePartial readablePartial31 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int32 = monthDay30.compareTo(readablePartial31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(durationField12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(dateTimeFieldType20);
        org.junit.Assert.assertNotNull(property21);
        org.junit.Assert.assertNotNull(chronology22);
        org.junit.Assert.assertNotNull(chronology23);
        org.junit.Assert.assertNotNull(dateTime25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertNotNull(chronology29);
    }

    @Test
    public void test1716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1716");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.DurationField durationField12 = property10.getDurationField();
        java.util.Locale locale13 = null;
        int int14 = property10.getMaximumTextLength(locale13);
        org.joda.time.MonthDay monthDay16 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MonthDay monthDay18 = monthDay16.withChronologyRetainFields(chronology17);
        org.joda.time.DateTimeFieldType dateTimeFieldType20 = monthDay16.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property21 = monthDay16.dayOfMonth();
        org.joda.time.Chronology chronology22 = monthDay16.getChronology();
        org.joda.time.Chronology chronology23 = monthDay16.getChronology();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.DateTime dateTime25 = monthDay16.toDateTime(readableInstant24);
        int int26 = property10.compareTo((org.joda.time.ReadableInstant) dateTime25);
        int int27 = property10.getMinimumValueOverall();
        java.lang.String str28 = property10.getAsText();
        java.util.Locale locale29 = null;
        java.lang.String str30 = property10.getAsText(locale29);
        org.joda.time.MonthDay monthDay32 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.MonthDay monthDay34 = monthDay32.withChronologyRetainFields(chronology33);
        org.joda.time.DateTimeFieldType dateTimeFieldType36 = monthDay32.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod37 = null;
        org.joda.time.MonthDay monthDay38 = monthDay32.plus(readablePeriod37);
        org.joda.time.MonthDay monthDay40 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.MonthDay monthDay42 = monthDay40.withChronologyRetainFields(chronology41);
        org.joda.time.MonthDay monthDay44 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.MonthDay monthDay46 = monthDay44.withChronologyRetainFields(chronology45);
        org.joda.time.DateTimeFieldType dateTimeFieldType48 = monthDay44.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property49 = monthDay42.property(dateTimeFieldType48);
        int int50 = property49.get();
        org.joda.time.MonthDay monthDay52 = property49.addWrapFieldToCopy((int) (short) 1);
        boolean boolean53 = monthDay32.isBefore((org.joda.time.ReadablePartial) monthDay52);
        org.joda.time.MonthDay.Property property54 = monthDay32.monthOfYear();
        org.joda.time.MonthDay monthDay56 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.MonthDay monthDay58 = monthDay56.withChronologyRetainFields(chronology57);
        org.joda.time.DateTimeFieldType dateTimeFieldType60 = monthDay56.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod61 = null;
        org.joda.time.MonthDay monthDay62 = monthDay56.plus(readablePeriod61);
        org.joda.time.MonthDay monthDay64 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology65 = null;
        org.joda.time.MonthDay monthDay66 = monthDay64.withChronologyRetainFields(chronology65);
        org.joda.time.MonthDay monthDay68 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology69 = null;
        org.joda.time.MonthDay monthDay70 = monthDay68.withChronologyRetainFields(chronology69);
        org.joda.time.DateTimeFieldType dateTimeFieldType72 = monthDay68.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property73 = monthDay66.property(dateTimeFieldType72);
        int int74 = property73.get();
        org.joda.time.MonthDay monthDay76 = property73.addWrapFieldToCopy((int) (short) 1);
        boolean boolean77 = monthDay56.isBefore((org.joda.time.ReadablePartial) monthDay76);
        boolean boolean78 = monthDay32.isAfter((org.joda.time.ReadablePartial) monthDay76);
        org.joda.time.MonthDay monthDay80 = monthDay76.withMonthOfYear(12);
        int int81 = property10.compareTo((org.joda.time.ReadablePartial) monthDay80);
        org.joda.time.MonthDay monthDay82 = property10.getMonthDay();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(durationField12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(dateTimeFieldType20);
        org.junit.Assert.assertNotNull(property21);
        org.junit.Assert.assertNotNull(chronology22);
        org.junit.Assert.assertNotNull(chronology23);
        org.junit.Assert.assertNotNull(dateTime25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1" + "'", str28, "1");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1" + "'", str30, "1");
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertNotNull(dateTimeFieldType36);
        org.junit.Assert.assertNotNull(monthDay38);
        org.junit.Assert.assertNotNull(monthDay40);
        org.junit.Assert.assertNotNull(monthDay42);
        org.junit.Assert.assertNotNull(monthDay44);
        org.junit.Assert.assertNotNull(monthDay46);
        org.junit.Assert.assertNotNull(dateTimeFieldType48);
        org.junit.Assert.assertNotNull(property49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(monthDay52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(property54);
        org.junit.Assert.assertNotNull(monthDay56);
        org.junit.Assert.assertNotNull(monthDay58);
        org.junit.Assert.assertNotNull(dateTimeFieldType60);
        org.junit.Assert.assertNotNull(monthDay62);
        org.junit.Assert.assertNotNull(monthDay64);
        org.junit.Assert.assertNotNull(monthDay66);
        org.junit.Assert.assertNotNull(monthDay68);
        org.junit.Assert.assertNotNull(monthDay70);
        org.junit.Assert.assertNotNull(dateTimeFieldType72);
        org.junit.Assert.assertNotNull(property73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertNotNull(monthDay76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(monthDay80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(monthDay82);
    }

    @Test
    public void test1717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1717");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.MonthDay monthDay13 = property10.addWrapFieldToCopy((int) (short) 1);
        org.joda.time.MonthDay.Property property14 = monthDay13.dayOfMonth();
        int int15 = property14.getMaximumValue();
        java.lang.String str16 = property14.getAsText();
        java.util.Locale locale17 = null;
        java.lang.String str18 = property14.getAsShortText(locale17);
        org.joda.time.MonthDay monthDay20 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.MonthDay monthDay22 = monthDay20.withChronologyRetainFields(chronology21);
        org.joda.time.DateTimeFieldType dateTimeFieldType24 = monthDay20.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod25 = null;
        org.joda.time.MonthDay monthDay26 = monthDay20.plus(readablePeriod25);
        org.joda.time.MonthDay monthDay28 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.MonthDay monthDay30 = monthDay28.withChronologyRetainFields(chronology29);
        org.joda.time.MonthDay monthDay32 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.MonthDay monthDay34 = monthDay32.withChronologyRetainFields(chronology33);
        org.joda.time.DateTimeFieldType dateTimeFieldType36 = monthDay32.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property37 = monthDay30.property(dateTimeFieldType36);
        int int38 = property37.get();
        org.joda.time.MonthDay monthDay40 = property37.addWrapFieldToCopy((int) (short) 1);
        boolean boolean41 = monthDay20.isBefore((org.joda.time.ReadablePartial) monthDay40);
        org.joda.time.MonthDay monthDay43 = monthDay40.minusMonths((int) (byte) 100);
        int int44 = monthDay43.getMonthOfYear();
        org.joda.time.MonthDay monthDay46 = monthDay43.withMonthOfYear(1);
        org.joda.time.ReadablePeriod readablePeriod47 = null;
        org.joda.time.MonthDay monthDay48 = monthDay43.plus(readablePeriod47);
        int int49 = property14.compareTo((org.joda.time.ReadablePartial) monthDay48);
        java.lang.String str50 = property14.getName();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MonthDay monthDay52 = property14.setCopy("hi!");
            org.junit.Assert.fail("Expected exception of type org.joda.time.IllegalFieldValueException; message: Value \"hi!\" for dayOfMonth is not supported");
        } catch (org.joda.time.IllegalFieldValueException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(property14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 31 + "'", int15 == 31);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "2" + "'", str16, "2");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "2" + "'", str18, "2");
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertNotNull(dateTimeFieldType24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertNotNull(dateTimeFieldType36);
        org.junit.Assert.assertNotNull(property37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(monthDay40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(monthDay43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 9 + "'", int44 == 9);
        org.junit.Assert.assertNotNull(monthDay46);
        org.junit.Assert.assertNotNull(monthDay48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "dayOfMonth" + "'", str50, "dayOfMonth");
    }

    @Test
    public void test1718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1718");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.MonthDay monthDay13 = property10.addWrapFieldToCopy((int) (short) 1);
        java.lang.String str14 = property10.getAsString();
        java.lang.String str15 = property10.getAsText();
        org.joda.time.DurationField durationField16 = property10.getRangeDurationField();
        int int17 = property10.getMinimumValue();
        org.joda.time.MonthDay monthDay19 = property10.addToCopy((int) (short) -1);
        org.joda.time.MonthDay monthDay21 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.MonthDay monthDay23 = monthDay21.withChronologyRetainFields(chronology22);
        org.joda.time.MonthDay monthDay25 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.MonthDay monthDay27 = monthDay25.withChronologyRetainFields(chronology26);
        org.joda.time.DateTimeFieldType dateTimeFieldType29 = monthDay25.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property30 = monthDay23.property(dateTimeFieldType29);
        int int31 = property30.get();
        org.joda.time.DurationField durationField32 = property30.getDurationField();
        org.joda.time.MonthDay monthDay34 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.MonthDay monthDay36 = monthDay34.withChronologyRetainFields(chronology35);
        org.joda.time.MonthDay monthDay38 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.MonthDay monthDay40 = monthDay38.withChronologyRetainFields(chronology39);
        org.joda.time.DateTimeFieldType dateTimeFieldType42 = monthDay38.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property43 = monthDay36.property(dateTimeFieldType42);
        boolean boolean44 = property30.equals((java.lang.Object) monthDay36);
        org.joda.time.MonthDay monthDay45 = new org.joda.time.MonthDay((java.lang.Object) monthDay36);
        boolean boolean46 = property10.equals((java.lang.Object) monthDay45);
        org.joda.time.ReadablePeriod readablePeriod47 = null;
        org.joda.time.MonthDay monthDay48 = monthDay45.plus(readablePeriod47);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1" + "'", str14, "1");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1" + "'", str15, "1");
        org.junit.Assert.assertNotNull(durationField16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(monthDay19);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertNotNull(monthDay23);
        org.junit.Assert.assertNotNull(monthDay25);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertNotNull(dateTimeFieldType29);
        org.junit.Assert.assertNotNull(property30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(durationField32);
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertNotNull(monthDay36);
        org.junit.Assert.assertNotNull(monthDay38);
        org.junit.Assert.assertNotNull(monthDay40);
        org.junit.Assert.assertNotNull(dateTimeFieldType42);
        org.junit.Assert.assertNotNull(property43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(monthDay48);
    }

    @Test
    public void test1719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1719");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.DurationField durationField12 = property10.getDurationField();
        org.joda.time.MonthDay monthDay14 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MonthDay monthDay16 = monthDay14.withChronologyRetainFields(chronology15);
        org.joda.time.MonthDay monthDay18 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MonthDay monthDay20 = monthDay18.withChronologyRetainFields(chronology19);
        org.joda.time.DateTimeFieldType dateTimeFieldType22 = monthDay18.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property23 = monthDay16.property(dateTimeFieldType22);
        boolean boolean24 = property10.equals((java.lang.Object) monthDay16);
        java.util.Locale locale25 = null;
        java.lang.String str26 = property10.getAsShortText(locale25);
        int int27 = property10.get();
        org.joda.time.MonthDay monthDay28 = property10.getMonthDay();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(durationField12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(dateTimeFieldType22);
        org.junit.Assert.assertNotNull(property23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1" + "'", str26, "1");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(monthDay28);
    }

    @Test
    public void test1720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1720");
        org.joda.time.MonthDay monthDay3 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MonthDay monthDay5 = monthDay3.withChronologyRetainFields(chronology4);
        org.joda.time.MonthDay monthDay7 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.MonthDay monthDay9 = monthDay7.withChronologyRetainFields(chronology8);
        org.joda.time.DateTimeFieldType dateTimeFieldType11 = monthDay7.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property12 = monthDay5.property(dateTimeFieldType11);
        org.joda.time.MonthDay.Property property13 = monthDay5.monthOfYear();
        int int14 = monthDay5.getDayOfMonth();
        org.joda.time.MonthDay.Property property15 = monthDay5.dayOfMonth();
        int int16 = monthDay5.getDayOfMonth();
        org.joda.time.ReadablePeriod readablePeriod17 = null;
        org.joda.time.MonthDay monthDay18 = monthDay5.plus(readablePeriod17);
        org.joda.time.MonthDay monthDay20 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.MonthDay monthDay22 = monthDay20.withChronologyRetainFields(chronology21);
        org.joda.time.MonthDay monthDay24 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.MonthDay monthDay26 = monthDay24.withChronologyRetainFields(chronology25);
        org.joda.time.DateTimeFieldType dateTimeFieldType28 = monthDay24.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property29 = monthDay22.property(dateTimeFieldType28);
        org.joda.time.MonthDay.Property property30 = monthDay22.monthOfYear();
        int int31 = monthDay22.getDayOfMonth();
        org.joda.time.MonthDay.Property property32 = monthDay22.dayOfMonth();
        int int33 = monthDay22.getDayOfMonth();
        org.joda.time.MonthDay monthDay35 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.MonthDay monthDay37 = monthDay35.withChronologyRetainFields(chronology36);
        org.joda.time.DateTimeFieldType dateTimeFieldType39 = monthDay35.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property40 = monthDay35.dayOfMonth();
        org.joda.time.Chronology chronology41 = monthDay35.getChronology();
        org.joda.time.MonthDay monthDay42 = monthDay22.withChronologyRetainFields(chronology41);
        org.joda.time.MonthDay monthDay43 = monthDay18.withChronologyRetainFields(chronology41);
        org.joda.time.MonthDay monthDay45 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.MonthDay monthDay47 = monthDay45.withChronologyRetainFields(chronology46);
        org.joda.time.MonthDay monthDay49 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.MonthDay monthDay51 = monthDay49.withChronologyRetainFields(chronology50);
        org.joda.time.DateTimeFieldType dateTimeFieldType53 = monthDay49.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property54 = monthDay47.property(dateTimeFieldType53);
        org.joda.time.MonthDay.Property property55 = monthDay47.monthOfYear();
        int int56 = monthDay47.getDayOfMonth();
        org.joda.time.MonthDay.Property property57 = monthDay47.dayOfMonth();
        int int58 = monthDay47.getDayOfMonth();
        org.joda.time.MonthDay monthDay60 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.MonthDay monthDay62 = monthDay60.withChronologyRetainFields(chronology61);
        org.joda.time.DateTimeFieldType dateTimeFieldType64 = monthDay60.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property65 = monthDay60.dayOfMonth();
        org.joda.time.Chronology chronology66 = monthDay60.getChronology();
        org.joda.time.MonthDay monthDay67 = monthDay47.withChronologyRetainFields(chronology66);
        org.joda.time.MonthDay monthDay68 = new org.joda.time.MonthDay((java.lang.Object) monthDay18, chronology66);
        org.joda.time.MonthDay monthDay70 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology71 = null;
        org.joda.time.MonthDay monthDay72 = monthDay70.withChronologyRetainFields(chronology71);
        org.joda.time.MonthDay monthDay74 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology75 = null;
        org.joda.time.MonthDay monthDay76 = monthDay74.withChronologyRetainFields(chronology75);
        org.joda.time.DateTimeFieldType dateTimeFieldType78 = monthDay74.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property79 = monthDay74.dayOfMonth();
        org.joda.time.Chronology chronology80 = monthDay74.getChronology();
        org.joda.time.MonthDay monthDay81 = org.joda.time.MonthDay.now(chronology80);
        org.joda.time.MonthDay monthDay82 = monthDay72.withChronologyRetainFields(chronology80);
        org.joda.time.MonthDay monthDay83 = monthDay18.withChronologyRetainFields(chronology80);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MonthDay monthDay84 = new org.joda.time.MonthDay((-1), (int) (short) 1, chronology80);
            org.junit.Assert.fail("Expected exception of type org.joda.time.IllegalFieldValueException; message: Value -1 for monthOfYear must not be smaller than 1");
        } catch (org.joda.time.IllegalFieldValueException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(dateTimeFieldType11);
        org.junit.Assert.assertNotNull(property12);
        org.junit.Assert.assertNotNull(property13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(property15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(dateTimeFieldType28);
        org.junit.Assert.assertNotNull(property29);
        org.junit.Assert.assertNotNull(property30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(property32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(monthDay37);
        org.junit.Assert.assertNotNull(dateTimeFieldType39);
        org.junit.Assert.assertNotNull(property40);
        org.junit.Assert.assertNotNull(chronology41);
        org.junit.Assert.assertNotNull(monthDay42);
        org.junit.Assert.assertNotNull(monthDay43);
        org.junit.Assert.assertNotNull(monthDay45);
        org.junit.Assert.assertNotNull(monthDay47);
        org.junit.Assert.assertNotNull(monthDay49);
        org.junit.Assert.assertNotNull(monthDay51);
        org.junit.Assert.assertNotNull(dateTimeFieldType53);
        org.junit.Assert.assertNotNull(property54);
        org.junit.Assert.assertNotNull(property55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(property57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(monthDay60);
        org.junit.Assert.assertNotNull(monthDay62);
        org.junit.Assert.assertNotNull(dateTimeFieldType64);
        org.junit.Assert.assertNotNull(property65);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(monthDay67);
        org.junit.Assert.assertNotNull(monthDay70);
        org.junit.Assert.assertNotNull(monthDay72);
        org.junit.Assert.assertNotNull(monthDay74);
        org.junit.Assert.assertNotNull(monthDay76);
        org.junit.Assert.assertNotNull(dateTimeFieldType78);
        org.junit.Assert.assertNotNull(property79);
        org.junit.Assert.assertNotNull(chronology80);
        org.junit.Assert.assertNotNull(monthDay81);
        org.junit.Assert.assertNotNull(monthDay82);
        org.junit.Assert.assertNotNull(monthDay83);
    }

    @Test
    public void test1721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1721");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.MonthDay monthDay13 = property10.addWrapFieldToCopy((int) (short) 1);
        org.joda.time.DateTimeFieldType[] dateTimeFieldTypeArray14 = monthDay13.getFieldTypes();
        int int15 = monthDay13.getMonthOfYear();
        org.joda.time.DateTimeField[] dateTimeFieldArray16 = monthDay13.getFields();
        org.joda.time.MonthDay monthDay18 = org.joda.time.MonthDay.parse("");
        org.joda.time.MonthDay monthDay20 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.MonthDay monthDay22 = monthDay20.withChronologyRetainFields(chronology21);
        org.joda.time.DateTimeFieldType dateTimeFieldType24 = monthDay20.getFieldType((int) (byte) 1);
        boolean boolean25 = monthDay18.isSupported(dateTimeFieldType24);
        org.joda.time.MonthDay monthDay27 = org.joda.time.MonthDay.parse("");
        org.joda.time.MonthDay monthDay29 = monthDay27.minusDays((int) '#');
        org.joda.time.MonthDay monthDay31 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.MonthDay monthDay33 = monthDay31.withChronologyRetainFields(chronology32);
        org.joda.time.DateTimeFieldType dateTimeFieldType35 = monthDay31.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property36 = monthDay31.dayOfMonth();
        org.joda.time.Chronology chronology37 = monthDay31.getChronology();
        org.joda.time.Chronology chronology38 = monthDay31.getChronology();
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.DateTime dateTime40 = monthDay31.toDateTime(readableInstant39);
        org.joda.time.MonthDay monthDay42 = monthDay31.plusMonths((int) ' ');
        boolean boolean43 = monthDay27.isAfter((org.joda.time.ReadablePartial) monthDay42);
        boolean boolean44 = monthDay18.isBefore((org.joda.time.ReadablePartial) monthDay42);
        org.joda.time.ReadablePeriod readablePeriod45 = null;
        org.joda.time.MonthDay monthDay46 = monthDay18.minus(readablePeriod45);
        org.joda.time.MonthDay monthDay48 = monthDay46.withMonthOfYear(12);
        org.joda.time.Chronology chronology49 = monthDay48.getChronology();
        org.joda.time.MonthDay monthDay50 = monthDay13.withChronologyRetainFields(chronology49);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(dateTimeFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(dateTimeFieldArray16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertNotNull(dateTimeFieldType24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertNotNull(monthDay29);
        org.junit.Assert.assertNotNull(monthDay31);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(dateTimeFieldType35);
        org.junit.Assert.assertNotNull(property36);
        org.junit.Assert.assertNotNull(chronology37);
        org.junit.Assert.assertNotNull(chronology38);
        org.junit.Assert.assertNotNull(dateTime40);
        org.junit.Assert.assertNotNull(monthDay42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(monthDay46);
        org.junit.Assert.assertNotNull(monthDay48);
        org.junit.Assert.assertNotNull(chronology49);
        org.junit.Assert.assertNotNull(monthDay50);
    }

    @Test
    public void test1722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1722");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        org.joda.time.MonthDay.Property property11 = monthDay3.monthOfYear();
        int int12 = monthDay3.getDayOfMonth();
        org.joda.time.MonthDay.Property property13 = monthDay3.dayOfMonth();
        int int14 = monthDay3.getDayOfMonth();
        org.joda.time.ReadablePeriod readablePeriod15 = null;
        org.joda.time.MonthDay monthDay16 = monthDay3.plus(readablePeriod15);
        org.joda.time.MonthDay monthDay18 = monthDay16.plusDays((int) (byte) 0);
        org.joda.time.MonthDay.Property property19 = monthDay16.monthOfYear();
        java.util.Locale locale20 = null;
        java.lang.String str21 = property19.getAsText(locale20);
        org.joda.time.MonthDay monthDay23 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MonthDay monthDay25 = monthDay23.withChronologyRetainFields(chronology24);
        org.joda.time.MonthDay monthDay27 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.MonthDay monthDay29 = monthDay27.withChronologyRetainFields(chronology28);
        org.joda.time.DateTimeFieldType dateTimeFieldType31 = monthDay27.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property32 = monthDay25.property(dateTimeFieldType31);
        org.joda.time.MonthDay.Property property33 = monthDay25.monthOfYear();
        org.joda.time.MonthDay monthDay35 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.MonthDay monthDay37 = monthDay35.withChronologyRetainFields(chronology36);
        org.joda.time.DateTimeFieldType dateTimeFieldType39 = monthDay35.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay monthDay41 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.MonthDay monthDay43 = monthDay41.withChronologyRetainFields(chronology42);
        org.joda.time.MonthDay monthDay45 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.MonthDay monthDay47 = monthDay45.withChronologyRetainFields(chronology46);
        org.joda.time.DateTimeFieldType dateTimeFieldType49 = monthDay45.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property50 = monthDay43.property(dateTimeFieldType49);
        int int51 = monthDay35.indexOf(dateTimeFieldType49);
        boolean boolean52 = monthDay25.equals((java.lang.Object) int51);
        org.joda.time.MonthDay monthDay54 = monthDay25.withMonthOfYear(9);
        org.joda.time.MonthDay monthDay56 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.MonthDay monthDay58 = monthDay56.withChronologyRetainFields(chronology57);
        org.joda.time.DateTimeFieldType dateTimeFieldType60 = monthDay56.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod61 = null;
        org.joda.time.MonthDay monthDay62 = monthDay56.plus(readablePeriod61);
        org.joda.time.MonthDay monthDay64 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology65 = null;
        org.joda.time.MonthDay monthDay66 = monthDay64.withChronologyRetainFields(chronology65);
        org.joda.time.MonthDay monthDay68 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology69 = null;
        org.joda.time.MonthDay monthDay70 = monthDay68.withChronologyRetainFields(chronology69);
        org.joda.time.DateTimeFieldType dateTimeFieldType72 = monthDay68.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property73 = monthDay66.property(dateTimeFieldType72);
        int int74 = property73.get();
        org.joda.time.MonthDay monthDay76 = property73.addWrapFieldToCopy((int) (short) 1);
        boolean boolean77 = monthDay56.isBefore((org.joda.time.ReadablePartial) monthDay76);
        org.joda.time.MonthDay monthDay79 = monthDay76.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay81 = monthDay79.plusMonths(1);
        org.joda.time.MonthDay monthDay83 = org.joda.time.MonthDay.parse("");
        org.joda.time.MonthDay monthDay85 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology86 = null;
        org.joda.time.MonthDay monthDay87 = monthDay85.withChronologyRetainFields(chronology86);
        org.joda.time.DateTimeFieldType dateTimeFieldType89 = monthDay85.getFieldType((int) (byte) 1);
        boolean boolean90 = monthDay83.isSupported(dateTimeFieldType89);
        boolean boolean91 = monthDay79.isSupported(dateTimeFieldType89);
        org.joda.time.Chronology chronology92 = monthDay79.getChronology();
        org.joda.time.MonthDay monthDay93 = monthDay54.withChronologyRetainFields(chronology92);
        boolean boolean94 = property19.equals((java.lang.Object) chronology92);
        org.joda.time.MonthDay monthDay95 = new org.joda.time.MonthDay(chronology92);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertNotNull(property11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(property13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(property19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "January" + "'", str21, "January");
        org.junit.Assert.assertNotNull(monthDay23);
        org.junit.Assert.assertNotNull(monthDay25);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertNotNull(monthDay29);
        org.junit.Assert.assertNotNull(dateTimeFieldType31);
        org.junit.Assert.assertNotNull(property32);
        org.junit.Assert.assertNotNull(property33);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(monthDay37);
        org.junit.Assert.assertNotNull(dateTimeFieldType39);
        org.junit.Assert.assertNotNull(monthDay41);
        org.junit.Assert.assertNotNull(monthDay43);
        org.junit.Assert.assertNotNull(monthDay45);
        org.junit.Assert.assertNotNull(monthDay47);
        org.junit.Assert.assertNotNull(dateTimeFieldType49);
        org.junit.Assert.assertNotNull(property50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(monthDay54);
        org.junit.Assert.assertNotNull(monthDay56);
        org.junit.Assert.assertNotNull(monthDay58);
        org.junit.Assert.assertNotNull(dateTimeFieldType60);
        org.junit.Assert.assertNotNull(monthDay62);
        org.junit.Assert.assertNotNull(monthDay64);
        org.junit.Assert.assertNotNull(monthDay66);
        org.junit.Assert.assertNotNull(monthDay68);
        org.junit.Assert.assertNotNull(monthDay70);
        org.junit.Assert.assertNotNull(dateTimeFieldType72);
        org.junit.Assert.assertNotNull(property73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertNotNull(monthDay76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(monthDay79);
        org.junit.Assert.assertNotNull(monthDay81);
        org.junit.Assert.assertNotNull(monthDay83);
        org.junit.Assert.assertNotNull(monthDay85);
        org.junit.Assert.assertNotNull(monthDay87);
        org.junit.Assert.assertNotNull(dateTimeFieldType89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(chronology92);
        org.junit.Assert.assertNotNull(monthDay93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test1723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1723");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property6 = monthDay1.dayOfMonth();
        org.joda.time.Chronology chronology7 = monthDay1.getChronology();
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        boolean boolean19 = monthDay1.isSupported(dateTimeFieldType17);
        org.joda.time.MonthDay.Property property20 = monthDay1.monthOfYear();
        org.joda.time.MonthDay monthDay22 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MonthDay monthDay24 = monthDay22.withChronologyRetainFields(chronology23);
        org.joda.time.MonthDay monthDay26 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.MonthDay monthDay28 = monthDay26.withChronologyRetainFields(chronology27);
        org.joda.time.DateTimeFieldType dateTimeFieldType30 = monthDay26.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property31 = monthDay24.property(dateTimeFieldType30);
        int int32 = property31.get();
        org.joda.time.DurationField durationField33 = property31.getDurationField();
        org.joda.time.MonthDay monthDay35 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.MonthDay monthDay37 = monthDay35.withChronologyRetainFields(chronology36);
        org.joda.time.MonthDay monthDay39 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.MonthDay monthDay41 = monthDay39.withChronologyRetainFields(chronology40);
        org.joda.time.DateTimeFieldType dateTimeFieldType43 = monthDay39.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property44 = monthDay37.property(dateTimeFieldType43);
        boolean boolean45 = property31.equals((java.lang.Object) monthDay37);
        int int46 = property31.getMinimumValueOverall();
        org.joda.time.DateTimeFieldType dateTimeFieldType47 = property31.getFieldType();
        boolean boolean48 = monthDay1.isSupported(dateTimeFieldType47);
        org.joda.time.format.DateTimeFormatter dateTimeFormatter49 = null;
        java.lang.String str50 = monthDay1.toString(dateTimeFormatter49);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(property6);
        org.junit.Assert.assertNotNull(chronology7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(property20);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertNotNull(dateTimeFieldType30);
        org.junit.Assert.assertNotNull(property31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(durationField33);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(monthDay37);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertNotNull(monthDay41);
        org.junit.Assert.assertNotNull(dateTimeFieldType43);
        org.junit.Assert.assertNotNull(property44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(dateTimeFieldType47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "--01-01" + "'", str50, "--01-01");
    }

    @Test
    public void test1724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1724");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        org.joda.time.MonthDay.Property property11 = monthDay3.monthOfYear();
        java.util.Locale locale12 = null;
        int int13 = property11.getMaximumTextLength(locale12);
        int int14 = property11.getMaximumValue();
        org.joda.time.MonthDay monthDay16 = property11.addWrapFieldToCopy((int) '#');
        org.joda.time.MonthDay monthDay18 = property11.setCopy("2");
        java.util.Locale locale19 = null;
        int int20 = property11.getMaximumTextLength(locale19);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertNotNull(property11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 9 + "'", int13 == 9);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 12 + "'", int14 == 12);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 9 + "'", int20 == 9);
    }

    @Test
    public void test1725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1725");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        org.joda.time.MonthDay monthDay12 = property10.addWrapFieldToCopy(1);
        org.joda.time.MonthDay monthDay14 = property10.setCopy((int) (short) 1);
        java.util.Locale locale15 = null;
        java.lang.String str16 = property10.getAsText(locale15);
        org.joda.time.MonthDay monthDay17 = property10.getMonthDay();
        org.joda.time.ReadablePartial readablePartial18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = monthDay17.isAfter(readablePartial18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Partial cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertNotNull(monthDay12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1" + "'", str16, "1");
        org.junit.Assert.assertNotNull(monthDay17);
    }

    @Test
    public void test1726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1726");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.MonthDay monthDay24 = monthDay21.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay26 = monthDay24.plusMonths(1);
        int int27 = monthDay26.getDayOfMonth();
        org.joda.time.DateTimeField[] dateTimeFieldArray28 = monthDay26.getFields();
        org.joda.time.MonthDay monthDay30 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MonthDay monthDay32 = monthDay30.withChronologyRetainFields(chronology31);
        org.joda.time.MonthDay monthDay34 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.MonthDay monthDay36 = monthDay34.withChronologyRetainFields(chronology35);
        org.joda.time.DateTimeFieldType dateTimeFieldType38 = monthDay34.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property39 = monthDay32.property(dateTimeFieldType38);
        int int40 = property39.get();
        int int41 = property39.getMaximumValue();
        org.joda.time.MonthDay monthDay43 = property39.setCopy((int) (short) 1);
        org.joda.time.MonthDay monthDay45 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.MonthDay monthDay47 = monthDay45.withChronologyRetainFields(chronology46);
        org.joda.time.DateTimeFieldType dateTimeFieldType49 = monthDay45.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod50 = null;
        org.joda.time.MonthDay monthDay51 = monthDay45.plus(readablePeriod50);
        int int52 = monthDay45.getDayOfMonth();
        int int53 = property39.compareTo((org.joda.time.ReadablePartial) monthDay45);
        java.lang.String str54 = property39.getName();
        java.util.Locale locale55 = null;
        java.lang.String str56 = property39.getAsShortText(locale55);
        org.joda.time.DurationField durationField57 = property39.getRangeDurationField();
        org.joda.time.DateTimeFieldType dateTimeFieldType58 = property39.getFieldType();
        org.joda.time.MonthDay.Property property59 = monthDay26.property(dateTimeFieldType58);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
        org.junit.Assert.assertNotNull(dateTimeFieldArray28);
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertNotNull(monthDay36);
        org.junit.Assert.assertNotNull(dateTimeFieldType38);
        org.junit.Assert.assertNotNull(property39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 31 + "'", int41 == 31);
        org.junit.Assert.assertNotNull(monthDay43);
        org.junit.Assert.assertNotNull(monthDay45);
        org.junit.Assert.assertNotNull(monthDay47);
        org.junit.Assert.assertNotNull(dateTimeFieldType49);
        org.junit.Assert.assertNotNull(monthDay51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "dayOfMonth" + "'", str54, "dayOfMonth");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "1" + "'", str56, "1");
        org.junit.Assert.assertNotNull(durationField57);
        org.junit.Assert.assertNotNull(dateTimeFieldType58);
        org.junit.Assert.assertNotNull(property59);
    }

    @Test
    public void test1727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1727");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MonthDay monthDay24 = monthDay1.withChronologyRetainFields(chronology23);
        org.joda.time.Chronology chronology25 = monthDay24.getChronology();
        org.joda.time.MonthDay monthDay27 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod28 = null;
        org.joda.time.MonthDay monthDay30 = monthDay27.withPeriodAdded(readablePeriod28, 1);
        org.joda.time.MonthDay monthDay32 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.MonthDay monthDay34 = monthDay32.withChronologyRetainFields(chronology33);
        org.joda.time.DateTimeFieldType dateTimeFieldType36 = monthDay32.getFieldType((int) (byte) 1);
        int int37 = monthDay30.indexOf(dateTimeFieldType36);
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.MonthDay monthDay39 = monthDay30.withChronologyRetainFields(chronology38);
        boolean boolean40 = monthDay24.isAfter((org.joda.time.ReadablePartial) monthDay30);
        org.joda.time.MonthDay monthDay42 = monthDay30.plusDays((int) (byte) 0);
        org.joda.time.MonthDay monthDay44 = monthDay42.minusDays(100);
        org.joda.time.MonthDay monthDay46 = monthDay44.plusDays((int) (byte) 0);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(chronology25);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertNotNull(dateTimeFieldType36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(monthDay42);
        org.junit.Assert.assertNotNull(monthDay44);
        org.junit.Assert.assertNotNull(monthDay46);
    }

    @Test
    public void test1728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1728");
        org.joda.time.MonthDay monthDay4 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.MonthDay monthDay6 = monthDay4.withChronologyRetainFields(chronology5);
        org.joda.time.DateTimeFieldType dateTimeFieldType8 = monthDay4.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod9 = null;
        org.joda.time.MonthDay monthDay10 = monthDay4.plus(readablePeriod9);
        org.joda.time.MonthDay monthDay12 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MonthDay monthDay14 = monthDay12.withChronologyRetainFields(chronology13);
        org.joda.time.MonthDay monthDay16 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MonthDay monthDay18 = monthDay16.withChronologyRetainFields(chronology17);
        org.joda.time.DateTimeFieldType dateTimeFieldType20 = monthDay16.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property21 = monthDay14.property(dateTimeFieldType20);
        int int22 = property21.get();
        org.joda.time.MonthDay monthDay24 = property21.addWrapFieldToCopy((int) (short) 1);
        boolean boolean25 = monthDay4.isBefore((org.joda.time.ReadablePartial) monthDay24);
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.MonthDay monthDay27 = monthDay4.withChronologyRetainFields(chronology26);
        org.joda.time.Chronology chronology28 = monthDay27.getChronology();
        int[] intArray29 = monthDay27.getValues();
        org.joda.time.MonthDay monthDay31 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.MonthDay monthDay33 = monthDay31.withChronologyRetainFields(chronology32);
        org.joda.time.DateTimeFieldType dateTimeFieldType35 = monthDay31.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay monthDay37 = monthDay27.withField(dateTimeFieldType35, 10);
        org.joda.time.MonthDay monthDay39 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.MonthDay monthDay41 = monthDay39.withChronologyRetainFields(chronology40);
        org.joda.time.MonthDay monthDay43 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.MonthDay monthDay45 = monthDay43.withChronologyRetainFields(chronology44);
        org.joda.time.DateTimeFieldType dateTimeFieldType47 = monthDay43.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property48 = monthDay43.dayOfMonth();
        org.joda.time.Chronology chronology49 = monthDay43.getChronology();
        org.joda.time.MonthDay monthDay50 = org.joda.time.MonthDay.now(chronology49);
        org.joda.time.MonthDay monthDay51 = monthDay41.withChronologyRetainFields(chronology49);
        org.joda.time.Chronology chronology52 = monthDay41.getChronology();
        org.joda.time.MonthDay monthDay53 = new org.joda.time.MonthDay((java.lang.Object) monthDay37, chronology52);
        org.joda.time.MonthDay monthDay54 = new org.joda.time.MonthDay((long) 0, chronology52);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MonthDay monthDay55 = new org.joda.time.MonthDay(3, 100, chronology52);
            org.junit.Assert.fail("Expected exception of type org.joda.time.IllegalFieldValueException; message: Value 100 for dayOfMonth must not be larger than 31");
        } catch (org.joda.time.IllegalFieldValueException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(monthDay4);
        org.junit.Assert.assertNotNull(monthDay6);
        org.junit.Assert.assertNotNull(dateTimeFieldType8);
        org.junit.Assert.assertNotNull(monthDay10);
        org.junit.Assert.assertNotNull(monthDay12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(dateTimeFieldType20);
        org.junit.Assert.assertNotNull(property21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertNotNull(chronology28);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[1, 1]");
        org.junit.Assert.assertNotNull(monthDay31);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(dateTimeFieldType35);
        org.junit.Assert.assertNotNull(monthDay37);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertNotNull(monthDay41);
        org.junit.Assert.assertNotNull(monthDay43);
        org.junit.Assert.assertNotNull(monthDay45);
        org.junit.Assert.assertNotNull(dateTimeFieldType47);
        org.junit.Assert.assertNotNull(property48);
        org.junit.Assert.assertNotNull(chronology49);
        org.junit.Assert.assertNotNull(monthDay50);
        org.junit.Assert.assertNotNull(monthDay51);
        org.junit.Assert.assertNotNull(chronology52);
    }

    @Test
    public void test1729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1729");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        org.joda.time.MonthDay.Property property11 = monthDay3.monthOfYear();
        org.joda.time.DurationField durationField12 = property11.getRangeDurationField();
        org.joda.time.MonthDay monthDay14 = property11.setCopy("1");
        org.joda.time.ReadableInstant readableInstant15 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int16 = property11.compareTo(readableInstant15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The instant must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertNotNull(property11);
        org.junit.Assert.assertNotNull(durationField12);
        org.junit.Assert.assertNotNull(monthDay14);
    }

    @Test
    public void test1730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1730");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.MonthDay monthDay13 = property10.addWrapFieldToCopy((int) (short) 1);
        org.joda.time.MonthDay.Property property14 = monthDay13.dayOfMonth();
        int int15 = property14.getMaximumValueOverall();
        int int16 = property14.getMinimumValueOverall();
        org.joda.time.MonthDay monthDay18 = property14.setCopy(31);
        int int19 = property14.getMinimumValue();
        int int20 = property14.getMinimumValue();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(property14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 31 + "'", int15 == 31);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
    }

    @Test
    public void test1731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1731");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.MonthDay monthDay13 = property10.addWrapFieldToCopy((int) (short) 1);
        org.joda.time.MonthDay monthDay15 = monthDay13.plusDays(2);
        org.joda.time.ReadablePeriod readablePeriod16 = null;
        org.joda.time.MonthDay monthDay17 = monthDay15.minus(readablePeriod16);
        org.joda.time.DurationFieldType durationFieldType18 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MonthDay monthDay20 = monthDay17.withFieldAdded(durationFieldType18, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Field 'null' is not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(monthDay17);
    }

    @Test
    public void test1732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1732");
        org.joda.time.MonthDay monthDay2 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.MonthDay monthDay4 = monthDay2.withChronologyRetainFields(chronology3);
        org.joda.time.DateTimeFieldType dateTimeFieldType6 = monthDay2.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.MonthDay monthDay8 = monthDay2.plus(readablePeriod7);
        org.joda.time.MonthDay monthDay10 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.MonthDay monthDay12 = monthDay10.withChronologyRetainFields(chronology11);
        org.joda.time.MonthDay monthDay14 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MonthDay monthDay16 = monthDay14.withChronologyRetainFields(chronology15);
        org.joda.time.DateTimeFieldType dateTimeFieldType18 = monthDay14.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property19 = monthDay12.property(dateTimeFieldType18);
        int int20 = property19.get();
        org.joda.time.MonthDay monthDay22 = property19.addWrapFieldToCopy((int) (short) 1);
        boolean boolean23 = monthDay2.isBefore((org.joda.time.ReadablePartial) monthDay22);
        org.joda.time.MonthDay monthDay25 = monthDay22.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay27 = monthDay25.plusMonths(1);
        int int28 = monthDay27.getDayOfMonth();
        org.joda.time.DateTimeField[] dateTimeFieldArray29 = monthDay27.getFields();
        org.joda.time.MonthDay monthDay31 = monthDay27.withMonthOfYear((int) (byte) 1);
        org.joda.time.Chronology chronology32 = monthDay31.getChronology();
        org.joda.time.MonthDay monthDay33 = new org.joda.time.MonthDay(chronology32);
        org.joda.time.MonthDay monthDay34 = new org.joda.time.MonthDay((long) 30, chronology32);
        org.junit.Assert.assertNotNull(monthDay2);
        org.junit.Assert.assertNotNull(monthDay4);
        org.junit.Assert.assertNotNull(dateTimeFieldType6);
        org.junit.Assert.assertNotNull(monthDay8);
        org.junit.Assert.assertNotNull(monthDay10);
        org.junit.Assert.assertNotNull(monthDay12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(dateTimeFieldType18);
        org.junit.Assert.assertNotNull(property19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(monthDay25);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertNotNull(dateTimeFieldArray29);
        org.junit.Assert.assertNotNull(monthDay31);
        org.junit.Assert.assertNotNull(chronology32);
    }

    @Test
    public void test1733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1733");
        org.joda.time.MonthDay monthDay0 = org.joda.time.MonthDay.now();
        org.joda.time.ReadablePeriod readablePeriod1 = null;
        org.joda.time.MonthDay monthDay2 = monthDay0.plus(readablePeriod1);
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.MonthDay monthDay4 = new org.joda.time.MonthDay((java.lang.Object) monthDay0, chronology3);
        org.joda.time.MonthDay monthDay6 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.MonthDay monthDay8 = monthDay6.withChronologyRetainFields(chronology7);
        org.joda.time.MonthDay monthDay10 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.MonthDay monthDay12 = monthDay10.withChronologyRetainFields(chronology11);
        org.joda.time.DateTimeFieldType dateTimeFieldType14 = monthDay10.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property15 = monthDay8.property(dateTimeFieldType14);
        int int16 = property15.get();
        org.joda.time.DurationField durationField17 = property15.getDurationField();
        org.joda.time.MonthDay monthDay19 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MonthDay monthDay21 = monthDay19.withChronologyRetainFields(chronology20);
        org.joda.time.MonthDay monthDay23 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MonthDay monthDay25 = monthDay23.withChronologyRetainFields(chronology24);
        org.joda.time.DateTimeFieldType dateTimeFieldType27 = monthDay23.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property28 = monthDay21.property(dateTimeFieldType27);
        boolean boolean29 = property15.equals((java.lang.Object) monthDay21);
        java.util.Locale locale30 = null;
        java.lang.String str31 = property15.getAsShortText(locale30);
        java.lang.String str32 = property15.getAsShortText();
        java.lang.String str33 = property15.toString();
        org.joda.time.DateTimeFieldType dateTimeFieldType34 = property15.getFieldType();
        int int35 = monthDay0.indexOf(dateTimeFieldType34);
        org.junit.Assert.assertNotNull(monthDay0);
        org.junit.Assert.assertNotNull(monthDay2);
        org.junit.Assert.assertNotNull(monthDay6);
        org.junit.Assert.assertNotNull(monthDay8);
        org.junit.Assert.assertNotNull(monthDay10);
        org.junit.Assert.assertNotNull(monthDay12);
        org.junit.Assert.assertNotNull(dateTimeFieldType14);
        org.junit.Assert.assertNotNull(property15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(durationField17);
        org.junit.Assert.assertNotNull(monthDay19);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertNotNull(monthDay23);
        org.junit.Assert.assertNotNull(monthDay25);
        org.junit.Assert.assertNotNull(dateTimeFieldType27);
        org.junit.Assert.assertNotNull(property28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1" + "'", str31, "1");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1" + "'", str32, "1");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Property[dayOfMonth]" + "'", str33, "Property[dayOfMonth]");
        org.junit.Assert.assertNotNull(dateTimeFieldType34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
    }

    @Test
    public void test1734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1734");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        int int12 = property10.getMaximumValue();
        org.joda.time.MonthDay monthDay14 = property10.setCopy((int) (short) 1);
        org.joda.time.MonthDay monthDay16 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MonthDay monthDay18 = monthDay16.withChronologyRetainFields(chronology17);
        org.joda.time.DateTimeFieldType dateTimeFieldType20 = monthDay16.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod21 = null;
        org.joda.time.MonthDay monthDay22 = monthDay16.plus(readablePeriod21);
        int int23 = monthDay16.getDayOfMonth();
        int int24 = property10.compareTo((org.joda.time.ReadablePartial) monthDay16);
        org.joda.time.DurationField durationField25 = property10.getDurationField();
        org.joda.time.MonthDay monthDay27 = property10.addToCopy((int) '#');
        org.joda.time.Chronology chronology28 = monthDay27.getChronology();
        java.lang.Class<?> wildcardClass29 = chronology28.getClass();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 31 + "'", int12 == 31);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(dateTimeFieldType20);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(durationField25);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertNotNull(chronology28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1735");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        org.joda.time.MonthDay.Property property11 = monthDay3.monthOfYear();
        org.joda.time.MonthDay monthDay13 = property11.addWrapFieldToCopy((int) (short) -1);
        org.joda.time.MonthDay monthDay15 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MonthDay monthDay17 = monthDay15.withChronologyRetainFields(chronology16);
        org.joda.time.DateTimeFieldType dateTimeFieldType19 = monthDay15.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay monthDay21 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.MonthDay monthDay23 = monthDay21.withChronologyRetainFields(chronology22);
        org.joda.time.MonthDay monthDay25 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.MonthDay monthDay27 = monthDay25.withChronologyRetainFields(chronology26);
        org.joda.time.DateTimeFieldType dateTimeFieldType29 = monthDay25.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property30 = monthDay23.property(dateTimeFieldType29);
        int int31 = monthDay15.indexOf(dateTimeFieldType29);
        int int32 = monthDay13.get(dateTimeFieldType29);
        org.joda.time.MonthDay.Property property33 = monthDay13.dayOfMonth();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MonthDay monthDay35 = property33.setCopy("--09-01");
            org.junit.Assert.fail("Expected exception of type org.joda.time.IllegalFieldValueException; message: Value \"--09-01\" for dayOfMonth is not supported");
        } catch (org.joda.time.IllegalFieldValueException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertNotNull(property11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(monthDay17);
        org.junit.Assert.assertNotNull(dateTimeFieldType19);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertNotNull(monthDay23);
        org.junit.Assert.assertNotNull(monthDay25);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertNotNull(dateTimeFieldType29);
        org.junit.Assert.assertNotNull(property30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(property33);
    }

    @Test
    public void test1736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1736");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        org.joda.time.MonthDay.Property property11 = monthDay3.monthOfYear();
        int int12 = monthDay3.getDayOfMonth();
        org.joda.time.MonthDay.Property property13 = monthDay3.dayOfMonth();
        int int14 = monthDay3.getDayOfMonth();
        org.joda.time.MonthDay monthDay16 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MonthDay monthDay18 = monthDay16.withChronologyRetainFields(chronology17);
        org.joda.time.DateTimeFieldType dateTimeFieldType20 = monthDay16.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property21 = monthDay16.dayOfMonth();
        org.joda.time.Chronology chronology22 = monthDay16.getChronology();
        org.joda.time.MonthDay monthDay23 = monthDay3.withChronologyRetainFields(chronology22);
        org.joda.time.MonthDay monthDay24 = new org.joda.time.MonthDay(chronology22);
        org.joda.time.MonthDay monthDay25 = new org.joda.time.MonthDay(chronology22);
        org.joda.time.MonthDay monthDay26 = org.joda.time.MonthDay.now(chronology22);
        org.joda.time.MonthDay monthDay27 = new org.joda.time.MonthDay(chronology22);
        org.joda.time.MonthDay monthDay29 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.MonthDay monthDay31 = monthDay29.withChronologyRetainFields(chronology30);
        org.joda.time.MonthDay monthDay33 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.MonthDay monthDay35 = monthDay33.withChronologyRetainFields(chronology34);
        org.joda.time.DateTimeFieldType dateTimeFieldType37 = monthDay33.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property38 = monthDay31.property(dateTimeFieldType37);
        org.joda.time.MonthDay.Property property39 = monthDay31.monthOfYear();
        java.lang.String str40 = property39.getAsShortText();
        int int41 = property39.getMinimumValue();
        org.joda.time.DateTimeFieldType dateTimeFieldType42 = property39.getFieldType();
        org.joda.time.MonthDay monthDay44 = monthDay27.withField(dateTimeFieldType42, (int) (short) 1);
        org.joda.time.MonthDay monthDay46 = monthDay27.withDayOfMonth(12);
        org.joda.time.MonthDay monthDay48 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.MonthDay monthDay50 = monthDay48.withChronologyRetainFields(chronology49);
        org.joda.time.DateTimeFieldType dateTimeFieldType52 = monthDay48.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod53 = null;
        org.joda.time.MonthDay monthDay54 = monthDay48.plus(readablePeriod53);
        org.joda.time.MonthDay monthDay56 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.MonthDay monthDay58 = monthDay56.withChronologyRetainFields(chronology57);
        org.joda.time.MonthDay monthDay60 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.MonthDay monthDay62 = monthDay60.withChronologyRetainFields(chronology61);
        org.joda.time.DateTimeFieldType dateTimeFieldType64 = monthDay60.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property65 = monthDay58.property(dateTimeFieldType64);
        int int66 = property65.get();
        org.joda.time.MonthDay monthDay68 = property65.addWrapFieldToCopy((int) (short) 1);
        boolean boolean69 = monthDay48.isBefore((org.joda.time.ReadablePartial) monthDay68);
        org.joda.time.MonthDay monthDay71 = monthDay68.minusMonths((int) (byte) 100);
        org.joda.time.format.DateTimeFormatter dateTimeFormatter72 = null;
        java.lang.String str73 = monthDay71.toString(dateTimeFormatter72);
        org.joda.time.MonthDay monthDay75 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod76 = null;
        org.joda.time.MonthDay monthDay78 = monthDay75.withPeriodAdded(readablePeriod76, 1);
        org.joda.time.MonthDay monthDay80 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology81 = null;
        org.joda.time.MonthDay monthDay82 = monthDay80.withChronologyRetainFields(chronology81);
        org.joda.time.DateTimeFieldType dateTimeFieldType84 = monthDay80.getFieldType((int) (byte) 1);
        int int85 = monthDay78.indexOf(dateTimeFieldType84);
        org.joda.time.Chronology chronology86 = null;
        org.joda.time.MonthDay monthDay87 = monthDay78.withChronologyRetainFields(chronology86);
        org.joda.time.MonthDay.Property property88 = monthDay87.dayOfMonth();
        org.joda.time.DateTimeFieldType dateTimeFieldType89 = property88.getFieldType();
        org.joda.time.MonthDay monthDay91 = monthDay71.withField(dateTimeFieldType89, 2);
        org.joda.time.MonthDay.Property property92 = monthDay46.property(dateTimeFieldType89);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertNotNull(property11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(property13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(dateTimeFieldType20);
        org.junit.Assert.assertNotNull(property21);
        org.junit.Assert.assertNotNull(chronology22);
        org.junit.Assert.assertNotNull(monthDay23);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(monthDay29);
        org.junit.Assert.assertNotNull(monthDay31);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(dateTimeFieldType37);
        org.junit.Assert.assertNotNull(property38);
        org.junit.Assert.assertNotNull(property39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Jan" + "'", str40, "Jan");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(dateTimeFieldType42);
        org.junit.Assert.assertNotNull(monthDay44);
        org.junit.Assert.assertNotNull(monthDay46);
        org.junit.Assert.assertNotNull(monthDay48);
        org.junit.Assert.assertNotNull(monthDay50);
        org.junit.Assert.assertNotNull(dateTimeFieldType52);
        org.junit.Assert.assertNotNull(monthDay54);
        org.junit.Assert.assertNotNull(monthDay56);
        org.junit.Assert.assertNotNull(monthDay58);
        org.junit.Assert.assertNotNull(monthDay60);
        org.junit.Assert.assertNotNull(monthDay62);
        org.junit.Assert.assertNotNull(dateTimeFieldType64);
        org.junit.Assert.assertNotNull(property65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(monthDay68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(monthDay71);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "--09-02" + "'", str73, "--09-02");
        org.junit.Assert.assertNotNull(monthDay75);
        org.junit.Assert.assertNotNull(monthDay78);
        org.junit.Assert.assertNotNull(monthDay80);
        org.junit.Assert.assertNotNull(monthDay82);
        org.junit.Assert.assertNotNull(dateTimeFieldType84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertNotNull(monthDay87);
        org.junit.Assert.assertNotNull(property88);
        org.junit.Assert.assertNotNull(dateTimeFieldType89);
        org.junit.Assert.assertNotNull(monthDay91);
        org.junit.Assert.assertNotNull(property92);
    }

    @Test
    public void test1737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1737");
        org.joda.time.MonthDay monthDay1 = new org.joda.time.MonthDay((long) 28);
    }

    @Test
    public void test1738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1738");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property6 = monthDay1.dayOfMonth();
        org.joda.time.Chronology chronology7 = monthDay1.getChronology();
        org.joda.time.Chronology chronology8 = monthDay1.getChronology();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.DateTime dateTime10 = monthDay1.toDateTime(readableInstant9);
        org.joda.time.MonthDay monthDay12 = monthDay1.plusMonths((int) ' ');
        org.joda.time.MonthDay monthDay14 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MonthDay monthDay16 = monthDay14.withChronologyRetainFields(chronology15);
        org.joda.time.DateTimeFieldType dateTimeFieldType18 = monthDay14.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod19 = null;
        org.joda.time.MonthDay monthDay20 = monthDay14.plus(readablePeriod19);
        org.joda.time.MonthDay monthDay22 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MonthDay monthDay24 = monthDay22.withChronologyRetainFields(chronology23);
        org.joda.time.MonthDay monthDay26 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.MonthDay monthDay28 = monthDay26.withChronologyRetainFields(chronology27);
        org.joda.time.DateTimeFieldType dateTimeFieldType30 = monthDay26.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property31 = monthDay24.property(dateTimeFieldType30);
        int int32 = property31.get();
        org.joda.time.MonthDay monthDay34 = property31.addWrapFieldToCopy((int) (short) 1);
        boolean boolean35 = monthDay14.isBefore((org.joda.time.ReadablePartial) monthDay34);
        org.joda.time.MonthDay monthDay37 = monthDay34.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay39 = monthDay37.plusMonths(1);
        org.joda.time.ReadablePeriod readablePeriod40 = null;
        org.joda.time.MonthDay monthDay41 = monthDay37.minus(readablePeriod40);
        org.joda.time.DateTimeZone dateTimeZone42 = null;
        org.joda.time.MonthDay monthDay43 = new org.joda.time.MonthDay(dateTimeZone42);
        boolean boolean44 = monthDay41.isEqual((org.joda.time.ReadablePartial) monthDay43);
        boolean boolean45 = monthDay1.equals((java.lang.Object) monthDay41);
        org.joda.time.MonthDay.Property property46 = monthDay41.dayOfMonth();
        org.joda.time.ReadablePeriod readablePeriod47 = null;
        org.joda.time.MonthDay monthDay48 = monthDay41.plus(readablePeriod47);
        org.joda.time.DateTimeFieldType[] dateTimeFieldTypeArray49 = monthDay41.getFieldTypes();
        org.joda.time.format.DateTimeFormatter dateTimeFormatter50 = null;
        java.lang.String str51 = monthDay41.toString(dateTimeFormatter50);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(property6);
        org.junit.Assert.assertNotNull(chronology7);
        org.junit.Assert.assertNotNull(chronology8);
        org.junit.Assert.assertNotNull(dateTime10);
        org.junit.Assert.assertNotNull(monthDay12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(dateTimeFieldType18);
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertNotNull(dateTimeFieldType30);
        org.junit.Assert.assertNotNull(property31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(monthDay37);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertNotNull(monthDay41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(property46);
        org.junit.Assert.assertNotNull(monthDay48);
        org.junit.Assert.assertNotNull(dateTimeFieldTypeArray49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "--09-02" + "'", str51, "--09-02");
    }

    @Test
    public void test1739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1739");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.MonthDay monthDay24 = monthDay21.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay26 = monthDay24.plusMonths(1);
        org.joda.time.ReadablePeriod readablePeriod27 = null;
        org.joda.time.MonthDay monthDay28 = monthDay24.minus(readablePeriod27);
        org.joda.time.DateTimeZone dateTimeZone29 = null;
        org.joda.time.MonthDay monthDay30 = new org.joda.time.MonthDay(dateTimeZone29);
        boolean boolean31 = monthDay28.isEqual((org.joda.time.ReadablePartial) monthDay30);
        org.joda.time.MonthDay monthDay33 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.MonthDay monthDay35 = monthDay33.withChronologyRetainFields(chronology34);
        org.joda.time.DateTimeFieldType dateTimeFieldType37 = monthDay33.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod38 = null;
        org.joda.time.MonthDay monthDay39 = monthDay33.plus(readablePeriod38);
        org.joda.time.MonthDay monthDay41 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.MonthDay monthDay43 = monthDay41.withChronologyRetainFields(chronology42);
        org.joda.time.MonthDay monthDay45 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.MonthDay monthDay47 = monthDay45.withChronologyRetainFields(chronology46);
        org.joda.time.DateTimeFieldType dateTimeFieldType49 = monthDay45.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property50 = monthDay43.property(dateTimeFieldType49);
        int int51 = property50.get();
        org.joda.time.MonthDay monthDay53 = property50.addWrapFieldToCopy((int) (short) 1);
        boolean boolean54 = monthDay33.isBefore((org.joda.time.ReadablePartial) monthDay53);
        org.joda.time.DateTimeFieldType dateTimeFieldType56 = monthDay33.getFieldType(0);
        int int57 = monthDay28.indexOf(dateTimeFieldType56);
        int int58 = monthDay28.getDayOfMonth();
        org.joda.time.MonthDay monthDay60 = monthDay28.minusDays((int) (short) 0);
        org.joda.time.MonthDay monthDay62 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology63 = null;
        org.joda.time.MonthDay monthDay64 = monthDay62.withChronologyRetainFields(chronology63);
        org.joda.time.DateTimeFieldType dateTimeFieldType66 = monthDay62.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod67 = null;
        org.joda.time.MonthDay monthDay68 = monthDay62.plus(readablePeriod67);
        org.joda.time.MonthDay monthDay70 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology71 = null;
        org.joda.time.MonthDay monthDay72 = monthDay70.withChronologyRetainFields(chronology71);
        org.joda.time.MonthDay monthDay74 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology75 = null;
        org.joda.time.MonthDay monthDay76 = monthDay74.withChronologyRetainFields(chronology75);
        org.joda.time.DateTimeFieldType dateTimeFieldType78 = monthDay74.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property79 = monthDay72.property(dateTimeFieldType78);
        int int80 = property79.get();
        org.joda.time.MonthDay monthDay82 = property79.addWrapFieldToCopy((int) (short) 1);
        boolean boolean83 = monthDay62.isBefore((org.joda.time.ReadablePartial) monthDay82);
        org.joda.time.DateTimeFieldType dateTimeFieldType85 = monthDay62.getFieldType(0);
        boolean boolean86 = monthDay60.isSupported(dateTimeFieldType85);
        org.joda.time.MonthDay.Property property87 = monthDay60.monthOfYear();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(dateTimeFieldType37);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertNotNull(monthDay41);
        org.junit.Assert.assertNotNull(monthDay43);
        org.junit.Assert.assertNotNull(monthDay45);
        org.junit.Assert.assertNotNull(monthDay47);
        org.junit.Assert.assertNotNull(dateTimeFieldType49);
        org.junit.Assert.assertNotNull(property50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(monthDay53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(dateTimeFieldType56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2 + "'", int58 == 2);
        org.junit.Assert.assertNotNull(monthDay60);
        org.junit.Assert.assertNotNull(monthDay62);
        org.junit.Assert.assertNotNull(monthDay64);
        org.junit.Assert.assertNotNull(dateTimeFieldType66);
        org.junit.Assert.assertNotNull(monthDay68);
        org.junit.Assert.assertNotNull(monthDay70);
        org.junit.Assert.assertNotNull(monthDay72);
        org.junit.Assert.assertNotNull(monthDay74);
        org.junit.Assert.assertNotNull(monthDay76);
        org.junit.Assert.assertNotNull(dateTimeFieldType78);
        org.junit.Assert.assertNotNull(property79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertNotNull(monthDay82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(dateTimeFieldType85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(property87);
    }

    @Test
    public void test1740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1740");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.MonthDay monthDay13 = property10.addWrapFieldToCopy((int) (short) 1);
        java.lang.String str14 = property10.getAsString();
        java.lang.String str15 = property10.getAsText();
        org.joda.time.DurationField durationField16 = property10.getRangeDurationField();
        int int17 = property10.getMinimumValue();
        org.joda.time.MonthDay monthDay19 = property10.addWrapFieldToCopy((int) '4');
        int int20 = property10.getMaximumValueOverall();
        int int21 = property10.get();
        org.joda.time.DateTimeFieldType dateTimeFieldType22 = property10.getFieldType();
        org.joda.time.MonthDay monthDay24 = property10.setCopy(11);
        java.lang.String str25 = property10.getAsText();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1" + "'", str14, "1");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1" + "'", str15, "1");
        org.junit.Assert.assertNotNull(durationField16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(monthDay19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 31 + "'", int20 == 31);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(dateTimeFieldType22);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1" + "'", str25, "1");
    }

    @Test
    public void test1741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1741");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.MonthDay monthDay13 = property10.addWrapFieldToCopy((int) (short) 1);
        java.lang.String str14 = property10.getAsString();
        java.lang.String str15 = property10.getAsText();
        org.joda.time.DurationField durationField16 = property10.getRangeDurationField();
        int int17 = property10.getMinimumValue();
        org.joda.time.MonthDay monthDay19 = property10.addToCopy((int) (short) -1);
        org.joda.time.MonthDay monthDay21 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.MonthDay monthDay23 = monthDay21.withChronologyRetainFields(chronology22);
        org.joda.time.MonthDay monthDay25 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.MonthDay monthDay27 = monthDay25.withChronologyRetainFields(chronology26);
        org.joda.time.DateTimeFieldType dateTimeFieldType29 = monthDay25.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property30 = monthDay23.property(dateTimeFieldType29);
        int int31 = property30.get();
        org.joda.time.DurationField durationField32 = property30.getDurationField();
        org.joda.time.MonthDay monthDay34 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.MonthDay monthDay36 = monthDay34.withChronologyRetainFields(chronology35);
        org.joda.time.MonthDay monthDay38 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.MonthDay monthDay40 = monthDay38.withChronologyRetainFields(chronology39);
        org.joda.time.DateTimeFieldType dateTimeFieldType42 = monthDay38.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property43 = monthDay36.property(dateTimeFieldType42);
        boolean boolean44 = property30.equals((java.lang.Object) monthDay36);
        org.joda.time.MonthDay monthDay45 = new org.joda.time.MonthDay((java.lang.Object) monthDay36);
        boolean boolean46 = property10.equals((java.lang.Object) monthDay45);
        java.util.Locale locale48 = null;
        java.lang.String str49 = monthDay45.toString("--08-02", locale48);
        org.joda.time.MonthDay.Property property50 = monthDay45.dayOfMonth();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1" + "'", str14, "1");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1" + "'", str15, "1");
        org.junit.Assert.assertNotNull(durationField16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(monthDay19);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertNotNull(monthDay23);
        org.junit.Assert.assertNotNull(monthDay25);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertNotNull(dateTimeFieldType29);
        org.junit.Assert.assertNotNull(property30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(durationField32);
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertNotNull(monthDay36);
        org.junit.Assert.assertNotNull(monthDay38);
        org.junit.Assert.assertNotNull(monthDay40);
        org.junit.Assert.assertNotNull(dateTimeFieldType42);
        org.junit.Assert.assertNotNull(property43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "--08-02" + "'", str49, "--08-02");
        org.junit.Assert.assertNotNull(property50);
    }

    @Test
    public void test1742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1742");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.MonthDay monthDay24 = monthDay21.minusMonths((int) (byte) -1);
        org.joda.time.DateTimeField dateTimeField26 = monthDay21.getField(1);
        org.joda.time.MonthDay monthDay27 = new org.joda.time.MonthDay((java.lang.Object) monthDay21);
        org.joda.time.MonthDay monthDay29 = monthDay21.plusDays((int) (byte) 100);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(dateTimeField26);
        org.junit.Assert.assertNotNull(monthDay29);
    }

    @Test
    public void test1743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1743");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.MonthDay monthDay3 = monthDay1.minusDays((int) '#');
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay5.dayOfMonth();
        org.joda.time.Chronology chronology11 = monthDay5.getChronology();
        org.joda.time.Chronology chronology12 = monthDay5.getChronology();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.DateTime dateTime14 = monthDay5.toDateTime(readableInstant13);
        org.joda.time.MonthDay monthDay16 = monthDay5.plusMonths((int) ' ');
        boolean boolean17 = monthDay1.isAfter((org.joda.time.ReadablePartial) monthDay16);
        org.joda.time.MonthDay monthDay19 = org.joda.time.MonthDay.parse("--02-02");
        boolean boolean20 = monthDay1.isEqual((org.joda.time.ReadablePartial) monthDay19);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertNotNull(chronology11);
        org.junit.Assert.assertNotNull(chronology12);
        org.junit.Assert.assertNotNull(dateTime14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(monthDay19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1744");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.DurationField durationField12 = property10.getDurationField();
        java.util.Locale locale13 = null;
        int int14 = property10.getMaximumTextLength(locale13);
        org.joda.time.MonthDay monthDay16 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MonthDay monthDay18 = monthDay16.withChronologyRetainFields(chronology17);
        org.joda.time.DateTimeFieldType dateTimeFieldType20 = monthDay16.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property21 = monthDay16.dayOfMonth();
        org.joda.time.Chronology chronology22 = monthDay16.getChronology();
        org.joda.time.Chronology chronology23 = monthDay16.getChronology();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.DateTime dateTime25 = monthDay16.toDateTime(readableInstant24);
        int int26 = property10.compareTo((org.joda.time.ReadableInstant) dateTime25);
        org.joda.time.MonthDay monthDay28 = property10.addWrapFieldToCopy((int) '4');
        int int29 = property10.get();
        java.util.Locale locale30 = null;
        int int31 = property10.getMaximumTextLength(locale30);
        java.util.Locale locale32 = null;
        java.lang.String str33 = property10.getAsText(locale32);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(durationField12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(dateTimeFieldType20);
        org.junit.Assert.assertNotNull(property21);
        org.junit.Assert.assertNotNull(chronology22);
        org.junit.Assert.assertNotNull(chronology23);
        org.junit.Assert.assertNotNull(dateTime25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1" + "'", str33, "1");
    }

    @Test
    public void test1745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1745");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.MonthDay monthDay13 = property10.addWrapFieldToCopy((int) (short) 1);
        org.joda.time.MonthDay monthDay15 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MonthDay monthDay17 = monthDay15.withChronologyRetainFields(chronology16);
        org.joda.time.DateTimeFieldType dateTimeFieldType19 = monthDay15.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod20 = null;
        org.joda.time.MonthDay monthDay21 = monthDay15.plus(readablePeriod20);
        org.joda.time.MonthDay monthDay23 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MonthDay monthDay25 = monthDay23.withChronologyRetainFields(chronology24);
        org.joda.time.MonthDay monthDay27 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.MonthDay monthDay29 = monthDay27.withChronologyRetainFields(chronology28);
        org.joda.time.DateTimeFieldType dateTimeFieldType31 = monthDay27.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property32 = monthDay25.property(dateTimeFieldType31);
        int int33 = property32.get();
        org.joda.time.MonthDay monthDay35 = property32.addWrapFieldToCopy((int) (short) 1);
        boolean boolean36 = monthDay15.isBefore((org.joda.time.ReadablePartial) monthDay35);
        org.joda.time.MonthDay monthDay38 = monthDay35.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay40 = monthDay38.plusMonths(1);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.MonthDay monthDay42 = monthDay38.minus(readablePeriod41);
        int int43 = monthDay13.compareTo((org.joda.time.ReadablePartial) monthDay38);
        org.joda.time.MonthDay monthDay45 = monthDay38.withMonthOfYear((int) (short) 1);
        org.joda.time.ReadablePeriod readablePeriod46 = null;
        org.joda.time.MonthDay monthDay48 = monthDay45.withPeriodAdded(readablePeriod46, 9);
        org.joda.time.ReadablePeriod readablePeriod49 = null;
        org.joda.time.MonthDay monthDay51 = monthDay48.withPeriodAdded(readablePeriod49, 21);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(monthDay17);
        org.junit.Assert.assertNotNull(dateTimeFieldType19);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertNotNull(monthDay23);
        org.junit.Assert.assertNotNull(monthDay25);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertNotNull(monthDay29);
        org.junit.Assert.assertNotNull(dateTimeFieldType31);
        org.junit.Assert.assertNotNull(property32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(monthDay38);
        org.junit.Assert.assertNotNull(monthDay40);
        org.junit.Assert.assertNotNull(monthDay42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(monthDay45);
        org.junit.Assert.assertNotNull(monthDay48);
        org.junit.Assert.assertNotNull(monthDay51);
    }

    @Test
    @Ignore
  public void test1746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1746");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.DurationField durationField12 = property10.getDurationField();
        org.joda.time.MonthDay monthDay14 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MonthDay monthDay16 = monthDay14.withChronologyRetainFields(chronology15);
        org.joda.time.MonthDay monthDay18 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MonthDay monthDay20 = monthDay18.withChronologyRetainFields(chronology19);
        org.joda.time.DateTimeFieldType dateTimeFieldType22 = monthDay18.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property23 = monthDay16.property(dateTimeFieldType22);
        boolean boolean24 = property10.equals((java.lang.Object) monthDay16);
        java.lang.String str25 = property10.getAsShortText();
        org.joda.time.MonthDay monthDay27 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.MonthDay monthDay29 = monthDay27.withChronologyRetainFields(chronology28);
        org.joda.time.MonthDay monthDay31 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.MonthDay monthDay33 = monthDay31.withChronologyRetainFields(chronology32);
        org.joda.time.DateTimeFieldType dateTimeFieldType35 = monthDay31.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property36 = monthDay29.property(dateTimeFieldType35);
        int int37 = property36.get();
        org.joda.time.MonthDay monthDay39 = property36.addWrapFieldToCopy((int) (short) 1);
        org.joda.time.MonthDay monthDay41 = monthDay39.plusDays(2);
        org.joda.time.ReadablePeriod readablePeriod42 = null;
        org.joda.time.MonthDay monthDay43 = monthDay41.minus(readablePeriod42);
        org.joda.time.Chronology chronology44 = monthDay43.getChronology();
        org.joda.time.MonthDay monthDay45 = org.joda.time.MonthDay.now(chronology44);
        int int46 = monthDay45.getMonthOfYear();
        org.joda.time.MonthDay monthDay48 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.MonthDay monthDay50 = monthDay48.withChronologyRetainFields(chronology49);
        org.joda.time.DateTimeFieldType dateTimeFieldType52 = monthDay48.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property53 = monthDay45.property(dateTimeFieldType52);
        boolean boolean54 = property10.equals((java.lang.Object) property53);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(durationField12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(dateTimeFieldType22);
        org.junit.Assert.assertNotNull(property23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1" + "'", str25, "1");
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertNotNull(monthDay29);
        org.junit.Assert.assertNotNull(monthDay31);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(dateTimeFieldType35);
        org.junit.Assert.assertNotNull(property36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertNotNull(monthDay41);
        org.junit.Assert.assertNotNull(monthDay43);
        org.junit.Assert.assertNotNull(chronology44);
        org.junit.Assert.assertNotNull(monthDay45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 11 + "'", int46 == 11);
        org.junit.Assert.assertNotNull(monthDay48);
        org.junit.Assert.assertNotNull(monthDay50);
        org.junit.Assert.assertNotNull(dateTimeFieldType52);
        org.junit.Assert.assertNotNull(property53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test1747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1747");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod2 = null;
        org.joda.time.MonthDay monthDay4 = monthDay1.withPeriodAdded(readablePeriod2, 1);
        org.joda.time.MonthDay monthDay6 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.MonthDay monthDay8 = monthDay6.withChronologyRetainFields(chronology7);
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = monthDay6.getFieldType((int) (byte) 1);
        int int11 = monthDay4.indexOf(dateTimeFieldType10);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MonthDay monthDay13 = monthDay4.withChronologyRetainFields(chronology12);
        org.joda.time.MonthDay.Property property14 = monthDay13.dayOfMonth();
        org.joda.time.DateTimeFieldType dateTimeFieldType15 = property14.getFieldType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MonthDay monthDay17 = property14.setCopy("--02-01");
            org.junit.Assert.fail("Expected exception of type org.joda.time.IllegalFieldValueException; message: Value \"--02-01\" for dayOfMonth is not supported");
        } catch (org.joda.time.IllegalFieldValueException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay4);
        org.junit.Assert.assertNotNull(monthDay6);
        org.junit.Assert.assertNotNull(monthDay8);
        org.junit.Assert.assertNotNull(dateTimeFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(property14);
        org.junit.Assert.assertNotNull(dateTimeFieldType15);
    }

    @Test
    public void test1748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1748");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.DateTimeField[] dateTimeFieldArray23 = monthDay1.getFields();
        org.joda.time.ReadablePeriod readablePeriod24 = null;
        org.joda.time.MonthDay monthDay25 = monthDay1.minus(readablePeriod24);
        org.joda.time.MonthDay monthDay27 = monthDay25.minusDays(31);
        org.joda.time.MonthDay monthDay29 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.MonthDay monthDay31 = monthDay29.withChronologyRetainFields(chronology30);
        org.joda.time.DateTimeFieldType dateTimeFieldType33 = monthDay29.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod34 = null;
        org.joda.time.MonthDay monthDay35 = monthDay29.plus(readablePeriod34);
        org.joda.time.MonthDay monthDay37 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.MonthDay monthDay39 = monthDay37.withChronologyRetainFields(chronology38);
        org.joda.time.MonthDay monthDay41 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.MonthDay monthDay43 = monthDay41.withChronologyRetainFields(chronology42);
        org.joda.time.DateTimeFieldType dateTimeFieldType45 = monthDay41.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property46 = monthDay39.property(dateTimeFieldType45);
        int int47 = property46.get();
        org.joda.time.MonthDay monthDay49 = property46.addWrapFieldToCopy((int) (short) 1);
        boolean boolean50 = monthDay29.isBefore((org.joda.time.ReadablePartial) monthDay49);
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.MonthDay monthDay52 = monthDay29.withChronologyRetainFields(chronology51);
        org.joda.time.Chronology chronology53 = monthDay52.getChronology();
        int[] intArray54 = monthDay52.getValues();
        org.joda.time.MonthDay monthDay56 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.MonthDay monthDay58 = monthDay56.withChronologyRetainFields(chronology57);
        org.joda.time.DateTimeFieldType dateTimeFieldType60 = monthDay56.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay monthDay62 = monthDay52.withField(dateTimeFieldType60, 10);
        org.joda.time.MonthDay monthDay64 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology65 = null;
        org.joda.time.MonthDay monthDay66 = monthDay64.withChronologyRetainFields(chronology65);
        org.joda.time.MonthDay monthDay68 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology69 = null;
        org.joda.time.MonthDay monthDay70 = monthDay68.withChronologyRetainFields(chronology69);
        org.joda.time.DateTimeFieldType dateTimeFieldType72 = monthDay68.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property73 = monthDay68.dayOfMonth();
        org.joda.time.Chronology chronology74 = monthDay68.getChronology();
        org.joda.time.MonthDay monthDay75 = org.joda.time.MonthDay.now(chronology74);
        org.joda.time.MonthDay monthDay76 = monthDay66.withChronologyRetainFields(chronology74);
        org.joda.time.Chronology chronology77 = monthDay66.getChronology();
        org.joda.time.MonthDay monthDay78 = new org.joda.time.MonthDay((java.lang.Object) monthDay62, chronology77);
        org.joda.time.MonthDay monthDay79 = org.joda.time.MonthDay.now(chronology77);
        org.joda.time.MonthDay monthDay80 = org.joda.time.MonthDay.now(chronology77);
        org.joda.time.MonthDay monthDay81 = monthDay25.withChronologyRetainFields(chronology77);
        org.joda.time.DurationFieldType durationFieldType82 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MonthDay monthDay84 = monthDay81.withFieldAdded(durationFieldType82, 22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Field 'null' is not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(dateTimeFieldArray23);
        org.junit.Assert.assertNotNull(monthDay25);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertNotNull(monthDay29);
        org.junit.Assert.assertNotNull(monthDay31);
        org.junit.Assert.assertNotNull(dateTimeFieldType33);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(monthDay37);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertNotNull(monthDay41);
        org.junit.Assert.assertNotNull(monthDay43);
        org.junit.Assert.assertNotNull(dateTimeFieldType45);
        org.junit.Assert.assertNotNull(property46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(monthDay49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(monthDay52);
        org.junit.Assert.assertNotNull(chronology53);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[1, 1]");
        org.junit.Assert.assertNotNull(monthDay56);
        org.junit.Assert.assertNotNull(monthDay58);
        org.junit.Assert.assertNotNull(dateTimeFieldType60);
        org.junit.Assert.assertNotNull(monthDay62);
        org.junit.Assert.assertNotNull(monthDay64);
        org.junit.Assert.assertNotNull(monthDay66);
        org.junit.Assert.assertNotNull(monthDay68);
        org.junit.Assert.assertNotNull(monthDay70);
        org.junit.Assert.assertNotNull(dateTimeFieldType72);
        org.junit.Assert.assertNotNull(property73);
        org.junit.Assert.assertNotNull(chronology74);
        org.junit.Assert.assertNotNull(monthDay75);
        org.junit.Assert.assertNotNull(monthDay76);
        org.junit.Assert.assertNotNull(chronology77);
        org.junit.Assert.assertNotNull(monthDay79);
        org.junit.Assert.assertNotNull(monthDay80);
        org.junit.Assert.assertNotNull(monthDay81);
    }

    @Test
    public void test1749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1749");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.MonthDay monthDay13 = property10.addWrapFieldToCopy((int) (short) 1);
        java.lang.String str14 = property10.getAsString();
        java.lang.String str15 = property10.getAsText();
        org.joda.time.DurationField durationField16 = property10.getRangeDurationField();
        int int17 = property10.getMinimumValue();
        org.joda.time.MonthDay monthDay19 = property10.addToCopy(0);
        org.joda.time.MonthDay.Property property20 = monthDay19.dayOfMonth();
        org.joda.time.MonthDay monthDay22 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MonthDay monthDay24 = monthDay22.withChronologyRetainFields(chronology23);
        org.joda.time.MonthDay monthDay26 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.MonthDay monthDay28 = monthDay26.withChronologyRetainFields(chronology27);
        org.joda.time.DateTimeFieldType dateTimeFieldType30 = monthDay26.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property31 = monthDay24.property(dateTimeFieldType30);
        int int32 = property31.get();
        org.joda.time.DurationField durationField33 = property31.getDurationField();
        org.joda.time.MonthDay monthDay35 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.MonthDay monthDay37 = monthDay35.withChronologyRetainFields(chronology36);
        org.joda.time.MonthDay monthDay39 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.MonthDay monthDay41 = monthDay39.withChronologyRetainFields(chronology40);
        org.joda.time.DateTimeFieldType dateTimeFieldType43 = monthDay39.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property44 = monthDay37.property(dateTimeFieldType43);
        boolean boolean45 = property31.equals((java.lang.Object) monthDay37);
        int int46 = property31.getMinimumValueOverall();
        org.joda.time.DateTimeFieldType dateTimeFieldType47 = property31.getFieldType();
        int int48 = property31.getMaximumValueOverall();
        org.joda.time.MonthDay monthDay50 = property31.addToCopy((int) 'a');
        org.joda.time.MonthDay.Property property51 = monthDay50.dayOfMonth();
        boolean boolean52 = monthDay19.isBefore((org.joda.time.ReadablePartial) monthDay50);
        org.joda.time.ReadablePeriod readablePeriod53 = null;
        org.joda.time.MonthDay monthDay55 = monthDay19.withPeriodAdded(readablePeriod53, (int) ' ');
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1" + "'", str14, "1");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1" + "'", str15, "1");
        org.junit.Assert.assertNotNull(durationField16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(monthDay19);
        org.junit.Assert.assertNotNull(property20);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertNotNull(dateTimeFieldType30);
        org.junit.Assert.assertNotNull(property31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(durationField33);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(monthDay37);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertNotNull(monthDay41);
        org.junit.Assert.assertNotNull(dateTimeFieldType43);
        org.junit.Assert.assertNotNull(property44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(dateTimeFieldType47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 31 + "'", int48 == 31);
        org.junit.Assert.assertNotNull(monthDay50);
        org.junit.Assert.assertNotNull(property51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(monthDay55);
    }

    @Test
    public void test1750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1750");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        java.util.Locale locale11 = null;
        int int12 = property10.getMaximumTextLength(locale11);
        java.util.Locale locale13 = null;
        int int14 = property10.getMaximumShortTextLength(locale13);
        org.joda.time.MonthDay monthDay16 = property10.setCopy((int) (short) 1);
        boolean boolean18 = property10.equals((java.lang.Object) "Property[dayOfMonth]");
        org.joda.time.MonthDay monthDay19 = property10.getMonthDay();
        int int20 = property10.getMaximumValue();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(monthDay19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 31 + "'", int20 == 31);
    }

    @Test
    public void test1751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1751");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.MonthDay monthDay13 = property10.addWrapFieldToCopy((int) (short) 1);
        java.lang.String str14 = property10.getAsString();
        java.lang.String str15 = property10.getAsText();
        org.joda.time.MonthDay monthDay17 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.MonthDay monthDay19 = monthDay17.withChronologyRetainFields(chronology18);
        org.joda.time.DateTimeFieldType dateTimeFieldType21 = monthDay17.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property22 = monthDay17.dayOfMonth();
        org.joda.time.Chronology chronology23 = monthDay17.getChronology();
        org.joda.time.Chronology chronology24 = monthDay17.getChronology();
        org.joda.time.MonthDay monthDay25 = org.joda.time.MonthDay.now(chronology24);
        org.joda.time.MonthDay monthDay26 = org.joda.time.MonthDay.now(chronology24);
        boolean boolean27 = property10.equals((java.lang.Object) monthDay26);
        org.joda.time.DateTimeFieldType[] dateTimeFieldTypeArray28 = monthDay26.getFieldTypes();
        java.util.Locale locale30 = null;
        java.lang.String str31 = monthDay26.toString("--02-02", locale30);
        org.joda.time.MonthDay monthDay33 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.MonthDay monthDay35 = monthDay33.withChronologyRetainFields(chronology34);
        org.joda.time.DateTimeFieldType dateTimeFieldType37 = monthDay33.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod38 = null;
        org.joda.time.MonthDay monthDay39 = monthDay33.plus(readablePeriod38);
        org.joda.time.MonthDay monthDay41 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.MonthDay monthDay43 = monthDay41.withChronologyRetainFields(chronology42);
        org.joda.time.MonthDay monthDay45 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.MonthDay monthDay47 = monthDay45.withChronologyRetainFields(chronology46);
        org.joda.time.DateTimeFieldType dateTimeFieldType49 = monthDay45.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property50 = monthDay43.property(dateTimeFieldType49);
        int int51 = property50.get();
        org.joda.time.MonthDay monthDay53 = property50.addWrapFieldToCopy((int) (short) 1);
        boolean boolean54 = monthDay33.isBefore((org.joda.time.ReadablePartial) monthDay53);
        org.joda.time.MonthDay monthDay56 = monthDay53.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay58 = monthDay56.plusMonths(1);
        org.joda.time.ReadablePeriod readablePeriod59 = null;
        org.joda.time.MonthDay monthDay60 = monthDay56.minus(readablePeriod59);
        org.joda.time.DateTimeZone dateTimeZone61 = null;
        org.joda.time.MonthDay monthDay62 = new org.joda.time.MonthDay(dateTimeZone61);
        boolean boolean63 = monthDay60.isEqual((org.joda.time.ReadablePartial) monthDay62);
        org.joda.time.MonthDay monthDay65 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology66 = null;
        org.joda.time.MonthDay monthDay67 = monthDay65.withChronologyRetainFields(chronology66);
        org.joda.time.MonthDay monthDay69 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology70 = null;
        org.joda.time.MonthDay monthDay71 = monthDay69.withChronologyRetainFields(chronology70);
        org.joda.time.DateTimeFieldType dateTimeFieldType73 = monthDay69.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property74 = monthDay67.property(dateTimeFieldType73);
        int int75 = property74.get();
        org.joda.time.MonthDay monthDay77 = property74.addWrapFieldToCopy((int) (short) 1);
        java.lang.String str78 = property74.getAsString();
        java.lang.String str79 = property74.getAsText();
        java.lang.String str80 = property74.getAsShortText();
        boolean boolean81 = monthDay62.equals((java.lang.Object) str80);
        boolean boolean82 = monthDay26.isEqual((org.joda.time.ReadablePartial) monthDay62);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1" + "'", str14, "1");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1" + "'", str15, "1");
        org.junit.Assert.assertNotNull(monthDay17);
        org.junit.Assert.assertNotNull(monthDay19);
        org.junit.Assert.assertNotNull(dateTimeFieldType21);
        org.junit.Assert.assertNotNull(property22);
        org.junit.Assert.assertNotNull(chronology23);
        org.junit.Assert.assertNotNull(chronology24);
        org.junit.Assert.assertNotNull(monthDay25);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(dateTimeFieldTypeArray28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "--02-02" + "'", str31, "--02-02");
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(dateTimeFieldType37);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertNotNull(monthDay41);
        org.junit.Assert.assertNotNull(monthDay43);
        org.junit.Assert.assertNotNull(monthDay45);
        org.junit.Assert.assertNotNull(monthDay47);
        org.junit.Assert.assertNotNull(dateTimeFieldType49);
        org.junit.Assert.assertNotNull(property50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(monthDay53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(monthDay56);
        org.junit.Assert.assertNotNull(monthDay58);
        org.junit.Assert.assertNotNull(monthDay60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(monthDay65);
        org.junit.Assert.assertNotNull(monthDay67);
        org.junit.Assert.assertNotNull(monthDay69);
        org.junit.Assert.assertNotNull(monthDay71);
        org.junit.Assert.assertNotNull(dateTimeFieldType73);
        org.junit.Assert.assertNotNull(property74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertNotNull(monthDay77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "1" + "'", str78, "1");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "1" + "'", str79, "1");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "1" + "'", str80, "1");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test1752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1752");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property6 = monthDay1.dayOfMonth();
        org.joda.time.MonthDay monthDay8 = property6.addWrapFieldToCopy(1);
        org.joda.time.MonthDay monthDay10 = property6.addWrapFieldToCopy(0);
        org.joda.time.MonthDay monthDay12 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MonthDay monthDay14 = monthDay12.withChronologyRetainFields(chronology13);
        org.joda.time.MonthDay monthDay16 = monthDay12.minusMonths((int) (byte) -1);
        boolean boolean17 = property6.equals((java.lang.Object) monthDay16);
        int int18 = property6.get();
        org.joda.time.DurationField durationField19 = property6.getRangeDurationField();
        org.joda.time.MonthDay monthDay21 = property6.addWrapFieldToCopy((int) (byte) 1);
        java.util.Locale locale22 = null;
        int int23 = property6.getMaximumShortTextLength(locale22);
        int int24 = property6.get();
        java.util.Locale locale25 = null;
        int int26 = property6.getMaximumShortTextLength(locale25);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(property6);
        org.junit.Assert.assertNotNull(monthDay8);
        org.junit.Assert.assertNotNull(monthDay10);
        org.junit.Assert.assertNotNull(monthDay12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(durationField19);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
    }

    @Test
    public void test1753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1753");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.DurationField durationField12 = property10.getDurationField();
        java.util.Locale locale13 = null;
        int int14 = property10.getMaximumTextLength(locale13);
        org.joda.time.MonthDay monthDay16 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MonthDay monthDay18 = monthDay16.withChronologyRetainFields(chronology17);
        org.joda.time.DateTimeFieldType dateTimeFieldType20 = monthDay16.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property21 = monthDay16.dayOfMonth();
        org.joda.time.Chronology chronology22 = monthDay16.getChronology();
        org.joda.time.Chronology chronology23 = monthDay16.getChronology();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.DateTime dateTime25 = monthDay16.toDateTime(readableInstant24);
        int int26 = property10.compareTo((org.joda.time.ReadableInstant) dateTime25);
        int int27 = property10.getMinimumValueOverall();
        java.lang.String str28 = property10.getAsText();
        java.util.Locale locale29 = null;
        java.lang.String str30 = property10.getAsText(locale29);
        org.joda.time.MonthDay monthDay32 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.MonthDay monthDay34 = monthDay32.withChronologyRetainFields(chronology33);
        org.joda.time.DateTimeFieldType dateTimeFieldType36 = monthDay32.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod37 = null;
        org.joda.time.MonthDay monthDay38 = monthDay32.plus(readablePeriod37);
        org.joda.time.MonthDay monthDay40 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.MonthDay monthDay42 = monthDay40.withChronologyRetainFields(chronology41);
        org.joda.time.MonthDay monthDay44 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.MonthDay monthDay46 = monthDay44.withChronologyRetainFields(chronology45);
        org.joda.time.DateTimeFieldType dateTimeFieldType48 = monthDay44.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property49 = monthDay42.property(dateTimeFieldType48);
        int int50 = property49.get();
        org.joda.time.MonthDay monthDay52 = property49.addWrapFieldToCopy((int) (short) 1);
        boolean boolean53 = monthDay32.isBefore((org.joda.time.ReadablePartial) monthDay52);
        org.joda.time.MonthDay.Property property54 = monthDay32.monthOfYear();
        org.joda.time.MonthDay monthDay56 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.MonthDay monthDay58 = monthDay56.withChronologyRetainFields(chronology57);
        org.joda.time.DateTimeFieldType dateTimeFieldType60 = monthDay56.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod61 = null;
        org.joda.time.MonthDay monthDay62 = monthDay56.plus(readablePeriod61);
        org.joda.time.MonthDay monthDay64 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology65 = null;
        org.joda.time.MonthDay monthDay66 = monthDay64.withChronologyRetainFields(chronology65);
        org.joda.time.MonthDay monthDay68 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology69 = null;
        org.joda.time.MonthDay monthDay70 = monthDay68.withChronologyRetainFields(chronology69);
        org.joda.time.DateTimeFieldType dateTimeFieldType72 = monthDay68.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property73 = monthDay66.property(dateTimeFieldType72);
        int int74 = property73.get();
        org.joda.time.MonthDay monthDay76 = property73.addWrapFieldToCopy((int) (short) 1);
        boolean boolean77 = monthDay56.isBefore((org.joda.time.ReadablePartial) monthDay76);
        boolean boolean78 = monthDay32.isAfter((org.joda.time.ReadablePartial) monthDay76);
        org.joda.time.MonthDay monthDay80 = monthDay76.withMonthOfYear(12);
        int int81 = property10.compareTo((org.joda.time.ReadablePartial) monthDay80);
        int int82 = property10.getMinimumValueOverall();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(durationField12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(dateTimeFieldType20);
        org.junit.Assert.assertNotNull(property21);
        org.junit.Assert.assertNotNull(chronology22);
        org.junit.Assert.assertNotNull(chronology23);
        org.junit.Assert.assertNotNull(dateTime25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1" + "'", str28, "1");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1" + "'", str30, "1");
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertNotNull(dateTimeFieldType36);
        org.junit.Assert.assertNotNull(monthDay38);
        org.junit.Assert.assertNotNull(monthDay40);
        org.junit.Assert.assertNotNull(monthDay42);
        org.junit.Assert.assertNotNull(monthDay44);
        org.junit.Assert.assertNotNull(monthDay46);
        org.junit.Assert.assertNotNull(dateTimeFieldType48);
        org.junit.Assert.assertNotNull(property49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(monthDay52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(property54);
        org.junit.Assert.assertNotNull(monthDay56);
        org.junit.Assert.assertNotNull(monthDay58);
        org.junit.Assert.assertNotNull(dateTimeFieldType60);
        org.junit.Assert.assertNotNull(monthDay62);
        org.junit.Assert.assertNotNull(monthDay64);
        org.junit.Assert.assertNotNull(monthDay66);
        org.junit.Assert.assertNotNull(monthDay68);
        org.junit.Assert.assertNotNull(monthDay70);
        org.junit.Assert.assertNotNull(dateTimeFieldType72);
        org.junit.Assert.assertNotNull(property73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertNotNull(monthDay76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(monthDay80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
    }

    @Test
    public void test1754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1754");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        org.joda.time.MonthDay.Property property11 = monthDay3.monthOfYear();
        int int12 = monthDay3.getDayOfMonth();
        org.joda.time.MonthDay.Property property13 = monthDay3.dayOfMonth();
        int int14 = monthDay3.getDayOfMonth();
        org.joda.time.ReadablePeriod readablePeriod15 = null;
        org.joda.time.MonthDay monthDay16 = monthDay3.plus(readablePeriod15);
        org.joda.time.MonthDay monthDay18 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MonthDay monthDay20 = monthDay18.withChronologyRetainFields(chronology19);
        org.joda.time.MonthDay monthDay22 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MonthDay monthDay24 = monthDay22.withChronologyRetainFields(chronology23);
        org.joda.time.DateTimeFieldType dateTimeFieldType26 = monthDay22.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property27 = monthDay20.property(dateTimeFieldType26);
        org.joda.time.MonthDay.Property property28 = monthDay20.monthOfYear();
        int int29 = monthDay20.getDayOfMonth();
        org.joda.time.MonthDay.Property property30 = monthDay20.dayOfMonth();
        int int31 = monthDay20.getDayOfMonth();
        org.joda.time.MonthDay monthDay33 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.MonthDay monthDay35 = monthDay33.withChronologyRetainFields(chronology34);
        org.joda.time.DateTimeFieldType dateTimeFieldType37 = monthDay33.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property38 = monthDay33.dayOfMonth();
        org.joda.time.Chronology chronology39 = monthDay33.getChronology();
        org.joda.time.MonthDay monthDay40 = monthDay20.withChronologyRetainFields(chronology39);
        org.joda.time.MonthDay monthDay41 = monthDay16.withChronologyRetainFields(chronology39);
        org.joda.time.ReadablePeriod readablePeriod42 = null;
        org.joda.time.MonthDay monthDay43 = monthDay41.plus(readablePeriod42);
        java.lang.String str44 = monthDay43.toString();
        org.joda.time.MonthDay monthDay46 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.MonthDay monthDay48 = monthDay46.withChronologyRetainFields(chronology47);
        org.joda.time.DateTimeFieldType dateTimeFieldType50 = monthDay46.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod51 = null;
        org.joda.time.MonthDay monthDay52 = monthDay46.plus(readablePeriod51);
        org.joda.time.MonthDay monthDay54 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.MonthDay monthDay56 = monthDay54.withChronologyRetainFields(chronology55);
        org.joda.time.MonthDay monthDay58 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology59 = null;
        org.joda.time.MonthDay monthDay60 = monthDay58.withChronologyRetainFields(chronology59);
        org.joda.time.DateTimeFieldType dateTimeFieldType62 = monthDay58.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property63 = monthDay56.property(dateTimeFieldType62);
        int int64 = property63.get();
        org.joda.time.MonthDay monthDay66 = property63.addWrapFieldToCopy((int) (short) 1);
        boolean boolean67 = monthDay46.isBefore((org.joda.time.ReadablePartial) monthDay66);
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.MonthDay monthDay69 = monthDay46.withChronologyRetainFields(chronology68);
        org.joda.time.MonthDay monthDay71 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology72 = null;
        org.joda.time.MonthDay monthDay73 = monthDay71.withChronologyRetainFields(chronology72);
        org.joda.time.DateTimeFieldType dateTimeFieldType75 = monthDay71.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod76 = null;
        org.joda.time.MonthDay monthDay77 = monthDay71.plus(readablePeriod76);
        org.joda.time.MonthDay monthDay79 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology80 = null;
        org.joda.time.MonthDay monthDay81 = monthDay79.withChronologyRetainFields(chronology80);
        org.joda.time.MonthDay monthDay83 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology84 = null;
        org.joda.time.MonthDay monthDay85 = monthDay83.withChronologyRetainFields(chronology84);
        org.joda.time.DateTimeFieldType dateTimeFieldType87 = monthDay83.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property88 = monthDay81.property(dateTimeFieldType87);
        int int89 = property88.get();
        org.joda.time.MonthDay monthDay91 = property88.addWrapFieldToCopy((int) (short) 1);
        boolean boolean92 = monthDay71.isBefore((org.joda.time.ReadablePartial) monthDay91);
        org.joda.time.DateTimeFieldType dateTimeFieldType94 = monthDay71.getFieldType(0);
        boolean boolean95 = monthDay46.isAfter((org.joda.time.ReadablePartial) monthDay71);
        boolean boolean96 = monthDay43.isAfter((org.joda.time.ReadablePartial) monthDay46);
        org.joda.time.Chronology chronology97 = null;
        org.joda.time.MonthDay monthDay98 = monthDay43.withChronologyRetainFields(chronology97);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertNotNull(property11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(property13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(dateTimeFieldType26);
        org.junit.Assert.assertNotNull(property27);
        org.junit.Assert.assertNotNull(property28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(property30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(dateTimeFieldType37);
        org.junit.Assert.assertNotNull(property38);
        org.junit.Assert.assertNotNull(chronology39);
        org.junit.Assert.assertNotNull(monthDay40);
        org.junit.Assert.assertNotNull(monthDay41);
        org.junit.Assert.assertNotNull(monthDay43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "--01-01" + "'", str44, "--01-01");
        org.junit.Assert.assertNotNull(monthDay46);
        org.junit.Assert.assertNotNull(monthDay48);
        org.junit.Assert.assertNotNull(dateTimeFieldType50);
        org.junit.Assert.assertNotNull(monthDay52);
        org.junit.Assert.assertNotNull(monthDay54);
        org.junit.Assert.assertNotNull(monthDay56);
        org.junit.Assert.assertNotNull(monthDay58);
        org.junit.Assert.assertNotNull(monthDay60);
        org.junit.Assert.assertNotNull(dateTimeFieldType62);
        org.junit.Assert.assertNotNull(property63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(monthDay66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(monthDay69);
        org.junit.Assert.assertNotNull(monthDay71);
        org.junit.Assert.assertNotNull(monthDay73);
        org.junit.Assert.assertNotNull(dateTimeFieldType75);
        org.junit.Assert.assertNotNull(monthDay77);
        org.junit.Assert.assertNotNull(monthDay79);
        org.junit.Assert.assertNotNull(monthDay81);
        org.junit.Assert.assertNotNull(monthDay83);
        org.junit.Assert.assertNotNull(monthDay85);
        org.junit.Assert.assertNotNull(dateTimeFieldType87);
        org.junit.Assert.assertNotNull(property88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertNotNull(monthDay91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(dateTimeFieldType94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(monthDay98);
    }

    @Test
    public void test1755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1755");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.MonthDay monthDay13 = property10.addWrapFieldToCopy((int) (short) 1);
        org.joda.time.MonthDay.Property property14 = monthDay13.dayOfMonth();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DateTimeFieldType dateTimeFieldType16 = monthDay13.getFieldType(30);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(property14);
    }

    @Test
    public void test1756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1756");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MonthDay monthDay24 = monthDay1.withChronologyRetainFields(chronology23);
        org.joda.time.Chronology chronology25 = monthDay24.getChronology();
        int[] intArray26 = monthDay24.getValues();
        org.joda.time.MonthDay monthDay28 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.MonthDay monthDay30 = monthDay28.withChronologyRetainFields(chronology29);
        org.joda.time.DateTimeFieldType dateTimeFieldType32 = monthDay28.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay monthDay34 = monthDay24.withField(dateTimeFieldType32, 10);
        org.joda.time.MonthDay monthDay36 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.MonthDay monthDay38 = monthDay36.withChronologyRetainFields(chronology37);
        org.joda.time.MonthDay monthDay40 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.MonthDay monthDay42 = monthDay40.withChronologyRetainFields(chronology41);
        org.joda.time.DateTimeFieldType dateTimeFieldType44 = monthDay40.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property45 = monthDay40.dayOfMonth();
        org.joda.time.Chronology chronology46 = monthDay40.getChronology();
        org.joda.time.MonthDay monthDay47 = org.joda.time.MonthDay.now(chronology46);
        org.joda.time.MonthDay monthDay48 = monthDay38.withChronologyRetainFields(chronology46);
        org.joda.time.Chronology chronology49 = monthDay38.getChronology();
        org.joda.time.MonthDay monthDay50 = new org.joda.time.MonthDay((java.lang.Object) monthDay34, chronology49);
        org.joda.time.MonthDay monthDay51 = org.joda.time.MonthDay.now(chronology49);
        org.joda.time.MonthDay monthDay52 = org.joda.time.MonthDay.now(chronology49);
        org.joda.time.MonthDay monthDay54 = monthDay52.plusMonths(0);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(chronology25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[1, 1]");
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertNotNull(dateTimeFieldType32);
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertNotNull(monthDay36);
        org.junit.Assert.assertNotNull(monthDay38);
        org.junit.Assert.assertNotNull(monthDay40);
        org.junit.Assert.assertNotNull(monthDay42);
        org.junit.Assert.assertNotNull(dateTimeFieldType44);
        org.junit.Assert.assertNotNull(property45);
        org.junit.Assert.assertNotNull(chronology46);
        org.junit.Assert.assertNotNull(monthDay47);
        org.junit.Assert.assertNotNull(monthDay48);
        org.junit.Assert.assertNotNull(chronology49);
        org.junit.Assert.assertNotNull(monthDay51);
        org.junit.Assert.assertNotNull(monthDay52);
        org.junit.Assert.assertNotNull(monthDay54);
    }

    @Test
    public void test1757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1757");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.MonthDay monthDay24 = monthDay21.minusMonths((int) (byte) 100);
        int int25 = monthDay24.getDayOfMonth();
        org.joda.time.MonthDay monthDay27 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.MonthDay monthDay29 = monthDay27.withChronologyRetainFields(chronology28);
        org.joda.time.MonthDay monthDay31 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.MonthDay monthDay33 = monthDay31.withChronologyRetainFields(chronology32);
        org.joda.time.DateTimeFieldType dateTimeFieldType35 = monthDay31.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property36 = monthDay29.property(dateTimeFieldType35);
        org.joda.time.MonthDay monthDay38 = property36.addWrapFieldToCopy(1);
        int int39 = property36.getMinimumValue();
        org.joda.time.DurationField durationField40 = property36.getRangeDurationField();
        org.joda.time.MonthDay monthDay42 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.MonthDay monthDay44 = monthDay42.withChronologyRetainFields(chronology43);
        org.joda.time.DateTimeFieldType dateTimeFieldType46 = monthDay42.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod47 = null;
        org.joda.time.MonthDay monthDay48 = monthDay42.plus(readablePeriod47);
        org.joda.time.MonthDay monthDay50 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.MonthDay monthDay52 = monthDay50.withChronologyRetainFields(chronology51);
        org.joda.time.MonthDay monthDay54 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.MonthDay monthDay56 = monthDay54.withChronologyRetainFields(chronology55);
        org.joda.time.DateTimeFieldType dateTimeFieldType58 = monthDay54.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property59 = monthDay52.property(dateTimeFieldType58);
        int int60 = property59.get();
        org.joda.time.MonthDay monthDay62 = property59.addWrapFieldToCopy((int) (short) 1);
        boolean boolean63 = monthDay42.isBefore((org.joda.time.ReadablePartial) monthDay62);
        org.joda.time.DateTimeField[] dateTimeFieldArray64 = monthDay42.getFields();
        org.joda.time.ReadablePeriod readablePeriod65 = null;
        org.joda.time.MonthDay monthDay66 = monthDay42.minus(readablePeriod65);
        org.joda.time.ReadablePeriod readablePeriod67 = null;
        org.joda.time.MonthDay monthDay69 = monthDay42.withPeriodAdded(readablePeriod67, (int) (byte) -1);
        org.joda.time.Chronology chronology71 = null;
        org.joda.time.MonthDay monthDay72 = new org.joda.time.MonthDay((long) (short) 100, chronology71);
        org.joda.time.MonthDay monthDay74 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology75 = null;
        org.joda.time.MonthDay monthDay76 = monthDay74.withChronologyRetainFields(chronology75);
        org.joda.time.DateTimeFieldType dateTimeFieldType78 = monthDay74.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property79 = monthDay74.dayOfMonth();
        org.joda.time.Chronology chronology80 = monthDay74.getChronology();
        org.joda.time.Chronology chronology81 = monthDay74.getChronology();
        org.joda.time.ReadableInstant readableInstant82 = null;
        org.joda.time.DateTime dateTime83 = monthDay74.toDateTime(readableInstant82);
        org.joda.time.DateTime dateTime84 = monthDay72.toDateTime(readableInstant82);
        org.joda.time.DateTime dateTime85 = monthDay42.toDateTime((org.joda.time.ReadableInstant) dateTime84);
        int int86 = property36.compareTo((org.joda.time.ReadableInstant) dateTime84);
        org.joda.time.DateTime dateTime87 = monthDay24.toDateTime((org.joda.time.ReadableInstant) dateTime84);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertNotNull(monthDay29);
        org.junit.Assert.assertNotNull(monthDay31);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(dateTimeFieldType35);
        org.junit.Assert.assertNotNull(property36);
        org.junit.Assert.assertNotNull(monthDay38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(durationField40);
        org.junit.Assert.assertNotNull(monthDay42);
        org.junit.Assert.assertNotNull(monthDay44);
        org.junit.Assert.assertNotNull(dateTimeFieldType46);
        org.junit.Assert.assertNotNull(monthDay48);
        org.junit.Assert.assertNotNull(monthDay50);
        org.junit.Assert.assertNotNull(monthDay52);
        org.junit.Assert.assertNotNull(monthDay54);
        org.junit.Assert.assertNotNull(monthDay56);
        org.junit.Assert.assertNotNull(dateTimeFieldType58);
        org.junit.Assert.assertNotNull(property59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(monthDay62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(dateTimeFieldArray64);
        org.junit.Assert.assertNotNull(monthDay66);
        org.junit.Assert.assertNotNull(monthDay69);
        org.junit.Assert.assertNotNull(monthDay74);
        org.junit.Assert.assertNotNull(monthDay76);
        org.junit.Assert.assertNotNull(dateTimeFieldType78);
        org.junit.Assert.assertNotNull(property79);
        org.junit.Assert.assertNotNull(chronology80);
        org.junit.Assert.assertNotNull(chronology81);
        org.junit.Assert.assertNotNull(dateTime83);
        org.junit.Assert.assertNotNull(dateTime84);
        org.junit.Assert.assertNotNull(dateTime85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNotNull(dateTime87);
    }

    @Test
    public void test1758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1758");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.MonthDay monthDay24 = monthDay21.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay26 = monthDay24.plusMonths(1);
        org.joda.time.ReadablePeriod readablePeriod27 = null;
        org.joda.time.MonthDay monthDay28 = monthDay24.minus(readablePeriod27);
        int int29 = monthDay28.size();
        org.joda.time.format.DateTimeFormatter dateTimeFormatter30 = null;
        java.lang.String str31 = monthDay28.toString(dateTimeFormatter30);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "--09-02" + "'", str31, "--09-02");
    }

    @Test
    public void test1759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1759");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod2 = null;
        org.joda.time.MonthDay monthDay4 = monthDay1.withPeriodAdded(readablePeriod2, 1);
        org.joda.time.MonthDay monthDay6 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.MonthDay monthDay8 = monthDay6.withChronologyRetainFields(chronology7);
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = monthDay6.getFieldType((int) (byte) 1);
        int int11 = monthDay4.indexOf(dateTimeFieldType10);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MonthDay monthDay13 = monthDay4.withChronologyRetainFields(chronology12);
        org.joda.time.MonthDay monthDay15 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MonthDay monthDay17 = monthDay15.withChronologyRetainFields(chronology16);
        org.joda.time.DateTimeFieldType dateTimeFieldType19 = monthDay15.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property20 = monthDay15.dayOfMonth();
        org.joda.time.Chronology chronology21 = monthDay15.getChronology();
        org.joda.time.Chronology chronology22 = monthDay15.getChronology();
        boolean boolean23 = monthDay4.isEqual((org.joda.time.ReadablePartial) monthDay15);
        org.joda.time.format.DateTimeFormatter dateTimeFormatter24 = null;
        java.lang.String str25 = monthDay15.toString(dateTimeFormatter24);
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.MonthDay monthDay27 = monthDay15.withChronologyRetainFields(chronology26);
        org.joda.time.MonthDay monthDay29 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.MonthDay monthDay31 = monthDay29.withChronologyRetainFields(chronology30);
        org.joda.time.DateTimeFieldType dateTimeFieldType33 = monthDay29.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property34 = monthDay29.dayOfMonth();
        org.joda.time.Chronology chronology35 = monthDay29.getChronology();
        org.joda.time.Chronology chronology36 = monthDay29.getChronology();
        org.joda.time.MonthDay.Property property37 = monthDay29.dayOfMonth();
        boolean boolean38 = monthDay27.isEqual((org.joda.time.ReadablePartial) monthDay29);
        java.util.Locale locale40 = null;
        java.lang.String str41 = monthDay29.toString("--01-31", locale40);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay4);
        org.junit.Assert.assertNotNull(monthDay6);
        org.junit.Assert.assertNotNull(monthDay8);
        org.junit.Assert.assertNotNull(dateTimeFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(monthDay17);
        org.junit.Assert.assertNotNull(dateTimeFieldType19);
        org.junit.Assert.assertNotNull(property20);
        org.junit.Assert.assertNotNull(chronology21);
        org.junit.Assert.assertNotNull(chronology22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "--01-01" + "'", str25, "--01-01");
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertNotNull(monthDay29);
        org.junit.Assert.assertNotNull(monthDay31);
        org.junit.Assert.assertNotNull(dateTimeFieldType33);
        org.junit.Assert.assertNotNull(property34);
        org.junit.Assert.assertNotNull(chronology35);
        org.junit.Assert.assertNotNull(chronology36);
        org.junit.Assert.assertNotNull(property37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "--01-31" + "'", str41, "--01-31");
    }

    @Test
    public void test1760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1760");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.MonthDay.Property property23 = monthDay1.monthOfYear();
        java.util.Locale locale24 = null;
        int int25 = property23.getMaximumTextLength(locale24);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MonthDay monthDay27 = property23.setCopy("--01-09");
            org.junit.Assert.fail("Expected exception of type org.joda.time.IllegalFieldValueException; message: Value \"--01-09\" for monthOfYear is not supported");
        } catch (org.joda.time.IllegalFieldValueException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(property23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 9 + "'", int25 == 9);
    }

    @Test
    public void test1761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1761");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.DurationField durationField12 = property10.getDurationField();
        org.joda.time.MonthDay monthDay14 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MonthDay monthDay16 = monthDay14.withChronologyRetainFields(chronology15);
        org.joda.time.MonthDay monthDay18 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MonthDay monthDay20 = monthDay18.withChronologyRetainFields(chronology19);
        org.joda.time.DateTimeFieldType dateTimeFieldType22 = monthDay18.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property23 = monthDay16.property(dateTimeFieldType22);
        boolean boolean24 = property10.equals((java.lang.Object) monthDay16);
        java.lang.String str25 = property10.getAsShortText();
        java.lang.String str26 = property10.toString();
        java.util.Locale locale27 = null;
        int int28 = property10.getMaximumShortTextLength(locale27);
        boolean boolean30 = property10.equals((java.lang.Object) 0.0d);
        org.joda.time.MonthDay monthDay32 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.MonthDay monthDay34 = monthDay32.withChronologyRetainFields(chronology33);
        org.joda.time.DateTimeFieldType dateTimeFieldType36 = monthDay32.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod37 = null;
        org.joda.time.MonthDay monthDay38 = monthDay32.plus(readablePeriod37);
        org.joda.time.MonthDay monthDay40 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.MonthDay monthDay42 = monthDay40.withChronologyRetainFields(chronology41);
        org.joda.time.MonthDay monthDay44 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.MonthDay monthDay46 = monthDay44.withChronologyRetainFields(chronology45);
        org.joda.time.DateTimeFieldType dateTimeFieldType48 = monthDay44.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property49 = monthDay42.property(dateTimeFieldType48);
        int int50 = property49.get();
        org.joda.time.MonthDay monthDay52 = property49.addWrapFieldToCopy((int) (short) 1);
        boolean boolean53 = monthDay32.isBefore((org.joda.time.ReadablePartial) monthDay52);
        int int54 = property10.compareTo((org.joda.time.ReadablePartial) monthDay52);
        java.lang.String str55 = property10.getAsText();
        org.joda.time.MonthDay monthDay57 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology58 = null;
        org.joda.time.MonthDay monthDay59 = monthDay57.withChronologyRetainFields(chronology58);
        org.joda.time.DateTimeFieldType dateTimeFieldType61 = monthDay57.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod62 = null;
        org.joda.time.MonthDay monthDay63 = monthDay57.plus(readablePeriod62);
        org.joda.time.MonthDay monthDay65 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology66 = null;
        org.joda.time.MonthDay monthDay67 = monthDay65.withChronologyRetainFields(chronology66);
        org.joda.time.MonthDay monthDay69 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology70 = null;
        org.joda.time.MonthDay monthDay71 = monthDay69.withChronologyRetainFields(chronology70);
        org.joda.time.DateTimeFieldType dateTimeFieldType73 = monthDay69.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property74 = monthDay67.property(dateTimeFieldType73);
        int int75 = property74.get();
        org.joda.time.MonthDay monthDay77 = property74.addWrapFieldToCopy((int) (short) 1);
        boolean boolean78 = monthDay57.isBefore((org.joda.time.ReadablePartial) monthDay77);
        org.joda.time.MonthDay monthDay80 = monthDay77.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay82 = monthDay80.plusMonths(1);
        int int83 = monthDay82.getDayOfMonth();
        org.joda.time.DateTimeField[] dateTimeFieldArray84 = monthDay82.getFields();
        org.joda.time.Chronology chronology85 = monthDay82.getChronology();
        org.joda.time.MonthDay monthDay86 = new org.joda.time.MonthDay((java.lang.Object) str55, chronology85);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(durationField12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(dateTimeFieldType22);
        org.junit.Assert.assertNotNull(property23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1" + "'", str25, "1");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Property[dayOfMonth]" + "'", str26, "Property[dayOfMonth]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertNotNull(dateTimeFieldType36);
        org.junit.Assert.assertNotNull(monthDay38);
        org.junit.Assert.assertNotNull(monthDay40);
        org.junit.Assert.assertNotNull(monthDay42);
        org.junit.Assert.assertNotNull(monthDay44);
        org.junit.Assert.assertNotNull(monthDay46);
        org.junit.Assert.assertNotNull(dateTimeFieldType48);
        org.junit.Assert.assertNotNull(property49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(monthDay52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "1" + "'", str55, "1");
        org.junit.Assert.assertNotNull(monthDay57);
        org.junit.Assert.assertNotNull(monthDay59);
        org.junit.Assert.assertNotNull(dateTimeFieldType61);
        org.junit.Assert.assertNotNull(monthDay63);
        org.junit.Assert.assertNotNull(monthDay65);
        org.junit.Assert.assertNotNull(monthDay67);
        org.junit.Assert.assertNotNull(monthDay69);
        org.junit.Assert.assertNotNull(monthDay71);
        org.junit.Assert.assertNotNull(dateTimeFieldType73);
        org.junit.Assert.assertNotNull(property74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertNotNull(monthDay77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(monthDay80);
        org.junit.Assert.assertNotNull(monthDay82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 2 + "'", int83 == 2);
        org.junit.Assert.assertNotNull(dateTimeFieldArray84);
        org.junit.Assert.assertNotNull(chronology85);
    }

    @Test
    public void test1762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1762");
        org.joda.time.DateTimeZone dateTimeZone0 = null;
        org.joda.time.MonthDay monthDay1 = new org.joda.time.MonthDay(dateTimeZone0);
        org.joda.time.DateTimeField[] dateTimeFieldArray2 = monthDay1.getFields();
        org.joda.time.MonthDay monthDay4 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod5 = null;
        org.joda.time.MonthDay monthDay7 = monthDay4.withPeriodAdded(readablePeriod5, 1);
        boolean boolean8 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay4);
        int int9 = monthDay4.getMonthOfYear();
        org.joda.time.MonthDay.Property property10 = monthDay4.dayOfMonth();
        org.junit.Assert.assertNotNull(dateTimeFieldArray2);
        org.junit.Assert.assertNotNull(monthDay4);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(property10);
    }

    @Test
    public void test1763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1763");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        int int12 = property10.getMaximumValue();
        org.joda.time.MonthDay monthDay14 = property10.setCopy((int) (short) 1);
        java.util.Locale locale16 = null;
        org.joda.time.MonthDay monthDay17 = property10.setCopy("25", locale16);
        java.lang.String str18 = property10.getAsString();
        org.joda.time.MonthDay monthDay20 = property10.setCopy("2");
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 31 + "'", int12 == 31);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1" + "'", str18, "1");
        org.junit.Assert.assertNotNull(monthDay20);
    }

    @Test
    public void test1764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1764");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property6 = monthDay1.dayOfMonth();
        org.joda.time.Chronology chronology7 = monthDay1.getChronology();
        org.joda.time.Chronology chronology8 = monthDay1.getChronology();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.DateTime dateTime10 = monthDay1.toDateTime(readableInstant9);
        org.joda.time.MonthDay monthDay12 = monthDay1.plusMonths((int) ' ');
        org.joda.time.MonthDay monthDay14 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MonthDay monthDay16 = monthDay14.withChronologyRetainFields(chronology15);
        org.joda.time.DateTimeFieldType dateTimeFieldType18 = monthDay14.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod19 = null;
        org.joda.time.MonthDay monthDay20 = monthDay14.plus(readablePeriod19);
        org.joda.time.MonthDay monthDay22 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MonthDay monthDay24 = monthDay22.withChronologyRetainFields(chronology23);
        org.joda.time.MonthDay monthDay26 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.MonthDay monthDay28 = monthDay26.withChronologyRetainFields(chronology27);
        org.joda.time.DateTimeFieldType dateTimeFieldType30 = monthDay26.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property31 = monthDay24.property(dateTimeFieldType30);
        int int32 = property31.get();
        org.joda.time.MonthDay monthDay34 = property31.addWrapFieldToCopy((int) (short) 1);
        boolean boolean35 = monthDay14.isBefore((org.joda.time.ReadablePartial) monthDay34);
        org.joda.time.MonthDay monthDay37 = monthDay34.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay39 = monthDay37.plusMonths(1);
        org.joda.time.ReadablePeriod readablePeriod40 = null;
        org.joda.time.MonthDay monthDay41 = monthDay37.minus(readablePeriod40);
        org.joda.time.DateTimeZone dateTimeZone42 = null;
        org.joda.time.MonthDay monthDay43 = new org.joda.time.MonthDay(dateTimeZone42);
        boolean boolean44 = monthDay41.isEqual((org.joda.time.ReadablePartial) monthDay43);
        boolean boolean45 = monthDay1.equals((java.lang.Object) monthDay41);
        org.joda.time.MonthDay monthDay47 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.MonthDay monthDay49 = monthDay47.withChronologyRetainFields(chronology48);
        org.joda.time.DateTimeFieldType dateTimeFieldType51 = monthDay47.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod52 = null;
        org.joda.time.MonthDay monthDay53 = monthDay47.plus(readablePeriod52);
        int int54 = monthDay53.getMonthOfYear();
        org.joda.time.MonthDay monthDay56 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.MonthDay monthDay58 = monthDay56.withChronologyRetainFields(chronology57);
        org.joda.time.MonthDay monthDay60 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.MonthDay monthDay62 = monthDay60.withChronologyRetainFields(chronology61);
        org.joda.time.DateTimeFieldType dateTimeFieldType64 = monthDay60.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property65 = monthDay58.property(dateTimeFieldType64);
        java.util.Locale locale66 = null;
        int int67 = property65.getMaximumTextLength(locale66);
        org.joda.time.MonthDay monthDay69 = property65.addWrapFieldToCopy((int) (byte) 0);
        org.joda.time.ReadablePeriod readablePeriod70 = null;
        org.joda.time.MonthDay monthDay71 = monthDay69.minus(readablePeriod70);
        boolean boolean72 = monthDay53.isAfter((org.joda.time.ReadablePartial) monthDay69);
        boolean boolean73 = monthDay1.equals((java.lang.Object) monthDay69);
        int int74 = monthDay69.getDayOfMonth();
        int int75 = monthDay69.getMonthOfYear();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(property6);
        org.junit.Assert.assertNotNull(chronology7);
        org.junit.Assert.assertNotNull(chronology8);
        org.junit.Assert.assertNotNull(dateTime10);
        org.junit.Assert.assertNotNull(monthDay12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(dateTimeFieldType18);
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertNotNull(dateTimeFieldType30);
        org.junit.Assert.assertNotNull(property31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(monthDay37);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertNotNull(monthDay41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(monthDay47);
        org.junit.Assert.assertNotNull(monthDay49);
        org.junit.Assert.assertNotNull(dateTimeFieldType51);
        org.junit.Assert.assertNotNull(monthDay53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(monthDay56);
        org.junit.Assert.assertNotNull(monthDay58);
        org.junit.Assert.assertNotNull(monthDay60);
        org.junit.Assert.assertNotNull(monthDay62);
        org.junit.Assert.assertNotNull(dateTimeFieldType64);
        org.junit.Assert.assertNotNull(property65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2 + "'", int67 == 2);
        org.junit.Assert.assertNotNull(monthDay69);
        org.junit.Assert.assertNotNull(monthDay71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
    }

    @Test
    public void test1765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1765");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property6 = monthDay1.dayOfMonth();
        org.joda.time.Chronology chronology7 = monthDay1.getChronology();
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        boolean boolean19 = monthDay1.isSupported(dateTimeFieldType17);
        org.joda.time.MonthDay.Property property20 = monthDay1.monthOfYear();
        org.joda.time.MonthDay monthDay22 = monthDay1.minusDays((int) (short) 1);
        org.joda.time.MonthDay monthDay24 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.MonthDay monthDay26 = monthDay24.withChronologyRetainFields(chronology25);
        org.joda.time.DateTimeFieldType dateTimeFieldType28 = monthDay24.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod29 = null;
        org.joda.time.MonthDay monthDay30 = monthDay24.plus(readablePeriod29);
        int int31 = monthDay30.getMonthOfYear();
        org.joda.time.MonthDay monthDay33 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.MonthDay monthDay35 = monthDay33.withChronologyRetainFields(chronology34);
        org.joda.time.MonthDay monthDay37 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.MonthDay monthDay39 = monthDay37.withChronologyRetainFields(chronology38);
        org.joda.time.DateTimeFieldType dateTimeFieldType41 = monthDay37.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property42 = monthDay35.property(dateTimeFieldType41);
        java.util.Locale locale43 = null;
        int int44 = property42.getMaximumTextLength(locale43);
        org.joda.time.MonthDay monthDay46 = property42.addWrapFieldToCopy((int) (byte) 0);
        org.joda.time.ReadablePeriod readablePeriod47 = null;
        org.joda.time.MonthDay monthDay48 = monthDay46.minus(readablePeriod47);
        boolean boolean49 = monthDay30.isAfter((org.joda.time.ReadablePartial) monthDay46);
        boolean boolean50 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay46);
        org.joda.time.ReadablePartial readablePartial51 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean52 = monthDay1.isBefore(readablePartial51);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Partial cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(property6);
        org.junit.Assert.assertNotNull(chronology7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(property20);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(dateTimeFieldType28);
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(monthDay37);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertNotNull(dateTimeFieldType41);
        org.junit.Assert.assertNotNull(property42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertNotNull(monthDay46);
        org.junit.Assert.assertNotNull(monthDay48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test1766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1766");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.MonthDay monthDay13 = property10.addWrapFieldToCopy((int) (short) 1);
        java.lang.String str14 = property10.getAsString();
        java.lang.String str15 = property10.getAsText();
        org.joda.time.MonthDay monthDay16 = property10.getMonthDay();
        java.util.Locale locale17 = null;
        java.lang.String str18 = property10.getAsShortText(locale17);
        java.lang.String str19 = property10.toString();
        int int20 = property10.getMaximumValueOverall();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1" + "'", str14, "1");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1" + "'", str15, "1");
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "1" + "'", str18, "1");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Property[dayOfMonth]" + "'", str19, "Property[dayOfMonth]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 31 + "'", int20 == 31);
    }

    @Test
    public void test1767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1767");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.MonthDay monthDay3 = monthDay1.minusDays((int) '#');
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay5.dayOfMonth();
        org.joda.time.Chronology chronology11 = monthDay5.getChronology();
        org.joda.time.Chronology chronology12 = monthDay5.getChronology();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.DateTime dateTime14 = monthDay5.toDateTime(readableInstant13);
        org.joda.time.MonthDay monthDay16 = monthDay5.plusMonths((int) ' ');
        boolean boolean17 = monthDay1.isAfter((org.joda.time.ReadablePartial) monthDay16);
        org.joda.time.MonthDay monthDay19 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MonthDay monthDay21 = monthDay19.withChronologyRetainFields(chronology20);
        org.joda.time.DateTimeFieldType dateTimeFieldType23 = monthDay19.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod24 = null;
        org.joda.time.MonthDay monthDay25 = monthDay19.plus(readablePeriod24);
        org.joda.time.MonthDay monthDay27 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.MonthDay monthDay29 = monthDay27.withChronologyRetainFields(chronology28);
        org.joda.time.MonthDay monthDay31 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.MonthDay monthDay33 = monthDay31.withChronologyRetainFields(chronology32);
        org.joda.time.DateTimeFieldType dateTimeFieldType35 = monthDay31.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property36 = monthDay29.property(dateTimeFieldType35);
        int int37 = property36.get();
        org.joda.time.MonthDay monthDay39 = property36.addWrapFieldToCopy((int) (short) 1);
        boolean boolean40 = monthDay19.isBefore((org.joda.time.ReadablePartial) monthDay39);
        org.joda.time.MonthDay monthDay42 = monthDay39.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay44 = monthDay42.plusMonths(1);
        int int45 = monthDay16.compareTo((org.joda.time.ReadablePartial) monthDay42);
        org.joda.time.MonthDay monthDay47 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.MonthDay monthDay49 = monthDay47.withChronologyRetainFields(chronology48);
        org.joda.time.MonthDay monthDay51 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.MonthDay monthDay53 = monthDay51.withChronologyRetainFields(chronology52);
        org.joda.time.DateTimeFieldType dateTimeFieldType55 = monthDay51.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property56 = monthDay49.property(dateTimeFieldType55);
        org.joda.time.MonthDay.Property property57 = monthDay49.monthOfYear();
        org.joda.time.MonthDay monthDay59 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.MonthDay monthDay61 = monthDay59.withChronologyRetainFields(chronology60);
        org.joda.time.DateTimeFieldType dateTimeFieldType63 = monthDay59.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay monthDay65 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology66 = null;
        org.joda.time.MonthDay monthDay67 = monthDay65.withChronologyRetainFields(chronology66);
        org.joda.time.MonthDay monthDay69 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology70 = null;
        org.joda.time.MonthDay monthDay71 = monthDay69.withChronologyRetainFields(chronology70);
        org.joda.time.DateTimeFieldType dateTimeFieldType73 = monthDay69.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property74 = monthDay67.property(dateTimeFieldType73);
        int int75 = monthDay59.indexOf(dateTimeFieldType73);
        boolean boolean76 = monthDay49.equals((java.lang.Object) int75);
        org.joda.time.MonthDay monthDay78 = monthDay49.withMonthOfYear(9);
        int int80 = monthDay78.getValue((int) (byte) 0);
        org.joda.time.DateTimeFieldType[] dateTimeFieldTypeArray81 = monthDay78.getFieldTypes();
        org.joda.time.MonthDay monthDay83 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology84 = null;
        org.joda.time.MonthDay monthDay85 = monthDay83.withChronologyRetainFields(chronology84);
        org.joda.time.DateTimeFieldType dateTimeFieldType87 = monthDay83.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property88 = monthDay83.dayOfMonth();
        org.joda.time.Chronology chronology89 = monthDay83.getChronology();
        org.joda.time.Chronology chronology90 = monthDay83.getChronology();
        org.joda.time.MonthDay monthDay91 = monthDay78.withChronologyRetainFields(chronology90);
        int int92 = monthDay16.compareTo((org.joda.time.ReadablePartial) monthDay91);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertNotNull(chronology11);
        org.junit.Assert.assertNotNull(chronology12);
        org.junit.Assert.assertNotNull(dateTime14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(monthDay19);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertNotNull(dateTimeFieldType23);
        org.junit.Assert.assertNotNull(monthDay25);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertNotNull(monthDay29);
        org.junit.Assert.assertNotNull(monthDay31);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(dateTimeFieldType35);
        org.junit.Assert.assertNotNull(property36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(monthDay42);
        org.junit.Assert.assertNotNull(monthDay44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(monthDay47);
        org.junit.Assert.assertNotNull(monthDay49);
        org.junit.Assert.assertNotNull(monthDay51);
        org.junit.Assert.assertNotNull(monthDay53);
        org.junit.Assert.assertNotNull(dateTimeFieldType55);
        org.junit.Assert.assertNotNull(property56);
        org.junit.Assert.assertNotNull(property57);
        org.junit.Assert.assertNotNull(monthDay59);
        org.junit.Assert.assertNotNull(monthDay61);
        org.junit.Assert.assertNotNull(dateTimeFieldType63);
        org.junit.Assert.assertNotNull(monthDay65);
        org.junit.Assert.assertNotNull(monthDay67);
        org.junit.Assert.assertNotNull(monthDay69);
        org.junit.Assert.assertNotNull(monthDay71);
        org.junit.Assert.assertNotNull(dateTimeFieldType73);
        org.junit.Assert.assertNotNull(property74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(monthDay78);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 9 + "'", int80 == 9);
        org.junit.Assert.assertNotNull(dateTimeFieldTypeArray81);
        org.junit.Assert.assertNotNull(monthDay83);
        org.junit.Assert.assertNotNull(monthDay85);
        org.junit.Assert.assertNotNull(dateTimeFieldType87);
        org.junit.Assert.assertNotNull(property88);
        org.junit.Assert.assertNotNull(chronology89);
        org.junit.Assert.assertNotNull(chronology90);
        org.junit.Assert.assertNotNull(monthDay91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
    }

    @Test
    @Ignore
  public void test1768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1768");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.DurationField durationField12 = property10.getDurationField();
        org.joda.time.MonthDay monthDay14 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MonthDay monthDay16 = monthDay14.withChronologyRetainFields(chronology15);
        org.joda.time.MonthDay monthDay18 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MonthDay monthDay20 = monthDay18.withChronologyRetainFields(chronology19);
        org.joda.time.DateTimeFieldType dateTimeFieldType22 = monthDay18.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property23 = monthDay16.property(dateTimeFieldType22);
        boolean boolean24 = property10.equals((java.lang.Object) monthDay16);
        org.joda.time.MonthDay.Property property25 = monthDay16.dayOfMonth();
        org.joda.time.MonthDay.Property property26 = monthDay16.monthOfYear();
        org.joda.time.MonthDay monthDay28 = property26.addToCopy(4);
        org.joda.time.DateTimeZone dateTimeZone29 = null;
        org.joda.time.MonthDay monthDay30 = new org.joda.time.MonthDay(dateTimeZone29);
        org.joda.time.DateTimeField[] dateTimeFieldArray31 = monthDay30.getFields();
        int int32 = property26.compareTo((org.joda.time.ReadablePartial) monthDay30);
        java.lang.String str33 = property26.getName();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(durationField12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(dateTimeFieldType22);
        org.junit.Assert.assertNotNull(property23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(property25);
        org.junit.Assert.assertNotNull(property26);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertNotNull(dateTimeFieldArray31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "monthOfYear" + "'", str33, "monthOfYear");
    }

    @Test
    public void test1769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1769");
        org.joda.time.MonthDay monthDay2 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.MonthDay monthDay4 = monthDay2.withChronologyRetainFields(chronology3);
        org.joda.time.MonthDay monthDay6 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.MonthDay monthDay8 = monthDay6.withChronologyRetainFields(chronology7);
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = monthDay6.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property11 = monthDay4.property(dateTimeFieldType10);
        java.lang.String str12 = property11.getAsText();
        org.joda.time.MonthDay monthDay14 = property11.setCopy((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod15 = null;
        org.joda.time.MonthDay monthDay16 = monthDay14.plus(readablePeriod15);
        org.joda.time.MonthDay monthDay18 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MonthDay monthDay20 = monthDay18.withChronologyRetainFields(chronology19);
        org.joda.time.DateTimeFieldType dateTimeFieldType22 = monthDay18.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod23 = null;
        org.joda.time.MonthDay monthDay24 = monthDay18.plus(readablePeriod23);
        org.joda.time.MonthDay monthDay26 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.MonthDay monthDay28 = monthDay26.withChronologyRetainFields(chronology27);
        org.joda.time.MonthDay monthDay30 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MonthDay monthDay32 = monthDay30.withChronologyRetainFields(chronology31);
        org.joda.time.DateTimeFieldType dateTimeFieldType34 = monthDay30.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property35 = monthDay28.property(dateTimeFieldType34);
        int int36 = property35.get();
        org.joda.time.MonthDay monthDay38 = property35.addWrapFieldToCopy((int) (short) 1);
        boolean boolean39 = monthDay18.isBefore((org.joda.time.ReadablePartial) monthDay38);
        org.joda.time.MonthDay monthDay41 = monthDay38.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay43 = monthDay41.plusMonths(1);
        org.joda.time.MonthDay monthDay45 = org.joda.time.MonthDay.parse("");
        org.joda.time.MonthDay monthDay47 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.MonthDay monthDay49 = monthDay47.withChronologyRetainFields(chronology48);
        org.joda.time.DateTimeFieldType dateTimeFieldType51 = monthDay47.getFieldType((int) (byte) 1);
        boolean boolean52 = monthDay45.isSupported(dateTimeFieldType51);
        boolean boolean53 = monthDay41.isSupported(dateTimeFieldType51);
        org.joda.time.Chronology chronology54 = monthDay41.getChronology();
        org.joda.time.MonthDay monthDay55 = monthDay16.withChronologyRetainFields(chronology54);
        org.joda.time.MonthDay monthDay56 = new org.joda.time.MonthDay((long) 11, chronology54);
        org.joda.time.MonthDay monthDay57 = new org.joda.time.MonthDay(chronology54);
        org.junit.Assert.assertNotNull(monthDay2);
        org.junit.Assert.assertNotNull(monthDay4);
        org.junit.Assert.assertNotNull(monthDay6);
        org.junit.Assert.assertNotNull(monthDay8);
        org.junit.Assert.assertNotNull(dateTimeFieldType10);
        org.junit.Assert.assertNotNull(property11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1" + "'", str12, "1");
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(dateTimeFieldType22);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(dateTimeFieldType34);
        org.junit.Assert.assertNotNull(property35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(monthDay38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(monthDay41);
        org.junit.Assert.assertNotNull(monthDay43);
        org.junit.Assert.assertNotNull(monthDay45);
        org.junit.Assert.assertNotNull(monthDay47);
        org.junit.Assert.assertNotNull(monthDay49);
        org.junit.Assert.assertNotNull(dateTimeFieldType51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(chronology54);
        org.junit.Assert.assertNotNull(monthDay55);
    }

    @Test
    public void test1770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1770");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.MonthDay monthDay24 = monthDay21.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay26 = monthDay24.plusMonths(1);
        org.joda.time.ReadablePeriod readablePeriod27 = null;
        org.joda.time.MonthDay monthDay28 = monthDay24.minus(readablePeriod27);
        org.joda.time.DateTimeZone dateTimeZone29 = null;
        org.joda.time.MonthDay monthDay30 = new org.joda.time.MonthDay(dateTimeZone29);
        boolean boolean31 = monthDay28.isEqual((org.joda.time.ReadablePartial) monthDay30);
        org.joda.time.MonthDay monthDay33 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.MonthDay monthDay35 = monthDay33.withChronologyRetainFields(chronology34);
        org.joda.time.DateTimeFieldType dateTimeFieldType37 = monthDay33.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod38 = null;
        org.joda.time.MonthDay monthDay39 = monthDay33.plus(readablePeriod38);
        org.joda.time.MonthDay monthDay41 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.MonthDay monthDay43 = monthDay41.withChronologyRetainFields(chronology42);
        org.joda.time.MonthDay monthDay45 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.MonthDay monthDay47 = monthDay45.withChronologyRetainFields(chronology46);
        org.joda.time.DateTimeFieldType dateTimeFieldType49 = monthDay45.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property50 = monthDay43.property(dateTimeFieldType49);
        int int51 = property50.get();
        org.joda.time.MonthDay monthDay53 = property50.addWrapFieldToCopy((int) (short) 1);
        boolean boolean54 = monthDay33.isBefore((org.joda.time.ReadablePartial) monthDay53);
        org.joda.time.DateTimeFieldType dateTimeFieldType56 = monthDay33.getFieldType(0);
        int int57 = monthDay28.indexOf(dateTimeFieldType56);
        int int58 = monthDay28.getDayOfMonth();
        org.joda.time.Chronology chronology59 = monthDay28.getChronology();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(dateTimeFieldType37);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertNotNull(monthDay41);
        org.junit.Assert.assertNotNull(monthDay43);
        org.junit.Assert.assertNotNull(monthDay45);
        org.junit.Assert.assertNotNull(monthDay47);
        org.junit.Assert.assertNotNull(dateTimeFieldType49);
        org.junit.Assert.assertNotNull(property50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(monthDay53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(dateTimeFieldType56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2 + "'", int58 == 2);
        org.junit.Assert.assertNotNull(chronology59);
    }

    @Test
    public void test1771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1771");
        org.joda.time.MonthDay monthDay3 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MonthDay monthDay5 = monthDay3.withChronologyRetainFields(chronology4);
        org.joda.time.DateTimeFieldType dateTimeFieldType7 = monthDay3.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property8 = monthDay3.dayOfMonth();
        org.joda.time.Chronology chronology9 = monthDay3.getChronology();
        org.joda.time.MonthDay monthDay10 = org.joda.time.MonthDay.now(chronology9);
        org.joda.time.MonthDay monthDay11 = new org.joda.time.MonthDay(0L, chronology9);
        org.joda.time.MonthDay monthDay12 = new org.joda.time.MonthDay((long) 4, chronology9);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.now(chronology9);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(dateTimeFieldType7);
        org.junit.Assert.assertNotNull(property8);
        org.junit.Assert.assertNotNull(chronology9);
        org.junit.Assert.assertNotNull(monthDay10);
        org.junit.Assert.assertNotNull(monthDay13);
    }

    @Test
    public void test1772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1772");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.MonthDay monthDay24 = monthDay21.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay26 = monthDay24.minusDays(31);
        org.joda.time.MonthDay monthDay28 = monthDay26.plusDays((int) (byte) 10);
        org.joda.time.MonthDay monthDay30 = monthDay26.minusMonths(2);
        org.joda.time.MonthDay monthDay32 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.MonthDay monthDay34 = monthDay32.withChronologyRetainFields(chronology33);
        org.joda.time.MonthDay monthDay36 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.MonthDay monthDay38 = monthDay36.withChronologyRetainFields(chronology37);
        org.joda.time.DateTimeFieldType dateTimeFieldType40 = monthDay36.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property41 = monthDay34.property(dateTimeFieldType40);
        int int42 = property41.get();
        org.joda.time.DurationField durationField43 = property41.getDurationField();
        org.joda.time.MonthDay monthDay45 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.MonthDay monthDay47 = monthDay45.withChronologyRetainFields(chronology46);
        org.joda.time.MonthDay monthDay49 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.MonthDay monthDay51 = monthDay49.withChronologyRetainFields(chronology50);
        org.joda.time.DateTimeFieldType dateTimeFieldType53 = monthDay49.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property54 = monthDay47.property(dateTimeFieldType53);
        boolean boolean55 = property41.equals((java.lang.Object) monthDay47);
        org.joda.time.DateTimeField dateTimeField56 = property41.getField();
        int int57 = property41.getMaximumValueOverall();
        org.joda.time.DateTimeFieldType dateTimeFieldType58 = property41.getFieldType();
        org.joda.time.MonthDay monthDay59 = property41.getMonthDay();
        org.joda.time.DateTimeFieldType dateTimeFieldType60 = property41.getFieldType();
        int int61 = monthDay30.indexOf(dateTimeFieldType60);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertNotNull(monthDay36);
        org.junit.Assert.assertNotNull(monthDay38);
        org.junit.Assert.assertNotNull(dateTimeFieldType40);
        org.junit.Assert.assertNotNull(property41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(durationField43);
        org.junit.Assert.assertNotNull(monthDay45);
        org.junit.Assert.assertNotNull(monthDay47);
        org.junit.Assert.assertNotNull(monthDay49);
        org.junit.Assert.assertNotNull(monthDay51);
        org.junit.Assert.assertNotNull(dateTimeFieldType53);
        org.junit.Assert.assertNotNull(property54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(dateTimeField56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 31 + "'", int57 == 31);
        org.junit.Assert.assertNotNull(dateTimeFieldType58);
        org.junit.Assert.assertNotNull(monthDay59);
        org.junit.Assert.assertNotNull(dateTimeFieldType60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
    }

    @Test
    public void test1773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1773");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.DurationField durationField12 = property10.getDurationField();
        org.joda.time.MonthDay monthDay14 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MonthDay monthDay16 = monthDay14.withChronologyRetainFields(chronology15);
        org.joda.time.MonthDay monthDay18 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MonthDay monthDay20 = monthDay18.withChronologyRetainFields(chronology19);
        org.joda.time.DateTimeFieldType dateTimeFieldType22 = monthDay18.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property23 = monthDay16.property(dateTimeFieldType22);
        boolean boolean24 = property10.equals((java.lang.Object) monthDay16);
        java.lang.String str25 = property10.getAsShortText();
        java.lang.String str26 = property10.toString();
        java.lang.String str27 = property10.getAsShortText();
        java.lang.String str28 = property10.toString();
        org.joda.time.MonthDay monthDay30 = property10.setCopy("2");
        int int31 = property10.getMinimumValueOverall();
        java.lang.String str32 = property10.getName();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(durationField12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(dateTimeFieldType22);
        org.junit.Assert.assertNotNull(property23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1" + "'", str25, "1");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Property[dayOfMonth]" + "'", str26, "Property[dayOfMonth]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1" + "'", str27, "1");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Property[dayOfMonth]" + "'", str28, "Property[dayOfMonth]");
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "dayOfMonth" + "'", str32, "dayOfMonth");
    }

    @Test
    public void test1774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1774");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        java.util.Locale locale11 = null;
        int int12 = property10.getMaximumTextLength(locale11);
        java.util.Locale locale13 = null;
        int int14 = property10.getMaximumShortTextLength(locale13);
        org.joda.time.DateTimeField dateTimeField15 = property10.getField();
        java.lang.String str16 = property10.getName();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(dateTimeField15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "dayOfMonth" + "'", str16, "dayOfMonth");
    }

    @Test
    public void test1775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1775");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        org.joda.time.MonthDay.Property property11 = monthDay3.monthOfYear();
        int int12 = monthDay3.getDayOfMonth();
        org.joda.time.MonthDay.Property property13 = monthDay3.dayOfMonth();
        int int14 = monthDay3.getDayOfMonth();
        org.joda.time.MonthDay monthDay16 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MonthDay monthDay18 = monthDay16.withChronologyRetainFields(chronology17);
        org.joda.time.DateTimeFieldType dateTimeFieldType20 = monthDay16.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property21 = monthDay16.dayOfMonth();
        org.joda.time.Chronology chronology22 = monthDay16.getChronology();
        org.joda.time.MonthDay monthDay23 = monthDay3.withChronologyRetainFields(chronology22);
        org.joda.time.format.DateTimeFormatter dateTimeFormatter24 = null;
        java.lang.String str25 = monthDay23.toString(dateTimeFormatter24);
        org.joda.time.MonthDay monthDay27 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.MonthDay monthDay29 = monthDay27.withChronologyRetainFields(chronology28);
        org.joda.time.MonthDay monthDay31 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.MonthDay monthDay33 = monthDay31.withChronologyRetainFields(chronology32);
        org.joda.time.DateTimeFieldType dateTimeFieldType35 = monthDay31.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property36 = monthDay29.property(dateTimeFieldType35);
        int int37 = property36.get();
        int int38 = property36.getMaximumValue();
        org.joda.time.MonthDay monthDay40 = property36.setCopy((int) (short) 1);
        org.joda.time.MonthDay monthDay42 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.MonthDay monthDay44 = monthDay42.withChronologyRetainFields(chronology43);
        org.joda.time.DateTimeFieldType dateTimeFieldType46 = monthDay42.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod47 = null;
        org.joda.time.MonthDay monthDay48 = monthDay42.plus(readablePeriod47);
        int int49 = monthDay42.getDayOfMonth();
        int int50 = property36.compareTo((org.joda.time.ReadablePartial) monthDay42);
        org.joda.time.MonthDay monthDay52 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.MonthDay monthDay54 = monthDay52.withChronologyRetainFields(chronology53);
        org.joda.time.MonthDay monthDay56 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.MonthDay monthDay58 = monthDay56.withChronologyRetainFields(chronology57);
        org.joda.time.DateTimeFieldType dateTimeFieldType60 = monthDay56.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property61 = monthDay54.property(dateTimeFieldType60);
        int int62 = property61.get();
        org.joda.time.DurationField durationField63 = property61.getDurationField();
        java.util.Locale locale64 = null;
        int int65 = property61.getMaximumTextLength(locale64);
        org.joda.time.MonthDay monthDay67 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.MonthDay monthDay69 = monthDay67.withChronologyRetainFields(chronology68);
        org.joda.time.DateTimeFieldType dateTimeFieldType71 = monthDay67.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property72 = monthDay67.dayOfMonth();
        org.joda.time.Chronology chronology73 = monthDay67.getChronology();
        org.joda.time.Chronology chronology74 = monthDay67.getChronology();
        org.joda.time.ReadableInstant readableInstant75 = null;
        org.joda.time.DateTime dateTime76 = monthDay67.toDateTime(readableInstant75);
        int int77 = property61.compareTo((org.joda.time.ReadableInstant) dateTime76);
        int int78 = property36.compareTo((org.joda.time.ReadableInstant) dateTime76);
        java.lang.String str79 = property36.getAsText();
        int int80 = property36.getMaximumValue();
        org.joda.time.DateTimeFieldType dateTimeFieldType81 = property36.getFieldType();
        org.joda.time.MonthDay.Property property82 = monthDay23.property(dateTimeFieldType81);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertNotNull(property11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(property13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(dateTimeFieldType20);
        org.junit.Assert.assertNotNull(property21);
        org.junit.Assert.assertNotNull(chronology22);
        org.junit.Assert.assertNotNull(monthDay23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "--01-01" + "'", str25, "--01-01");
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertNotNull(monthDay29);
        org.junit.Assert.assertNotNull(monthDay31);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(dateTimeFieldType35);
        org.junit.Assert.assertNotNull(property36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 31 + "'", int38 == 31);
        org.junit.Assert.assertNotNull(monthDay40);
        org.junit.Assert.assertNotNull(monthDay42);
        org.junit.Assert.assertNotNull(monthDay44);
        org.junit.Assert.assertNotNull(dateTimeFieldType46);
        org.junit.Assert.assertNotNull(monthDay48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(monthDay52);
        org.junit.Assert.assertNotNull(monthDay54);
        org.junit.Assert.assertNotNull(monthDay56);
        org.junit.Assert.assertNotNull(monthDay58);
        org.junit.Assert.assertNotNull(dateTimeFieldType60);
        org.junit.Assert.assertNotNull(property61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(durationField63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2 + "'", int65 == 2);
        org.junit.Assert.assertNotNull(monthDay67);
        org.junit.Assert.assertNotNull(monthDay69);
        org.junit.Assert.assertNotNull(dateTimeFieldType71);
        org.junit.Assert.assertNotNull(property72);
        org.junit.Assert.assertNotNull(chronology73);
        org.junit.Assert.assertNotNull(chronology74);
        org.junit.Assert.assertNotNull(dateTime76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "1" + "'", str79, "1");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 31 + "'", int80 == 31);
        org.junit.Assert.assertNotNull(dateTimeFieldType81);
        org.junit.Assert.assertNotNull(property82);
    }

    @Test
    public void test1776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1776");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.MonthDay monthDay13 = property10.addWrapFieldToCopy((int) (short) 1);
        org.joda.time.MonthDay.Property property14 = monthDay13.dayOfMonth();
        int int15 = property14.getMaximumValue();
        java.lang.String str16 = property14.getAsText();
        java.util.Locale locale17 = null;
        java.lang.String str18 = property14.getAsShortText(locale17);
        org.joda.time.MonthDay monthDay20 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.MonthDay monthDay22 = monthDay20.withChronologyRetainFields(chronology21);
        org.joda.time.DateTimeFieldType dateTimeFieldType24 = monthDay20.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod25 = null;
        org.joda.time.MonthDay monthDay26 = monthDay20.plus(readablePeriod25);
        org.joda.time.MonthDay monthDay28 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.MonthDay monthDay30 = monthDay28.withChronologyRetainFields(chronology29);
        org.joda.time.MonthDay monthDay32 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.MonthDay monthDay34 = monthDay32.withChronologyRetainFields(chronology33);
        org.joda.time.DateTimeFieldType dateTimeFieldType36 = monthDay32.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property37 = monthDay30.property(dateTimeFieldType36);
        int int38 = property37.get();
        org.joda.time.MonthDay monthDay40 = property37.addWrapFieldToCopy((int) (short) 1);
        boolean boolean41 = monthDay20.isBefore((org.joda.time.ReadablePartial) monthDay40);
        org.joda.time.MonthDay monthDay43 = monthDay40.minusMonths((int) (byte) 100);
        int int44 = monthDay43.getMonthOfYear();
        org.joda.time.MonthDay monthDay46 = monthDay43.withMonthOfYear(1);
        org.joda.time.ReadablePeriod readablePeriod47 = null;
        org.joda.time.MonthDay monthDay48 = monthDay43.plus(readablePeriod47);
        int int49 = property14.compareTo((org.joda.time.ReadablePartial) monthDay48);
        org.joda.time.MonthDay monthDay51 = property14.addWrapFieldToCopy((int) '#');
        org.joda.time.DateTimeZone dateTimeZone52 = null;
        org.joda.time.MonthDay monthDay53 = new org.joda.time.MonthDay(dateTimeZone52);
        org.joda.time.DateTimeField[] dateTimeFieldArray54 = monthDay53.getFields();
        org.joda.time.MonthDay monthDay56 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.MonthDay monthDay58 = monthDay56.withChronologyRetainFields(chronology57);
        org.joda.time.DateTimeFieldType dateTimeFieldType60 = monthDay56.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property61 = monthDay56.dayOfMonth();
        org.joda.time.Chronology chronology62 = monthDay56.getChronology();
        org.joda.time.Chronology chronology63 = monthDay56.getChronology();
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.DateTime dateTime65 = monthDay56.toDateTime(readableInstant64);
        org.joda.time.MonthDay monthDay67 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.MonthDay monthDay69 = monthDay67.withChronologyRetainFields(chronology68);
        org.joda.time.DateTimeFieldType dateTimeFieldType71 = monthDay67.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod72 = null;
        org.joda.time.MonthDay monthDay73 = monthDay67.plus(readablePeriod72);
        org.joda.time.MonthDay monthDay75 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology76 = null;
        org.joda.time.MonthDay monthDay77 = monthDay75.withChronologyRetainFields(chronology76);
        org.joda.time.MonthDay monthDay79 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology80 = null;
        org.joda.time.MonthDay monthDay81 = monthDay79.withChronologyRetainFields(chronology80);
        org.joda.time.DateTimeFieldType dateTimeFieldType83 = monthDay79.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property84 = monthDay77.property(dateTimeFieldType83);
        int int85 = property84.get();
        org.joda.time.MonthDay monthDay87 = property84.addWrapFieldToCopy((int) (short) 1);
        boolean boolean88 = monthDay67.isBefore((org.joda.time.ReadablePartial) monthDay87);
        org.joda.time.DateTimeFieldType dateTimeFieldType90 = monthDay67.getFieldType(0);
        int int91 = monthDay56.get(dateTimeFieldType90);
        boolean boolean92 = monthDay53.isSupported(dateTimeFieldType90);
        org.joda.time.MonthDay.Property property93 = monthDay51.property(dateTimeFieldType90);
        java.lang.String str94 = property93.getAsText();
        int int95 = property93.getMinimumValue();
        org.joda.time.DurationField durationField96 = property93.getDurationField();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(property14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 31 + "'", int15 == 31);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "2" + "'", str16, "2");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "2" + "'", str18, "2");
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertNotNull(dateTimeFieldType24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertNotNull(dateTimeFieldType36);
        org.junit.Assert.assertNotNull(property37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(monthDay40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(monthDay43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 9 + "'", int44 == 9);
        org.junit.Assert.assertNotNull(monthDay46);
        org.junit.Assert.assertNotNull(monthDay48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(monthDay51);
        org.junit.Assert.assertNotNull(dateTimeFieldArray54);
        org.junit.Assert.assertNotNull(monthDay56);
        org.junit.Assert.assertNotNull(monthDay58);
        org.junit.Assert.assertNotNull(dateTimeFieldType60);
        org.junit.Assert.assertNotNull(property61);
        org.junit.Assert.assertNotNull(chronology62);
        org.junit.Assert.assertNotNull(chronology63);
        org.junit.Assert.assertNotNull(dateTime65);
        org.junit.Assert.assertNotNull(monthDay67);
        org.junit.Assert.assertNotNull(monthDay69);
        org.junit.Assert.assertNotNull(dateTimeFieldType71);
        org.junit.Assert.assertNotNull(monthDay73);
        org.junit.Assert.assertNotNull(monthDay75);
        org.junit.Assert.assertNotNull(monthDay77);
        org.junit.Assert.assertNotNull(monthDay79);
        org.junit.Assert.assertNotNull(monthDay81);
        org.junit.Assert.assertNotNull(dateTimeFieldType83);
        org.junit.Assert.assertNotNull(property84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertNotNull(monthDay87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(dateTimeFieldType90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 1 + "'", int91 == 1);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(property93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "January" + "'", str94, "January");
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 1 + "'", int95 == 1);
        org.junit.Assert.assertNotNull(durationField96);
    }

    @Test
    public void test1777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1777");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.MonthDay monthDay13 = property10.addWrapFieldToCopy((int) (short) 1);
        java.lang.String str14 = property10.getAsString();
        java.lang.String str15 = property10.getAsText();
        org.joda.time.DurationField durationField16 = property10.getRangeDurationField();
        int int17 = property10.getMinimumValue();
        org.joda.time.MonthDay monthDay19 = property10.addToCopy((int) (short) -1);
        int int20 = property10.getMaximumValueOverall();
        java.lang.String str21 = property10.getAsString();
        java.util.Locale locale22 = null;
        int int23 = property10.getMaximumShortTextLength(locale22);
        java.lang.String str24 = property10.getName();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1" + "'", str14, "1");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1" + "'", str15, "1");
        org.junit.Assert.assertNotNull(durationField16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(monthDay19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 31 + "'", int20 == 31);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1" + "'", str21, "1");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "dayOfMonth" + "'", str24, "dayOfMonth");
    }

    @Test
    public void test1778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1778");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.MonthDay monthDay13 = property10.addWrapFieldToCopy((int) (short) 1);
        org.joda.time.MonthDay monthDay15 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MonthDay monthDay17 = monthDay15.withChronologyRetainFields(chronology16);
        org.joda.time.DateTimeFieldType dateTimeFieldType19 = monthDay15.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod20 = null;
        org.joda.time.MonthDay monthDay21 = monthDay15.plus(readablePeriod20);
        org.joda.time.MonthDay monthDay23 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MonthDay monthDay25 = monthDay23.withChronologyRetainFields(chronology24);
        org.joda.time.MonthDay monthDay27 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.MonthDay monthDay29 = monthDay27.withChronologyRetainFields(chronology28);
        org.joda.time.DateTimeFieldType dateTimeFieldType31 = monthDay27.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property32 = monthDay25.property(dateTimeFieldType31);
        int int33 = property32.get();
        org.joda.time.MonthDay monthDay35 = property32.addWrapFieldToCopy((int) (short) 1);
        boolean boolean36 = monthDay15.isBefore((org.joda.time.ReadablePartial) monthDay35);
        org.joda.time.MonthDay monthDay38 = monthDay35.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay40 = monthDay38.plusMonths(1);
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        org.joda.time.MonthDay monthDay42 = monthDay38.minus(readablePeriod41);
        int int43 = monthDay13.compareTo((org.joda.time.ReadablePartial) monthDay38);
        org.joda.time.MonthDay monthDay45 = monthDay38.withMonthOfYear(3);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(monthDay17);
        org.junit.Assert.assertNotNull(dateTimeFieldType19);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertNotNull(monthDay23);
        org.junit.Assert.assertNotNull(monthDay25);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertNotNull(monthDay29);
        org.junit.Assert.assertNotNull(dateTimeFieldType31);
        org.junit.Assert.assertNotNull(property32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(monthDay38);
        org.junit.Assert.assertNotNull(monthDay40);
        org.junit.Assert.assertNotNull(monthDay42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(monthDay45);
    }

    @Test
    public void test1779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1779");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.MonthDay monthDay24 = monthDay21.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay26 = monthDay24.plusMonths(1);
        org.joda.time.ReadablePeriod readablePeriod27 = null;
        org.joda.time.MonthDay monthDay28 = monthDay24.minus(readablePeriod27);
        org.joda.time.MonthDay monthDay30 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod31 = null;
        org.joda.time.MonthDay monthDay33 = monthDay30.withPeriodAdded(readablePeriod31, 1);
        org.joda.time.MonthDay monthDay35 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.MonthDay monthDay37 = monthDay35.withChronologyRetainFields(chronology36);
        org.joda.time.DateTimeFieldType dateTimeFieldType39 = monthDay35.getFieldType((int) (byte) 1);
        int int40 = monthDay33.indexOf(dateTimeFieldType39);
        org.joda.time.MonthDay.Property property41 = monthDay28.property(dateTimeFieldType39);
        java.util.Locale locale42 = null;
        int int43 = property41.getMaximumShortTextLength(locale42);
        java.lang.String str44 = property41.getAsShortText();
        java.util.Locale locale45 = null;
        int int46 = property41.getMaximumTextLength(locale45);
        org.joda.time.MonthDay monthDay48 = property41.setCopy("25");
        java.lang.String str49 = property41.getAsText();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(monthDay37);
        org.junit.Assert.assertNotNull(dateTimeFieldType39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(property41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "2" + "'", str44, "2");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
        org.junit.Assert.assertNotNull(monthDay48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "2" + "'", str49, "2");
    }

    @Test
    public void test1780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1780");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        org.joda.time.MonthDay.Property property11 = monthDay3.monthOfYear();
        java.util.Locale locale12 = null;
        int int13 = property11.getMaximumTextLength(locale12);
        int int14 = property11.getMaximumValue();
        org.joda.time.DateTimeFieldType dateTimeFieldType15 = property11.getFieldType();
        java.lang.String str16 = property11.getAsShortText();
        java.lang.String str17 = property11.getName();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertNotNull(property11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 9 + "'", int13 == 9);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 12 + "'", int14 == 12);
        org.junit.Assert.assertNotNull(dateTimeFieldType15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Jan" + "'", str16, "Jan");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "monthOfYear" + "'", str17, "monthOfYear");
    }

    @Test
    public void test1781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1781");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.MonthDay monthDay24 = monthDay21.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay26 = monthDay24.plusMonths(1);
        org.joda.time.ReadablePeriod readablePeriod27 = null;
        org.joda.time.MonthDay monthDay28 = monthDay24.minus(readablePeriod27);
        org.joda.time.DateTimeZone dateTimeZone29 = null;
        org.joda.time.MonthDay monthDay30 = new org.joda.time.MonthDay(dateTimeZone29);
        boolean boolean31 = monthDay28.isEqual((org.joda.time.ReadablePartial) monthDay30);
        org.joda.time.MonthDay monthDay33 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.MonthDay monthDay35 = monthDay33.withChronologyRetainFields(chronology34);
        org.joda.time.DateTimeFieldType dateTimeFieldType37 = monthDay33.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod38 = null;
        org.joda.time.MonthDay monthDay39 = monthDay33.plus(readablePeriod38);
        org.joda.time.MonthDay monthDay41 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.MonthDay monthDay43 = monthDay41.withChronologyRetainFields(chronology42);
        org.joda.time.MonthDay monthDay45 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.MonthDay monthDay47 = monthDay45.withChronologyRetainFields(chronology46);
        org.joda.time.DateTimeFieldType dateTimeFieldType49 = monthDay45.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property50 = monthDay43.property(dateTimeFieldType49);
        int int51 = property50.get();
        org.joda.time.MonthDay monthDay53 = property50.addWrapFieldToCopy((int) (short) 1);
        boolean boolean54 = monthDay33.isBefore((org.joda.time.ReadablePartial) monthDay53);
        org.joda.time.DateTimeFieldType dateTimeFieldType56 = monthDay33.getFieldType(0);
        int int57 = monthDay28.indexOf(dateTimeFieldType56);
        org.joda.time.Chronology chronology58 = monthDay28.getChronology();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(dateTimeFieldType37);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertNotNull(monthDay41);
        org.junit.Assert.assertNotNull(monthDay43);
        org.junit.Assert.assertNotNull(monthDay45);
        org.junit.Assert.assertNotNull(monthDay47);
        org.junit.Assert.assertNotNull(dateTimeFieldType49);
        org.junit.Assert.assertNotNull(property50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(monthDay53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(dateTimeFieldType56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(chronology58);
    }

    @Test
    public void test1782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1782");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MonthDay monthDay24 = monthDay1.withChronologyRetainFields(chronology23);
        org.joda.time.Chronology chronology25 = monthDay24.getChronology();
        int[] intArray26 = monthDay24.getValues();
        org.joda.time.MonthDay monthDay28 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.MonthDay monthDay30 = monthDay28.withChronologyRetainFields(chronology29);
        org.joda.time.DateTimeFieldType dateTimeFieldType32 = monthDay28.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay monthDay34 = monthDay24.withField(dateTimeFieldType32, 10);
        org.joda.time.MonthDay monthDay36 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.MonthDay monthDay38 = monthDay36.withChronologyRetainFields(chronology37);
        org.joda.time.MonthDay monthDay40 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.MonthDay monthDay42 = monthDay40.withChronologyRetainFields(chronology41);
        org.joda.time.DateTimeFieldType dateTimeFieldType44 = monthDay40.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property45 = monthDay40.dayOfMonth();
        org.joda.time.Chronology chronology46 = monthDay40.getChronology();
        org.joda.time.MonthDay monthDay47 = org.joda.time.MonthDay.now(chronology46);
        org.joda.time.MonthDay monthDay48 = monthDay38.withChronologyRetainFields(chronology46);
        org.joda.time.Chronology chronology49 = monthDay38.getChronology();
        org.joda.time.MonthDay monthDay50 = new org.joda.time.MonthDay((java.lang.Object) monthDay34, chronology49);
        org.joda.time.MonthDay monthDay52 = monthDay34.minusMonths(10);
        org.joda.time.ReadablePeriod readablePeriod53 = null;
        org.joda.time.MonthDay monthDay54 = monthDay34.minus(readablePeriod53);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(chronology25);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[1, 1]");
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertNotNull(dateTimeFieldType32);
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertNotNull(monthDay36);
        org.junit.Assert.assertNotNull(monthDay38);
        org.junit.Assert.assertNotNull(monthDay40);
        org.junit.Assert.assertNotNull(monthDay42);
        org.junit.Assert.assertNotNull(dateTimeFieldType44);
        org.junit.Assert.assertNotNull(property45);
        org.junit.Assert.assertNotNull(chronology46);
        org.junit.Assert.assertNotNull(monthDay47);
        org.junit.Assert.assertNotNull(monthDay48);
        org.junit.Assert.assertNotNull(chronology49);
        org.junit.Assert.assertNotNull(monthDay52);
        org.junit.Assert.assertNotNull(monthDay54);
    }

    @Test
    public void test1783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1783");
        org.joda.time.MonthDay monthDay2 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.MonthDay monthDay4 = monthDay2.withChronologyRetainFields(chronology3);
        org.joda.time.DateTimeFieldType dateTimeFieldType6 = monthDay2.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.MonthDay monthDay8 = monthDay2.plus(readablePeriod7);
        org.joda.time.MonthDay monthDay10 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.MonthDay monthDay12 = monthDay10.withChronologyRetainFields(chronology11);
        org.joda.time.MonthDay monthDay14 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MonthDay monthDay16 = monthDay14.withChronologyRetainFields(chronology15);
        org.joda.time.DateTimeFieldType dateTimeFieldType18 = monthDay14.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property19 = monthDay12.property(dateTimeFieldType18);
        int int20 = property19.get();
        org.joda.time.MonthDay monthDay22 = property19.addWrapFieldToCopy((int) (short) 1);
        boolean boolean23 = monthDay2.isBefore((org.joda.time.ReadablePartial) monthDay22);
        org.joda.time.MonthDay monthDay25 = monthDay22.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay27 = monthDay25.plusMonths(1);
        org.joda.time.MonthDay monthDay29 = org.joda.time.MonthDay.parse("");
        org.joda.time.MonthDay monthDay31 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.MonthDay monthDay33 = monthDay31.withChronologyRetainFields(chronology32);
        org.joda.time.DateTimeFieldType dateTimeFieldType35 = monthDay31.getFieldType((int) (byte) 1);
        boolean boolean36 = monthDay29.isSupported(dateTimeFieldType35);
        boolean boolean37 = monthDay25.isSupported(dateTimeFieldType35);
        org.joda.time.Chronology chronology38 = monthDay25.getChronology();
        org.joda.time.MonthDay monthDay39 = new org.joda.time.MonthDay((long) 8, chronology38);
        org.joda.time.MonthDay monthDay40 = new org.joda.time.MonthDay(chronology38);
        org.junit.Assert.assertNotNull(monthDay2);
        org.junit.Assert.assertNotNull(monthDay4);
        org.junit.Assert.assertNotNull(dateTimeFieldType6);
        org.junit.Assert.assertNotNull(monthDay8);
        org.junit.Assert.assertNotNull(monthDay10);
        org.junit.Assert.assertNotNull(monthDay12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(dateTimeFieldType18);
        org.junit.Assert.assertNotNull(property19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(monthDay25);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertNotNull(monthDay29);
        org.junit.Assert.assertNotNull(monthDay31);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(dateTimeFieldType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(chronology38);
    }

    @Test
    public void test1784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1784");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.MonthDay monthDay13 = property10.addWrapFieldToCopy((int) (short) 1);
        org.joda.time.MonthDay monthDay15 = monthDay13.plusDays(2);
        org.joda.time.DateTimeFieldType[] dateTimeFieldTypeArray16 = monthDay15.getFieldTypes();
        org.joda.time.MonthDay monthDay18 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MonthDay monthDay20 = monthDay18.withChronologyRetainFields(chronology19);
        org.joda.time.MonthDay monthDay22 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MonthDay monthDay24 = monthDay22.withChronologyRetainFields(chronology23);
        org.joda.time.DateTimeFieldType dateTimeFieldType26 = monthDay22.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property27 = monthDay20.property(dateTimeFieldType26);
        org.joda.time.MonthDay.Property property28 = monthDay20.monthOfYear();
        java.lang.String str29 = property28.getAsShortText();
        int int30 = property28.getMinimumValue();
        java.util.Locale locale32 = null;
        org.joda.time.MonthDay monthDay33 = property28.setCopy("2", locale32);
        org.joda.time.MonthDay monthDay35 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.MonthDay monthDay37 = monthDay35.withChronologyRetainFields(chronology36);
        org.joda.time.MonthDay monthDay39 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.MonthDay monthDay41 = monthDay39.withChronologyRetainFields(chronology40);
        org.joda.time.DateTimeFieldType dateTimeFieldType43 = monthDay39.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property44 = monthDay37.property(dateTimeFieldType43);
        org.joda.time.MonthDay.Property property45 = monthDay37.monthOfYear();
        org.joda.time.DurationField durationField46 = property45.getRangeDurationField();
        org.joda.time.MonthDay monthDay48 = property45.setCopy("1");
        org.joda.time.DateTimeFieldType dateTimeFieldType49 = property45.getFieldType();
        org.joda.time.MonthDay.Property property50 = monthDay33.property(dateTimeFieldType49);
        org.joda.time.MonthDay.Property property51 = monthDay15.property(dateTimeFieldType49);
        int int52 = property51.getMaximumValueOverall();
        org.joda.time.MonthDay monthDay54 = property51.setCopy((int) (byte) 1);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldTypeArray16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(dateTimeFieldType26);
        org.junit.Assert.assertNotNull(property27);
        org.junit.Assert.assertNotNull(property28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Jan" + "'", str29, "Jan");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(monthDay37);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertNotNull(monthDay41);
        org.junit.Assert.assertNotNull(dateTimeFieldType43);
        org.junit.Assert.assertNotNull(property44);
        org.junit.Assert.assertNotNull(property45);
        org.junit.Assert.assertNotNull(durationField46);
        org.junit.Assert.assertNotNull(monthDay48);
        org.junit.Assert.assertNotNull(dateTimeFieldType49);
        org.junit.Assert.assertNotNull(property50);
        org.junit.Assert.assertNotNull(property51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 12 + "'", int52 == 12);
        org.junit.Assert.assertNotNull(monthDay54);
    }

    @Test
    public void test1785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1785");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.MonthDay monthDay24 = monthDay21.minusMonths((int) (byte) 100);
        int int25 = monthDay24.getMonthOfYear();
        int int27 = monthDay24.getValue(0);
        org.joda.time.MonthDay monthDay29 = monthDay24.plusDays((int) (short) -1);
        org.joda.time.ReadablePeriod readablePeriod30 = null;
        org.joda.time.MonthDay monthDay31 = monthDay24.plus(readablePeriod30);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str33 = monthDay24.toString("Property[dayOfMonth]");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal pattern component: P");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 9 + "'", int25 == 9);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 9 + "'", int27 == 9);
        org.junit.Assert.assertNotNull(monthDay29);
        org.junit.Assert.assertNotNull(monthDay31);
    }

    @Test
    public void test1786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1786");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.MonthDay monthDay3 = monthDay1.minusDays((int) '#');
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay5.dayOfMonth();
        org.joda.time.Chronology chronology11 = monthDay5.getChronology();
        org.joda.time.Chronology chronology12 = monthDay5.getChronology();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.DateTime dateTime14 = monthDay5.toDateTime(readableInstant13);
        org.joda.time.MonthDay monthDay16 = monthDay5.plusMonths((int) ' ');
        boolean boolean17 = monthDay1.isAfter((org.joda.time.ReadablePartial) monthDay16);
        org.joda.time.ReadablePeriod readablePeriod18 = null;
        org.joda.time.MonthDay monthDay20 = monthDay1.withPeriodAdded(readablePeriod18, (int) (byte) -1);
        org.joda.time.DateTimeFieldType[] dateTimeFieldTypeArray21 = monthDay20.getFieldTypes();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertNotNull(chronology11);
        org.junit.Assert.assertNotNull(chronology12);
        org.junit.Assert.assertNotNull(dateTime14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(dateTimeFieldTypeArray21);
    }

    @Test
    public void test1787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1787");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod2 = null;
        org.joda.time.MonthDay monthDay4 = monthDay1.withPeriodAdded(readablePeriod2, 1);
        org.joda.time.MonthDay monthDay6 = monthDay1.plusMonths((int) ' ');
        org.joda.time.MonthDay monthDay8 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.MonthDay monthDay10 = monthDay8.withChronologyRetainFields(chronology9);
        org.joda.time.DateTimeFieldType dateTimeFieldType12 = monthDay8.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod13 = null;
        org.joda.time.MonthDay monthDay14 = monthDay8.plus(readablePeriod13);
        org.joda.time.MonthDay monthDay16 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MonthDay monthDay18 = monthDay16.withChronologyRetainFields(chronology17);
        org.joda.time.MonthDay monthDay20 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.MonthDay monthDay22 = monthDay20.withChronologyRetainFields(chronology21);
        org.joda.time.DateTimeFieldType dateTimeFieldType24 = monthDay20.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property25 = monthDay18.property(dateTimeFieldType24);
        int int26 = property25.get();
        org.joda.time.MonthDay monthDay28 = property25.addWrapFieldToCopy((int) (short) 1);
        boolean boolean29 = monthDay8.isBefore((org.joda.time.ReadablePartial) monthDay28);
        org.joda.time.MonthDay monthDay31 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.MonthDay monthDay33 = monthDay31.withChronologyRetainFields(chronology32);
        org.joda.time.DateTimeFieldType dateTimeFieldType35 = monthDay31.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod36 = null;
        org.joda.time.MonthDay monthDay37 = monthDay31.plus(readablePeriod36);
        org.joda.time.MonthDay monthDay39 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.MonthDay monthDay41 = monthDay39.withChronologyRetainFields(chronology40);
        org.joda.time.MonthDay monthDay43 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.MonthDay monthDay45 = monthDay43.withChronologyRetainFields(chronology44);
        org.joda.time.DateTimeFieldType dateTimeFieldType47 = monthDay43.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property48 = monthDay41.property(dateTimeFieldType47);
        int int49 = property48.get();
        org.joda.time.MonthDay monthDay51 = property48.addWrapFieldToCopy((int) (short) 1);
        boolean boolean52 = monthDay31.isBefore((org.joda.time.ReadablePartial) monthDay51);
        org.joda.time.MonthDay monthDay54 = monthDay51.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay56 = monthDay54.plusMonths(1);
        int int57 = monthDay54.size();
        org.joda.time.MonthDay monthDay59 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.MonthDay monthDay61 = monthDay59.withChronologyRetainFields(chronology60);
        org.joda.time.MonthDay monthDay63 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.MonthDay monthDay65 = monthDay63.withChronologyRetainFields(chronology64);
        org.joda.time.DateTimeFieldType dateTimeFieldType67 = monthDay63.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property68 = monthDay61.property(dateTimeFieldType67);
        int int69 = property68.get();
        org.joda.time.DurationField durationField70 = property68.getDurationField();
        org.joda.time.MonthDay monthDay72 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology73 = null;
        org.joda.time.MonthDay monthDay74 = monthDay72.withChronologyRetainFields(chronology73);
        org.joda.time.MonthDay monthDay76 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology77 = null;
        org.joda.time.MonthDay monthDay78 = monthDay76.withChronologyRetainFields(chronology77);
        org.joda.time.DateTimeFieldType dateTimeFieldType80 = monthDay76.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property81 = monthDay74.property(dateTimeFieldType80);
        boolean boolean82 = property68.equals((java.lang.Object) monthDay74);
        int int83 = property68.getMinimumValueOverall();
        org.joda.time.DateTimeFieldType dateTimeFieldType84 = property68.getFieldType();
        org.joda.time.MonthDay monthDay86 = monthDay54.withField(dateTimeFieldType84, (int) (byte) 1);
        int int87 = monthDay8.indexOf(dateTimeFieldType84);
        org.joda.time.MonthDay monthDay89 = monthDay6.withField(dateTimeFieldType84, 12);
        org.joda.time.DurationFieldType durationFieldType90 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MonthDay monthDay92 = monthDay6.withFieldAdded(durationFieldType90, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Field 'null' is not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay4);
        org.junit.Assert.assertNotNull(monthDay6);
        org.junit.Assert.assertNotNull(monthDay8);
        org.junit.Assert.assertNotNull(monthDay10);
        org.junit.Assert.assertNotNull(dateTimeFieldType12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertNotNull(dateTimeFieldType24);
        org.junit.Assert.assertNotNull(property25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(monthDay31);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(dateTimeFieldType35);
        org.junit.Assert.assertNotNull(monthDay37);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertNotNull(monthDay41);
        org.junit.Assert.assertNotNull(monthDay43);
        org.junit.Assert.assertNotNull(monthDay45);
        org.junit.Assert.assertNotNull(dateTimeFieldType47);
        org.junit.Assert.assertNotNull(property48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(monthDay51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(monthDay54);
        org.junit.Assert.assertNotNull(monthDay56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertNotNull(monthDay59);
        org.junit.Assert.assertNotNull(monthDay61);
        org.junit.Assert.assertNotNull(monthDay63);
        org.junit.Assert.assertNotNull(monthDay65);
        org.junit.Assert.assertNotNull(dateTimeFieldType67);
        org.junit.Assert.assertNotNull(property68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(durationField70);
        org.junit.Assert.assertNotNull(monthDay72);
        org.junit.Assert.assertNotNull(monthDay74);
        org.junit.Assert.assertNotNull(monthDay76);
        org.junit.Assert.assertNotNull(monthDay78);
        org.junit.Assert.assertNotNull(dateTimeFieldType80);
        org.junit.Assert.assertNotNull(property81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertNotNull(dateTimeFieldType84);
        org.junit.Assert.assertNotNull(monthDay86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertNotNull(monthDay89);
    }

    @Test
    public void test1788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1788");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.MonthDay monthDay24 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.MonthDay monthDay26 = monthDay24.withChronologyRetainFields(chronology25);
        org.joda.time.DateTimeFieldType dateTimeFieldType28 = monthDay24.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod29 = null;
        org.joda.time.MonthDay monthDay30 = monthDay24.plus(readablePeriod29);
        org.joda.time.MonthDay monthDay32 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.MonthDay monthDay34 = monthDay32.withChronologyRetainFields(chronology33);
        org.joda.time.MonthDay monthDay36 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.MonthDay monthDay38 = monthDay36.withChronologyRetainFields(chronology37);
        org.joda.time.DateTimeFieldType dateTimeFieldType40 = monthDay36.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property41 = monthDay34.property(dateTimeFieldType40);
        int int42 = property41.get();
        org.joda.time.MonthDay monthDay44 = property41.addWrapFieldToCopy((int) (short) 1);
        boolean boolean45 = monthDay24.isBefore((org.joda.time.ReadablePartial) monthDay44);
        org.joda.time.MonthDay monthDay47 = monthDay44.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay49 = monthDay47.plusMonths(1);
        int int50 = monthDay47.size();
        org.joda.time.MonthDay monthDay52 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.MonthDay monthDay54 = monthDay52.withChronologyRetainFields(chronology53);
        org.joda.time.MonthDay monthDay56 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.MonthDay monthDay58 = monthDay56.withChronologyRetainFields(chronology57);
        org.joda.time.DateTimeFieldType dateTimeFieldType60 = monthDay56.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property61 = monthDay54.property(dateTimeFieldType60);
        int int62 = property61.get();
        org.joda.time.DurationField durationField63 = property61.getDurationField();
        org.joda.time.MonthDay monthDay65 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology66 = null;
        org.joda.time.MonthDay monthDay67 = monthDay65.withChronologyRetainFields(chronology66);
        org.joda.time.MonthDay monthDay69 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology70 = null;
        org.joda.time.MonthDay monthDay71 = monthDay69.withChronologyRetainFields(chronology70);
        org.joda.time.DateTimeFieldType dateTimeFieldType73 = monthDay69.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property74 = monthDay67.property(dateTimeFieldType73);
        boolean boolean75 = property61.equals((java.lang.Object) monthDay67);
        int int76 = property61.getMinimumValueOverall();
        org.joda.time.DateTimeFieldType dateTimeFieldType77 = property61.getFieldType();
        org.joda.time.MonthDay monthDay79 = monthDay47.withField(dateTimeFieldType77, (int) (byte) 1);
        int int80 = monthDay1.indexOf(dateTimeFieldType77);
        org.joda.time.DateTimeField dateTimeField82 = monthDay1.getField((int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DateTimeFieldType dateTimeFieldType84 = monthDay1.getFieldType((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(dateTimeFieldType28);
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertNotNull(monthDay36);
        org.junit.Assert.assertNotNull(monthDay38);
        org.junit.Assert.assertNotNull(dateTimeFieldType40);
        org.junit.Assert.assertNotNull(property41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(monthDay44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(monthDay47);
        org.junit.Assert.assertNotNull(monthDay49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertNotNull(monthDay52);
        org.junit.Assert.assertNotNull(monthDay54);
        org.junit.Assert.assertNotNull(monthDay56);
        org.junit.Assert.assertNotNull(monthDay58);
        org.junit.Assert.assertNotNull(dateTimeFieldType60);
        org.junit.Assert.assertNotNull(property61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(durationField63);
        org.junit.Assert.assertNotNull(monthDay65);
        org.junit.Assert.assertNotNull(monthDay67);
        org.junit.Assert.assertNotNull(monthDay69);
        org.junit.Assert.assertNotNull(monthDay71);
        org.junit.Assert.assertNotNull(dateTimeFieldType73);
        org.junit.Assert.assertNotNull(property74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertNotNull(dateTimeFieldType77);
        org.junit.Assert.assertNotNull(monthDay79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertNotNull(dateTimeField82);
    }

    @Test
    public void test1789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1789");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod2 = null;
        org.joda.time.MonthDay monthDay4 = monthDay1.withPeriodAdded(readablePeriod2, 1);
        org.joda.time.MonthDay monthDay6 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.MonthDay monthDay8 = monthDay6.withChronologyRetainFields(chronology7);
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = monthDay6.getFieldType((int) (byte) 1);
        int int11 = monthDay4.indexOf(dateTimeFieldType10);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MonthDay monthDay13 = monthDay4.withChronologyRetainFields(chronology12);
        org.joda.time.MonthDay monthDay14 = org.joda.time.MonthDay.now();
        boolean boolean15 = monthDay13.isBefore((org.joda.time.ReadablePartial) monthDay14);
        org.joda.time.MonthDay monthDay16 = new org.joda.time.MonthDay((java.lang.Object) monthDay13);
        org.joda.time.MonthDay monthDay18 = monthDay13.minusDays((int) '4');
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay4);
        org.junit.Assert.assertNotNull(monthDay6);
        org.junit.Assert.assertNotNull(monthDay8);
        org.junit.Assert.assertNotNull(dateTimeFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(monthDay18);
    }

    @Test
    public void test1790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1790");
        org.joda.time.MonthDay monthDay3 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MonthDay monthDay5 = monthDay3.withChronologyRetainFields(chronology4);
        org.joda.time.DateTimeFieldType dateTimeFieldType7 = monthDay3.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod8 = null;
        org.joda.time.MonthDay monthDay9 = monthDay3.plus(readablePeriod8);
        org.joda.time.MonthDay monthDay11 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MonthDay monthDay13 = monthDay11.withChronologyRetainFields(chronology12);
        org.joda.time.MonthDay monthDay15 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MonthDay monthDay17 = monthDay15.withChronologyRetainFields(chronology16);
        org.joda.time.DateTimeFieldType dateTimeFieldType19 = monthDay15.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property20 = monthDay13.property(dateTimeFieldType19);
        int int21 = property20.get();
        org.joda.time.MonthDay monthDay23 = property20.addWrapFieldToCopy((int) (short) 1);
        boolean boolean24 = monthDay3.isBefore((org.joda.time.ReadablePartial) monthDay23);
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.MonthDay monthDay26 = monthDay3.withChronologyRetainFields(chronology25);
        org.joda.time.Chronology chronology27 = monthDay26.getChronology();
        int[] intArray28 = monthDay26.getValues();
        org.joda.time.MonthDay monthDay30 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MonthDay monthDay32 = monthDay30.withChronologyRetainFields(chronology31);
        org.joda.time.DateTimeFieldType dateTimeFieldType34 = monthDay30.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay monthDay36 = monthDay26.withField(dateTimeFieldType34, 10);
        org.joda.time.MonthDay monthDay38 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.MonthDay monthDay40 = monthDay38.withChronologyRetainFields(chronology39);
        org.joda.time.MonthDay monthDay42 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.MonthDay monthDay44 = monthDay42.withChronologyRetainFields(chronology43);
        org.joda.time.DateTimeFieldType dateTimeFieldType46 = monthDay42.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property47 = monthDay42.dayOfMonth();
        org.joda.time.Chronology chronology48 = monthDay42.getChronology();
        org.joda.time.MonthDay monthDay49 = org.joda.time.MonthDay.now(chronology48);
        org.joda.time.MonthDay monthDay50 = monthDay40.withChronologyRetainFields(chronology48);
        org.joda.time.Chronology chronology51 = monthDay40.getChronology();
        org.joda.time.MonthDay monthDay52 = new org.joda.time.MonthDay((java.lang.Object) monthDay36, chronology51);
        org.joda.time.MonthDay monthDay53 = new org.joda.time.MonthDay(1, 11, chronology51);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(dateTimeFieldType7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(monthDay17);
        org.junit.Assert.assertNotNull(dateTimeFieldType19);
        org.junit.Assert.assertNotNull(property20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(monthDay23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(chronology27);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[1, 1]");
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(dateTimeFieldType34);
        org.junit.Assert.assertNotNull(monthDay36);
        org.junit.Assert.assertNotNull(monthDay38);
        org.junit.Assert.assertNotNull(monthDay40);
        org.junit.Assert.assertNotNull(monthDay42);
        org.junit.Assert.assertNotNull(monthDay44);
        org.junit.Assert.assertNotNull(dateTimeFieldType46);
        org.junit.Assert.assertNotNull(property47);
        org.junit.Assert.assertNotNull(chronology48);
        org.junit.Assert.assertNotNull(monthDay49);
        org.junit.Assert.assertNotNull(monthDay50);
        org.junit.Assert.assertNotNull(chronology51);
    }

    @Test
    public void test1791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1791");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.MonthDay monthDay13 = property10.addWrapFieldToCopy((int) (short) 1);
        java.lang.String str14 = property10.getAsString();
        java.lang.String str15 = property10.getAsText();
        org.joda.time.DurationField durationField16 = property10.getRangeDurationField();
        int int17 = property10.getMinimumValue();
        org.joda.time.MonthDay monthDay19 = property10.addToCopy(0);
        org.joda.time.MonthDay monthDay21 = monthDay19.plusDays((int) 'a');
        org.joda.time.DateTimeField dateTimeField23 = monthDay21.getField(0);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1" + "'", str14, "1");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1" + "'", str15, "1");
        org.junit.Assert.assertNotNull(durationField16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(monthDay19);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertNotNull(dateTimeField23);
    }

    @Test
    public void test1792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1792");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        int int12 = property10.getMaximumValue();
        org.joda.time.MonthDay monthDay14 = property10.setCopy((int) (short) 1);
        org.joda.time.MonthDay monthDay16 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MonthDay monthDay18 = monthDay16.withChronologyRetainFields(chronology17);
        org.joda.time.DateTimeFieldType dateTimeFieldType20 = monthDay16.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod21 = null;
        org.joda.time.MonthDay monthDay22 = monthDay16.plus(readablePeriod21);
        int int23 = monthDay16.getDayOfMonth();
        int int24 = property10.compareTo((org.joda.time.ReadablePartial) monthDay16);
        org.joda.time.MonthDay monthDay26 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.MonthDay monthDay28 = monthDay26.withChronologyRetainFields(chronology27);
        org.joda.time.MonthDay monthDay30 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MonthDay monthDay32 = monthDay30.withChronologyRetainFields(chronology31);
        org.joda.time.DateTimeFieldType dateTimeFieldType34 = monthDay30.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property35 = monthDay28.property(dateTimeFieldType34);
        int int36 = property35.get();
        org.joda.time.DurationField durationField37 = property35.getDurationField();
        java.util.Locale locale38 = null;
        int int39 = property35.getMaximumTextLength(locale38);
        org.joda.time.MonthDay monthDay41 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.MonthDay monthDay43 = monthDay41.withChronologyRetainFields(chronology42);
        org.joda.time.DateTimeFieldType dateTimeFieldType45 = monthDay41.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property46 = monthDay41.dayOfMonth();
        org.joda.time.Chronology chronology47 = monthDay41.getChronology();
        org.joda.time.Chronology chronology48 = monthDay41.getChronology();
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.DateTime dateTime50 = monthDay41.toDateTime(readableInstant49);
        int int51 = property35.compareTo((org.joda.time.ReadableInstant) dateTime50);
        int int52 = property10.compareTo((org.joda.time.ReadableInstant) dateTime50);
        java.lang.String str53 = property10.getAsText();
        org.joda.time.MonthDay monthDay55 = property10.addToCopy((int) '#');
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 31 + "'", int12 == 31);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(dateTimeFieldType20);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(dateTimeFieldType34);
        org.junit.Assert.assertNotNull(property35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(durationField37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertNotNull(monthDay41);
        org.junit.Assert.assertNotNull(monthDay43);
        org.junit.Assert.assertNotNull(dateTimeFieldType45);
        org.junit.Assert.assertNotNull(property46);
        org.junit.Assert.assertNotNull(chronology47);
        org.junit.Assert.assertNotNull(chronology48);
        org.junit.Assert.assertNotNull(dateTime50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "1" + "'", str53, "1");
        org.junit.Assert.assertNotNull(monthDay55);
    }

    @Test
    public void test1793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1793");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property6 = monthDay1.dayOfMonth();
        org.joda.time.Chronology chronology7 = monthDay1.getChronology();
        org.joda.time.Chronology chronology8 = monthDay1.getChronology();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.DateTime dateTime10 = monthDay1.toDateTime(readableInstant9);
        org.joda.time.MonthDay monthDay12 = monthDay1.plusMonths(0);
        org.joda.time.MonthDay monthDay14 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MonthDay monthDay16 = monthDay14.withChronologyRetainFields(chronology15);
        org.joda.time.DateTimeFieldType dateTimeFieldType18 = monthDay14.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod19 = null;
        org.joda.time.MonthDay monthDay20 = monthDay14.plus(readablePeriod19);
        org.joda.time.MonthDay monthDay22 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MonthDay monthDay24 = monthDay22.withChronologyRetainFields(chronology23);
        org.joda.time.MonthDay monthDay26 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.MonthDay monthDay28 = monthDay26.withChronologyRetainFields(chronology27);
        org.joda.time.DateTimeFieldType dateTimeFieldType30 = monthDay26.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property31 = monthDay24.property(dateTimeFieldType30);
        int int32 = property31.get();
        org.joda.time.MonthDay monthDay34 = property31.addWrapFieldToCopy((int) (short) 1);
        boolean boolean35 = monthDay14.isBefore((org.joda.time.ReadablePartial) monthDay34);
        org.joda.time.DateTimeField[] dateTimeFieldArray36 = monthDay14.getFields();
        org.joda.time.ReadablePeriod readablePeriod37 = null;
        org.joda.time.MonthDay monthDay38 = monthDay14.minus(readablePeriod37);
        boolean boolean39 = monthDay1.equals((java.lang.Object) monthDay38);
        org.joda.time.MonthDay monthDay41 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.MonthDay monthDay43 = monthDay41.withChronologyRetainFields(chronology42);
        org.joda.time.MonthDay monthDay45 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.MonthDay monthDay47 = monthDay45.withChronologyRetainFields(chronology46);
        org.joda.time.DateTimeFieldType dateTimeFieldType49 = monthDay45.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property50 = monthDay43.property(dateTimeFieldType49);
        java.util.Locale locale51 = null;
        int int52 = property50.getMaximumTextLength(locale51);
        org.joda.time.MonthDay monthDay54 = property50.addWrapFieldToCopy((int) (byte) 0);
        org.joda.time.MonthDay monthDay55 = new org.joda.time.MonthDay((java.lang.Object) monthDay54);
        boolean boolean56 = monthDay38.isAfter((org.joda.time.ReadablePartial) monthDay55);
        org.joda.time.MonthDay monthDay58 = monthDay55.minusDays((int) (short) -1);
        org.joda.time.DateTimeFieldType dateTimeFieldType59 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MonthDay.Property property60 = monthDay55.property(dateTimeFieldType59);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Field 'null' is not supported");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(property6);
        org.junit.Assert.assertNotNull(chronology7);
        org.junit.Assert.assertNotNull(chronology8);
        org.junit.Assert.assertNotNull(dateTime10);
        org.junit.Assert.assertNotNull(monthDay12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(dateTimeFieldType18);
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertNotNull(dateTimeFieldType30);
        org.junit.Assert.assertNotNull(property31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(dateTimeFieldArray36);
        org.junit.Assert.assertNotNull(monthDay38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(monthDay41);
        org.junit.Assert.assertNotNull(monthDay43);
        org.junit.Assert.assertNotNull(monthDay45);
        org.junit.Assert.assertNotNull(monthDay47);
        org.junit.Assert.assertNotNull(dateTimeFieldType49);
        org.junit.Assert.assertNotNull(property50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
        org.junit.Assert.assertNotNull(monthDay54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(monthDay58);
    }

    @Test
    public void test1794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1794");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property6 = monthDay1.dayOfMonth();
        org.joda.time.MonthDay monthDay8 = property6.addWrapFieldToCopy(1);
        org.joda.time.MonthDay monthDay10 = property6.addWrapFieldToCopy(0);
        org.joda.time.MonthDay monthDay12 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MonthDay monthDay14 = monthDay12.withChronologyRetainFields(chronology13);
        org.joda.time.MonthDay monthDay16 = monthDay12.minusMonths((int) (byte) -1);
        boolean boolean17 = property6.equals((java.lang.Object) monthDay16);
        java.util.Locale locale18 = null;
        java.lang.String str19 = property6.getAsText(locale18);
        java.util.Locale locale20 = null;
        int int21 = property6.getMaximumTextLength(locale20);
        java.lang.String str22 = property6.getAsText();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(property6);
        org.junit.Assert.assertNotNull(monthDay8);
        org.junit.Assert.assertNotNull(monthDay10);
        org.junit.Assert.assertNotNull(monthDay12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1" + "'", str19, "1");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1" + "'", str22, "1");
    }

    @Test
    public void test1795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1795");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod2 = null;
        org.joda.time.MonthDay monthDay4 = monthDay1.withPeriodAdded(readablePeriod2, 1);
        org.joda.time.MonthDay monthDay6 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.MonthDay monthDay8 = monthDay6.withChronologyRetainFields(chronology7);
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = monthDay6.getFieldType((int) (byte) 1);
        int int11 = monthDay4.indexOf(dateTimeFieldType10);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MonthDay monthDay13 = monthDay4.withChronologyRetainFields(chronology12);
        org.joda.time.MonthDay.Property property14 = monthDay13.dayOfMonth();
        java.lang.String str15 = property14.toString();
        org.joda.time.MonthDay monthDay17 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.MonthDay monthDay19 = monthDay17.withChronologyRetainFields(chronology18);
        org.joda.time.DateTimeFieldType dateTimeFieldType21 = monthDay17.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod22 = null;
        org.joda.time.MonthDay monthDay23 = monthDay17.plus(readablePeriod22);
        org.joda.time.MonthDay monthDay25 = monthDay17.plusMonths((int) (byte) 1);
        org.joda.time.MonthDay monthDay27 = monthDay17.plusDays(31);
        int int28 = property14.compareTo((org.joda.time.ReadablePartial) monthDay27);
        java.lang.String str29 = property14.getAsString();
        org.joda.time.MonthDay monthDay31 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.MonthDay monthDay33 = monthDay31.withChronologyRetainFields(chronology32);
        org.joda.time.MonthDay monthDay35 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.MonthDay monthDay37 = monthDay35.withChronologyRetainFields(chronology36);
        org.joda.time.DateTimeFieldType dateTimeFieldType39 = monthDay35.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property40 = monthDay33.property(dateTimeFieldType39);
        java.util.Locale locale41 = null;
        int int42 = property40.getMaximumTextLength(locale41);
        java.util.Locale locale43 = null;
        int int44 = property40.getMaximumShortTextLength(locale43);
        org.joda.time.DateTimeField dateTimeField45 = property40.getField();
        java.lang.String str46 = property40.getAsShortText();
        java.util.Locale locale47 = null;
        java.lang.String str48 = property40.getAsShortText(locale47);
        java.util.Locale locale49 = null;
        int int50 = property40.getMaximumTextLength(locale49);
        boolean boolean51 = property14.equals((java.lang.Object) property40);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay4);
        org.junit.Assert.assertNotNull(monthDay6);
        org.junit.Assert.assertNotNull(monthDay8);
        org.junit.Assert.assertNotNull(dateTimeFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(property14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Property[dayOfMonth]" + "'", str15, "Property[dayOfMonth]");
        org.junit.Assert.assertNotNull(monthDay17);
        org.junit.Assert.assertNotNull(monthDay19);
        org.junit.Assert.assertNotNull(dateTimeFieldType21);
        org.junit.Assert.assertNotNull(monthDay23);
        org.junit.Assert.assertNotNull(monthDay25);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1" + "'", str29, "1");
        org.junit.Assert.assertNotNull(monthDay31);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(monthDay37);
        org.junit.Assert.assertNotNull(dateTimeFieldType39);
        org.junit.Assert.assertNotNull(property40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertNotNull(dateTimeField45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "1" + "'", str46, "1");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "1" + "'", str48, "1");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test1796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1796");
        org.joda.time.MonthDay monthDay2 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.MonthDay monthDay4 = monthDay2.withChronologyRetainFields(chronology3);
        org.joda.time.MonthDay monthDay6 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.MonthDay monthDay8 = monthDay6.withChronologyRetainFields(chronology7);
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = monthDay6.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property11 = monthDay6.dayOfMonth();
        org.joda.time.Chronology chronology12 = monthDay6.getChronology();
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.now(chronology12);
        org.joda.time.MonthDay monthDay14 = monthDay4.withChronologyRetainFields(chronology12);
        org.joda.time.ReadablePeriod readablePeriod15 = null;
        org.joda.time.MonthDay monthDay16 = monthDay4.minus(readablePeriod15);
        org.joda.time.MonthDay monthDay18 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MonthDay monthDay20 = monthDay18.withChronologyRetainFields(chronology19);
        org.joda.time.MonthDay monthDay22 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MonthDay monthDay24 = monthDay22.withChronologyRetainFields(chronology23);
        org.joda.time.DateTimeFieldType dateTimeFieldType26 = monthDay22.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property27 = monthDay20.property(dateTimeFieldType26);
        int int28 = property27.get();
        int int29 = property27.getMaximumValue();
        org.joda.time.MonthDay monthDay31 = property27.setCopy((int) (short) 1);
        org.joda.time.MonthDay monthDay33 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.MonthDay monthDay35 = monthDay33.withChronologyRetainFields(chronology34);
        org.joda.time.DateTimeFieldType dateTimeFieldType37 = monthDay33.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod38 = null;
        org.joda.time.MonthDay monthDay39 = monthDay33.plus(readablePeriod38);
        int int40 = monthDay33.getDayOfMonth();
        int int41 = property27.compareTo((org.joda.time.ReadablePartial) monthDay33);
        boolean boolean42 = monthDay16.isBefore((org.joda.time.ReadablePartial) monthDay33);
        org.joda.time.Chronology chronology43 = monthDay33.getChronology();
        org.joda.time.MonthDay monthDay44 = new org.joda.time.MonthDay((long) 2, chronology43);
        org.joda.time.MonthDay monthDay46 = monthDay44.minusMonths((int) (byte) 1);
        org.joda.time.MonthDay monthDay48 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.MonthDay monthDay50 = monthDay48.withChronologyRetainFields(chronology49);
        org.joda.time.MonthDay monthDay52 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.MonthDay monthDay54 = monthDay52.withChronologyRetainFields(chronology53);
        org.joda.time.DateTimeFieldType dateTimeFieldType56 = monthDay52.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property57 = monthDay50.property(dateTimeFieldType56);
        org.joda.time.MonthDay.Property property58 = monthDay50.monthOfYear();
        java.lang.String str59 = property58.getAsShortText();
        int int60 = property58.getMinimumValue();
        java.util.Locale locale62 = null;
        org.joda.time.MonthDay monthDay63 = property58.setCopy("2", locale62);
        org.joda.time.MonthDay monthDay65 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology66 = null;
        org.joda.time.MonthDay monthDay67 = monthDay65.withChronologyRetainFields(chronology66);
        org.joda.time.MonthDay monthDay69 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology70 = null;
        org.joda.time.MonthDay monthDay71 = monthDay69.withChronologyRetainFields(chronology70);
        org.joda.time.DateTimeFieldType dateTimeFieldType73 = monthDay69.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property74 = monthDay67.property(dateTimeFieldType73);
        org.joda.time.MonthDay.Property property75 = monthDay67.monthOfYear();
        org.joda.time.DurationField durationField76 = property75.getRangeDurationField();
        org.joda.time.MonthDay monthDay78 = property75.setCopy("1");
        org.joda.time.DateTimeFieldType dateTimeFieldType79 = property75.getFieldType();
        org.joda.time.MonthDay.Property property80 = monthDay63.property(dateTimeFieldType79);
        org.joda.time.Chronology chronology81 = monthDay63.getChronology();
        org.joda.time.MonthDay monthDay82 = monthDay44.withChronologyRetainFields(chronology81);
        org.junit.Assert.assertNotNull(monthDay2);
        org.junit.Assert.assertNotNull(monthDay4);
        org.junit.Assert.assertNotNull(monthDay6);
        org.junit.Assert.assertNotNull(monthDay8);
        org.junit.Assert.assertNotNull(dateTimeFieldType10);
        org.junit.Assert.assertNotNull(property11);
        org.junit.Assert.assertNotNull(chronology12);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(dateTimeFieldType26);
        org.junit.Assert.assertNotNull(property27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 31 + "'", int29 == 31);
        org.junit.Assert.assertNotNull(monthDay31);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(dateTimeFieldType37);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(chronology43);
        org.junit.Assert.assertNotNull(monthDay46);
        org.junit.Assert.assertNotNull(monthDay48);
        org.junit.Assert.assertNotNull(monthDay50);
        org.junit.Assert.assertNotNull(monthDay52);
        org.junit.Assert.assertNotNull(monthDay54);
        org.junit.Assert.assertNotNull(dateTimeFieldType56);
        org.junit.Assert.assertNotNull(property57);
        org.junit.Assert.assertNotNull(property58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Jan" + "'", str59, "Jan");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(monthDay63);
        org.junit.Assert.assertNotNull(monthDay65);
        org.junit.Assert.assertNotNull(monthDay67);
        org.junit.Assert.assertNotNull(monthDay69);
        org.junit.Assert.assertNotNull(monthDay71);
        org.junit.Assert.assertNotNull(dateTimeFieldType73);
        org.junit.Assert.assertNotNull(property74);
        org.junit.Assert.assertNotNull(property75);
        org.junit.Assert.assertNotNull(durationField76);
        org.junit.Assert.assertNotNull(monthDay78);
        org.junit.Assert.assertNotNull(dateTimeFieldType79);
        org.junit.Assert.assertNotNull(property80);
        org.junit.Assert.assertNotNull(chronology81);
        org.junit.Assert.assertNotNull(monthDay82);
    }

    @Test
    public void test1797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1797");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property6 = monthDay1.dayOfMonth();
        org.joda.time.MonthDay monthDay8 = property6.addWrapFieldToCopy(1);
        int int9 = property6.getMaximumValue();
        int int10 = property6.getMaximumValueOverall();
        int int11 = property6.getMaximumValue();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(property6);
        org.junit.Assert.assertNotNull(monthDay8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 31 + "'", int9 == 31);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 31 + "'", int10 == 31);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 31 + "'", int11 == 31);
    }

    @Test
    public void test1798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1798");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.MonthDay monthDay24 = monthDay21.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay26 = monthDay24.plusMonths(1);
        org.joda.time.ReadablePeriod readablePeriod27 = null;
        org.joda.time.MonthDay monthDay28 = monthDay24.minus(readablePeriod27);
        org.joda.time.DateTimeZone dateTimeZone29 = null;
        org.joda.time.MonthDay monthDay30 = new org.joda.time.MonthDay(dateTimeZone29);
        boolean boolean31 = monthDay28.isEqual((org.joda.time.ReadablePartial) monthDay30);
        org.joda.time.MonthDay monthDay33 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.MonthDay monthDay35 = monthDay33.withChronologyRetainFields(chronology34);
        org.joda.time.DateTimeFieldType dateTimeFieldType37 = monthDay33.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod38 = null;
        org.joda.time.MonthDay monthDay39 = monthDay33.plus(readablePeriod38);
        org.joda.time.MonthDay monthDay41 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.MonthDay monthDay43 = monthDay41.withChronologyRetainFields(chronology42);
        org.joda.time.MonthDay monthDay45 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.MonthDay monthDay47 = monthDay45.withChronologyRetainFields(chronology46);
        org.joda.time.DateTimeFieldType dateTimeFieldType49 = monthDay45.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property50 = monthDay43.property(dateTimeFieldType49);
        int int51 = property50.get();
        org.joda.time.MonthDay monthDay53 = property50.addWrapFieldToCopy((int) (short) 1);
        boolean boolean54 = monthDay33.isBefore((org.joda.time.ReadablePartial) monthDay53);
        org.joda.time.DateTimeFieldType dateTimeFieldType56 = monthDay33.getFieldType(0);
        int int57 = monthDay28.indexOf(dateTimeFieldType56);
        int int58 = monthDay28.getDayOfMonth();
        org.joda.time.MonthDay monthDay60 = monthDay28.minusDays((int) (short) 0);
        org.joda.time.MonthDay monthDay62 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology63 = null;
        org.joda.time.MonthDay monthDay64 = monthDay62.withChronologyRetainFields(chronology63);
        org.joda.time.DateTimeFieldType dateTimeFieldType66 = monthDay62.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod67 = null;
        org.joda.time.MonthDay monthDay68 = monthDay62.plus(readablePeriod67);
        org.joda.time.MonthDay monthDay70 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology71 = null;
        org.joda.time.MonthDay monthDay72 = monthDay70.withChronologyRetainFields(chronology71);
        org.joda.time.MonthDay monthDay74 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology75 = null;
        org.joda.time.MonthDay monthDay76 = monthDay74.withChronologyRetainFields(chronology75);
        org.joda.time.DateTimeFieldType dateTimeFieldType78 = monthDay74.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property79 = monthDay72.property(dateTimeFieldType78);
        int int80 = property79.get();
        org.joda.time.MonthDay monthDay82 = property79.addWrapFieldToCopy((int) (short) 1);
        boolean boolean83 = monthDay62.isBefore((org.joda.time.ReadablePartial) monthDay82);
        org.joda.time.DateTimeFieldType dateTimeFieldType85 = monthDay62.getFieldType(0);
        boolean boolean86 = monthDay60.isSupported(dateTimeFieldType85);
        int int87 = monthDay60.getDayOfMonth();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(dateTimeFieldType37);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertNotNull(monthDay41);
        org.junit.Assert.assertNotNull(monthDay43);
        org.junit.Assert.assertNotNull(monthDay45);
        org.junit.Assert.assertNotNull(monthDay47);
        org.junit.Assert.assertNotNull(dateTimeFieldType49);
        org.junit.Assert.assertNotNull(property50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(monthDay53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(dateTimeFieldType56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2 + "'", int58 == 2);
        org.junit.Assert.assertNotNull(monthDay60);
        org.junit.Assert.assertNotNull(monthDay62);
        org.junit.Assert.assertNotNull(monthDay64);
        org.junit.Assert.assertNotNull(dateTimeFieldType66);
        org.junit.Assert.assertNotNull(monthDay68);
        org.junit.Assert.assertNotNull(monthDay70);
        org.junit.Assert.assertNotNull(monthDay72);
        org.junit.Assert.assertNotNull(monthDay74);
        org.junit.Assert.assertNotNull(monthDay76);
        org.junit.Assert.assertNotNull(dateTimeFieldType78);
        org.junit.Assert.assertNotNull(property79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertNotNull(monthDay82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(dateTimeFieldType85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 2 + "'", int87 == 2);
    }

    @Test
    @Ignore
  public void test1799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1799");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.MonthDay monthDay13 = property10.addWrapFieldToCopy((int) (short) 1);
        org.joda.time.MonthDay.Property property14 = monthDay13.dayOfMonth();
        int int15 = property14.getMaximumValueOverall();
        java.util.Locale locale17 = null;
        org.joda.time.MonthDay monthDay18 = property14.setCopy("1", locale17);
        org.joda.time.MonthDay monthDay19 = new org.joda.time.MonthDay();
        boolean boolean20 = property14.equals((java.lang.Object) monthDay19);
        org.joda.time.MonthDay monthDay22 = org.joda.time.MonthDay.parse("");
        org.joda.time.MonthDay monthDay24 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.MonthDay monthDay26 = monthDay24.withChronologyRetainFields(chronology25);
        org.joda.time.DateTimeFieldType dateTimeFieldType28 = monthDay24.getFieldType((int) (byte) 1);
        boolean boolean29 = monthDay22.isSupported(dateTimeFieldType28);
        org.joda.time.MonthDay monthDay31 = org.joda.time.MonthDay.parse("");
        org.joda.time.MonthDay monthDay33 = monthDay31.minusDays((int) '#');
        org.joda.time.MonthDay monthDay35 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.MonthDay monthDay37 = monthDay35.withChronologyRetainFields(chronology36);
        org.joda.time.DateTimeFieldType dateTimeFieldType39 = monthDay35.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property40 = monthDay35.dayOfMonth();
        org.joda.time.Chronology chronology41 = monthDay35.getChronology();
        org.joda.time.Chronology chronology42 = monthDay35.getChronology();
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.DateTime dateTime44 = monthDay35.toDateTime(readableInstant43);
        org.joda.time.MonthDay monthDay46 = monthDay35.plusMonths((int) ' ');
        boolean boolean47 = monthDay31.isAfter((org.joda.time.ReadablePartial) monthDay46);
        boolean boolean48 = monthDay22.isBefore((org.joda.time.ReadablePartial) monthDay46);
        org.joda.time.Chronology chronology49 = monthDay46.getChronology();
        org.joda.time.MonthDay monthDay50 = new org.joda.time.MonthDay(chronology49);
        org.joda.time.MonthDay monthDay52 = org.joda.time.MonthDay.parse("");
        org.joda.time.MonthDay monthDay54 = monthDay52.minusDays((int) '#');
        org.joda.time.MonthDay monthDay56 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.MonthDay monthDay58 = monthDay56.withChronologyRetainFields(chronology57);
        org.joda.time.DateTimeFieldType dateTimeFieldType60 = monthDay56.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property61 = monthDay56.dayOfMonth();
        org.joda.time.Chronology chronology62 = monthDay56.getChronology();
        org.joda.time.Chronology chronology63 = monthDay56.getChronology();
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.DateTime dateTime65 = monthDay56.toDateTime(readableInstant64);
        org.joda.time.MonthDay monthDay67 = monthDay56.plusMonths((int) ' ');
        boolean boolean68 = monthDay52.isAfter((org.joda.time.ReadablePartial) monthDay67);
        org.joda.time.MonthDay monthDay70 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology71 = null;
        org.joda.time.MonthDay monthDay72 = monthDay70.withChronologyRetainFields(chronology71);
        org.joda.time.DateTimeFieldType dateTimeFieldType74 = monthDay70.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property75 = monthDay70.dayOfMonth();
        org.joda.time.MonthDay monthDay77 = property75.addWrapFieldToCopy(1);
        org.joda.time.MonthDay monthDay79 = property75.addWrapFieldToCopy(0);
        org.joda.time.MonthDay monthDay81 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology82 = null;
        org.joda.time.MonthDay monthDay83 = monthDay81.withChronologyRetainFields(chronology82);
        org.joda.time.MonthDay monthDay85 = monthDay81.minusMonths((int) (byte) -1);
        boolean boolean86 = property75.equals((java.lang.Object) monthDay85);
        int int87 = property75.getMaximumValue();
        org.joda.time.DateTimeFieldType dateTimeFieldType88 = property75.getFieldType();
        org.joda.time.MonthDay.Property property89 = monthDay67.property(dateTimeFieldType88);
        boolean boolean90 = monthDay50.isSupported(dateTimeFieldType88);
        org.joda.time.MonthDay.Property property91 = monthDay19.property(dateTimeFieldType88);
        java.util.Locale locale92 = null;
        java.lang.String str93 = property91.getAsShortText(locale92);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(property14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 31 + "'", int15 == 31);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(dateTimeFieldType28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(monthDay31);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(monthDay37);
        org.junit.Assert.assertNotNull(dateTimeFieldType39);
        org.junit.Assert.assertNotNull(property40);
        org.junit.Assert.assertNotNull(chronology41);
        org.junit.Assert.assertNotNull(chronology42);
        org.junit.Assert.assertNotNull(dateTime44);
        org.junit.Assert.assertNotNull(monthDay46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(chronology49);
        org.junit.Assert.assertNotNull(monthDay52);
        org.junit.Assert.assertNotNull(monthDay54);
        org.junit.Assert.assertNotNull(monthDay56);
        org.junit.Assert.assertNotNull(monthDay58);
        org.junit.Assert.assertNotNull(dateTimeFieldType60);
        org.junit.Assert.assertNotNull(property61);
        org.junit.Assert.assertNotNull(chronology62);
        org.junit.Assert.assertNotNull(chronology63);
        org.junit.Assert.assertNotNull(dateTime65);
        org.junit.Assert.assertNotNull(monthDay67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(monthDay70);
        org.junit.Assert.assertNotNull(monthDay72);
        org.junit.Assert.assertNotNull(dateTimeFieldType74);
        org.junit.Assert.assertNotNull(property75);
        org.junit.Assert.assertNotNull(monthDay77);
        org.junit.Assert.assertNotNull(monthDay79);
        org.junit.Assert.assertNotNull(monthDay81);
        org.junit.Assert.assertNotNull(monthDay83);
        org.junit.Assert.assertNotNull(monthDay85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 31 + "'", int87 == 31);
        org.junit.Assert.assertNotNull(dateTimeFieldType88);
        org.junit.Assert.assertNotNull(property89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(property91);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "25" + "'", str93, "25");
    }

    @Test
    public void test1800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1800");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod2 = null;
        org.joda.time.MonthDay monthDay4 = monthDay1.withPeriodAdded(readablePeriod2, 1);
        org.joda.time.MonthDay monthDay6 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.MonthDay monthDay8 = monthDay6.withChronologyRetainFields(chronology7);
        org.joda.time.DateTimeFieldType dateTimeFieldType10 = monthDay6.getFieldType((int) (byte) 1);
        int int11 = monthDay4.indexOf(dateTimeFieldType10);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MonthDay monthDay13 = monthDay4.withChronologyRetainFields(chronology12);
        org.joda.time.MonthDay.Property property14 = monthDay13.dayOfMonth();
        java.lang.String str15 = property14.toString();
        java.util.Locale locale16 = null;
        java.lang.String str17 = property14.getAsText(locale16);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay4);
        org.junit.Assert.assertNotNull(monthDay6);
        org.junit.Assert.assertNotNull(monthDay8);
        org.junit.Assert.assertNotNull(dateTimeFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(property14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Property[dayOfMonth]" + "'", str15, "Property[dayOfMonth]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1" + "'", str17, "1");
    }

    @Test
    public void test1801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1801");
        org.joda.time.MonthDay monthDay3 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MonthDay monthDay5 = monthDay3.withChronologyRetainFields(chronology4);
        org.joda.time.MonthDay monthDay7 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.MonthDay monthDay9 = monthDay7.withChronologyRetainFields(chronology8);
        org.joda.time.DateTimeFieldType dateTimeFieldType11 = monthDay7.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property12 = monthDay5.property(dateTimeFieldType11);
        org.joda.time.MonthDay.Property property13 = monthDay5.monthOfYear();
        org.joda.time.MonthDay monthDay15 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MonthDay monthDay17 = monthDay15.withChronologyRetainFields(chronology16);
        org.joda.time.DateTimeFieldType dateTimeFieldType19 = monthDay15.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property20 = monthDay15.dayOfMonth();
        org.joda.time.DateTimeFieldType dateTimeFieldType21 = property20.getFieldType();
        org.joda.time.MonthDay.Property property22 = monthDay5.property(dateTimeFieldType21);
        org.joda.time.MonthDay monthDay24 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.MonthDay monthDay26 = monthDay24.withChronologyRetainFields(chronology25);
        org.joda.time.DateTimeFieldType dateTimeFieldType28 = monthDay24.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod29 = null;
        org.joda.time.MonthDay monthDay30 = monthDay24.plus(readablePeriod29);
        org.joda.time.MonthDay monthDay32 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.MonthDay monthDay34 = monthDay32.withChronologyRetainFields(chronology33);
        org.joda.time.MonthDay monthDay36 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.MonthDay monthDay38 = monthDay36.withChronologyRetainFields(chronology37);
        org.joda.time.DateTimeFieldType dateTimeFieldType40 = monthDay36.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property41 = monthDay34.property(dateTimeFieldType40);
        int int42 = property41.get();
        org.joda.time.MonthDay monthDay44 = property41.addWrapFieldToCopy((int) (short) 1);
        boolean boolean45 = monthDay24.isBefore((org.joda.time.ReadablePartial) monthDay44);
        org.joda.time.MonthDay monthDay47 = monthDay44.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay49 = monthDay47.minusDays(31);
        org.joda.time.MonthDay monthDay51 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod52 = null;
        org.joda.time.MonthDay monthDay54 = monthDay51.withPeriodAdded(readablePeriod52, 1);
        org.joda.time.MonthDay monthDay56 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.MonthDay monthDay58 = monthDay56.withChronologyRetainFields(chronology57);
        org.joda.time.DateTimeFieldType dateTimeFieldType60 = monthDay56.getFieldType((int) (byte) 1);
        int int61 = monthDay54.indexOf(dateTimeFieldType60);
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.MonthDay monthDay63 = monthDay54.withChronologyRetainFields(chronology62);
        org.joda.time.MonthDay monthDay65 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology66 = null;
        org.joda.time.MonthDay monthDay67 = monthDay65.withChronologyRetainFields(chronology66);
        org.joda.time.DateTimeFieldType dateTimeFieldType69 = monthDay65.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod70 = null;
        org.joda.time.MonthDay monthDay71 = monthDay65.plus(readablePeriod70);
        org.joda.time.MonthDay monthDay73 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology74 = null;
        org.joda.time.MonthDay monthDay75 = monthDay73.withChronologyRetainFields(chronology74);
        org.joda.time.MonthDay monthDay77 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology78 = null;
        org.joda.time.MonthDay monthDay79 = monthDay77.withChronologyRetainFields(chronology78);
        org.joda.time.DateTimeFieldType dateTimeFieldType81 = monthDay77.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property82 = monthDay75.property(dateTimeFieldType81);
        int int83 = property82.get();
        org.joda.time.MonthDay monthDay85 = property82.addWrapFieldToCopy((int) (short) 1);
        boolean boolean86 = monthDay65.isBefore((org.joda.time.ReadablePartial) monthDay85);
        org.joda.time.Chronology chronology87 = null;
        org.joda.time.MonthDay monthDay88 = monthDay65.withChronologyRetainFields(chronology87);
        org.joda.time.Chronology chronology89 = monthDay88.getChronology();
        org.joda.time.MonthDay monthDay90 = monthDay63.withChronologyRetainFields(chronology89);
        org.joda.time.MonthDay monthDay91 = monthDay49.withChronologyRetainFields(chronology89);
        org.joda.time.Chronology chronology92 = monthDay91.getChronology();
        org.joda.time.MonthDay monthDay93 = monthDay5.withChronologyRetainFields(chronology92);
        org.joda.time.MonthDay monthDay94 = new org.joda.time.MonthDay((int) (short) 1, 12, chronology92);
        org.joda.time.MonthDay.Property property95 = monthDay94.monthOfYear();
        org.joda.time.Chronology chronology96 = null;
        org.joda.time.MonthDay monthDay97 = new org.joda.time.MonthDay((java.lang.Object) monthDay94, chronology96);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(dateTimeFieldType11);
        org.junit.Assert.assertNotNull(property12);
        org.junit.Assert.assertNotNull(property13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(monthDay17);
        org.junit.Assert.assertNotNull(dateTimeFieldType19);
        org.junit.Assert.assertNotNull(property20);
        org.junit.Assert.assertNotNull(dateTimeFieldType21);
        org.junit.Assert.assertNotNull(property22);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(dateTimeFieldType28);
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertNotNull(monthDay36);
        org.junit.Assert.assertNotNull(monthDay38);
        org.junit.Assert.assertNotNull(dateTimeFieldType40);
        org.junit.Assert.assertNotNull(property41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(monthDay44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(monthDay47);
        org.junit.Assert.assertNotNull(monthDay49);
        org.junit.Assert.assertNotNull(monthDay51);
        org.junit.Assert.assertNotNull(monthDay54);
        org.junit.Assert.assertNotNull(monthDay56);
        org.junit.Assert.assertNotNull(monthDay58);
        org.junit.Assert.assertNotNull(dateTimeFieldType60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNotNull(monthDay63);
        org.junit.Assert.assertNotNull(monthDay65);
        org.junit.Assert.assertNotNull(monthDay67);
        org.junit.Assert.assertNotNull(dateTimeFieldType69);
        org.junit.Assert.assertNotNull(monthDay71);
        org.junit.Assert.assertNotNull(monthDay73);
        org.junit.Assert.assertNotNull(monthDay75);
        org.junit.Assert.assertNotNull(monthDay77);
        org.junit.Assert.assertNotNull(monthDay79);
        org.junit.Assert.assertNotNull(dateTimeFieldType81);
        org.junit.Assert.assertNotNull(property82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertNotNull(monthDay85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(monthDay88);
        org.junit.Assert.assertNotNull(chronology89);
        org.junit.Assert.assertNotNull(monthDay90);
        org.junit.Assert.assertNotNull(monthDay91);
        org.junit.Assert.assertNotNull(chronology92);
        org.junit.Assert.assertNotNull(monthDay93);
        org.junit.Assert.assertNotNull(property95);
    }

    @Test
    public void test1802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1802");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.MonthDay monthDay24 = monthDay21.minusMonths((int) (byte) 100);
        int int25 = monthDay24.getMonthOfYear();
        org.joda.time.MonthDay monthDay27 = monthDay24.withMonthOfYear(1);
        org.joda.time.ReadablePeriod readablePeriod28 = null;
        org.joda.time.MonthDay monthDay29 = monthDay24.plus(readablePeriod28);
        org.joda.time.MonthDay monthDay31 = monthDay29.withMonthOfYear(9);
        org.joda.time.DateTimeField[] dateTimeFieldArray32 = monthDay29.getFields();
        org.joda.time.MonthDay monthDay34 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.MonthDay monthDay36 = monthDay34.withChronologyRetainFields(chronology35);
        org.joda.time.MonthDay monthDay38 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.MonthDay monthDay40 = monthDay38.withChronologyRetainFields(chronology39);
        org.joda.time.DateTimeFieldType dateTimeFieldType42 = monthDay38.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property43 = monthDay36.property(dateTimeFieldType42);
        org.joda.time.MonthDay.Property property44 = monthDay36.monthOfYear();
        org.joda.time.MonthDay monthDay46 = monthDay36.minusDays((int) (byte) 1);
        org.joda.time.MonthDay monthDay48 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.MonthDay monthDay50 = monthDay48.withChronologyRetainFields(chronology49);
        org.joda.time.DateTimeFieldType dateTimeFieldType52 = monthDay48.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod53 = null;
        org.joda.time.MonthDay monthDay54 = monthDay48.plus(readablePeriod53);
        org.joda.time.MonthDay monthDay56 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.MonthDay monthDay58 = monthDay56.withChronologyRetainFields(chronology57);
        org.joda.time.MonthDay monthDay60 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.MonthDay monthDay62 = monthDay60.withChronologyRetainFields(chronology61);
        org.joda.time.DateTimeFieldType dateTimeFieldType64 = monthDay60.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property65 = monthDay58.property(dateTimeFieldType64);
        int int66 = property65.get();
        org.joda.time.MonthDay monthDay68 = property65.addWrapFieldToCopy((int) (short) 1);
        boolean boolean69 = monthDay48.isBefore((org.joda.time.ReadablePartial) monthDay68);
        org.joda.time.MonthDay monthDay71 = monthDay68.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay73 = monthDay71.plusMonths(1);
        int int74 = monthDay73.getDayOfMonth();
        org.joda.time.MonthDay monthDay76 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology77 = null;
        org.joda.time.MonthDay monthDay78 = monthDay76.withChronologyRetainFields(chronology77);
        org.joda.time.MonthDay monthDay80 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology81 = null;
        org.joda.time.MonthDay monthDay82 = monthDay80.withChronologyRetainFields(chronology81);
        org.joda.time.DateTimeFieldType dateTimeFieldType84 = monthDay80.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property85 = monthDay78.property(dateTimeFieldType84);
        java.util.Locale locale86 = null;
        int int87 = property85.getMaximumTextLength(locale86);
        java.util.Locale locale88 = null;
        int int89 = property85.getMaximumShortTextLength(locale88);
        org.joda.time.DateTimeField dateTimeField90 = property85.getField();
        int int91 = property85.getMaximumValue();
        int int92 = property85.getMinimumValue();
        org.joda.time.DateTimeFieldType dateTimeFieldType93 = property85.getFieldType();
        boolean boolean94 = monthDay73.isSupported(dateTimeFieldType93);
        org.joda.time.MonthDay.Property property95 = monthDay36.property(dateTimeFieldType93);
        int int96 = monthDay29.indexOf(dateTimeFieldType93);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 9 + "'", int25 == 9);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertNotNull(monthDay29);
        org.junit.Assert.assertNotNull(monthDay31);
        org.junit.Assert.assertNotNull(dateTimeFieldArray32);
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertNotNull(monthDay36);
        org.junit.Assert.assertNotNull(monthDay38);
        org.junit.Assert.assertNotNull(monthDay40);
        org.junit.Assert.assertNotNull(dateTimeFieldType42);
        org.junit.Assert.assertNotNull(property43);
        org.junit.Assert.assertNotNull(property44);
        org.junit.Assert.assertNotNull(monthDay46);
        org.junit.Assert.assertNotNull(monthDay48);
        org.junit.Assert.assertNotNull(monthDay50);
        org.junit.Assert.assertNotNull(dateTimeFieldType52);
        org.junit.Assert.assertNotNull(monthDay54);
        org.junit.Assert.assertNotNull(monthDay56);
        org.junit.Assert.assertNotNull(monthDay58);
        org.junit.Assert.assertNotNull(monthDay60);
        org.junit.Assert.assertNotNull(monthDay62);
        org.junit.Assert.assertNotNull(dateTimeFieldType64);
        org.junit.Assert.assertNotNull(property65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(monthDay68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(monthDay71);
        org.junit.Assert.assertNotNull(monthDay73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 2 + "'", int74 == 2);
        org.junit.Assert.assertNotNull(monthDay76);
        org.junit.Assert.assertNotNull(monthDay78);
        org.junit.Assert.assertNotNull(monthDay80);
        org.junit.Assert.assertNotNull(monthDay82);
        org.junit.Assert.assertNotNull(dateTimeFieldType84);
        org.junit.Assert.assertNotNull(property85);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 2 + "'", int87 == 2);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 2 + "'", int89 == 2);
        org.junit.Assert.assertNotNull(dateTimeField90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 31 + "'", int91 == 31);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 1 + "'", int92 == 1);
        org.junit.Assert.assertNotNull(dateTimeFieldType93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(property95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 1 + "'", int96 == 1);
    }

    @Test
    public void test1803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1803");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        org.joda.time.MonthDay.Property property11 = monthDay3.monthOfYear();
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay monthDay19 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MonthDay monthDay21 = monthDay19.withChronologyRetainFields(chronology20);
        org.joda.time.MonthDay monthDay23 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MonthDay monthDay25 = monthDay23.withChronologyRetainFields(chronology24);
        org.joda.time.DateTimeFieldType dateTimeFieldType27 = monthDay23.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property28 = monthDay21.property(dateTimeFieldType27);
        int int29 = monthDay13.indexOf(dateTimeFieldType27);
        boolean boolean30 = monthDay3.equals((java.lang.Object) int29);
        org.joda.time.MonthDay monthDay32 = monthDay3.withMonthOfYear(9);
        org.joda.time.MonthDay monthDay34 = monthDay32.plusDays(3);
        org.joda.time.MonthDay monthDay36 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.MonthDay monthDay38 = monthDay36.withChronologyRetainFields(chronology37);
        org.joda.time.MonthDay monthDay40 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.MonthDay monthDay42 = monthDay40.withChronologyRetainFields(chronology41);
        org.joda.time.DateTimeFieldType dateTimeFieldType44 = monthDay40.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property45 = monthDay38.property(dateTimeFieldType44);
        int int46 = property45.get();
        org.joda.time.MonthDay monthDay48 = property45.addWrapFieldToCopy((int) (short) 1);
        org.joda.time.MonthDay.Property property49 = monthDay48.dayOfMonth();
        int int50 = property49.getMaximumValueOverall();
        java.util.Locale locale52 = null;
        org.joda.time.MonthDay monthDay53 = property49.setCopy("1", locale52);
        org.joda.time.MonthDay monthDay55 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod56 = null;
        org.joda.time.MonthDay monthDay58 = monthDay55.withPeriodAdded(readablePeriod56, 1);
        org.joda.time.MonthDay monthDay60 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.MonthDay monthDay62 = monthDay60.withChronologyRetainFields(chronology61);
        org.joda.time.DateTimeFieldType dateTimeFieldType64 = monthDay60.getFieldType((int) (byte) 1);
        int int65 = monthDay58.indexOf(dateTimeFieldType64);
        org.joda.time.Chronology chronology66 = null;
        org.joda.time.MonthDay monthDay67 = monthDay58.withChronologyRetainFields(chronology66);
        org.joda.time.MonthDay monthDay69 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology70 = null;
        org.joda.time.MonthDay monthDay71 = monthDay69.withChronologyRetainFields(chronology70);
        org.joda.time.DateTimeFieldType dateTimeFieldType73 = monthDay69.getFieldType((int) (byte) 1);
        int int74 = monthDay58.get(dateTimeFieldType73);
        org.joda.time.DateTimeFieldType dateTimeFieldType75 = null;
        boolean boolean76 = monthDay58.isSupported(dateTimeFieldType75);
        int int77 = monthDay53.compareTo((org.joda.time.ReadablePartial) monthDay58);
        org.joda.time.MonthDay monthDay79 = monthDay53.minusMonths((int) ' ');
        int int80 = monthDay34.compareTo((org.joda.time.ReadablePartial) monthDay79);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertNotNull(property11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(monthDay19);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertNotNull(monthDay23);
        org.junit.Assert.assertNotNull(monthDay25);
        org.junit.Assert.assertNotNull(dateTimeFieldType27);
        org.junit.Assert.assertNotNull(property28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertNotNull(monthDay36);
        org.junit.Assert.assertNotNull(monthDay38);
        org.junit.Assert.assertNotNull(monthDay40);
        org.junit.Assert.assertNotNull(monthDay42);
        org.junit.Assert.assertNotNull(dateTimeFieldType44);
        org.junit.Assert.assertNotNull(property45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(monthDay48);
        org.junit.Assert.assertNotNull(property49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 31 + "'", int50 == 31);
        org.junit.Assert.assertNotNull(monthDay53);
        org.junit.Assert.assertNotNull(monthDay55);
        org.junit.Assert.assertNotNull(monthDay58);
        org.junit.Assert.assertNotNull(monthDay60);
        org.junit.Assert.assertNotNull(monthDay62);
        org.junit.Assert.assertNotNull(dateTimeFieldType64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNotNull(monthDay67);
        org.junit.Assert.assertNotNull(monthDay69);
        org.junit.Assert.assertNotNull(monthDay71);
        org.junit.Assert.assertNotNull(dateTimeFieldType73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(monthDay79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
    }

    @Test
    public void test1804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1804");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        java.lang.String str11 = property10.getAsText();
        org.joda.time.MonthDay monthDay13 = property10.setCopy((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.plus(readablePeriod14);
        org.joda.time.MonthDay monthDay17 = monthDay13.minusDays((int) (short) 100);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1" + "'", str11, "1");
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(monthDay17);
    }

    @Test
    public void test1805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1805");
        org.joda.time.MonthDay monthDay2 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.MonthDay monthDay4 = monthDay2.withChronologyRetainFields(chronology3);
        org.joda.time.DateTimeFieldType dateTimeFieldType6 = monthDay2.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property7 = monthDay2.dayOfMonth();
        org.joda.time.Chronology chronology8 = monthDay2.getChronology();
        org.joda.time.MonthDay monthDay9 = new org.joda.time.MonthDay((-1L), chronology8);
        org.joda.time.MonthDay monthDay10 = new org.joda.time.MonthDay(chronology8);
        org.joda.time.MonthDay monthDay11 = new org.joda.time.MonthDay(chronology8);
        org.joda.time.DateTimeField[] dateTimeFieldArray12 = monthDay11.getFields();
        org.joda.time.ReadablePeriod readablePeriod13 = null;
        org.joda.time.MonthDay monthDay15 = monthDay11.withPeriodAdded(readablePeriod13, 4);
        org.joda.time.MonthDay monthDay17 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.MonthDay monthDay19 = monthDay17.withChronologyRetainFields(chronology18);
        org.joda.time.MonthDay monthDay21 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.MonthDay monthDay23 = monthDay21.withChronologyRetainFields(chronology22);
        org.joda.time.DateTimeFieldType dateTimeFieldType25 = monthDay21.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property26 = monthDay19.property(dateTimeFieldType25);
        org.joda.time.MonthDay.Property property27 = monthDay19.monthOfYear();
        int int28 = monthDay19.getDayOfMonth();
        org.joda.time.MonthDay.Property property29 = monthDay19.dayOfMonth();
        int int30 = monthDay19.getDayOfMonth();
        boolean boolean31 = monthDay11.isBefore((org.joda.time.ReadablePartial) monthDay19);
        java.util.Locale locale33 = null;
        java.lang.String str34 = monthDay19.toString("12", locale33);
        org.junit.Assert.assertNotNull(monthDay2);
        org.junit.Assert.assertNotNull(monthDay4);
        org.junit.Assert.assertNotNull(dateTimeFieldType6);
        org.junit.Assert.assertNotNull(property7);
        org.junit.Assert.assertNotNull(chronology8);
        org.junit.Assert.assertNotNull(dateTimeFieldArray12);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(monthDay17);
        org.junit.Assert.assertNotNull(monthDay19);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertNotNull(monthDay23);
        org.junit.Assert.assertNotNull(dateTimeFieldType25);
        org.junit.Assert.assertNotNull(property26);
        org.junit.Assert.assertNotNull(property27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(property29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "12" + "'", str34, "12");
    }

    @Test
    public void test1806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1806");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        int int12 = property10.getMaximumValue();
        org.joda.time.MonthDay monthDay14 = property10.setCopy((int) (short) 1);
        org.joda.time.MonthDay monthDay16 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MonthDay monthDay18 = monthDay16.withChronologyRetainFields(chronology17);
        org.joda.time.DateTimeFieldType dateTimeFieldType20 = monthDay16.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod21 = null;
        org.joda.time.MonthDay monthDay22 = monthDay16.plus(readablePeriod21);
        int int23 = monthDay16.getDayOfMonth();
        int int24 = property10.compareTo((org.joda.time.ReadablePartial) monthDay16);
        org.joda.time.MonthDay monthDay26 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.MonthDay monthDay28 = monthDay26.withChronologyRetainFields(chronology27);
        org.joda.time.MonthDay monthDay30 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MonthDay monthDay32 = monthDay30.withChronologyRetainFields(chronology31);
        org.joda.time.DateTimeFieldType dateTimeFieldType34 = monthDay30.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property35 = monthDay28.property(dateTimeFieldType34);
        int int36 = property35.get();
        org.joda.time.DurationField durationField37 = property35.getDurationField();
        java.util.Locale locale38 = null;
        int int39 = property35.getMaximumTextLength(locale38);
        org.joda.time.MonthDay monthDay41 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.MonthDay monthDay43 = monthDay41.withChronologyRetainFields(chronology42);
        org.joda.time.DateTimeFieldType dateTimeFieldType45 = monthDay41.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property46 = monthDay41.dayOfMonth();
        org.joda.time.Chronology chronology47 = monthDay41.getChronology();
        org.joda.time.Chronology chronology48 = monthDay41.getChronology();
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.DateTime dateTime50 = monthDay41.toDateTime(readableInstant49);
        int int51 = property35.compareTo((org.joda.time.ReadableInstant) dateTime50);
        int int52 = property10.compareTo((org.joda.time.ReadableInstant) dateTime50);
        java.lang.String str53 = property10.getAsText();
        org.joda.time.MonthDay monthDay54 = property10.getMonthDay();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 31 + "'", int12 == 31);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(dateTimeFieldType20);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(dateTimeFieldType34);
        org.junit.Assert.assertNotNull(property35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(durationField37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertNotNull(monthDay41);
        org.junit.Assert.assertNotNull(monthDay43);
        org.junit.Assert.assertNotNull(dateTimeFieldType45);
        org.junit.Assert.assertNotNull(property46);
        org.junit.Assert.assertNotNull(chronology47);
        org.junit.Assert.assertNotNull(chronology48);
        org.junit.Assert.assertNotNull(dateTime50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "1" + "'", str53, "1");
        org.junit.Assert.assertNotNull(monthDay54);
    }

    @Test
    public void test1807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1807");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MonthDay monthDay24 = monthDay1.withChronologyRetainFields(chronology23);
        org.joda.time.Chronology chronology25 = monthDay24.getChronology();
        java.lang.String str26 = monthDay24.toString();
        org.joda.time.MonthDay monthDay28 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.MonthDay monthDay30 = monthDay28.withChronologyRetainFields(chronology29);
        org.joda.time.DateTimeFieldType dateTimeFieldType32 = monthDay28.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property33 = monthDay28.dayOfMonth();
        org.joda.time.MonthDay monthDay35 = property33.addWrapFieldToCopy(1);
        org.joda.time.MonthDay monthDay37 = property33.addWrapFieldToCopy(0);
        boolean boolean38 = monthDay24.isBefore((org.joda.time.ReadablePartial) monthDay37);
        org.joda.time.MonthDay.Property property39 = monthDay24.monthOfYear();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(chronology25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "--01-01" + "'", str26, "--01-01");
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertNotNull(dateTimeFieldType32);
        org.junit.Assert.assertNotNull(property33);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(monthDay37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(property39);
    }

    @Test
    public void test1808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1808");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        java.lang.String str11 = property10.getAsString();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1" + "'", str11, "1");
    }

    @Test
    public void test1809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1809");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.MonthDay monthDay24 = monthDay21.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay26 = monthDay24.minusDays(31);
        org.joda.time.MonthDay monthDay28 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod29 = null;
        org.joda.time.MonthDay monthDay31 = monthDay28.withPeriodAdded(readablePeriod29, 1);
        org.joda.time.MonthDay monthDay33 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.MonthDay monthDay35 = monthDay33.withChronologyRetainFields(chronology34);
        org.joda.time.DateTimeFieldType dateTimeFieldType37 = monthDay33.getFieldType((int) (byte) 1);
        int int38 = monthDay31.indexOf(dateTimeFieldType37);
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.MonthDay monthDay40 = monthDay31.withChronologyRetainFields(chronology39);
        org.joda.time.MonthDay monthDay42 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.MonthDay monthDay44 = monthDay42.withChronologyRetainFields(chronology43);
        org.joda.time.DateTimeFieldType dateTimeFieldType46 = monthDay42.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod47 = null;
        org.joda.time.MonthDay monthDay48 = monthDay42.plus(readablePeriod47);
        org.joda.time.MonthDay monthDay50 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.MonthDay monthDay52 = monthDay50.withChronologyRetainFields(chronology51);
        org.joda.time.MonthDay monthDay54 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.MonthDay monthDay56 = monthDay54.withChronologyRetainFields(chronology55);
        org.joda.time.DateTimeFieldType dateTimeFieldType58 = monthDay54.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property59 = monthDay52.property(dateTimeFieldType58);
        int int60 = property59.get();
        org.joda.time.MonthDay monthDay62 = property59.addWrapFieldToCopy((int) (short) 1);
        boolean boolean63 = monthDay42.isBefore((org.joda.time.ReadablePartial) monthDay62);
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.MonthDay monthDay65 = monthDay42.withChronologyRetainFields(chronology64);
        org.joda.time.Chronology chronology66 = monthDay65.getChronology();
        org.joda.time.MonthDay monthDay67 = monthDay40.withChronologyRetainFields(chronology66);
        org.joda.time.MonthDay monthDay68 = monthDay26.withChronologyRetainFields(chronology66);
        org.joda.time.MonthDay monthDay69 = new org.joda.time.MonthDay((java.lang.Object) monthDay68);
        org.joda.time.MonthDay monthDay71 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology72 = null;
        org.joda.time.MonthDay monthDay73 = monthDay71.withChronologyRetainFields(chronology72);
        org.joda.time.MonthDay monthDay75 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology76 = null;
        org.joda.time.MonthDay monthDay77 = monthDay75.withChronologyRetainFields(chronology76);
        org.joda.time.DateTimeFieldType dateTimeFieldType79 = monthDay75.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property80 = monthDay73.property(dateTimeFieldType79);
        int int81 = property80.get();
        org.joda.time.MonthDay monthDay83 = property80.addWrapFieldToCopy((int) (short) 1);
        org.joda.time.MonthDay.Property property84 = monthDay83.dayOfMonth();
        int int85 = property84.getMaximumValue();
        java.lang.String str86 = property84.getAsText();
        java.util.Locale locale87 = null;
        java.lang.String str88 = property84.getAsShortText(locale87);
        org.joda.time.DateTimeFieldType dateTimeFieldType89 = property84.getFieldType();
        boolean boolean90 = monthDay68.isSupported(dateTimeFieldType89);
        org.joda.time.MonthDay monthDay92 = monthDay68.minusMonths((int) (short) 1);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertNotNull(monthDay31);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(dateTimeFieldType37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(monthDay40);
        org.junit.Assert.assertNotNull(monthDay42);
        org.junit.Assert.assertNotNull(monthDay44);
        org.junit.Assert.assertNotNull(dateTimeFieldType46);
        org.junit.Assert.assertNotNull(monthDay48);
        org.junit.Assert.assertNotNull(monthDay50);
        org.junit.Assert.assertNotNull(monthDay52);
        org.junit.Assert.assertNotNull(monthDay54);
        org.junit.Assert.assertNotNull(monthDay56);
        org.junit.Assert.assertNotNull(dateTimeFieldType58);
        org.junit.Assert.assertNotNull(property59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(monthDay62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(monthDay65);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertNotNull(monthDay67);
        org.junit.Assert.assertNotNull(monthDay68);
        org.junit.Assert.assertNotNull(monthDay71);
        org.junit.Assert.assertNotNull(monthDay73);
        org.junit.Assert.assertNotNull(monthDay75);
        org.junit.Assert.assertNotNull(monthDay77);
        org.junit.Assert.assertNotNull(dateTimeFieldType79);
        org.junit.Assert.assertNotNull(property80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertNotNull(monthDay83);
        org.junit.Assert.assertNotNull(property84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 31 + "'", int85 == 31);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "2" + "'", str86, "2");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "2" + "'", str88, "2");
        org.junit.Assert.assertNotNull(dateTimeFieldType89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(monthDay92);
    }

    @Test
    public void test1810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1810");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay1.plus(readablePeriod6);
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MonthDay monthDay11 = monthDay9.withChronologyRetainFields(chronology10);
        org.joda.time.MonthDay monthDay13 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MonthDay monthDay15 = monthDay13.withChronologyRetainFields(chronology14);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = monthDay13.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property18 = monthDay11.property(dateTimeFieldType17);
        int int19 = property18.get();
        org.joda.time.MonthDay monthDay21 = property18.addWrapFieldToCopy((int) (short) 1);
        boolean boolean22 = monthDay1.isBefore((org.joda.time.ReadablePartial) monthDay21);
        org.joda.time.MonthDay monthDay24 = monthDay21.minusMonths((int) (byte) -1);
        org.joda.time.DateTimeField dateTimeField26 = monthDay21.getField(1);
        org.joda.time.MonthDay monthDay27 = new org.joda.time.MonthDay((java.lang.Object) monthDay21);
        org.joda.time.MonthDay.Property property28 = monthDay21.monthOfYear();
        int int29 = property28.getMaximumValueOverall();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay11);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(monthDay15);
        org.junit.Assert.assertNotNull(dateTimeFieldType17);
        org.junit.Assert.assertNotNull(property18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(dateTimeField26);
        org.junit.Assert.assertNotNull(property28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 12 + "'", int29 == 12);
    }

    @Test
    public void test1811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1811");
        org.joda.time.MonthDay monthDay2 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.MonthDay monthDay4 = monthDay2.withChronologyRetainFields(chronology3);
        org.joda.time.DateTimeFieldType dateTimeFieldType6 = monthDay2.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property7 = monthDay2.dayOfMonth();
        org.joda.time.Chronology chronology8 = monthDay2.getChronology();
        org.joda.time.MonthDay monthDay9 = org.joda.time.MonthDay.now(chronology8);
        org.joda.time.MonthDay monthDay10 = new org.joda.time.MonthDay(0L, chronology8);
        org.joda.time.MonthDay monthDay12 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MonthDay monthDay14 = monthDay12.withChronologyRetainFields(chronology13);
        org.joda.time.MonthDay monthDay16 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MonthDay monthDay18 = monthDay16.withChronologyRetainFields(chronology17);
        org.joda.time.DateTimeFieldType dateTimeFieldType20 = monthDay16.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property21 = monthDay14.property(dateTimeFieldType20);
        int int22 = property21.get();
        org.joda.time.DurationField durationField23 = property21.getDurationField();
        org.joda.time.MonthDay monthDay25 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.MonthDay monthDay27 = monthDay25.withChronologyRetainFields(chronology26);
        org.joda.time.MonthDay monthDay29 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.MonthDay monthDay31 = monthDay29.withChronologyRetainFields(chronology30);
        org.joda.time.DateTimeFieldType dateTimeFieldType33 = monthDay29.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property34 = monthDay27.property(dateTimeFieldType33);
        boolean boolean35 = property21.equals((java.lang.Object) monthDay27);
        org.joda.time.MonthDay monthDay36 = new org.joda.time.MonthDay((java.lang.Object) monthDay27);
        org.joda.time.MonthDay monthDay38 = org.joda.time.MonthDay.parse("");
        org.joda.time.ReadablePeriod readablePeriod39 = null;
        org.joda.time.MonthDay monthDay41 = monthDay38.withPeriodAdded(readablePeriod39, 1);
        org.joda.time.MonthDay monthDay43 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.MonthDay monthDay45 = monthDay43.withChronologyRetainFields(chronology44);
        org.joda.time.DateTimeFieldType dateTimeFieldType47 = monthDay43.getFieldType((int) (byte) 1);
        int int48 = monthDay41.indexOf(dateTimeFieldType47);
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.MonthDay monthDay50 = monthDay41.withChronologyRetainFields(chronology49);
        boolean boolean51 = monthDay36.isBefore((org.joda.time.ReadablePartial) monthDay50);
        int int52 = monthDay10.compareTo((org.joda.time.ReadablePartial) monthDay50);
        org.joda.time.MonthDay monthDay54 = monthDay10.withDayOfMonth(1);
        org.joda.time.Chronology chronology55 = monthDay10.getChronology();
        org.junit.Assert.assertNotNull(monthDay2);
        org.junit.Assert.assertNotNull(monthDay4);
        org.junit.Assert.assertNotNull(dateTimeFieldType6);
        org.junit.Assert.assertNotNull(property7);
        org.junit.Assert.assertNotNull(chronology8);
        org.junit.Assert.assertNotNull(monthDay9);
        org.junit.Assert.assertNotNull(monthDay12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(dateTimeFieldType20);
        org.junit.Assert.assertNotNull(property21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(durationField23);
        org.junit.Assert.assertNotNull(monthDay25);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertNotNull(monthDay29);
        org.junit.Assert.assertNotNull(monthDay31);
        org.junit.Assert.assertNotNull(dateTimeFieldType33);
        org.junit.Assert.assertNotNull(property34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(monthDay38);
        org.junit.Assert.assertNotNull(monthDay41);
        org.junit.Assert.assertNotNull(monthDay43);
        org.junit.Assert.assertNotNull(monthDay45);
        org.junit.Assert.assertNotNull(dateTimeFieldType47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(monthDay50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(monthDay54);
        org.junit.Assert.assertNotNull(chronology55);
    }

    @Test
    public void test1812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1812");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.MonthDay monthDay3 = monthDay1.minusDays((int) '#');
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay5.dayOfMonth();
        org.joda.time.Chronology chronology11 = monthDay5.getChronology();
        org.joda.time.Chronology chronology12 = monthDay5.getChronology();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.DateTime dateTime14 = monthDay5.toDateTime(readableInstant13);
        org.joda.time.MonthDay monthDay16 = monthDay5.plusMonths((int) ' ');
        boolean boolean17 = monthDay1.isAfter((org.joda.time.ReadablePartial) monthDay16);
        org.joda.time.MonthDay monthDay19 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MonthDay monthDay21 = monthDay19.withChronologyRetainFields(chronology20);
        org.joda.time.DateTimeFieldType dateTimeFieldType23 = monthDay19.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod24 = null;
        org.joda.time.MonthDay monthDay25 = monthDay19.plus(readablePeriod24);
        org.joda.time.MonthDay monthDay27 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.MonthDay monthDay29 = monthDay27.withChronologyRetainFields(chronology28);
        org.joda.time.MonthDay monthDay31 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.MonthDay monthDay33 = monthDay31.withChronologyRetainFields(chronology32);
        org.joda.time.DateTimeFieldType dateTimeFieldType35 = monthDay31.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property36 = monthDay29.property(dateTimeFieldType35);
        int int37 = property36.get();
        org.joda.time.MonthDay monthDay39 = property36.addWrapFieldToCopy((int) (short) 1);
        boolean boolean40 = monthDay19.isBefore((org.joda.time.ReadablePartial) monthDay39);
        org.joda.time.MonthDay monthDay42 = monthDay39.minusMonths((int) (byte) 100);
        org.joda.time.MonthDay monthDay44 = monthDay42.plusMonths(1);
        int int45 = monthDay16.compareTo((org.joda.time.ReadablePartial) monthDay42);
        org.joda.time.ReadablePeriod readablePeriod46 = null;
        org.joda.time.MonthDay monthDay47 = monthDay42.plus(readablePeriod46);
        org.joda.time.MonthDay monthDay49 = monthDay47.minusMonths(12);
        org.joda.time.ReadablePeriod readablePeriod50 = null;
        org.joda.time.MonthDay monthDay51 = monthDay47.minus(readablePeriod50);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertNotNull(chronology11);
        org.junit.Assert.assertNotNull(chronology12);
        org.junit.Assert.assertNotNull(dateTime14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(monthDay19);
        org.junit.Assert.assertNotNull(monthDay21);
        org.junit.Assert.assertNotNull(dateTimeFieldType23);
        org.junit.Assert.assertNotNull(monthDay25);
        org.junit.Assert.assertNotNull(monthDay27);
        org.junit.Assert.assertNotNull(monthDay29);
        org.junit.Assert.assertNotNull(monthDay31);
        org.junit.Assert.assertNotNull(monthDay33);
        org.junit.Assert.assertNotNull(dateTimeFieldType35);
        org.junit.Assert.assertNotNull(property36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(monthDay42);
        org.junit.Assert.assertNotNull(monthDay44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(monthDay47);
        org.junit.Assert.assertNotNull(monthDay49);
        org.junit.Assert.assertNotNull(monthDay51);
    }

    @Test
    public void test1813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1813");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.DurationField durationField12 = property10.getDurationField();
        org.joda.time.MonthDay monthDay14 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MonthDay monthDay16 = monthDay14.withChronologyRetainFields(chronology15);
        org.joda.time.MonthDay monthDay18 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MonthDay monthDay20 = monthDay18.withChronologyRetainFields(chronology19);
        org.joda.time.DateTimeFieldType dateTimeFieldType22 = monthDay18.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property23 = monthDay16.property(dateTimeFieldType22);
        boolean boolean24 = property10.equals((java.lang.Object) monthDay16);
        java.lang.String str25 = property10.getAsShortText();
        java.lang.String str26 = property10.toString();
        java.util.Locale locale27 = null;
        int int28 = property10.getMaximumShortTextLength(locale27);
        boolean boolean30 = property10.equals((java.lang.Object) 0.0d);
        java.util.Locale locale31 = null;
        java.lang.String str32 = property10.getAsShortText(locale31);
        org.joda.time.MonthDay monthDay34 = property10.addWrapFieldToCopy((int) (byte) 1);
        org.joda.time.MonthDay.Property property35 = monthDay34.dayOfMonth();
        org.joda.time.MonthDay monthDay37 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.MonthDay monthDay39 = monthDay37.withChronologyRetainFields(chronology38);
        org.joda.time.MonthDay monthDay41 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.MonthDay monthDay43 = monthDay41.withChronologyRetainFields(chronology42);
        org.joda.time.DateTimeFieldType dateTimeFieldType45 = monthDay41.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property46 = monthDay41.dayOfMonth();
        org.joda.time.Chronology chronology47 = monthDay41.getChronology();
        org.joda.time.MonthDay monthDay48 = org.joda.time.MonthDay.now(chronology47);
        org.joda.time.MonthDay monthDay49 = monthDay39.withChronologyRetainFields(chronology47);
        org.joda.time.Chronology chronology50 = monthDay39.getChronology();
        org.joda.time.MonthDay monthDay51 = new org.joda.time.MonthDay((java.lang.Object) monthDay39);
        java.lang.String str52 = monthDay39.toString();
        org.joda.time.MonthDay monthDay54 = monthDay39.plusMonths((int) (short) 0);
        int int55 = property35.compareTo((org.joda.time.ReadablePartial) monthDay54);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(durationField12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(dateTimeFieldType22);
        org.junit.Assert.assertNotNull(property23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1" + "'", str25, "1");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Property[dayOfMonth]" + "'", str26, "Property[dayOfMonth]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1" + "'", str32, "1");
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertNotNull(property35);
        org.junit.Assert.assertNotNull(monthDay37);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertNotNull(monthDay41);
        org.junit.Assert.assertNotNull(monthDay43);
        org.junit.Assert.assertNotNull(dateTimeFieldType45);
        org.junit.Assert.assertNotNull(property46);
        org.junit.Assert.assertNotNull(chronology47);
        org.junit.Assert.assertNotNull(monthDay48);
        org.junit.Assert.assertNotNull(monthDay49);
        org.junit.Assert.assertNotNull(chronology50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "--01-01" + "'", str52, "--01-01");
        org.junit.Assert.assertNotNull(monthDay54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
    }

    @Test
    public void test1814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1814");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property6 = monthDay1.dayOfMonth();
        org.joda.time.MonthDay monthDay8 = property6.addWrapFieldToCopy(1);
        org.joda.time.MonthDay monthDay10 = property6.addWrapFieldToCopy(0);
        int int11 = property6.getMaximumValueOverall();
        java.util.Locale locale12 = null;
        java.lang.String str13 = property6.getAsText(locale12);
        java.lang.String str14 = property6.getName();
        int int15 = property6.getMinimumValue();
        java.lang.Class<?> wildcardClass16 = property6.getClass();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(property6);
        org.junit.Assert.assertNotNull(monthDay8);
        org.junit.Assert.assertNotNull(monthDay10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 31 + "'", int11 == 31);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1" + "'", str13, "1");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "dayOfMonth" + "'", str14, "dayOfMonth");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1815");
        org.joda.time.MonthDay monthDay2 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.MonthDay monthDay4 = monthDay2.withChronologyRetainFields(chronology3);
        org.joda.time.DateTimeFieldType dateTimeFieldType6 = monthDay2.getFieldType((int) (byte) 1);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.MonthDay monthDay8 = monthDay2.plus(readablePeriod7);
        org.joda.time.MonthDay monthDay10 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.MonthDay monthDay12 = monthDay10.withChronologyRetainFields(chronology11);
        org.joda.time.MonthDay monthDay14 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MonthDay monthDay16 = monthDay14.withChronologyRetainFields(chronology15);
        org.joda.time.DateTimeFieldType dateTimeFieldType18 = monthDay14.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property19 = monthDay12.property(dateTimeFieldType18);
        int int20 = property19.get();
        org.joda.time.MonthDay monthDay22 = property19.addWrapFieldToCopy((int) (short) 1);
        boolean boolean23 = monthDay2.isBefore((org.joda.time.ReadablePartial) monthDay22);
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MonthDay monthDay25 = monthDay2.withChronologyRetainFields(chronology24);
        org.joda.time.Chronology chronology26 = monthDay25.getChronology();
        int[] intArray27 = monthDay25.getValues();
        org.joda.time.MonthDay monthDay29 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.MonthDay monthDay31 = monthDay29.withChronologyRetainFields(chronology30);
        org.joda.time.DateTimeFieldType dateTimeFieldType33 = monthDay29.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay monthDay35 = monthDay25.withField(dateTimeFieldType33, 10);
        org.joda.time.MonthDay monthDay37 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.MonthDay monthDay39 = monthDay37.withChronologyRetainFields(chronology38);
        org.joda.time.MonthDay monthDay41 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.MonthDay monthDay43 = monthDay41.withChronologyRetainFields(chronology42);
        org.joda.time.DateTimeFieldType dateTimeFieldType45 = monthDay41.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property46 = monthDay41.dayOfMonth();
        org.joda.time.Chronology chronology47 = monthDay41.getChronology();
        org.joda.time.MonthDay monthDay48 = org.joda.time.MonthDay.now(chronology47);
        org.joda.time.MonthDay monthDay49 = monthDay39.withChronologyRetainFields(chronology47);
        org.joda.time.Chronology chronology50 = monthDay39.getChronology();
        org.joda.time.MonthDay monthDay51 = new org.joda.time.MonthDay((java.lang.Object) monthDay35, chronology50);
        org.joda.time.MonthDay monthDay52 = new org.joda.time.MonthDay((long) 0, chronology50);
        org.joda.time.MonthDay monthDay53 = org.joda.time.MonthDay.now(chronology50);
        org.junit.Assert.assertNotNull(monthDay2);
        org.junit.Assert.assertNotNull(monthDay4);
        org.junit.Assert.assertNotNull(dateTimeFieldType6);
        org.junit.Assert.assertNotNull(monthDay8);
        org.junit.Assert.assertNotNull(monthDay10);
        org.junit.Assert.assertNotNull(monthDay12);
        org.junit.Assert.assertNotNull(monthDay14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(dateTimeFieldType18);
        org.junit.Assert.assertNotNull(property19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(monthDay25);
        org.junit.Assert.assertNotNull(chronology26);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1, 1]");
        org.junit.Assert.assertNotNull(monthDay29);
        org.junit.Assert.assertNotNull(monthDay31);
        org.junit.Assert.assertNotNull(dateTimeFieldType33);
        org.junit.Assert.assertNotNull(monthDay35);
        org.junit.Assert.assertNotNull(monthDay37);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertNotNull(monthDay41);
        org.junit.Assert.assertNotNull(monthDay43);
        org.junit.Assert.assertNotNull(dateTimeFieldType45);
        org.junit.Assert.assertNotNull(property46);
        org.junit.Assert.assertNotNull(chronology47);
        org.junit.Assert.assertNotNull(monthDay48);
        org.junit.Assert.assertNotNull(monthDay49);
        org.junit.Assert.assertNotNull(chronology50);
        org.junit.Assert.assertNotNull(monthDay53);
    }

    @Test
    public void test1816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1816");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay3.property(dateTimeFieldType9);
        int int11 = property10.get();
        org.joda.time.MonthDay monthDay13 = property10.addWrapFieldToCopy((int) (short) 1);
        org.joda.time.MonthDay.Property property14 = monthDay13.dayOfMonth();
        int int15 = property14.getMaximumValueOverall();
        java.util.Locale locale17 = null;
        org.joda.time.MonthDay monthDay18 = property14.setCopy("1", locale17);
        org.joda.time.MonthDay monthDay19 = new org.joda.time.MonthDay();
        boolean boolean20 = property14.equals((java.lang.Object) monthDay19);
        org.joda.time.MonthDay monthDay22 = property14.addToCopy((int) (byte) 100);
        org.joda.time.MonthDay monthDay24 = monthDay22.plusMonths(0);
        org.joda.time.MonthDay monthDay26 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.MonthDay monthDay28 = monthDay26.withChronologyRetainFields(chronology27);
        org.joda.time.MonthDay monthDay30 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MonthDay monthDay32 = monthDay30.withChronologyRetainFields(chronology31);
        org.joda.time.DateTimeFieldType dateTimeFieldType34 = monthDay30.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property35 = monthDay28.property(dateTimeFieldType34);
        int int36 = property35.get();
        org.joda.time.DurationField durationField37 = property35.getDurationField();
        org.joda.time.MonthDay monthDay39 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.MonthDay monthDay41 = monthDay39.withChronologyRetainFields(chronology40);
        org.joda.time.MonthDay monthDay43 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.MonthDay monthDay45 = monthDay43.withChronologyRetainFields(chronology44);
        org.joda.time.DateTimeFieldType dateTimeFieldType47 = monthDay43.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property48 = monthDay41.property(dateTimeFieldType47);
        boolean boolean49 = property35.equals((java.lang.Object) monthDay41);
        org.joda.time.DateTimeField dateTimeField50 = property35.getField();
        int int51 = property35.getMaximumValueOverall();
        org.joda.time.DateTimeFieldType dateTimeFieldType52 = property35.getFieldType();
        org.joda.time.MonthDay.Property property53 = monthDay22.property(dateTimeFieldType52);
        java.util.Locale locale54 = null;
        int int55 = property53.getMaximumShortTextLength(locale54);
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(property14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 31 + "'", int15 == 31);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertNotNull(monthDay24);
        org.junit.Assert.assertNotNull(monthDay26);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(dateTimeFieldType34);
        org.junit.Assert.assertNotNull(property35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(durationField37);
        org.junit.Assert.assertNotNull(monthDay39);
        org.junit.Assert.assertNotNull(monthDay41);
        org.junit.Assert.assertNotNull(monthDay43);
        org.junit.Assert.assertNotNull(monthDay45);
        org.junit.Assert.assertNotNull(dateTimeFieldType47);
        org.junit.Assert.assertNotNull(property48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(dateTimeField50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 31 + "'", int51 == 31);
        org.junit.Assert.assertNotNull(dateTimeFieldType52);
        org.junit.Assert.assertNotNull(property53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2 + "'", int55 == 2);
    }

    @Test
    public void test1817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1817");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = monthDay1.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property6 = monthDay1.dayOfMonth();
        int int7 = property6.getMaximumValueOverall();
        java.lang.String str8 = property6.getAsText();
        org.joda.time.MonthDay monthDay10 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.MonthDay monthDay12 = monthDay10.withChronologyRetainFields(chronology11);
        org.joda.time.DateTimeFieldType dateTimeFieldType14 = monthDay10.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay monthDay16 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MonthDay monthDay18 = monthDay16.withChronologyRetainFields(chronology17);
        org.joda.time.MonthDay monthDay20 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.MonthDay monthDay22 = monthDay20.withChronologyRetainFields(chronology21);
        org.joda.time.DateTimeFieldType dateTimeFieldType24 = monthDay20.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property25 = monthDay18.property(dateTimeFieldType24);
        int int26 = monthDay10.indexOf(dateTimeFieldType24);
        org.joda.time.MonthDay monthDay28 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.MonthDay monthDay30 = monthDay28.withChronologyRetainFields(chronology29);
        org.joda.time.MonthDay monthDay32 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.MonthDay monthDay34 = monthDay32.withChronologyRetainFields(chronology33);
        org.joda.time.DateTimeFieldType dateTimeFieldType36 = monthDay32.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property37 = monthDay30.property(dateTimeFieldType36);
        int int38 = property37.get();
        org.joda.time.MonthDay monthDay40 = property37.addToCopy((int) (short) 0);
        org.joda.time.MonthDay monthDay42 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.MonthDay monthDay44 = monthDay42.withChronologyRetainFields(chronology43);
        org.joda.time.MonthDay monthDay46 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.MonthDay monthDay48 = monthDay46.withChronologyRetainFields(chronology47);
        org.joda.time.DateTimeFieldType dateTimeFieldType50 = monthDay46.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property51 = monthDay44.property(dateTimeFieldType50);
        int int52 = property51.get();
        org.joda.time.DurationField durationField53 = property51.getDurationField();
        java.util.Locale locale54 = null;
        int int55 = property51.getMaximumTextLength(locale54);
        org.joda.time.MonthDay monthDay57 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology58 = null;
        org.joda.time.MonthDay monthDay59 = monthDay57.withChronologyRetainFields(chronology58);
        org.joda.time.DateTimeFieldType dateTimeFieldType61 = monthDay57.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property62 = monthDay57.dayOfMonth();
        org.joda.time.Chronology chronology63 = monthDay57.getChronology();
        org.joda.time.Chronology chronology64 = monthDay57.getChronology();
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.DateTime dateTime66 = monthDay57.toDateTime(readableInstant65);
        int int67 = property51.compareTo((org.joda.time.ReadableInstant) dateTime66);
        int int68 = property37.compareTo((org.joda.time.ReadableInstant) dateTime66);
        org.joda.time.DateTime dateTime69 = monthDay10.toDateTime((org.joda.time.ReadableInstant) dateTime66);
        int int70 = property6.compareTo((org.joda.time.ReadableInstant) dateTime69);
        org.joda.time.DurationField durationField71 = property6.getDurationField();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(dateTimeFieldType5);
        org.junit.Assert.assertNotNull(property6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 31 + "'", int7 == 31);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1" + "'", str8, "1");
        org.junit.Assert.assertNotNull(monthDay10);
        org.junit.Assert.assertNotNull(monthDay12);
        org.junit.Assert.assertNotNull(dateTimeFieldType14);
        org.junit.Assert.assertNotNull(monthDay16);
        org.junit.Assert.assertNotNull(monthDay18);
        org.junit.Assert.assertNotNull(monthDay20);
        org.junit.Assert.assertNotNull(monthDay22);
        org.junit.Assert.assertNotNull(dateTimeFieldType24);
        org.junit.Assert.assertNotNull(property25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(monthDay28);
        org.junit.Assert.assertNotNull(monthDay30);
        org.junit.Assert.assertNotNull(monthDay32);
        org.junit.Assert.assertNotNull(monthDay34);
        org.junit.Assert.assertNotNull(dateTimeFieldType36);
        org.junit.Assert.assertNotNull(property37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(monthDay40);
        org.junit.Assert.assertNotNull(monthDay42);
        org.junit.Assert.assertNotNull(monthDay44);
        org.junit.Assert.assertNotNull(monthDay46);
        org.junit.Assert.assertNotNull(monthDay48);
        org.junit.Assert.assertNotNull(dateTimeFieldType50);
        org.junit.Assert.assertNotNull(property51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(durationField53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2 + "'", int55 == 2);
        org.junit.Assert.assertNotNull(monthDay57);
        org.junit.Assert.assertNotNull(monthDay59);
        org.junit.Assert.assertNotNull(dateTimeFieldType61);
        org.junit.Assert.assertNotNull(property62);
        org.junit.Assert.assertNotNull(chronology63);
        org.junit.Assert.assertNotNull(chronology64);
        org.junit.Assert.assertNotNull(dateTime66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(dateTime69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(durationField71);
    }

    @Test
    public void test1818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1818");
        org.joda.time.MonthDay monthDay1 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MonthDay monthDay3 = monthDay1.withChronologyRetainFields(chronology2);
        org.joda.time.MonthDay monthDay5 = org.joda.time.MonthDay.parse("");
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MonthDay monthDay7 = monthDay5.withChronologyRetainFields(chronology6);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = monthDay5.getFieldType((int) (byte) 1);
        org.joda.time.MonthDay.Property property10 = monthDay5.dayOfMonth();
        org.joda.time.Chronology chronology11 = monthDay5.getChronology();
        org.joda.time.MonthDay monthDay12 = org.joda.time.MonthDay.now(chronology11);
        org.joda.time.MonthDay monthDay13 = monthDay3.withChronologyRetainFields(chronology11);
        org.joda.time.Chronology chronology14 = monthDay3.getChronology();
        org.joda.time.MonthDay monthDay15 = new org.joda.time.MonthDay((java.lang.Object) monthDay3);
        java.lang.Class<?> wildcardClass16 = monthDay15.getClass();
        org.junit.Assert.assertNotNull(monthDay1);
        org.junit.Assert.assertNotNull(monthDay3);
        org.junit.Assert.assertNotNull(monthDay5);
        org.junit.Assert.assertNotNull(monthDay7);
        org.junit.Assert.assertNotNull(dateTimeFieldType9);
        org.junit.Assert.assertNotNull(property10);
        org.junit.Assert.assertNotNull(chronology11);
        org.junit.Assert.assertNotNull(monthDay12);
        org.junit.Assert.assertNotNull(monthDay13);
        org.junit.Assert.assertNotNull(chronology14);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }
}

