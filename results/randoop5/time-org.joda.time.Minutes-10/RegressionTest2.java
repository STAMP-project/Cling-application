import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = minutes12.getFieldType();
        int int16 = minutes11.get(durationFieldType15);
        org.joda.time.Minutes minutes18 = minutes11.plus((-1));
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = minutes21.plus(0);
        int int26 = minutes19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes21);
        org.joda.time.Minutes minutes28 = minutes21.plus((int) ' ');
        java.lang.String str29 = minutes21.toString();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean32 = minutes21.isLessThan(minutes31);
        boolean boolean33 = minutes18.isLessThan(minutes21);
        org.joda.time.Minutes minutes34 = minutes2.minus(minutes18);
        org.joda.time.MutablePeriod mutablePeriod35 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes37 = minutes2.dividedBy(2);
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes40 = minutes38.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType42 = null;
        int int43 = minutes41.get(durationFieldType42);
        org.joda.time.DurationFieldType durationFieldType44 = minutes41.getFieldType();
        int int45 = minutes40.get(durationFieldType44);
        org.joda.time.Minutes minutes47 = minutes40.plus((-1));
        org.joda.time.Minutes minutes48 = minutes47.negated();
        org.joda.time.Minutes minutes49 = minutes37.plus(minutes48);
        int int50 = minutes49.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2M" + "'", str29, "PT2M");
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-2) + "'", int45 == (-2));
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = minutes12.getFieldType();
        int int16 = minutes11.get(durationFieldType15);
        org.joda.time.Minutes minutes18 = minutes11.plus((-1));
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = minutes21.plus(0);
        int int26 = minutes19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes21);
        org.joda.time.Minutes minutes28 = minutes21.plus((int) ' ');
        java.lang.String str29 = minutes21.toString();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean32 = minutes21.isLessThan(minutes31);
        boolean boolean33 = minutes18.isLessThan(minutes21);
        org.joda.time.Minutes minutes34 = minutes2.minus(minutes18);
        org.joda.time.MutablePeriod mutablePeriod35 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes37 = minutes2.dividedBy(2);
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes40 = minutes38.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType42 = null;
        int int43 = minutes41.get(durationFieldType42);
        org.joda.time.DurationFieldType durationFieldType44 = minutes41.getFieldType();
        int int45 = minutes40.get(durationFieldType44);
        org.joda.time.Minutes minutes47 = minutes40.plus((-1));
        org.joda.time.Minutes minutes48 = minutes47.negated();
        org.joda.time.Minutes minutes49 = minutes37.plus(minutes48);
        org.joda.time.Minutes minutes51 = minutes37.minus((int) (short) 1);
        org.joda.time.Duration duration52 = minutes51.toStandardDuration();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2M" + "'", str29, "PT2M");
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-2) + "'", int45 == (-2));
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(duration52);
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((-4));
        org.joda.time.Period period2 = minutes1.toPeriod();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes4 = minutes3.negated();
        org.joda.time.Minutes minutes6 = minutes4.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes6);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = minutes11.get(durationFieldType12);
        org.joda.time.DurationFieldType durationFieldType14 = minutes11.getFieldType();
        int int15 = minutes10.get(durationFieldType14);
        int int16 = minutes7.get(durationFieldType14);
        org.joda.time.PeriodType periodType17 = minutes7.getPeriodType();
        int int18 = minutes7.getMinutes();
        boolean boolean19 = minutes1.isGreaterThan(minutes7);
        org.joda.time.Minutes minutes20 = minutes1.negated();
        org.joda.time.Minutes minutes22 = minutes20.minus((int) '#');
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-2) + "'", int15 == (-2));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2147483647 + "'", int16 == 2147483647);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483647 + "'", int18 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes9 = minutes2.plus((-1));
        org.joda.time.Minutes minutes11 = minutes2.minus((int) (short) 10);
        org.joda.time.Minutes minutes13 = minutes11.dividedBy((-2147483648));
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod15 = minutes14.toMutablePeriod();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes17 = minutes14.plus(minutes16);
        org.joda.time.Minutes minutes18 = minutes11.minus(minutes16);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes21 = minutes19.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes23 = minutes19.plus(0);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes26 = minutes24.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = minutes27.get(durationFieldType28);
        org.joda.time.DurationFieldType durationFieldType30 = minutes27.getFieldType();
        int int31 = minutes26.get(durationFieldType30);
        org.joda.time.Minutes minutes33 = minutes26.plus((-1));
        org.joda.time.Minutes minutes35 = minutes26.minus((int) (short) 10);
        org.joda.time.Minutes minutes37 = minutes35.dividedBy((-2147483648));
        org.joda.time.Minutes minutes38 = minutes23.plus(minutes37);
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes41 = minutes39.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = minutes42.get(durationFieldType43);
        org.joda.time.MutablePeriod mutablePeriod45 = minutes42.toMutablePeriod();
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes42);
        boolean boolean47 = minutes41.isLessThan(minutes46);
        org.joda.time.DurationFieldType durationFieldType48 = minutes46.getFieldType();
        boolean boolean49 = minutes38.isSupported(durationFieldType48);
        int int50 = minutes11.get(durationFieldType48);
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes11);
        java.lang.Class<?> wildcardClass52 = minutes11.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-2) + "'", int31 == (-2));
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-12) + "'", int50 == (-12));
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = minutes15.get(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = minutes15.getFieldType();
        int int19 = minutes14.get(durationFieldType18);
        boolean boolean20 = minutes3.isSupported(durationFieldType18);
        org.joda.time.Minutes minutes22 = minutes3.dividedBy(100);
        java.lang.String str23 = minutes22.toString();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2) + "'", int19 == (-2));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT0M" + "'", str23, "PT0M");
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType8 = minutes7.getFieldType();
        org.joda.time.Minutes minutes9 = minutes7.negated();
        org.joda.time.Minutes minutes11 = minutes7.plus((int) (short) 1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = minutes15.get(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = minutes15.getFieldType();
        int int19 = minutes14.get(durationFieldType18);
        org.joda.time.Minutes minutes21 = minutes14.plus((-1));
        org.joda.time.Minutes minutes23 = minutes14.minus((int) (short) 10);
        org.joda.time.Minutes minutes25 = minutes23.dividedBy((-2147483648));
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod27 = minutes26.toMutablePeriod();
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes29 = minutes26.plus(minutes28);
        org.joda.time.Minutes minutes30 = minutes23.minus(minutes28);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes33 = minutes31.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes35 = minutes31.plus(0);
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes38 = minutes36.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType40 = null;
        int int41 = minutes39.get(durationFieldType40);
        org.joda.time.DurationFieldType durationFieldType42 = minutes39.getFieldType();
        int int43 = minutes38.get(durationFieldType42);
        org.joda.time.Minutes minutes45 = minutes38.plus((-1));
        org.joda.time.Minutes minutes47 = minutes38.minus((int) (short) 10);
        org.joda.time.Minutes minutes49 = minutes47.dividedBy((-2147483648));
        org.joda.time.Minutes minutes50 = minutes35.plus(minutes49);
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes53 = minutes51.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType55 = null;
        int int56 = minutes54.get(durationFieldType55);
        org.joda.time.MutablePeriod mutablePeriod57 = minutes54.toMutablePeriod();
        org.joda.time.Minutes minutes58 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes54);
        boolean boolean59 = minutes53.isLessThan(minutes58);
        org.joda.time.DurationFieldType durationFieldType60 = minutes58.getFieldType();
        boolean boolean61 = minutes50.isSupported(durationFieldType60);
        int int62 = minutes23.get(durationFieldType60);
        org.joda.time.Minutes minutes63 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes23);
        org.joda.time.Minutes minutes64 = minutes11.plus(minutes63);
        boolean boolean65 = minutes0.isGreaterThan(minutes64);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2) + "'", int19 == (-2));
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-2) + "'", int43 == (-2));
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod57);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(durationFieldType60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-12) + "'", int62 == (-12));
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = minutes0.get(durationFieldType1);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType4 = minutes0.getFieldType();
        org.joda.time.Minutes minutes6 = minutes0.dividedBy((-1));
        org.joda.time.Minutes minutes8 = minutes0.dividedBy(2147483646);
        org.joda.time.Period period9 = minutes0.toPeriod();
        org.joda.time.Minutes minutes11 = minutes0.dividedBy((-2147483647));
        // The following exception was thrown during execution in test generation
        try {
            int int13 = minutes11.getValue((-4));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -4");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(minutes11);
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = minutes0.get(durationFieldType1);
        org.joda.time.DurationFieldType durationFieldType3 = minutes0.getFieldType();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = minutes7.get(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType10 = minutes7.getFieldType();
        int int11 = minutes6.get(durationFieldType10);
        org.joda.time.Minutes minutes13 = minutes6.plus((-1));
        org.joda.time.Minutes minutes15 = minutes6.minus((int) (short) 10);
        org.joda.time.Minutes minutes17 = minutes15.dividedBy((-2147483648));
        org.joda.time.Minutes minutes18 = minutes17.negated();
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes20 = minutes19.negated();
        org.joda.time.Minutes minutes21 = minutes19.negated();
        org.joda.time.Minutes minutes22 = minutes17.minus(minutes21);
        org.joda.time.Minutes minutes24 = minutes21.plus((int) 'a');
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes24);
        org.joda.time.Minutes minutes27 = minutes24.dividedBy((int) (byte) 1);
        java.lang.String str28 = minutes24.toString();
        org.joda.time.Minutes minutes30 = minutes24.dividedBy(2);
        boolean boolean31 = minutes0.isLessThan(minutes24);
        int int32 = minutes0.size();
        org.joda.time.DurationFieldType durationFieldType34 = minutes0.getFieldType(0);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-2) + "'", int11 == (-2));
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "PT-2147483550M" + "'", str28, "PT-2147483550M");
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(durationFieldType34);
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes11 = minutes10.negated();
        org.joda.time.Minutes minutes12 = minutes10.negated();
        org.joda.time.DurationFieldType durationFieldType13 = minutes10.getFieldType();
        java.lang.String str14 = minutes10.toString();
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes16 = minutes15.negated();
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes15);
        int int18 = minutes15.size();
        org.joda.time.MutablePeriod mutablePeriod19 = minutes15.toMutablePeriod();
        boolean boolean20 = minutes10.equals((java.lang.Object) minutes15);
        org.joda.time.DurationFieldType durationFieldType22 = minutes15.getFieldType((int) (short) 0);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod24 = minutes23.toMutablePeriod();
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes27 = minutes25.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes29 = minutes25.plus(0);
        int int30 = minutes23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes25);
        org.joda.time.Minutes minutes32 = minutes25.plus((int) ' ');
        java.lang.String str33 = minutes25.toString();
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean36 = minutes25.isLessThan(minutes35);
        org.joda.time.Period period37 = minutes35.toPeriod();
        boolean boolean38 = minutes15.isGreaterThan(minutes35);
        org.joda.time.Period period39 = minutes15.toPeriod();
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) period39);
        org.joda.time.Minutes minutes41 = minutes9.minus(minutes40);
        org.joda.time.Period period42 = minutes40.toPeriod();
        org.joda.time.Minutes minutes43 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod44 = minutes43.toMutablePeriod();
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes46 = minutes43.plus(minutes45);
        org.joda.time.Minutes minutes47 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod48 = minutes47.toMutablePeriod();
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes50 = minutes47.plus(minutes49);
        boolean boolean51 = minutes46.isLessThan(minutes47);
        org.joda.time.PeriodType periodType52 = minutes46.getPeriodType();
        org.joda.time.Minutes minutes54 = minutes46.dividedBy(3);
        org.joda.time.Minutes minutes56 = minutes54.dividedBy(10);
        org.joda.time.Minutes minutes58 = minutes56.minus((-22139006));
        org.joda.time.Minutes minutes60 = minutes58.plus((-22139006));
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes61 = minutes40.minus(minutes58);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 2147483647 + 49443782");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "PT2147483647M" + "'", str14, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "PT2M" + "'", str33, "PT2M");
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(mutablePeriod44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes60);
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.minus((int) (short) 1);
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy(0);
        org.joda.time.Duration duration5 = minutes2.toStandardDuration();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.MAX_VALUE;
        int int7 = minutes6.size();
        int int9 = minutes6.getValue(0);
        org.joda.time.Minutes minutes10 = minutes6.negated();
        org.joda.time.DurationFieldType durationFieldType12 = minutes6.getFieldType(0);
        boolean boolean13 = minutes2.equals((java.lang.Object) 0);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes16 = minutes14.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = minutes17.get(durationFieldType18);
        org.joda.time.MutablePeriod mutablePeriod20 = minutes17.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes17);
        boolean boolean22 = minutes16.isLessThan(minutes21);
        int int23 = minutes16.getMinutes();
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean26 = minutes16.isLessThan(minutes25);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes16);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes30 = minutes28.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes31 = minutes28.negated();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes34 = minutes28.minus(minutes33);
        boolean boolean35 = minutes16.isLessThan(minutes28);
        boolean boolean36 = minutes2.isLessThan(minutes16);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes2);
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes41 = minutes39.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = minutes42.get(durationFieldType43);
        org.joda.time.DurationFieldType durationFieldType45 = minutes42.getFieldType();
        int int46 = minutes41.get(durationFieldType45);
        org.joda.time.Minutes minutes48 = minutes41.plus((-1));
        boolean boolean49 = minutes38.isGreaterThan(minutes41);
        org.joda.time.DurationFieldType durationFieldType50 = minutes41.getFieldType();
        int int52 = minutes41.getValue((int) (short) 0);
        org.joda.time.Period period53 = minutes41.toPeriod();
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes55 = minutes54.negated();
        org.joda.time.Minutes minutes56 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod57 = minutes56.toMutablePeriod();
        org.joda.time.Minutes minutes58 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes59 = minutes56.plus(minutes58);
        int int60 = minutes55.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes58);
        org.joda.time.Minutes minutes61 = minutes41.minus(minutes55);
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes64 = minutes62.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes65 = minutes62.negated();
        org.joda.time.Minutes minutes67 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes68 = minutes62.minus(minutes67);
        org.joda.time.Minutes minutes69 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod70 = minutes69.toMutablePeriod();
        org.joda.time.Minutes minutes71 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod70);
        boolean boolean72 = minutes62.isLessThan(minutes71);
        org.joda.time.Minutes minutes73 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes71);
        org.joda.time.DurationFieldType durationFieldType74 = minutes71.getFieldType();
        boolean boolean75 = minutes41.isSupported(durationFieldType74);
        int int76 = minutes2.get(durationFieldType74);
        java.lang.Class<?> wildcardClass77 = minutes2.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2147483647 + "'", int9 == 2147483647);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-2) + "'", int23 == (-2));
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-2) + "'", int46 == (-2));
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-2) + "'", int52 == (-2));
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(mutablePeriod57);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(mutablePeriod70);
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(minutes73);
        org.junit.Assert.assertNotNull(durationFieldType74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2147483646 + "'", int76 == 2147483646);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod8 = minutes7.toMutablePeriod();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod8);
        boolean boolean10 = minutes0.isLessThan(minutes9);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes9);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = minutes15.get(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = minutes15.getFieldType();
        int int19 = minutes14.get(durationFieldType18);
        org.joda.time.Minutes minutes20 = minutes14.negated();
        org.joda.time.Duration duration21 = minutes20.toStandardDuration();
        org.joda.time.Minutes minutes23 = minutes20.dividedBy((-2147483647));
        boolean boolean24 = minutes9.isGreaterThan(minutes20);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2) + "'", int19 == (-2));
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod2 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        int int4 = minutes3.size();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes6 = minutes5.negated();
        org.joda.time.Minutes minutes8 = minutes6.dividedBy((int) (byte) -1);
        boolean boolean9 = minutes3.isLessThan(minutes6);
        boolean boolean10 = minutes0.isLessThan(minutes3);
        org.joda.time.Minutes minutes12 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Duration duration13 = minutes0.toStandardDuration();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(duration13);
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.minus((int) (short) 1);
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy(0);
        org.joda.time.Duration duration5 = minutes2.toStandardDuration();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.MAX_VALUE;
        int int7 = minutes6.size();
        int int9 = minutes6.getValue(0);
        org.joda.time.Minutes minutes10 = minutes6.negated();
        org.joda.time.DurationFieldType durationFieldType12 = minutes6.getFieldType(0);
        boolean boolean13 = minutes2.equals((java.lang.Object) 0);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes16 = minutes14.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = minutes17.get(durationFieldType18);
        org.joda.time.MutablePeriod mutablePeriod20 = minutes17.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes17);
        boolean boolean22 = minutes16.isLessThan(minutes21);
        int int23 = minutes16.getMinutes();
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean26 = minutes16.isLessThan(minutes25);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes16);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes30 = minutes28.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes31 = minutes28.negated();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes34 = minutes28.minus(minutes33);
        boolean boolean35 = minutes16.isLessThan(minutes28);
        boolean boolean36 = minutes2.isLessThan(minutes16);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes2);
        org.joda.time.Minutes minutes39 = minutes2.multipliedBy((int) (byte) 1);
        org.joda.time.Duration duration40 = minutes39.toStandardDuration();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2147483647 + "'", int9 == 2147483647);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-2) + "'", int23 == (-2));
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(duration40);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        org.joda.time.Period period10 = minutes2.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod11 = minutes2.toMutablePeriod();
        org.joda.time.Period period12 = minutes2.toPeriod();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = minutes16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = minutes16.getFieldType();
        int int20 = minutes15.get(durationFieldType19);
        org.joda.time.Minutes minutes21 = minutes15.negated();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType24 = minutes23.getPeriodType();
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes26 = minutes25.negated();
        org.joda.time.Minutes minutes27 = minutes25.negated();
        org.joda.time.DurationFieldType durationFieldType28 = minutes25.getFieldType();
        java.lang.String str29 = minutes25.toString();
        boolean boolean30 = minutes23.isGreaterThan(minutes25);
        boolean boolean31 = minutes22.equals((java.lang.Object) minutes23);
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes22);
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes36 = minutes34.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = minutes37.get(durationFieldType38);
        org.joda.time.DurationFieldType durationFieldType40 = minutes37.getFieldType();
        int int41 = minutes36.get(durationFieldType40);
        org.joda.time.Minutes minutes43 = minutes36.plus((-1));
        boolean boolean44 = minutes33.isGreaterThan(minutes36);
        org.joda.time.DurationFieldType durationFieldType45 = minutes36.getFieldType();
        boolean boolean46 = minutes32.isSupported(durationFieldType45);
        java.lang.String str47 = minutes32.toString();
        boolean boolean48 = minutes21.isLessThan(minutes32);
        boolean boolean49 = minutes2.equals((java.lang.Object) minutes21);
        org.joda.time.Minutes minutes50 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod51 = minutes50.toMutablePeriod();
        org.joda.time.Minutes minutes52 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes54 = minutes52.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes56 = minutes52.plus(0);
        int int57 = minutes50.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes52);
        org.joda.time.Minutes minutes59 = minutes52.plus((int) ' ');
        org.joda.time.Minutes minutes60 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes61 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes63 = minutes61.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes64 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType65 = null;
        int int66 = minutes64.get(durationFieldType65);
        org.joda.time.DurationFieldType durationFieldType67 = minutes64.getFieldType();
        int int68 = minutes63.get(durationFieldType67);
        org.joda.time.Minutes minutes70 = minutes63.plus((-1));
        boolean boolean71 = minutes60.isGreaterThan(minutes63);
        org.joda.time.Minutes minutes72 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes74 = minutes72.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes75 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType76 = null;
        int int77 = minutes75.get(durationFieldType76);
        org.joda.time.DurationFieldType durationFieldType78 = minutes75.getFieldType();
        int int79 = minutes74.get(durationFieldType78);
        boolean boolean80 = minutes63.isSupported(durationFieldType78);
        int int81 = minutes52.get(durationFieldType78);
        int int82 = minutes2.get(durationFieldType78);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-2) + "'", int20 == (-2));
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2147483647M" + "'", str29, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-2) + "'", int41 == (-2));
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "PT2147483647M" + "'", str47, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(durationFieldType67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-2) + "'", int68 == (-2));
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertNotNull(minutes74);
        org.junit.Assert.assertNotNull(minutes75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(durationFieldType78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-2) + "'", int79 == (-2));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 2 + "'", int81 == 2);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 2 + "'", int82 == 2);
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.Minutes minutes13 = minutes3.multipliedBy(2);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod15 = minutes14.toMutablePeriod();
        org.joda.time.Duration duration16 = minutes14.toStandardDuration();
        boolean boolean17 = minutes13.equals((java.lang.Object) duration16);
        org.joda.time.Minutes minutes19 = minutes13.minus((int) (byte) 100);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(minutes19);
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = minutes12.getFieldType();
        int int16 = minutes11.get(durationFieldType15);
        org.joda.time.Minutes minutes18 = minutes11.plus((-1));
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = minutes21.plus(0);
        int int26 = minutes19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes21);
        org.joda.time.Minutes minutes28 = minutes21.plus((int) ' ');
        java.lang.String str29 = minutes21.toString();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean32 = minutes21.isLessThan(minutes31);
        boolean boolean33 = minutes18.isLessThan(minutes21);
        org.joda.time.Minutes minutes34 = minutes2.minus(minutes18);
        org.joda.time.MutablePeriod mutablePeriod35 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes37 = minutes2.dividedBy(2);
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes40 = minutes38.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType42 = null;
        int int43 = minutes41.get(durationFieldType42);
        org.joda.time.DurationFieldType durationFieldType44 = minutes41.getFieldType();
        int int45 = minutes40.get(durationFieldType44);
        org.joda.time.Minutes minutes47 = minutes40.plus((-1));
        org.joda.time.Minutes minutes48 = minutes47.negated();
        org.joda.time.Minutes minutes49 = minutes37.plus(minutes48);
        org.joda.time.Minutes minutes51 = minutes37.minus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType52 = minutes51.getFieldType();
        org.joda.time.Minutes minutes54 = minutes51.dividedBy((-2147483647));
        org.joda.time.Minutes minutes56 = minutes54.plus((-22139006));
        java.lang.Class<?> wildcardClass57 = minutes56.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2M" + "'", str29, "PT2M");
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-2) + "'", int45 == (-2));
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        boolean boolean6 = minutes0.isGreaterThan(minutes5);
        org.joda.time.PeriodType periodType7 = minutes0.getPeriodType();
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType10 = minutes9.getPeriodType();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes12 = minutes11.negated();
        org.joda.time.Minutes minutes13 = minutes11.negated();
        org.joda.time.DurationFieldType durationFieldType14 = minutes11.getFieldType();
        java.lang.String str15 = minutes11.toString();
        boolean boolean16 = minutes9.isGreaterThan(minutes11);
        boolean boolean17 = minutes8.equals((java.lang.Object) minutes9);
        org.joda.time.Minutes minutes19 = minutes9.minus(1);
        org.joda.time.Minutes minutes20 = minutes0.minus(minutes19);
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes24 = minutes21.negated();
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes27 = minutes21.minus(minutes26);
        int int28 = minutes27.size();
        org.joda.time.Period period29 = minutes27.toPeriod();
        boolean boolean30 = minutes19.equals((java.lang.Object) period29);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes19);
        int int32 = minutes31.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PT2147483647M" + "'", str15, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        int int3 = minutes0.size();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration5 = minutes4.toStandardDuration();
        org.joda.time.Duration duration6 = minutes4.toStandardDuration();
        org.joda.time.Minutes minutes8 = minutes4.minus(2);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = minutes9.negated();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes14 = minutes13.negated();
        org.joda.time.Minutes minutes15 = minutes13.negated();
        boolean boolean16 = minutes9.equals((java.lang.Object) minutes15);
        boolean boolean17 = minutes8.isLessThan(minutes9);
        org.joda.time.Minutes minutes18 = minutes0.plus(minutes8);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes21 = minutes19.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType23 = null;
        int int24 = minutes22.get(durationFieldType23);
        org.joda.time.MutablePeriod mutablePeriod25 = minutes22.toMutablePeriod();
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes22);
        boolean boolean27 = minutes21.isLessThan(minutes26);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes30 = minutes28.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = minutes31.get(durationFieldType32);
        org.joda.time.DurationFieldType durationFieldType34 = minutes31.getFieldType();
        int int35 = minutes30.get(durationFieldType34);
        org.joda.time.Minutes minutes37 = minutes30.plus((-1));
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod39 = minutes38.toMutablePeriod();
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes42 = minutes40.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes44 = minutes40.plus(0);
        int int45 = minutes38.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes40);
        org.joda.time.Minutes minutes47 = minutes40.plus((int) ' ');
        java.lang.String str48 = minutes40.toString();
        org.joda.time.Minutes minutes50 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean51 = minutes40.isLessThan(minutes50);
        boolean boolean52 = minutes37.isLessThan(minutes40);
        org.joda.time.Minutes minutes53 = minutes21.minus(minutes37);
        org.joda.time.MutablePeriod mutablePeriod54 = minutes21.toMutablePeriod();
        org.joda.time.Minutes minutes55 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod56 = minutes55.toMutablePeriod();
        boolean boolean57 = minutes21.isLessThan(minutes55);
        org.joda.time.Minutes minutes59 = minutes21.plus((int) ' ');
        org.joda.time.Minutes minutes60 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes62 = minutes60.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes63 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType64 = null;
        int int65 = minutes63.get(durationFieldType64);
        org.joda.time.DurationFieldType durationFieldType66 = minutes63.getFieldType();
        int int67 = minutes62.get(durationFieldType66);
        boolean boolean68 = minutes21.isSupported(durationFieldType66);
        boolean boolean69 = minutes18.isLessThan(minutes21);
        org.joda.time.Minutes minutes70 = org.joda.time.Minutes.MAX_VALUE;
        int int71 = minutes70.size();
        int int73 = minutes70.getValue(0);
        org.joda.time.Minutes minutes74 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes70);
        boolean boolean75 = minutes21.isLessThan(minutes74);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-2) + "'", int35 == (-2));
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "PT2M" + "'", str48, "PT2M");
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(mutablePeriod54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(mutablePeriod56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(durationFieldType66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-2) + "'", int67 == (-2));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 2147483647 + "'", int73 == 2147483647);
        org.junit.Assert.assertNotNull(minutes74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.Minutes minutes13 = minutes3.multipliedBy(2);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes16 = minutes14.minus((int) (short) 1);
        org.joda.time.Minutes minutes18 = minutes16.multipliedBy(0);
        org.joda.time.Duration duration19 = minutes18.toStandardDuration();
        org.joda.time.Minutes minutes21 = minutes18.dividedBy((-2147483648));
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes24 = minutes22.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = minutes25.get(durationFieldType26);
        org.joda.time.DurationFieldType durationFieldType28 = minutes25.getFieldType();
        int int29 = minutes24.get(durationFieldType28);
        org.joda.time.Minutes minutes31 = minutes24.plus((-1));
        org.joda.time.Minutes minutes33 = minutes24.minus((int) (short) 10);
        org.joda.time.Minutes minutes35 = minutes33.dividedBy((-2147483648));
        org.joda.time.Minutes minutes37 = minutes33.plus(100);
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes40 = minutes38.minus((int) (short) 1);
        org.joda.time.Minutes minutes42 = minutes40.multipliedBy(0);
        org.joda.time.Minutes minutes43 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes45 = minutes43.dividedBy((int) 'a');
        org.joda.time.Minutes minutes47 = minutes43.plus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType48 = minutes47.getFieldType();
        boolean boolean49 = minutes40.isSupported(durationFieldType48);
        boolean boolean50 = minutes33.isSupported(durationFieldType48);
        int int51 = minutes21.get(durationFieldType48);
        java.lang.String str52 = minutes21.toString();
        org.joda.time.PeriodType periodType53 = minutes21.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod54 = minutes21.toMutablePeriod();
        int int55 = minutes3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes21);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-2) + "'", int29 == (-2));
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "PT0M" + "'", str52, "PT0M");
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(mutablePeriod54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.dividedBy((int) 'a');
        org.joda.time.Minutes minutes4 = minutes0.plus((int) (short) 1);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes6 = minutes5.negated();
        org.joda.time.PeriodType periodType7 = minutes6.getPeriodType();
        org.joda.time.Minutes minutes8 = minutes6.negated();
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes12 = minutes10.plus(0);
        org.joda.time.DurationFieldType durationFieldType13 = minutes12.getFieldType();
        int int14 = minutes8.get(durationFieldType13);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes17 = minutes15.minus((int) (short) 1);
        org.joda.time.Minutes minutes19 = minutes17.multipliedBy(0);
        org.joda.time.Duration duration20 = minutes17.toStandardDuration();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes22 = minutes21.negated();
        org.joda.time.DurationFieldType durationFieldType23 = minutes21.getFieldType();
        int int24 = minutes17.get(durationFieldType23);
        boolean boolean25 = minutes8.isSupported(durationFieldType23);
        int int26 = minutes0.get(durationFieldType23);
        int int27 = minutes0.size();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2147483647 + "'", int14 == 2147483647);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2147483646 + "'", int24 == 2147483646);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-2147483648) + "'", int26 == (-2147483648));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        int int1 = minutes0.size();
        int int3 = minutes0.getValue(0);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.MutablePeriod mutablePeriod5 = minutes4.toMutablePeriod();
        org.joda.time.Period period6 = minutes4.toPeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2147483647 + "'", int3 == 2147483647);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(period6);
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.dividedBy((int) 'a');
        org.joda.time.Minutes minutes4 = minutes0.plus((int) (short) 1);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes6 = minutes5.negated();
        org.joda.time.PeriodType periodType7 = minutes6.getPeriodType();
        org.joda.time.Minutes minutes8 = minutes6.negated();
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes12 = minutes10.plus(0);
        org.joda.time.DurationFieldType durationFieldType13 = minutes12.getFieldType();
        int int14 = minutes8.get(durationFieldType13);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes17 = minutes15.minus((int) (short) 1);
        org.joda.time.Minutes minutes19 = minutes17.multipliedBy(0);
        org.joda.time.Duration duration20 = minutes17.toStandardDuration();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes22 = minutes21.negated();
        org.joda.time.DurationFieldType durationFieldType23 = minutes21.getFieldType();
        int int24 = minutes17.get(durationFieldType23);
        boolean boolean25 = minutes8.isSupported(durationFieldType23);
        int int26 = minutes0.get(durationFieldType23);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes28 = minutes27.negated();
        org.joda.time.PeriodType periodType29 = minutes28.getPeriodType();
        org.joda.time.Minutes minutes30 = minutes28.negated();
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes34 = minutes32.plus(0);
        org.joda.time.DurationFieldType durationFieldType35 = minutes34.getFieldType();
        int int36 = minutes30.get(durationFieldType35);
        org.joda.time.Minutes minutes38 = minutes30.dividedBy((int) ' ');
        org.joda.time.Minutes minutes39 = minutes0.plus(minutes30);
        int int40 = minutes39.size();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2147483647 + "'", int14 == 2147483647);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2147483646 + "'", int24 == 2147483646);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-2147483648) + "'", int26 == (-2147483648));
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2147483647 + "'", int36 == 2147483647);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.DurationFieldType durationFieldType12 = minutes3.getFieldType();
        int int14 = minutes3.getValue((int) (short) 0);
        org.joda.time.Period period15 = minutes3.toPeriod();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes17 = minutes16.negated();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod19 = minutes18.toMutablePeriod();
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes21 = minutes18.plus(minutes20);
        int int22 = minutes17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes20);
        org.joda.time.Minutes minutes23 = minutes3.minus(minutes17);
        org.joda.time.Minutes minutes24 = null;
        boolean boolean25 = minutes3.isLessThan(minutes24);
        org.joda.time.Duration duration26 = minutes3.toStandardDuration();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-2) + "'", int14 == (-2));
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(duration26);
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType3 = minutes2.getFieldType();
        org.joda.time.Minutes minutes4 = minutes2.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes6 = minutes5.negated();
        org.joda.time.Minutes minutes7 = minutes5.negated();
        java.lang.String str8 = minutes5.toString();
        int int9 = minutes5.size();
        org.joda.time.Minutes minutes11 = minutes5.minus(0);
        org.joda.time.Minutes minutes13 = minutes5.plus((int) (short) 0);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes5);
        boolean boolean15 = minutes4.isLessThan(minutes5);
        org.joda.time.PeriodType periodType16 = minutes4.getPeriodType();
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod18 = minutes17.toMutablePeriod();
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes20 = minutes17.plus(minutes19);
        org.joda.time.Minutes minutes22 = minutes20.plus((int) 'a');
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod24 = minutes23.toMutablePeriod();
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes27 = minutes25.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes29 = minutes25.plus(0);
        int int30 = minutes23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes25);
        org.joda.time.Minutes minutes32 = minutes25.plus((int) ' ');
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType34 = minutes33.getFieldType();
        int int35 = minutes25.get(durationFieldType34);
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes38 = minutes36.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes39 = minutes36.negated();
        org.joda.time.Minutes minutes40 = minutes25.plus(minutes36);
        org.joda.time.DurationFieldType durationFieldType41 = minutes25.getFieldType();
        int int42 = minutes20.get(durationFieldType41);
        int int43 = minutes4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes20);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "PT2147483647M" + "'", str8, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-2147483645) + "'", int42 == (-2147483645));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes1);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes1.toMutablePeriod();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        org.joda.time.Period period10 = minutes2.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod11 = minutes2.toMutablePeriod();
        org.joda.time.Period period12 = minutes2.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod13 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes16 = minutes14.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = minutes17.get(durationFieldType18);
        org.joda.time.MutablePeriod mutablePeriod20 = minutes17.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes17);
        boolean boolean22 = minutes16.isLessThan(minutes21);
        int int23 = minutes16.getMinutes();
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes27 = minutes25.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = minutes28.get(durationFieldType29);
        org.joda.time.DurationFieldType durationFieldType31 = minutes28.getFieldType();
        int int32 = minutes27.get(durationFieldType31);
        org.joda.time.Minutes minutes34 = minutes27.plus((-1));
        boolean boolean35 = minutes24.isGreaterThan(minutes27);
        org.joda.time.DurationFieldType durationFieldType36 = minutes27.getFieldType();
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType39 = minutes38.getPeriodType();
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes41 = minutes40.negated();
        org.joda.time.Minutes minutes42 = minutes40.negated();
        org.joda.time.DurationFieldType durationFieldType43 = minutes40.getFieldType();
        java.lang.String str44 = minutes40.toString();
        boolean boolean45 = minutes38.isGreaterThan(minutes40);
        boolean boolean46 = minutes37.equals((java.lang.Object) minutes38);
        org.joda.time.Minutes minutes47 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes37);
        int int48 = minutes27.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes37);
        int int49 = minutes16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes37);
        org.joda.time.Minutes minutes50 = minutes2.minus(minutes16);
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes53 = minutes51.minus((int) (short) 1);
        org.joda.time.Minutes minutes55 = minutes53.multipliedBy(0);
        org.joda.time.Period period56 = minutes53.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod57 = minutes53.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType58 = minutes53.getFieldType();
        boolean boolean59 = minutes16.isSupported(durationFieldType58);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-2) + "'", int23 == (-2));
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-2) + "'", int32 == (-2));
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "PT2147483647M" + "'", str44, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(mutablePeriod57);
        org.junit.Assert.assertNotNull(durationFieldType58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        java.lang.String str3 = minutes0.toString();
        org.joda.time.PeriodType periodType4 = minutes0.getPeriodType();
        org.joda.time.Minutes minutes5 = null;
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes9 = minutes7.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = minutes10.get(durationFieldType11);
        org.joda.time.DurationFieldType durationFieldType13 = minutes10.getFieldType();
        int int14 = minutes9.get(durationFieldType13);
        org.joda.time.Minutes minutes16 = minutes9.plus((-1));
        org.joda.time.Minutes minutes18 = minutes9.minus((int) (short) 10);
        org.joda.time.Minutes minutes20 = minutes18.dividedBy((-2147483648));
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod22 = minutes21.toMutablePeriod();
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes24 = minutes21.plus(minutes23);
        org.joda.time.Minutes minutes25 = minutes18.minus(minutes23);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes28 = minutes26.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes30 = minutes26.plus(0);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes33 = minutes31.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = minutes34.get(durationFieldType35);
        org.joda.time.DurationFieldType durationFieldType37 = minutes34.getFieldType();
        int int38 = minutes33.get(durationFieldType37);
        org.joda.time.Minutes minutes40 = minutes33.plus((-1));
        org.joda.time.Minutes minutes42 = minutes33.minus((int) (short) 10);
        org.joda.time.Minutes minutes44 = minutes42.dividedBy((-2147483648));
        org.joda.time.Minutes minutes45 = minutes30.plus(minutes44);
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes48 = minutes46.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = minutes49.get(durationFieldType50);
        org.joda.time.MutablePeriod mutablePeriod52 = minutes49.toMutablePeriod();
        org.joda.time.Minutes minutes53 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes49);
        boolean boolean54 = minutes48.isLessThan(minutes53);
        org.joda.time.DurationFieldType durationFieldType55 = minutes53.getFieldType();
        boolean boolean56 = minutes45.isSupported(durationFieldType55);
        int int57 = minutes18.get(durationFieldType55);
        int int58 = minutes6.get(durationFieldType55);
        org.joda.time.PeriodType periodType59 = minutes6.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            int int61 = minutes6.getValue((-22139006));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -22139006");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2147483647M" + "'", str3, "PT2147483647M");
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-2) + "'", int14 == (-2));
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-2) + "'", int38 == (-2));
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-12) + "'", int57 == (-12));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2147483647 + "'", int58 == 2147483647);
        org.junit.Assert.assertNotNull(periodType59);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes9 = minutes2.plus((-1));
        org.joda.time.Minutes minutes11 = minutes2.minus((int) (short) 10);
        org.joda.time.Duration duration12 = minutes2.toStandardDuration();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes14 = minutes13.negated();
        org.joda.time.Minutes minutes15 = minutes13.negated();
        java.lang.String str16 = minutes13.toString();
        org.joda.time.Minutes minutes18 = minutes13.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes22 = minutes20.multipliedBy((int) (byte) 0);
        boolean boolean23 = minutes18.equals((java.lang.Object) minutes20);
        boolean boolean24 = minutes2.isGreaterThan(minutes20);
        org.joda.time.PeriodType periodType25 = minutes2.getPeriodType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483647M" + "'", str16, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(periodType25);
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod3 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes5 = minutes2.plus(minutes4);
        int int6 = minutes1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes4);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes8 = minutes7.negated();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes7);
        java.lang.String str10 = minutes7.toString();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType12 = minutes11.getFieldType();
        boolean boolean13 = minutes7.isSupported(durationFieldType12);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes7);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes16 = minutes15.negated();
        org.joda.time.Minutes minutes18 = minutes16.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes21 = minutes19.dividedBy((int) 'a');
        org.joda.time.Minutes minutes23 = minutes19.plus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType24 = minutes23.getFieldType();
        boolean boolean25 = minutes16.isSupported(durationFieldType24);
        org.joda.time.DurationFieldType durationFieldType26 = minutes16.getFieldType();
        boolean boolean27 = minutes7.isSupported(durationFieldType26);
        boolean boolean28 = minutes4.isSupported(durationFieldType26);
        int int29 = minutes4.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT2147483647M" + "'", str10, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 3 + "'", int29 == 3);
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.THREE;
        int int1 = minutes0.size();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod3 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = minutes4.plus(0);
        int int9 = minutes2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes4);
        org.joda.time.Minutes minutes11 = minutes4.plus((int) ' ');
        int int12 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes11);
        org.joda.time.Minutes minutes14 = minutes11.minus((int) (byte) 0);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.THREE;
        org.joda.time.Duration duration16 = minutes15.toStandardDuration();
        org.joda.time.Minutes minutes17 = minutes11.plus(minutes15);
        // The following exception was thrown during execution in test generation
        try {
            int int19 = minutes15.getValue((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 32");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(minutes17);
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes3 = minutes1.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        int int13 = minutes4.get(durationFieldType11);
        int int14 = minutes4.getMinutes();
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration16 = minutes15.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod17 = minutes15.toMutablePeriod();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MAX_VALUE;
        int int19 = minutes18.size();
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes21 = minutes20.negated();
        org.joda.time.Minutes minutes23 = minutes21.dividedBy((int) (byte) -1);
        boolean boolean24 = minutes18.isLessThan(minutes21);
        boolean boolean25 = minutes15.isLessThan(minutes18);
        org.joda.time.Minutes minutes27 = minutes15.multipliedBy((int) (short) -1);
        org.joda.time.Period period28 = minutes15.toPeriod();
        boolean boolean29 = minutes4.isGreaterThan(minutes15);
        org.joda.time.Period period30 = minutes4.toPeriod();
        org.joda.time.Minutes minutes32 = minutes4.dividedBy((int) (byte) 100);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2147483647 + "'", int13 == 2147483647);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2147483647 + "'", int14 == 2147483647);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(minutes32);
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        org.joda.time.Period period10 = minutes2.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod11 = minutes2.toMutablePeriod();
        org.joda.time.Period period12 = minutes2.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod13 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes15 = minutes2.plus((int) '4');
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod17 = minutes16.toMutablePeriod();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes20 = minutes18.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes22 = minutes18.plus(0);
        int int23 = minutes16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes18);
        org.joda.time.Minutes minutes25 = minutes18.plus((int) ' ');
        java.lang.String str26 = minutes18.toString();
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = minutes27.get(durationFieldType28);
        org.joda.time.MutablePeriod mutablePeriod30 = minutes27.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType31 = minutes27.getFieldType();
        org.joda.time.Minutes minutes33 = minutes27.dividedBy((-1));
        org.joda.time.Minutes minutes35 = minutes27.dividedBy(2147483646);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.minutes((int) (byte) 10);
        boolean boolean38 = minutes27.isLessThan(minutes37);
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes41 = minutes39.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = minutes42.get(durationFieldType43);
        org.joda.time.MutablePeriod mutablePeriod45 = minutes42.toMutablePeriod();
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes42);
        boolean boolean47 = minutes41.isLessThan(minutes46);
        org.joda.time.Minutes minutes48 = minutes37.plus(minutes41);
        boolean boolean49 = minutes18.isGreaterThan(minutes37);
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.minutes((int) (byte) -1);
        org.joda.time.Minutes minutes52 = minutes37.minus(minutes51);
        boolean boolean53 = minutes15.equals((java.lang.Object) minutes37);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "PT2M" + "'", str26, "PT2M");
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = minutes12.getFieldType();
        int int16 = minutes11.get(durationFieldType15);
        org.joda.time.Minutes minutes18 = minutes11.plus((-1));
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = minutes21.plus(0);
        int int26 = minutes19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes21);
        org.joda.time.Minutes minutes28 = minutes21.plus((int) ' ');
        java.lang.String str29 = minutes21.toString();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean32 = minutes21.isLessThan(minutes31);
        boolean boolean33 = minutes18.isLessThan(minutes21);
        org.joda.time.Minutes minutes34 = minutes2.minus(minutes18);
        org.joda.time.MutablePeriod mutablePeriod35 = minutes2.toMutablePeriod();
        org.joda.time.PeriodType periodType36 = minutes2.getPeriodType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2M" + "'", str29, "PT2M");
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(periodType36);
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.dividedBy((int) 'a');
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((-12));
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        org.joda.time.Minutes minutes14 = minutes7.plus((-1));
        org.joda.time.Minutes minutes16 = minutes7.minus((int) (short) 10);
        org.joda.time.Minutes minutes18 = minutes16.dividedBy((-2147483648));
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes22 = minutes19.plus(minutes21);
        org.joda.time.Minutes minutes23 = minutes16.minus(minutes21);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes26 = minutes24.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes28 = minutes24.plus(0);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes31 = minutes29.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = minutes32.get(durationFieldType33);
        org.joda.time.DurationFieldType durationFieldType35 = minutes32.getFieldType();
        int int36 = minutes31.get(durationFieldType35);
        org.joda.time.Minutes minutes38 = minutes31.plus((-1));
        org.joda.time.Minutes minutes40 = minutes31.minus((int) (short) 10);
        org.joda.time.Minutes minutes42 = minutes40.dividedBy((-2147483648));
        org.joda.time.Minutes minutes43 = minutes28.plus(minutes42);
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes46 = minutes44.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes47 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType48 = null;
        int int49 = minutes47.get(durationFieldType48);
        org.joda.time.MutablePeriod mutablePeriod50 = minutes47.toMutablePeriod();
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes47);
        boolean boolean52 = minutes46.isLessThan(minutes51);
        org.joda.time.DurationFieldType durationFieldType53 = minutes51.getFieldType();
        boolean boolean54 = minutes43.isSupported(durationFieldType53);
        int int55 = minutes16.get(durationFieldType53);
        boolean boolean56 = minutes2.isSupported(durationFieldType53);
        org.joda.time.MutablePeriod mutablePeriod57 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes58 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod59 = minutes58.toMutablePeriod();
        org.joda.time.Minutes minutes60 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes61 = minutes58.plus(minutes60);
        int int62 = minutes60.getMinutes();
        int int63 = minutes2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes60);
        org.joda.time.Minutes minutes64 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes2);
        org.joda.time.Period period65 = minutes2.toPeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-2) + "'", int36 == (-2));
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod50);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-12) + "'", int55 == (-12));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(mutablePeriod57);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(mutablePeriod59);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 3 + "'", int62 == 3);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(period65);
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod8 = minutes7.toMutablePeriod();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod8);
        boolean boolean10 = minutes0.isLessThan(minutes9);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = minutes15.get(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = minutes15.getFieldType();
        int int19 = minutes14.get(durationFieldType18);
        org.joda.time.Minutes minutes21 = minutes14.plus((-1));
        boolean boolean22 = minutes11.isGreaterThan(minutes14);
        org.joda.time.Minutes minutes24 = minutes14.multipliedBy(2);
        org.joda.time.Minutes minutes25 = minutes24.negated();
        org.joda.time.Minutes minutes26 = minutes25.negated();
        boolean boolean27 = minutes0.isLessThan(minutes25);
        org.joda.time.Minutes minutes29 = minutes25.dividedBy((int) (short) 1);
        org.joda.time.Duration duration30 = minutes25.toStandardDuration();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod32 = minutes31.toMutablePeriod();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes35 = minutes33.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes37 = minutes33.plus(0);
        int int38 = minutes31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes33);
        org.joda.time.Minutes minutes40 = minutes33.plus((int) ' ');
        java.lang.String str41 = minutes33.toString();
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod43 = minutes42.toMutablePeriod();
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes46 = minutes44.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes48 = minutes44.plus(0);
        int int49 = minutes42.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes44);
        org.joda.time.Minutes minutes51 = minutes44.plus((int) ' ');
        java.lang.String str52 = minutes44.toString();
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean55 = minutes44.isLessThan(minutes54);
        org.joda.time.Minutes minutes56 = minutes33.minus(minutes44);
        java.lang.String str57 = minutes44.toString();
        org.joda.time.Minutes minutes58 = minutes25.plus(minutes44);
        org.joda.time.Minutes minutes60 = minutes58.plus(0);
        org.joda.time.Minutes minutes61 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes62 = minutes61.negated();
        org.joda.time.PeriodType periodType63 = minutes62.getPeriodType();
        org.joda.time.Minutes minutes64 = minutes62.negated();
        org.joda.time.Minutes minutes66 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes68 = minutes66.plus(0);
        org.joda.time.DurationFieldType durationFieldType69 = minutes68.getFieldType();
        int int70 = minutes64.get(durationFieldType69);
        org.joda.time.Minutes minutes72 = minutes64.dividedBy((int) ' ');
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes73 = minutes60.plus(minutes64);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 6 + 2147483647");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2) + "'", int19 == (-2));
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "PT2M" + "'", str41, "PT2M");
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "PT2M" + "'", str52, "PT2M");
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "PT2M" + "'", str57, "PT2M");
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(durationFieldType69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2147483647 + "'", int70 == 2147483647);
        org.junit.Assert.assertNotNull(minutes72);
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod5 = minutes4.toMutablePeriod();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes7 = minutes4.plus(minutes6);
        boolean boolean8 = minutes3.isLessThan(minutes4);
        org.joda.time.PeriodType periodType9 = minutes3.getPeriodType();
        org.joda.time.Minutes minutes11 = minutes3.dividedBy(3);
        org.joda.time.Minutes minutes13 = minutes11.dividedBy(10);
        org.joda.time.Minutes minutes15 = minutes13.minus((-22139006));
        org.joda.time.Minutes minutes17 = minutes13.plus((int) (short) 10);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = minutes18.get(durationFieldType19);
        org.joda.time.MutablePeriod mutablePeriod21 = minutes18.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType22 = minutes18.getFieldType();
        org.joda.time.Minutes minutes24 = minutes18.dividedBy((-1));
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.MAX_VALUE;
        int int26 = minutes25.size();
        org.joda.time.Minutes minutes27 = minutes18.plus(minutes25);
        boolean boolean28 = minutes13.isGreaterThan(minutes18);
        // The following exception was thrown during execution in test generation
        try {
            int int30 = minutes13.getValue((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes3 = minutes1.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration6 = minutes5.toStandardDuration();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes5);
        org.joda.time.MutablePeriod mutablePeriod8 = minutes7.toMutablePeriod();
        boolean boolean9 = minutes3.equals((java.lang.Object) mutablePeriod8);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod5 = minutes4.toMutablePeriod();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes7 = minutes4.plus(minutes6);
        boolean boolean8 = minutes3.isLessThan(minutes4);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        org.joda.time.Minutes minutes12 = minutes10.plus(0);
        // The following exception was thrown during execution in test generation
        try {
            int int14 = minutes10.getValue((-2147483645));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -2147483645");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod3 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = minutes4.plus(0);
        int int9 = minutes2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes4);
        org.joda.time.Minutes minutes11 = minutes4.plus((int) ' ');
        java.lang.String str12 = minutes4.toString();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod14 = minutes13.toMutablePeriod();
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes17 = minutes15.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes19 = minutes15.plus(0);
        int int20 = minutes13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes15);
        org.joda.time.Minutes minutes22 = minutes15.plus((int) ' ');
        java.lang.String str23 = minutes15.toString();
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean26 = minutes15.isLessThan(minutes25);
        org.joda.time.Minutes minutes27 = minutes4.minus(minutes15);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes29 = minutes28.negated();
        org.joda.time.DurationFieldType durationFieldType30 = minutes28.getFieldType();
        org.joda.time.DurationFieldType durationFieldType31 = minutes28.getFieldType();
        boolean boolean32 = minutes4.isSupported(durationFieldType31);
        org.joda.time.Duration duration33 = minutes4.toStandardDuration();
        boolean boolean34 = minutes1.equals((java.lang.Object) minutes4);
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType36 = null;
        int int37 = minutes35.get(durationFieldType36);
        org.joda.time.MutablePeriod mutablePeriod38 = minutes35.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType39 = minutes35.getFieldType();
        org.joda.time.Minutes minutes41 = minutes35.dividedBy((-1));
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.MAX_VALUE;
        int int43 = minutes42.size();
        org.joda.time.Minutes minutes44 = minutes35.plus(minutes42);
        org.joda.time.DurationFieldType durationFieldType45 = minutes35.getFieldType();
        boolean boolean46 = minutes4.isLessThan(minutes35);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PT2M" + "'", str12, "PT2M");
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT2M" + "'", str23, "PT2M");
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType3 = minutes2.getFieldType();
        org.joda.time.Minutes minutes4 = minutes2.negated();
        org.joda.time.Minutes minutes6 = minutes2.plus((int) (short) 1);
        java.lang.String str7 = minutes6.toString();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT-1M" + "'", str7, "PT-1M");
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.MutablePeriod mutablePeriod8 = minutes2.toMutablePeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod8);
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        int int9 = minutes2.getMinutes();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean12 = minutes2.isLessThan(minutes11);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes2);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType15 = minutes13.getFieldType((-24));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -24");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-2) + "'", int9 == (-2));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes13);
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.PeriodType periodType5 = minutes0.getPeriodType();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes8 = minutes6.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType9 = minutes8.getFieldType();
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes11 = minutes10.negated();
        org.joda.time.Minutes minutes12 = minutes10.negated();
        java.lang.String str13 = minutes10.toString();
        int int14 = minutes10.size();
        org.joda.time.Minutes minutes16 = minutes10.minus(0);
        org.joda.time.Duration duration17 = minutes16.toStandardDuration();
        boolean boolean18 = minutes8.isGreaterThan(minutes16);
        org.joda.time.Period period19 = minutes16.toPeriod();
        org.joda.time.Minutes minutes20 = minutes0.minus(minutes16);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes22 = minutes20.dividedBy((int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PT2147483647M" + "'", str13, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(minutes20);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((-2147483648));
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes3 = minutes2.negated();
        org.joda.time.DurationFieldType durationFieldType4 = minutes2.getFieldType();
        org.joda.time.DurationFieldType durationFieldType5 = minutes2.getFieldType();
        int int6 = minutes2.getMinutes();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes9 = minutes7.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType10 = minutes9.getFieldType();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes12 = minutes11.negated();
        org.joda.time.Minutes minutes13 = minutes11.negated();
        java.lang.String str14 = minutes11.toString();
        int int15 = minutes11.size();
        org.joda.time.Minutes minutes17 = minutes11.minus(0);
        org.joda.time.Duration duration18 = minutes17.toStandardDuration();
        boolean boolean19 = minutes9.isGreaterThan(minutes17);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes9);
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod24 = minutes23.toMutablePeriod();
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes27 = minutes25.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes29 = minutes25.plus(0);
        int int30 = minutes23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes25);
        org.joda.time.Minutes minutes32 = minutes25.plus((int) ' ');
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType34 = minutes33.getFieldType();
        int int35 = minutes25.get(durationFieldType34);
        boolean boolean36 = minutes22.isSupported(durationFieldType34);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod38 = minutes37.toMutablePeriod();
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes40 = minutes37.plus(minutes39);
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod42 = minutes41.toMutablePeriod();
        org.joda.time.Minutes minutes43 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes44 = minutes41.plus(minutes43);
        boolean boolean45 = minutes40.isLessThan(minutes41);
        org.joda.time.PeriodType periodType46 = minutes40.getPeriodType();
        org.joda.time.Minutes minutes48 = minutes40.dividedBy(3);
        org.joda.time.Minutes minutes50 = minutes48.dividedBy(10);
        boolean boolean51 = minutes22.isGreaterThan(minutes50);
        org.joda.time.Minutes minutes52 = minutes9.plus(minutes50);
        org.joda.time.Minutes minutes53 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes9);
        boolean boolean54 = minutes2.isGreaterThan(minutes9);
        org.joda.time.Minutes minutes55 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod56 = minutes55.toMutablePeriod();
        org.joda.time.Minutes minutes57 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes58 = minutes55.plus(minutes57);
        org.joda.time.Minutes minutes59 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod60 = minutes59.toMutablePeriod();
        org.joda.time.Minutes minutes61 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes62 = minutes59.plus(minutes61);
        boolean boolean63 = minutes58.isLessThan(minutes59);
        org.joda.time.Minutes minutes65 = minutes58.plus((-1));
        org.joda.time.Minutes minutes67 = minutes65.plus(0);
        org.joda.time.Minutes minutes68 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes70 = minutes68.multipliedBy((int) (short) -1);
        org.joda.time.MutablePeriod mutablePeriod71 = minutes68.toMutablePeriod();
        org.joda.time.Minutes minutes72 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType73 = null;
        int int74 = minutes72.get(durationFieldType73);
        org.joda.time.DurationFieldType durationFieldType75 = minutes72.getFieldType();
        int int76 = minutes68.get(durationFieldType75);
        int int77 = minutes67.get(durationFieldType75);
        boolean boolean78 = minutes2.isSupported(durationFieldType75);
        org.joda.time.Minutes minutes79 = minutes1.plus(minutes2);
        org.joda.time.Period period80 = minutes1.toPeriod();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2147483647 + "'", int6 == 2147483647);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "PT2147483647M" + "'", str14, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(mutablePeriod56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertNotNull(mutablePeriod71);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(durationFieldType75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2 + "'", int76 == 2);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-2147483646) + "'", int77 == (-2147483646));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(minutes79);
        org.junit.Assert.assertNotNull(period80);
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        org.joda.time.Period period4 = minutes3.toPeriod();
        int int5 = minutes3.getMinutes();
        java.lang.String str6 = minutes3.toString();
        org.joda.time.Period period7 = minutes3.toPeriod();
        org.joda.time.Duration duration8 = minutes3.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod9 = minutes3.toMutablePeriod();
        org.joda.time.Period period10 = minutes3.toPeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-2147483645) + "'", int5 == (-2147483645));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT-2147483645M" + "'", str6, "PT-2147483645M");
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(period10);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod8 = minutes7.toMutablePeriod();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod8);
        boolean boolean10 = minutes0.isLessThan(minutes9);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes9);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes13 = minutes12.negated();
        org.joda.time.PeriodType periodType14 = minutes13.getPeriodType();
        org.joda.time.Minutes minutes16 = minutes13.minus(0);
        boolean boolean17 = minutes9.equals((java.lang.Object) 0);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.THREE;
        int int19 = minutes18.size();
        org.joda.time.Minutes minutes20 = minutes9.plus(minutes18);
        org.joda.time.Minutes minutes22 = minutes18.minus((int) ' ');
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MIN_VALUE;
        int int3 = minutes2.getMinutes();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = minutes7.get(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType10 = minutes7.getFieldType();
        int int11 = minutes6.get(durationFieldType10);
        org.joda.time.Minutes minutes13 = minutes6.plus((-1));
        org.joda.time.Minutes minutes15 = minutes6.minus((int) (short) 10);
        org.joda.time.Minutes minutes17 = minutes15.dividedBy((-2147483648));
        org.joda.time.Minutes minutes18 = minutes17.negated();
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes20 = minutes19.negated();
        org.joda.time.Minutes minutes21 = minutes19.negated();
        org.joda.time.Minutes minutes22 = minutes17.minus(minutes21);
        org.joda.time.Minutes minutes24 = minutes21.plus((int) 'a');
        boolean boolean25 = minutes2.isLessThan(minutes24);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes28 = minutes26.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = minutes29.get(durationFieldType30);
        org.joda.time.MutablePeriod mutablePeriod32 = minutes29.toMutablePeriod();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes29);
        boolean boolean34 = minutes28.isLessThan(minutes33);
        int int35 = minutes28.getMinutes();
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean38 = minutes28.isLessThan(minutes37);
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration40 = minutes39.toStandardDuration();
        org.joda.time.Duration duration41 = minutes39.toStandardDuration();
        org.joda.time.Minutes minutes43 = minutes39.minus(2);
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes46 = minutes44.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes47 = minutes44.negated();
        org.joda.time.Minutes minutes48 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes49 = minutes48.negated();
        org.joda.time.Minutes minutes50 = minutes48.negated();
        boolean boolean51 = minutes44.equals((java.lang.Object) minutes50);
        boolean boolean52 = minutes43.isLessThan(minutes44);
        org.joda.time.Minutes minutes53 = minutes37.minus(minutes44);
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes55 = minutes54.negated();
        org.joda.time.Minutes minutes56 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes54);
        java.lang.String str57 = minutes54.toString();
        org.joda.time.Minutes minutes58 = minutes53.plus(minutes54);
        org.joda.time.Minutes minutes60 = org.joda.time.Minutes.minutes((int) (short) -1);
        int int61 = minutes60.size();
        boolean boolean62 = minutes58.isGreaterThan(minutes60);
        int int63 = minutes24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes60);
        org.joda.time.Minutes minutes64 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes65 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType66 = minutes65.getPeriodType();
        org.joda.time.Minutes minutes67 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes68 = minutes67.negated();
        org.joda.time.Minutes minutes69 = minutes67.negated();
        org.joda.time.DurationFieldType durationFieldType70 = minutes67.getFieldType();
        java.lang.String str71 = minutes67.toString();
        boolean boolean72 = minutes65.isGreaterThan(minutes67);
        boolean boolean73 = minutes64.equals((java.lang.Object) minutes65);
        org.joda.time.Minutes minutes74 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes64);
        org.joda.time.Minutes minutes75 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes76 = minutes75.negated();
        org.joda.time.Minutes minutes77 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes75);
        org.joda.time.Minutes minutes78 = minutes74.minus(minutes77);
        org.joda.time.Minutes minutes80 = minutes74.minus(34);
        org.joda.time.Duration duration81 = minutes80.toStandardDuration();
        org.joda.time.Minutes minutes82 = minutes60.minus(minutes80);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes83 = minutes1.plus(minutes82);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: -2147483647 + -2147483614");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-2147483648) + "'", int3 == (-2147483648));
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-2) + "'", int11 == (-2));
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-2) + "'", int35 == (-2));
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "PT2147483647M" + "'", str57, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(durationFieldType70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "PT2147483647M" + "'", str71, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(minutes74);
        org.junit.Assert.assertNotNull(minutes75);
        org.junit.Assert.assertNotNull(minutes76);
        org.junit.Assert.assertNotNull(minutes77);
        org.junit.Assert.assertNotNull(minutes78);
        org.junit.Assert.assertNotNull(minutes80);
        org.junit.Assert.assertNotNull(duration81);
        org.junit.Assert.assertNotNull(minutes82);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType3 = minutes2.getFieldType();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes5 = minutes4.negated();
        org.joda.time.Minutes minutes6 = minutes4.negated();
        java.lang.String str7 = minutes4.toString();
        int int8 = minutes4.size();
        org.joda.time.Minutes minutes10 = minutes4.minus(0);
        org.joda.time.Duration duration11 = minutes10.toStandardDuration();
        boolean boolean12 = minutes2.isGreaterThan(minutes10);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes2);
        org.joda.time.DurationFieldType durationFieldType14 = minutes2.getFieldType();
        // The following exception was thrown during execution in test generation
        try {
            int int16 = minutes2.getValue(2147483646);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 2147483646");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT2147483647M" + "'", str7, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(durationFieldType14);
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = minutes7.get(durationFieldType8);
        org.joda.time.MutablePeriod mutablePeriod10 = minutes7.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType11 = minutes7.getFieldType();
        org.joda.time.Minutes minutes13 = minutes7.dividedBy((-1));
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MAX_VALUE;
        int int15 = minutes14.size();
        org.joda.time.Minutes minutes16 = minutes7.plus(minutes14);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes19 = minutes17.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = minutes20.get(durationFieldType21);
        org.joda.time.DurationFieldType durationFieldType23 = minutes20.getFieldType();
        int int24 = minutes19.get(durationFieldType23);
        int int25 = minutes7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes19);
        int int26 = minutes6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes7);
        org.joda.time.PeriodType periodType27 = minutes6.getPeriodType();
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.minutes((-2147483645));
        org.joda.time.Minutes minutes30 = minutes6.plus(minutes29);
        // The following exception was thrown during execution in test generation
        try {
            int int32 = minutes29.getValue((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-2) + "'", int24 == (-2));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod5 = minutes4.toMutablePeriod();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes7 = minutes4.plus(minutes6);
        boolean boolean8 = minutes3.isLessThan(minutes4);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes13 = minutes11.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes16 = minutes14.minus((int) (short) 1);
        org.joda.time.Minutes minutes18 = minutes16.multipliedBy(0);
        org.joda.time.Minutes minutes20 = minutes18.plus((-2147483648));
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes22 = minutes21.negated();
        org.joda.time.Minutes minutes23 = minutes21.negated();
        boolean boolean24 = minutes20.isGreaterThan(minutes23);
        int int25 = minutes11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes20);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes11);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes31 = minutes29.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes32 = minutes29.negated();
        boolean boolean33 = minutes28.equals((java.lang.Object) minutes32);
        java.lang.String str34 = minutes32.toString();
        org.joda.time.DurationFieldType durationFieldType35 = minutes32.getFieldType();
        boolean boolean36 = minutes11.isSupported(durationFieldType35);
        boolean boolean37 = minutes3.isSupported(durationFieldType35);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "PT-2M" + "'", str34, "PT-2M");
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((-2147483548));
        org.joda.time.Period period2 = minutes1.toPeriod();
        org.joda.time.Minutes minutes4 = minutes1.plus((-12));
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes8 = minutes6.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = minutes9.get(durationFieldType10);
        org.joda.time.DurationFieldType durationFieldType12 = minutes9.getFieldType();
        int int13 = minutes8.get(durationFieldType12);
        org.joda.time.Minutes minutes15 = minutes8.plus((-1));
        boolean boolean16 = minutes5.isGreaterThan(minutes8);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes19 = minutes17.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = minutes20.get(durationFieldType21);
        org.joda.time.DurationFieldType durationFieldType23 = minutes20.getFieldType();
        int int24 = minutes19.get(durationFieldType23);
        boolean boolean25 = minutes8.isSupported(durationFieldType23);
        boolean boolean26 = minutes1.equals((java.lang.Object) boolean25);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-2) + "'", int13 == (-2));
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-2) + "'", int24 == (-2));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.minus((int) (short) 0);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = minutes7.get(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType10 = minutes7.getFieldType();
        int int11 = minutes6.get(durationFieldType10);
        org.joda.time.Minutes minutes13 = minutes6.plus((-1));
        boolean boolean14 = minutes3.isGreaterThan(minutes6);
        org.joda.time.DurationFieldType durationFieldType15 = minutes6.getFieldType();
        org.joda.time.PeriodType periodType16 = minutes6.getPeriodType();
        boolean boolean17 = minutes0.isLessThan(minutes6);
        org.joda.time.Minutes minutes18 = minutes6.negated();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType20 = minutes18.getFieldType((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 32");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-2) + "'", int11 == (-2));
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(minutes18);
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        java.lang.String str10 = minutes2.toString();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod12 = minutes11.toMutablePeriod();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes17 = minutes13.plus(0);
        int int18 = minutes11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes13);
        org.joda.time.Minutes minutes20 = minutes13.plus((int) ' ');
        java.lang.String str21 = minutes13.toString();
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean24 = minutes13.isLessThan(minutes23);
        org.joda.time.Minutes minutes25 = minutes2.minus(minutes13);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes27 = minutes26.negated();
        org.joda.time.DurationFieldType durationFieldType28 = minutes26.getFieldType();
        org.joda.time.DurationFieldType durationFieldType29 = minutes26.getFieldType();
        boolean boolean30 = minutes2.isSupported(durationFieldType29);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = minutes31.get(durationFieldType32);
        org.joda.time.MutablePeriod mutablePeriod34 = minutes31.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType35 = minutes31.getFieldType();
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration37 = minutes36.toStandardDuration();
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes36);
        boolean boolean39 = minutes31.isGreaterThan(minutes36);
        org.joda.time.Minutes minutes40 = minutes2.plus(minutes36);
        org.joda.time.Minutes minutes41 = minutes36.negated();
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod43 = minutes42.toMutablePeriod();
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes46 = minutes44.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes48 = minutes44.plus(0);
        int int49 = minutes42.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes44);
        org.joda.time.Minutes minutes51 = minutes44.plus((int) ' ');
        java.lang.String str52 = minutes44.toString();
        org.joda.time.Minutes minutes53 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod54 = minutes53.toMutablePeriod();
        org.joda.time.Minutes minutes55 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes57 = minutes55.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes59 = minutes55.plus(0);
        int int60 = minutes53.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes55);
        org.joda.time.Minutes minutes62 = minutes55.plus((int) ' ');
        java.lang.String str63 = minutes55.toString();
        org.joda.time.Minutes minutes65 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean66 = minutes55.isLessThan(minutes65);
        org.joda.time.Minutes minutes67 = minutes44.minus(minutes55);
        boolean boolean68 = minutes36.isLessThan(minutes44);
        org.joda.time.Minutes minutes69 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes36);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT2M" + "'", str10, "PT2M");
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT2M" + "'", str21, "PT2M");
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "PT2M" + "'", str52, "PT2M");
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(mutablePeriod54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "PT2M" + "'", str63, "PT2M");
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(minutes69);
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.minus((int) (short) 1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod4 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes9 = minutes5.plus(0);
        int int10 = minutes3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes5);
        org.joda.time.Minutes minutes12 = minutes5.plus((int) ' ');
        org.joda.time.Period period13 = minutes5.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod14 = minutes5.toMutablePeriod();
        int int15 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes5);
        int int16 = minutes0.getMinutes();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType18 = minutes0.getFieldType((-2));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2147483647 + "'", int16 == 2147483647);
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((int) (short) -1);
        int int2 = minutes1.size();
        int int3 = minutes1.getMinutes();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod5 = minutes4.toMutablePeriod();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes7 = minutes4.plus(minutes6);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod9 = minutes8.toMutablePeriod();
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes11 = minutes8.plus(minutes10);
        boolean boolean12 = minutes7.isLessThan(minutes8);
        java.lang.String str13 = minutes7.toString();
        boolean boolean14 = minutes1.equals((java.lang.Object) minutes7);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes17 = minutes15.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = minutes18.get(durationFieldType19);
        org.joda.time.MutablePeriod mutablePeriod21 = minutes18.toMutablePeriod();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes18);
        boolean boolean23 = minutes17.isLessThan(minutes22);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes26 = minutes24.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = minutes27.get(durationFieldType28);
        org.joda.time.DurationFieldType durationFieldType30 = minutes27.getFieldType();
        int int31 = minutes26.get(durationFieldType30);
        org.joda.time.Minutes minutes33 = minutes26.plus((-1));
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod35 = minutes34.toMutablePeriod();
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes38 = minutes36.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes40 = minutes36.plus(0);
        int int41 = minutes34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes36);
        org.joda.time.Minutes minutes43 = minutes36.plus((int) ' ');
        java.lang.String str44 = minutes36.toString();
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean47 = minutes36.isLessThan(minutes46);
        boolean boolean48 = minutes33.isLessThan(minutes36);
        org.joda.time.Minutes minutes49 = minutes17.minus(minutes33);
        org.joda.time.Minutes minutes50 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes52 = minutes50.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType53 = minutes52.getFieldType();
        org.joda.time.Minutes minutes54 = minutes52.negated();
        org.joda.time.Minutes minutes55 = minutes49.minus(minutes54);
        org.joda.time.Minutes minutes56 = minutes1.plus(minutes49);
        org.joda.time.Period period57 = minutes56.toPeriod();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PT-2147483645M" + "'", str13, "PT-2147483645M");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-2) + "'", int31 == (-2));
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "PT2M" + "'", str44, "PT2M");
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(period57);
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes(32);
        org.junit.Assert.assertNotNull(minutes1);
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes9 = minutes2.plus((-1));
        org.joda.time.Minutes minutes11 = minutes2.minus((int) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType13 = minutes2.getFieldType(98);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 98");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = minutes0.negated();
        org.joda.time.Duration duration3 = minutes2.toStandardDuration();
        org.joda.time.Minutes minutes4 = minutes2.negated();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(minutes4);
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes(10);
        org.joda.time.Minutes minutes3 = minutes1.minus(1);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Days days2 = minutes1.toStandardDays();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(days2);
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod5 = minutes4.toMutablePeriod();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes8 = minutes6.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes10 = minutes6.plus(0);
        int int11 = minutes4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes6);
        org.joda.time.Duration duration12 = minutes4.toStandardDuration();
        org.joda.time.Minutes minutes13 = minutes0.plus(minutes4);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod15 = minutes14.toMutablePeriod();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes18 = minutes16.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes20 = minutes16.plus(0);
        int int21 = minutes14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes16);
        org.joda.time.Duration duration22 = minutes16.toStandardDuration();
        int int23 = minutes4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes16);
        java.lang.Class<?> wildcardClass24 = minutes16.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        int int3 = minutes0.size();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration5 = minutes4.toStandardDuration();
        org.joda.time.Duration duration6 = minutes4.toStandardDuration();
        org.joda.time.Minutes minutes8 = minutes4.minus(2);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = minutes9.negated();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes14 = minutes13.negated();
        org.joda.time.Minutes minutes15 = minutes13.negated();
        boolean boolean16 = minutes9.equals((java.lang.Object) minutes15);
        boolean boolean17 = minutes8.isLessThan(minutes9);
        org.joda.time.Minutes minutes18 = minutes0.plus(minutes8);
        java.lang.String str19 = minutes0.toString();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "PT2147483647M" + "'", str19, "PT2147483647M");
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        int int9 = minutes2.getMinutes();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean12 = minutes2.isLessThan(minutes11);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes2);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.THREE;
        int int15 = minutes14.size();
        org.joda.time.Minutes minutes16 = minutes2.plus(minutes14);
        org.joda.time.PeriodType periodType17 = minutes2.getPeriodType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-2) + "'", int9 == (-2));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(periodType17);
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = minutes8.plus(0);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = minutes16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = minutes16.getFieldType();
        int int20 = minutes15.get(durationFieldType19);
        org.joda.time.Minutes minutes22 = minutes15.plus((-1));
        org.joda.time.Minutes minutes24 = minutes15.minus((int) (short) 10);
        org.joda.time.Minutes minutes26 = minutes24.dividedBy((-2147483648));
        org.joda.time.Minutes minutes27 = minutes12.plus(minutes26);
        org.joda.time.Minutes minutes28 = minutes2.minus(minutes12);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod30 = minutes29.toMutablePeriod();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes33 = minutes31.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes35 = minutes31.plus(0);
        int int36 = minutes29.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes31);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes39 = minutes37.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes41 = minutes37.plus(0);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes44 = minutes42.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType46 = null;
        int int47 = minutes45.get(durationFieldType46);
        org.joda.time.DurationFieldType durationFieldType48 = minutes45.getFieldType();
        int int49 = minutes44.get(durationFieldType48);
        org.joda.time.Minutes minutes51 = minutes44.plus((-1));
        org.joda.time.Minutes minutes53 = minutes44.minus((int) (short) 10);
        org.joda.time.Minutes minutes55 = minutes53.dividedBy((-2147483648));
        org.joda.time.Minutes minutes56 = minutes41.plus(minutes55);
        org.joda.time.Minutes minutes57 = minutes31.minus(minutes41);
        org.joda.time.PeriodType periodType58 = minutes31.getPeriodType();
        boolean boolean59 = minutes12.isLessThan(minutes31);
        int int60 = minutes31.getMinutes();
        int int61 = minutes31.size();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-2) + "'", int20 == (-2));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-2) + "'", int49 == (-2));
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2 + "'", int60 == 2);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.ZERO;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.Minutes minutes2 = null;
        boolean boolean3 = minutes0.isLessThan(minutes2);
        org.joda.time.Minutes minutes5 = minutes0.multipliedBy((int) (byte) -1);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(minutes5);
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.minus((int) (short) 1);
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy(0);
        org.joda.time.Duration duration5 = minutes2.toStandardDuration();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.MAX_VALUE;
        int int7 = minutes6.size();
        int int9 = minutes6.getValue(0);
        org.joda.time.Minutes minutes10 = minutes6.negated();
        org.joda.time.DurationFieldType durationFieldType12 = minutes6.getFieldType(0);
        boolean boolean13 = minutes2.equals((java.lang.Object) 0);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes16 = minutes14.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = minutes17.get(durationFieldType18);
        org.joda.time.MutablePeriod mutablePeriod20 = minutes17.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes17);
        boolean boolean22 = minutes16.isLessThan(minutes21);
        int int23 = minutes16.getMinutes();
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean26 = minutes16.isLessThan(minutes25);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes16);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes30 = minutes28.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes31 = minutes28.negated();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes34 = minutes28.minus(minutes33);
        boolean boolean35 = minutes16.isLessThan(minutes28);
        boolean boolean36 = minutes2.isLessThan(minutes16);
        // The following exception was thrown during execution in test generation
        try {
            int int38 = minutes2.getValue(52);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2147483647 + "'", int9 == 2147483647);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-2) + "'", int23 == (-2));
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((int) (short) 10);
        org.joda.time.MutablePeriod mutablePeriod2 = minutes1.toMutablePeriod();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        int int9 = minutes2.getMinutes();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean12 = minutes2.isLessThan(minutes11);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes2);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes16 = minutes14.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes17 = minutes14.negated();
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes20 = minutes14.minus(minutes19);
        boolean boolean21 = minutes2.isLessThan(minutes14);
        org.joda.time.Minutes minutes23 = minutes14.plus((int) (short) 10);
        java.lang.Class<?> wildcardClass24 = minutes14.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-2) + "'", int9 == (-2));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes9 = minutes2.plus((-1));
        org.joda.time.Minutes minutes11 = minutes2.minus((int) (short) 10);
        org.joda.time.Minutes minutes13 = minutes11.dividedBy((-2147483648));
        org.joda.time.Minutes minutes14 = minutes13.negated();
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes16 = minutes15.negated();
        org.joda.time.Minutes minutes17 = minutes15.negated();
        org.joda.time.Minutes minutes18 = minutes13.minus(minutes17);
        org.joda.time.Minutes minutes20 = minutes17.plus((int) 'a');
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes20);
        org.joda.time.Minutes minutes23 = minutes20.dividedBy((int) (byte) 1);
        java.lang.String str24 = minutes20.toString();
        org.joda.time.Minutes minutes26 = minutes20.dividedBy(2);
        org.joda.time.Minutes minutes27 = minutes26.negated();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds28 = minutes26.toStandardSeconds();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: -1073741775 * 60");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "PT-2147483550M" + "'", str24, "PT-2147483550M");
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes3 = minutes1.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        org.joda.time.Minutes minutes6 = minutes3.multipliedBy((int) (byte) 0);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        java.lang.String str3 = minutes0.toString();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = minutes4.getFieldType();
        boolean boolean6 = minutes0.isSupported(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes0.getFieldType();
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = minutes11.get(durationFieldType12);
        org.joda.time.DurationFieldType durationFieldType14 = minutes11.getFieldType();
        int int15 = minutes10.get(durationFieldType14);
        org.joda.time.Minutes minutes17 = minutes10.plus((-1));
        org.joda.time.Minutes minutes19 = minutes10.minus((int) (short) 10);
        org.joda.time.Minutes minutes20 = minutes0.plus(minutes10);
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes22 = minutes21.negated();
        org.joda.time.Minutes minutes24 = minutes22.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes24);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes28 = minutes26.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = minutes29.get(durationFieldType30);
        org.joda.time.DurationFieldType durationFieldType32 = minutes29.getFieldType();
        int int33 = minutes28.get(durationFieldType32);
        int int34 = minutes25.get(durationFieldType32);
        int int35 = minutes25.getMinutes();
        boolean boolean36 = minutes0.isLessThan(minutes25);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes39 = minutes37.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType41 = null;
        int int42 = minutes40.get(durationFieldType41);
        org.joda.time.MutablePeriod mutablePeriod43 = minutes40.toMutablePeriod();
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes40);
        boolean boolean45 = minutes39.isLessThan(minutes44);
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes48 = minutes46.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = minutes49.get(durationFieldType50);
        org.joda.time.DurationFieldType durationFieldType52 = minutes49.getFieldType();
        int int53 = minutes48.get(durationFieldType52);
        org.joda.time.Minutes minutes55 = minutes48.plus((-1));
        org.joda.time.Minutes minutes56 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod57 = minutes56.toMutablePeriod();
        org.joda.time.Minutes minutes58 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes60 = minutes58.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes62 = minutes58.plus(0);
        int int63 = minutes56.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes58);
        org.joda.time.Minutes minutes65 = minutes58.plus((int) ' ');
        java.lang.String str66 = minutes58.toString();
        org.joda.time.Minutes minutes68 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean69 = minutes58.isLessThan(minutes68);
        boolean boolean70 = minutes55.isLessThan(minutes58);
        org.joda.time.Minutes minutes71 = minutes39.minus(minutes55);
        org.joda.time.Minutes minutes72 = org.joda.time.Minutes.ZERO;
        int int73 = minutes71.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes72);
        org.joda.time.Minutes minutes75 = minutes71.minus(2147483647);
        boolean boolean76 = minutes25.isLessThan(minutes71);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2147483647M" + "'", str3, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-2) + "'", int15 == (-2));
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-2) + "'", int33 == (-2));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2147483647 + "'", int34 == 2147483647);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2147483647 + "'", int35 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-2) + "'", int53 == (-2));
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(mutablePeriod57);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "PT2M" + "'", str66, "PT2M");
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(minutes75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        java.lang.String str10 = minutes2.toString();
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean13 = minutes2.isLessThan(minutes12);
        org.joda.time.Duration duration14 = minutes2.toStandardDuration();
        int int15 = minutes2.size();
        org.joda.time.DurationFieldType durationFieldType17 = minutes2.getFieldType(0);
        org.joda.time.Minutes minutes19 = minutes2.plus((-71582788));
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT2M" + "'", str10, "PT2M");
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertNotNull(minutes19);
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = minutes10.getFieldType();
        int int12 = minutes2.get(durationFieldType11);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes16 = minutes13.negated();
        org.joda.time.Minutes minutes17 = minutes2.plus(minutes13);
        org.joda.time.MutablePeriod mutablePeriod18 = minutes13.toMutablePeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType2 = minutes1.getPeriodType();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes4 = minutes3.negated();
        org.joda.time.Minutes minutes5 = minutes3.negated();
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        java.lang.String str7 = minutes3.toString();
        boolean boolean8 = minutes1.isGreaterThan(minutes3);
        boolean boolean9 = minutes0.equals((java.lang.Object) minutes1);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod11 = minutes10.toMutablePeriod();
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes16 = minutes12.plus(0);
        int int17 = minutes10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes12);
        org.joda.time.Minutes minutes19 = minutes12.plus((int) ' ');
        org.joda.time.Period period20 = minutes12.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod21 = minutes12.toMutablePeriod();
        org.joda.time.Period period22 = minutes12.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod23 = minutes12.toMutablePeriod();
        org.joda.time.Minutes minutes25 = minutes12.multipliedBy(100);
        org.joda.time.Minutes minutes27 = minutes25.minus((int) (short) 0);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.MAX_VALUE;
        int int29 = minutes28.size();
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes31 = minutes30.negated();
        org.joda.time.Minutes minutes33 = minutes31.dividedBy((int) (byte) -1);
        boolean boolean34 = minutes28.isLessThan(minutes31);
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes31);
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes31);
        boolean boolean37 = minutes27.isLessThan(minutes31);
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes39 = minutes38.negated();
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes38);
        java.lang.String str41 = minutes38.toString();
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType43 = minutes42.getFieldType();
        boolean boolean44 = minutes38.isSupported(durationFieldType43);
        boolean boolean45 = minutes31.isSupported(durationFieldType43);
        int int46 = minutes0.get(durationFieldType43);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT2147483647M" + "'", str7, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "PT2147483647M" + "'", str41, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2147483647 + "'", int46 == 2147483647);
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((-22139006));
        org.joda.time.DurationFieldType durationFieldType2 = minutes1.getFieldType();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(durationFieldType2);
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType3 = minutes2.getFieldType();
        org.joda.time.Period period4 = minutes2.toPeriod();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = minutes5.negated();
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes11 = minutes5.minus(minutes10);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.MutablePeriod mutablePeriod15 = minutes12.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType16 = minutes12.getFieldType();
        org.joda.time.Minutes minutes18 = minutes12.dividedBy((-1));
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MAX_VALUE;
        int int20 = minutes19.size();
        org.joda.time.Minutes minutes21 = minutes12.plus(minutes19);
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes24 = minutes22.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = minutes25.get(durationFieldType26);
        org.joda.time.DurationFieldType durationFieldType28 = minutes25.getFieldType();
        int int29 = minutes24.get(durationFieldType28);
        int int30 = minutes12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes24);
        int int31 = minutes11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes12);
        boolean boolean32 = minutes2.equals((java.lang.Object) minutes12);
        int int33 = minutes12.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-2) + "'", int29 == (-2));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-2147483648) + "'", int33 == (-2147483648));
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = minutes15.get(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = minutes15.getFieldType();
        int int19 = minutes14.get(durationFieldType18);
        boolean boolean20 = minutes3.isSupported(durationFieldType18);
        org.joda.time.Minutes minutes22 = minutes3.dividedBy(100);
        int int23 = minutes22.getMinutes();
        int int24 = minutes22.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2) + "'", int19 == (-2));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        java.lang.String str3 = minutes0.toString();
        org.joda.time.PeriodType periodType4 = minutes0.getPeriodType();
        org.joda.time.Minutes minutes5 = null;
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes9 = minutes7.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = minutes10.get(durationFieldType11);
        org.joda.time.DurationFieldType durationFieldType13 = minutes10.getFieldType();
        int int14 = minutes9.get(durationFieldType13);
        org.joda.time.Minutes minutes16 = minutes9.plus((-1));
        org.joda.time.Minutes minutes18 = minutes9.minus((int) (short) 10);
        org.joda.time.Minutes minutes20 = minutes18.dividedBy((-2147483648));
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod22 = minutes21.toMutablePeriod();
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes24 = minutes21.plus(minutes23);
        org.joda.time.Minutes minutes25 = minutes18.minus(minutes23);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes28 = minutes26.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes30 = minutes26.plus(0);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes33 = minutes31.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = minutes34.get(durationFieldType35);
        org.joda.time.DurationFieldType durationFieldType37 = minutes34.getFieldType();
        int int38 = minutes33.get(durationFieldType37);
        org.joda.time.Minutes minutes40 = minutes33.plus((-1));
        org.joda.time.Minutes minutes42 = minutes33.minus((int) (short) 10);
        org.joda.time.Minutes minutes44 = minutes42.dividedBy((-2147483648));
        org.joda.time.Minutes minutes45 = minutes30.plus(minutes44);
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes48 = minutes46.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = minutes49.get(durationFieldType50);
        org.joda.time.MutablePeriod mutablePeriod52 = minutes49.toMutablePeriod();
        org.joda.time.Minutes minutes53 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes49);
        boolean boolean54 = minutes48.isLessThan(minutes53);
        org.joda.time.DurationFieldType durationFieldType55 = minutes53.getFieldType();
        boolean boolean56 = minutes45.isSupported(durationFieldType55);
        int int57 = minutes18.get(durationFieldType55);
        int int58 = minutes6.get(durationFieldType55);
        org.joda.time.PeriodType periodType59 = minutes6.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds60 = minutes6.toStandardSeconds();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 2147483647 * 60");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2147483647M" + "'", str3, "PT2147483647M");
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-2) + "'", int14 == (-2));
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-2) + "'", int38 == (-2));
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-12) + "'", int57 == (-12));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2147483647 + "'", int58 == 2147483647);
        org.junit.Assert.assertNotNull(periodType59);
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes5 = minutes2.negated();
        boolean boolean6 = minutes1.equals((java.lang.Object) minutes5);
        java.lang.String str7 = minutes5.toString();
        int int8 = minutes5.getMinutes();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT-2M" + "'", str7, "PT-2M");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType2 = minutes1.getPeriodType();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes4 = minutes3.negated();
        org.joda.time.Minutes minutes5 = minutes3.negated();
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        java.lang.String str7 = minutes3.toString();
        boolean boolean8 = minutes1.isGreaterThan(minutes3);
        boolean boolean9 = minutes0.equals((java.lang.Object) minutes1);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes14 = minutes10.plus(0);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        boolean boolean16 = minutes10.isGreaterThan(minutes15);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes18 = minutes17.negated();
        org.joda.time.Minutes minutes20 = minutes18.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes20);
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes24 = minutes22.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = minutes25.get(durationFieldType26);
        org.joda.time.DurationFieldType durationFieldType28 = minutes25.getFieldType();
        int int29 = minutes24.get(durationFieldType28);
        int int30 = minutes21.get(durationFieldType28);
        org.joda.time.PeriodType periodType31 = minutes21.getPeriodType();
        int int32 = minutes21.getMinutes();
        boolean boolean33 = minutes10.isLessThan(minutes21);
        int int34 = minutes21.size();
        int int35 = minutes21.size();
        int int36 = minutes21.getMinutes();
        org.joda.time.Minutes minutes37 = minutes21.negated();
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes37);
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes41 = minutes39.minus((int) (short) 1);
        org.joda.time.Minutes minutes43 = minutes41.multipliedBy(0);
        org.joda.time.Duration duration44 = minutes41.toStandardDuration();
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes46 = minutes45.negated();
        org.joda.time.DurationFieldType durationFieldType47 = minutes45.getFieldType();
        int int48 = minutes41.get(durationFieldType47);
        boolean boolean49 = minutes38.isSupported(durationFieldType47);
        int int50 = minutes0.get(durationFieldType47);
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.MAX_VALUE;
        int int52 = minutes51.size();
        org.joda.time.Minutes minutes53 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes54 = minutes53.negated();
        org.joda.time.Minutes minutes56 = minutes54.dividedBy((int) (byte) -1);
        boolean boolean57 = minutes51.isLessThan(minutes54);
        org.joda.time.Minutes minutes58 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes54);
        org.joda.time.Minutes minutes59 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes54);
        int int60 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes59);
        org.joda.time.Minutes minutes61 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType62 = minutes61.getFieldType();
        org.joda.time.Period period63 = minutes61.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod64 = minutes61.toMutablePeriod();
        org.joda.time.Period period65 = minutes61.toPeriod();
        boolean boolean66 = minutes0.equals((java.lang.Object) period65);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT2147483647M" + "'", str7, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-2) + "'", int29 == (-2));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2147483647 + "'", int30 == 2147483647);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2147483647 + "'", int32 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2147483647 + "'", int36 == 2147483647);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2147483646 + "'", int48 == 2147483646);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2147483647 + "'", int50 == 2147483647);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(mutablePeriod64);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        org.joda.time.Minutes minutes14 = minutes7.plus((-1));
        org.joda.time.Minutes minutes16 = minutes7.minus((int) (short) 10);
        org.joda.time.Minutes minutes18 = minutes16.dividedBy((-2147483648));
        org.joda.time.Minutes minutes19 = minutes4.plus(minutes18);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType21 = minutes20.getPeriodType();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes23 = minutes22.negated();
        org.joda.time.Minutes minutes24 = minutes22.negated();
        org.joda.time.DurationFieldType durationFieldType25 = minutes22.getFieldType();
        java.lang.String str26 = minutes22.toString();
        boolean boolean27 = minutes20.isGreaterThan(minutes22);
        boolean boolean28 = minutes4.isLessThan(minutes22);
        org.joda.time.PeriodType periodType29 = minutes22.getPeriodType();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes33 = minutes31.plus(0);
        org.joda.time.DurationFieldType durationFieldType34 = minutes33.getFieldType();
        boolean boolean35 = minutes22.isSupported(durationFieldType34);
        org.joda.time.Duration duration36 = minutes22.toStandardDuration();
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType38 = minutes37.getPeriodType();
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes40 = minutes39.negated();
        org.joda.time.Minutes minutes41 = minutes39.negated();
        org.joda.time.DurationFieldType durationFieldType42 = minutes39.getFieldType();
        java.lang.String str43 = minutes39.toString();
        boolean boolean44 = minutes37.isGreaterThan(minutes39);
        org.joda.time.Minutes minutes45 = minutes39.negated();
        boolean boolean46 = minutes22.isGreaterThan(minutes45);
        org.joda.time.Minutes minutes48 = minutes45.plus((int) (short) -1);
        org.joda.time.Minutes minutes50 = minutes48.dividedBy((-1));
        java.lang.Object obj51 = null;
        boolean boolean52 = minutes50.equals(obj51);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "PT2147483647M" + "'", str26, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "PT2147483647M" + "'", str43, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        int int9 = minutes2.getMinutes();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean12 = minutes2.isLessThan(minutes11);
        org.joda.time.Duration duration13 = minutes2.toStandardDuration();
        org.joda.time.Duration duration14 = minutes2.toStandardDuration();
        java.lang.String str15 = minutes2.toString();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-2) + "'", int9 == (-2));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PT-2M" + "'", str15, "PT-2M");
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod3 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = minutes4.plus(0);
        int int9 = minutes2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes4);
        org.joda.time.Minutes minutes11 = minutes4.plus((int) ' ');
        java.lang.String str12 = minutes4.toString();
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean15 = minutes4.isLessThan(minutes14);
        org.joda.time.MutablePeriod mutablePeriod16 = minutes4.toMutablePeriod();
        boolean boolean17 = minutes0.isLessThan(minutes4);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MIN_VALUE;
        int int19 = minutes18.getMinutes();
        boolean boolean20 = minutes4.equals((java.lang.Object) minutes18);
        org.joda.time.Duration duration21 = minutes4.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType22 = minutes4.getFieldType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PT2M" + "'", str12, "PT2M");
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2147483648) + "'", int19 == (-2147483648));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(durationFieldType22);
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        boolean boolean6 = minutes0.isGreaterThan(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes8 = minutes7.negated();
        org.joda.time.Minutes minutes10 = minutes8.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes10);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = minutes15.get(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = minutes15.getFieldType();
        int int19 = minutes14.get(durationFieldType18);
        int int20 = minutes11.get(durationFieldType18);
        org.joda.time.PeriodType periodType21 = minutes11.getPeriodType();
        int int22 = minutes11.getMinutes();
        boolean boolean23 = minutes0.isLessThan(minutes11);
        int int24 = minutes11.size();
        int int25 = minutes11.size();
        int int26 = minutes11.getMinutes();
        org.joda.time.Minutes minutes27 = minutes11.negated();
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes27);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes31 = minutes29.minus((int) (short) 1);
        org.joda.time.Minutes minutes33 = minutes31.multipliedBy(0);
        org.joda.time.Duration duration34 = minutes31.toStandardDuration();
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes36 = minutes35.negated();
        org.joda.time.DurationFieldType durationFieldType37 = minutes35.getFieldType();
        int int38 = minutes31.get(durationFieldType37);
        boolean boolean39 = minutes28.isSupported(durationFieldType37);
        // The following exception was thrown during execution in test generation
        try {
            int int41 = minutes28.getValue((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2) + "'", int19 == (-2));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2147483647 + "'", int20 == 2147483647);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2147483647 + "'", int22 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2147483647 + "'", int26 == 2147483647);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2147483646 + "'", int38 == 2147483646);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = minutes0.negated();
        java.lang.String str3 = minutes0.toString();
        org.joda.time.Minutes minutes5 = minutes0.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes9 = minutes7.multipliedBy((int) (byte) 0);
        boolean boolean10 = minutes5.equals((java.lang.Object) minutes7);
        java.lang.String str11 = minutes5.toString();
        org.joda.time.Period period12 = minutes5.toPeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2147483647M" + "'", str3, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "PT214748364M" + "'", str11, "PT214748364M");
        org.junit.Assert.assertNotNull(period12);
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT-2147483548M");
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration3 = minutes2.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod4 = minutes2.toMutablePeriod();
        java.lang.String str5 = minutes2.toString();
        int int6 = minutes2.size();
        org.joda.time.Minutes minutes7 = minutes2.negated();
        org.joda.time.Minutes minutes8 = minutes1.plus(minutes2);
        org.joda.time.Minutes minutes10 = minutes8.dividedBy(98);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PT2M" + "'", str5, "PT2M");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((int) (short) -1);
        int int2 = minutes1.size();
        int int3 = minutes1.getMinutes();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod5 = minutes4.toMutablePeriod();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes7 = minutes4.plus(minutes6);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod9 = minutes8.toMutablePeriod();
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes11 = minutes8.plus(minutes10);
        boolean boolean12 = minutes7.isLessThan(minutes8);
        java.lang.String str13 = minutes7.toString();
        boolean boolean14 = minutes1.equals((java.lang.Object) minutes7);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType16 = minutes1.getFieldType((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PT-2147483645M" + "'", str13, "PT-2147483645M");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = minutes8.plus(0);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = minutes16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = minutes16.getFieldType();
        int int20 = minutes15.get(durationFieldType19);
        org.joda.time.Minutes minutes22 = minutes15.plus((-1));
        org.joda.time.Minutes minutes24 = minutes15.minus((int) (short) 10);
        org.joda.time.Minutes minutes26 = minutes24.dividedBy((-2147483648));
        org.joda.time.Minutes minutes27 = minutes12.plus(minutes26);
        org.joda.time.Minutes minutes28 = minutes2.minus(minutes12);
        org.joda.time.PeriodType periodType29 = minutes2.getPeriodType();
        org.joda.time.Period period30 = minutes2.toPeriod();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.THREE;
        int int32 = minutes31.size();
        org.joda.time.Days days33 = minutes31.toStandardDays();
        // The following exception was thrown during execution in test generation
        try {
            int int34 = minutes2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) days33);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class org.joda.time.Minutes cannot be compared to class org.joda.time.Days");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-2) + "'", int20 == (-2));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(days33);
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes(98);
        org.junit.Assert.assertNotNull(minutes1);
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        boolean boolean6 = minutes0.isGreaterThan(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.MutablePeriod mutablePeriod8 = minutes0.toMutablePeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes(100);
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod3 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = minutes4.plus(0);
        int int9 = minutes2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes4);
        org.joda.time.Minutes minutes11 = minutes4.plus((int) ' ');
        java.lang.String str12 = minutes4.toString();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod14 = minutes13.toMutablePeriod();
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes17 = minutes15.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes19 = minutes15.plus(0);
        int int20 = minutes13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes15);
        org.joda.time.Minutes minutes22 = minutes15.plus((int) ' ');
        java.lang.String str23 = minutes15.toString();
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean26 = minutes15.isLessThan(minutes25);
        org.joda.time.Minutes minutes27 = minutes4.minus(minutes15);
        java.lang.String str28 = minutes15.toString();
        boolean boolean29 = minutes1.isLessThan(minutes15);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PT2M" + "'", str12, "PT2M");
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT2M" + "'", str23, "PT2M");
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "PT2M" + "'", str28, "PT2M");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        java.lang.String str10 = minutes2.toString();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod12 = minutes11.toMutablePeriod();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes17 = minutes13.plus(0);
        int int18 = minutes11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes13);
        org.joda.time.Minutes minutes20 = minutes13.plus((int) ' ');
        java.lang.String str21 = minutes13.toString();
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean24 = minutes13.isLessThan(minutes23);
        org.joda.time.Minutes minutes25 = minutes2.minus(minutes13);
        int int26 = minutes25.size();
        org.joda.time.Minutes minutes28 = minutes25.multipliedBy(0);
        org.joda.time.PeriodType periodType29 = minutes25.getPeriodType();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.minutes((int) (short) -1);
        int int32 = minutes31.size();
        int int33 = minutes31.getMinutes();
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod35 = minutes34.toMutablePeriod();
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes37 = minutes34.plus(minutes36);
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod39 = minutes38.toMutablePeriod();
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes41 = minutes38.plus(minutes40);
        boolean boolean42 = minutes37.isLessThan(minutes38);
        java.lang.String str43 = minutes37.toString();
        boolean boolean44 = minutes31.equals((java.lang.Object) minutes37);
        org.joda.time.Duration duration45 = minutes31.toStandardDuration();
        boolean boolean46 = minutes25.isGreaterThan(minutes31);
        org.joda.time.Minutes minutes48 = minutes25.multipliedBy((int) 'a');
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT2M" + "'", str10, "PT2M");
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT2M" + "'", str21, "PT2M");
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "PT-2147483645M" + "'", str43, "PT-2147483645M");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(minutes48);
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        int int1 = minutes0.getMinutes();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes9 = minutes7.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = minutes10.get(durationFieldType11);
        org.joda.time.DurationFieldType durationFieldType13 = minutes10.getFieldType();
        int int14 = minutes9.get(durationFieldType13);
        org.joda.time.Minutes minutes16 = minutes9.plus((-1));
        org.joda.time.Minutes minutes18 = minutes9.minus((int) (short) 10);
        org.joda.time.Minutes minutes20 = minutes18.dividedBy((-2147483648));
        org.joda.time.Minutes minutes21 = minutes6.plus(minutes20);
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes24 = minutes22.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = minutes25.get(durationFieldType26);
        org.joda.time.MutablePeriod mutablePeriod28 = minutes25.toMutablePeriod();
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes25);
        boolean boolean30 = minutes24.isLessThan(minutes29);
        org.joda.time.DurationFieldType durationFieldType31 = minutes29.getFieldType();
        boolean boolean32 = minutes21.isSupported(durationFieldType31);
        boolean boolean33 = minutes0.isLessThan(minutes21);
        org.joda.time.Minutes minutes35 = minutes21.plus((int) ' ');
        int int36 = minutes35.size();
        org.joda.time.Minutes minutes37 = minutes35.negated();
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.minutes(1);
        org.joda.time.PeriodType periodType40 = minutes39.getPeriodType();
        org.joda.time.Period period41 = minutes39.toPeriod();
        java.lang.String str42 = minutes39.toString();
        org.joda.time.Minutes minutes43 = minutes35.plus(minutes39);
        org.joda.time.Period period44 = minutes35.toPeriod();
        int int45 = minutes35.size();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-2147483648) + "'", int1 == (-2147483648));
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-2) + "'", int14 == (-2));
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT1M" + "'", str42, "PT1M");
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = minutes0.negated();
        org.joda.time.DurationFieldType durationFieldType3 = minutes0.getFieldType();
        java.lang.String str4 = minutes0.toString();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes6 = minutes5.negated();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes5);
        int int8 = minutes5.size();
        org.joda.time.MutablePeriod mutablePeriod9 = minutes5.toMutablePeriod();
        boolean boolean10 = minutes0.equals((java.lang.Object) minutes5);
        org.joda.time.DurationFieldType durationFieldType12 = minutes5.getFieldType((int) (short) 0);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod14 = minutes13.toMutablePeriod();
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes17 = minutes15.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes19 = minutes15.plus(0);
        int int20 = minutes13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes15);
        org.joda.time.Minutes minutes22 = minutes15.plus((int) ' ');
        java.lang.String str23 = minutes15.toString();
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean26 = minutes15.isLessThan(minutes25);
        org.joda.time.Period period27 = minutes25.toPeriod();
        boolean boolean28 = minutes5.isGreaterThan(minutes25);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration30 = minutes29.toStandardDuration();
        org.joda.time.Duration duration31 = minutes29.toStandardDuration();
        org.joda.time.Minutes minutes33 = minutes29.minus(2);
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.MIN_VALUE;
        int int35 = minutes34.getMinutes();
        org.joda.time.PeriodType periodType36 = minutes34.getPeriodType();
        org.joda.time.Minutes minutes37 = null;
        org.joda.time.Minutes minutes38 = minutes34.plus(minutes37);
        boolean boolean39 = minutes29.isLessThan(minutes38);
        int int40 = minutes38.getMinutes();
        boolean boolean41 = minutes5.equals((java.lang.Object) minutes38);
        int int42 = minutes38.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT2147483647M" + "'", str4, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT2M" + "'", str23, "PT2M");
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-2147483648) + "'", int35 == (-2147483648));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-2147483648) + "'", int40 == (-2147483648));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-2147483648) + "'", int42 == (-2147483648));
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType2 = minutes1.getPeriodType();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes4 = minutes3.negated();
        org.joda.time.Minutes minutes5 = minutes3.negated();
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        java.lang.String str7 = minutes3.toString();
        boolean boolean8 = minutes1.isGreaterThan(minutes3);
        boolean boolean9 = minutes0.equals((java.lang.Object) minutes1);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes12 = minutes11.negated();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes11);
        org.joda.time.Minutes minutes14 = minutes10.minus(minutes13);
        org.joda.time.Duration duration15 = minutes13.toStandardDuration();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds16 = minutes13.toStandardSeconds();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 2147483647 * 60");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT2147483647M" + "'", str7, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(duration15);
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod2 = minutes0.toMutablePeriod();
        java.lang.String str3 = minutes0.toString();
        java.lang.String str4 = minutes0.toString();
        org.joda.time.Duration duration5 = minutes0.toStandardDuration();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2M" + "'", str3, "PT2M");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT2M" + "'", str4, "PT2M");
        org.junit.Assert.assertNotNull(duration5);
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        java.lang.String str3 = minutes0.toString();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = minutes4.getFieldType();
        boolean boolean6 = minutes0.isSupported(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes0.getFieldType();
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = minutes12.getFieldType();
        int int16 = minutes11.get(durationFieldType15);
        org.joda.time.Minutes minutes18 = minutes11.plus((-1));
        boolean boolean19 = minutes8.isGreaterThan(minutes11);
        org.joda.time.DurationFieldType durationFieldType20 = minutes11.getFieldType();
        int int22 = minutes11.getValue((int) (short) 0);
        org.joda.time.Period period23 = minutes11.toPeriod();
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes25 = minutes24.negated();
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod27 = minutes26.toMutablePeriod();
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes29 = minutes26.plus(minutes28);
        int int30 = minutes25.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes28);
        org.joda.time.Minutes minutes31 = minutes11.minus(minutes25);
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes34 = minutes32.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes35 = minutes32.negated();
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes38 = minutes32.minus(minutes37);
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod40 = minutes39.toMutablePeriod();
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod40);
        boolean boolean42 = minutes32.isLessThan(minutes41);
        org.joda.time.Minutes minutes43 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes41);
        org.joda.time.DurationFieldType durationFieldType44 = minutes41.getFieldType();
        boolean boolean45 = minutes11.isSupported(durationFieldType44);
        boolean boolean46 = minutes0.isSupported(durationFieldType44);
        org.joda.time.PeriodType periodType47 = minutes0.getPeriodType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2147483647M" + "'", str3, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-2) + "'", int22 == (-2));
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(periodType47);
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod5 = minutes4.toMutablePeriod();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes7 = minutes4.plus(minutes6);
        boolean boolean8 = minutes3.isLessThan(minutes4);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        org.joda.time.Minutes minutes12 = minutes10.plus(0);
        org.joda.time.Duration duration13 = minutes10.toStandardDuration();
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes15 = minutes14.negated();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes14);
        java.lang.String str17 = minutes14.toString();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = minutes18.getFieldType();
        boolean boolean20 = minutes14.isSupported(durationFieldType19);
        org.joda.time.DurationFieldType durationFieldType21 = minutes14.getFieldType();
        boolean boolean22 = minutes10.isSupported(durationFieldType21);
        org.joda.time.Minutes minutes24 = minutes10.dividedBy((int) '#');
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "PT2147483647M" + "'", str17, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(minutes24);
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = minutes12.getFieldType();
        int int16 = minutes11.get(durationFieldType15);
        org.joda.time.Minutes minutes18 = minutes11.plus((-1));
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = minutes21.plus(0);
        int int26 = minutes19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes21);
        org.joda.time.Minutes minutes28 = minutes21.plus((int) ' ');
        java.lang.String str29 = minutes21.toString();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean32 = minutes21.isLessThan(minutes31);
        boolean boolean33 = minutes18.isLessThan(minutes21);
        org.joda.time.Minutes minutes34 = minutes2.minus(minutes18);
        org.joda.time.MutablePeriod mutablePeriod35 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod37 = minutes36.toMutablePeriod();
        boolean boolean38 = minutes2.isLessThan(minutes36);
        org.joda.time.Minutes minutes40 = minutes2.plus((int) ' ');
        org.joda.time.DurationFieldType durationFieldType41 = minutes40.getFieldType();
        org.joda.time.DurationFieldType durationFieldType42 = minutes40.getFieldType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2M" + "'", str29, "PT2M");
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertNotNull(durationFieldType42);
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        org.joda.time.Minutes minutes14 = minutes7.plus((-1));
        org.joda.time.Minutes minutes16 = minutes7.minus((int) (short) 10);
        org.joda.time.Minutes minutes18 = minutes16.dividedBy((-2147483648));
        org.joda.time.Minutes minutes19 = minutes4.plus(minutes18);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes22 = minutes20.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = minutes23.get(durationFieldType24);
        org.joda.time.MutablePeriod mutablePeriod26 = minutes23.toMutablePeriod();
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes23);
        boolean boolean28 = minutes22.isLessThan(minutes27);
        org.joda.time.DurationFieldType durationFieldType29 = minutes27.getFieldType();
        boolean boolean30 = minutes19.isSupported(durationFieldType29);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes33 = minutes31.multipliedBy((int) (short) -1);
        org.joda.time.Period period34 = minutes33.toPeriod();
        org.joda.time.Minutes minutes35 = minutes19.plus(minutes33);
        // The following exception was thrown during execution in test generation
        try {
            int int37 = minutes19.getValue(36);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 36");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(minutes35);
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.DurationFieldType durationFieldType2 = minutes0.getFieldType();
        org.joda.time.DurationFieldType durationFieldType3 = minutes0.getFieldType();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes6 = minutes4.minus((int) (short) 1);
        org.joda.time.Minutes minutes8 = minutes6.multipliedBy(0);
        org.joda.time.Duration duration9 = minutes8.toStandardDuration();
        org.joda.time.Minutes minutes11 = minutes8.dividedBy((-2147483648));
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = minutes15.get(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = minutes15.getFieldType();
        int int19 = minutes14.get(durationFieldType18);
        org.joda.time.Minutes minutes21 = minutes14.plus((-1));
        org.joda.time.Minutes minutes23 = minutes14.minus((int) (short) 10);
        org.joda.time.Minutes minutes25 = minutes23.dividedBy((-2147483648));
        org.joda.time.Minutes minutes27 = minutes23.plus(100);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes30 = minutes28.minus((int) (short) 1);
        org.joda.time.Minutes minutes32 = minutes30.multipliedBy(0);
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes35 = minutes33.dividedBy((int) 'a');
        org.joda.time.Minutes minutes37 = minutes33.plus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType38 = minutes37.getFieldType();
        boolean boolean39 = minutes30.isSupported(durationFieldType38);
        boolean boolean40 = minutes23.isSupported(durationFieldType38);
        int int41 = minutes11.get(durationFieldType38);
        java.lang.String str42 = minutes11.toString();
        org.joda.time.PeriodType periodType43 = minutes11.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType44 = minutes11.getFieldType();
        org.joda.time.Minutes minutes45 = minutes0.minus(minutes11);
        java.lang.String str46 = minutes0.toString();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2) + "'", int19 == (-2));
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT0M" + "'", str42, "PT0M");
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "PT2147483647M" + "'", str46, "PT2147483647M");
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes5 = minutes3.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = minutes6.get(durationFieldType7);
        org.joda.time.DurationFieldType durationFieldType9 = minutes6.getFieldType();
        int int10 = minutes5.get(durationFieldType9);
        org.joda.time.Minutes minutes12 = minutes5.plus((-1));
        org.joda.time.Minutes minutes14 = minutes5.minus((int) (short) 10);
        org.joda.time.DurationFieldType durationFieldType16 = minutes5.getFieldType((int) (short) 0);
        boolean boolean17 = minutes0.isSupported(durationFieldType16);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes19 = minutes18.negated();
        org.joda.time.Minutes minutes20 = minutes18.negated();
        java.lang.String str21 = minutes18.toString();
        int int22 = minutes18.size();
        org.joda.time.Minutes minutes24 = minutes18.minus(0);
        org.joda.time.Minutes minutes26 = minutes18.plus((int) (short) 0);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes18);
        boolean boolean28 = minutes0.isLessThan(minutes27);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-2) + "'", int10 == (-2));
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT2147483647M" + "'", str21, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes9 = minutes2.plus((-1));
        org.joda.time.Minutes minutes11 = minutes2.minus((int) (short) 10);
        org.joda.time.Duration duration12 = minutes2.toStandardDuration();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes2);
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy(3);
        org.joda.time.MutablePeriod mutablePeriod16 = minutes15.toMutablePeriod();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = minutes21.plus(0);
        int int26 = minutes19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes21);
        org.joda.time.Minutes minutes28 = minutes21.plus((int) ' ');
        java.lang.String str29 = minutes21.toString();
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod31 = minutes30.toMutablePeriod();
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes34 = minutes32.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes36 = minutes32.plus(0);
        int int37 = minutes30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes32);
        org.joda.time.Minutes minutes39 = minutes32.plus((int) ' ');
        java.lang.String str40 = minutes32.toString();
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean43 = minutes32.isLessThan(minutes42);
        org.joda.time.Minutes minutes44 = minutes21.minus(minutes32);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes46 = minutes45.negated();
        org.joda.time.DurationFieldType durationFieldType47 = minutes45.getFieldType();
        org.joda.time.DurationFieldType durationFieldType48 = minutes45.getFieldType();
        boolean boolean49 = minutes21.isSupported(durationFieldType48);
        org.joda.time.Duration duration50 = minutes21.toStandardDuration();
        boolean boolean51 = minutes18.equals((java.lang.Object) minutes21);
        org.joda.time.Minutes minutes52 = minutes15.minus(minutes21);
        int int53 = minutes21.size();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2M" + "'", str29, "PT2M");
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "PT2M" + "'", str40, "PT2M");
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        int int1 = minutes0.size();
        int int3 = minutes0.getValue(0);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        org.joda.time.Minutes minutes14 = minutes7.plus((-1));
        org.joda.time.Minutes minutes16 = minutes7.minus((int) (short) 10);
        org.joda.time.Duration duration17 = minutes7.toStandardDuration();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes19 = minutes18.negated();
        org.joda.time.Minutes minutes20 = minutes18.negated();
        java.lang.String str21 = minutes18.toString();
        org.joda.time.Minutes minutes23 = minutes18.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes27 = minutes25.multipliedBy((int) (byte) 0);
        boolean boolean28 = minutes23.equals((java.lang.Object) minutes25);
        boolean boolean29 = minutes7.isGreaterThan(minutes25);
        boolean boolean30 = minutes4.equals((java.lang.Object) boolean29);
        org.joda.time.Minutes minutes31 = minutes4.negated();
        org.joda.time.Duration duration32 = minutes4.toStandardDuration();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes34 = minutes4.multipliedBy((-2147483645));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 2147483647 * -2147483645");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2147483647 + "'", int3 == 2147483647);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT2147483647M" + "'", str21, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(duration32);
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        int int3 = minutes0.size();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.MutablePeriod mutablePeriod7 = minutes4.toMutablePeriod();
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod9 = minutes8.toMutablePeriod();
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes14 = minutes10.plus(0);
        int int15 = minutes8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes10);
        org.joda.time.Duration duration16 = minutes8.toStandardDuration();
        org.joda.time.Minutes minutes17 = minutes4.plus(minutes8);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod19 = minutes18.toMutablePeriod();
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes22 = minutes20.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes24 = minutes20.plus(0);
        int int25 = minutes18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes20);
        org.joda.time.Duration duration26 = minutes20.toStandardDuration();
        int int27 = minutes8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes20);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod29 = minutes28.toMutablePeriod();
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes32 = minutes30.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes34 = minutes30.plus(0);
        int int35 = minutes28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes30);
        org.joda.time.Minutes minutes37 = minutes30.plus((int) ' ');
        java.lang.String str38 = minutes30.toString();
        java.lang.Object obj39 = null;
        boolean boolean40 = minutes30.equals(obj39);
        org.joda.time.PeriodType periodType41 = minutes30.getPeriodType();
        org.joda.time.Minutes minutes42 = minutes8.plus(minutes30);
        boolean boolean43 = minutes0.isGreaterThan(minutes30);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "PT2M" + "'", str38, "PT2M");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.DurationFieldType durationFieldType2 = minutes0.getFieldType();
        org.joda.time.DurationFieldType durationFieldType3 = minutes0.getFieldType();
        int int4 = minutes0.getMinutes();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType8 = minutes7.getFieldType();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes10 = minutes9.negated();
        org.joda.time.Minutes minutes11 = minutes9.negated();
        java.lang.String str12 = minutes9.toString();
        int int13 = minutes9.size();
        org.joda.time.Minutes minutes15 = minutes9.minus(0);
        org.joda.time.Duration duration16 = minutes15.toStandardDuration();
        boolean boolean17 = minutes7.isGreaterThan(minutes15);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes7);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod22 = minutes21.toMutablePeriod();
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes25 = minutes23.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes27 = minutes23.plus(0);
        int int28 = minutes21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes23);
        org.joda.time.Minutes minutes30 = minutes23.plus((int) ' ');
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = minutes31.getFieldType();
        int int33 = minutes23.get(durationFieldType32);
        boolean boolean34 = minutes20.isSupported(durationFieldType32);
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod36 = minutes35.toMutablePeriod();
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes38 = minutes35.plus(minutes37);
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod40 = minutes39.toMutablePeriod();
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes42 = minutes39.plus(minutes41);
        boolean boolean43 = minutes38.isLessThan(minutes39);
        org.joda.time.PeriodType periodType44 = minutes38.getPeriodType();
        org.joda.time.Minutes minutes46 = minutes38.dividedBy(3);
        org.joda.time.Minutes minutes48 = minutes46.dividedBy(10);
        boolean boolean49 = minutes20.isGreaterThan(minutes48);
        org.joda.time.Minutes minutes50 = minutes7.plus(minutes48);
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes7);
        boolean boolean52 = minutes0.isGreaterThan(minutes7);
        org.joda.time.Minutes minutes53 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod54 = minutes53.toMutablePeriod();
        org.joda.time.Minutes minutes55 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes56 = minutes53.plus(minutes55);
        org.joda.time.Minutes minutes57 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod58 = minutes57.toMutablePeriod();
        org.joda.time.Minutes minutes59 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes60 = minutes57.plus(minutes59);
        boolean boolean61 = minutes56.isLessThan(minutes57);
        org.joda.time.Minutes minutes63 = minutes56.plus((-1));
        org.joda.time.Minutes minutes65 = minutes63.plus(0);
        org.joda.time.Minutes minutes66 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes68 = minutes66.multipliedBy((int) (short) -1);
        org.joda.time.MutablePeriod mutablePeriod69 = minutes66.toMutablePeriod();
        org.joda.time.Minutes minutes70 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType71 = null;
        int int72 = minutes70.get(durationFieldType71);
        org.joda.time.DurationFieldType durationFieldType73 = minutes70.getFieldType();
        int int74 = minutes66.get(durationFieldType73);
        int int75 = minutes65.get(durationFieldType73);
        boolean boolean76 = minutes0.isSupported(durationFieldType73);
        org.joda.time.Minutes minutes78 = minutes0.dividedBy((-4));
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2147483647 + "'", int4 == 2147483647);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PT2147483647M" + "'", str12, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(mutablePeriod54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(mutablePeriod58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(mutablePeriod69);
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(durationFieldType73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 2 + "'", int74 == 2);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-2147483646) + "'", int75 == (-2147483646));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(minutes78);
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = minutes0.get(durationFieldType1);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType4 = minutes0.getFieldType();
        org.joda.time.Minutes minutes6 = minutes0.dividedBy((-1));
        org.joda.time.Minutes minutes8 = minutes0.dividedBy(2147483646);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes11 = minutes9.minus((int) (short) 1);
        org.joda.time.Minutes minutes13 = minutes11.multipliedBy(0);
        org.joda.time.Duration duration14 = minutes11.toStandardDuration();
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes16 = minutes15.negated();
        org.joda.time.DurationFieldType durationFieldType17 = minutes15.getFieldType();
        int int18 = minutes11.get(durationFieldType17);
        boolean boolean19 = minutes0.isSupported(durationFieldType17);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes22 = minutes20.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes23 = minutes20.negated();
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes26 = minutes20.minus(minutes25);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod28 = minutes27.toMutablePeriod();
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod28);
        boolean boolean30 = minutes20.isLessThan(minutes29);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes34 = minutes32.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType36 = null;
        int int37 = minutes35.get(durationFieldType36);
        org.joda.time.DurationFieldType durationFieldType38 = minutes35.getFieldType();
        int int39 = minutes34.get(durationFieldType38);
        org.joda.time.Minutes minutes41 = minutes34.plus((-1));
        boolean boolean42 = minutes31.isGreaterThan(minutes34);
        org.joda.time.Minutes minutes44 = minutes34.multipliedBy(2);
        org.joda.time.Minutes minutes45 = minutes44.negated();
        org.joda.time.Minutes minutes46 = minutes45.negated();
        boolean boolean47 = minutes20.isLessThan(minutes45);
        org.joda.time.Period period48 = minutes20.toPeriod();
        org.joda.time.Minutes minutes49 = minutes20.negated();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes50 = minutes0.plus(minutes49);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: -2147483648 + -2");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483646 + "'", int18 == 2147483646);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-2) + "'", int39 == (-2));
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(minutes49);
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes9 = minutes2.plus((-1));
        org.joda.time.Minutes minutes11 = minutes2.minus((int) (short) 10);
        org.joda.time.Minutes minutes13 = minutes11.dividedBy((-2147483648));
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes16 = minutes14.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = minutes17.get(durationFieldType18);
        org.joda.time.DurationFieldType durationFieldType20 = minutes17.getFieldType();
        int int21 = minutes16.get(durationFieldType20);
        org.joda.time.Minutes minutes23 = minutes16.plus((-1));
        org.joda.time.Minutes minutes25 = minutes16.minus((int) (short) 10);
        org.joda.time.Minutes minutes27 = minutes25.dividedBy((-2147483648));
        org.joda.time.Minutes minutes28 = minutes27.negated();
        int int29 = minutes28.getMinutes();
        boolean boolean30 = minutes13.isLessThan(minutes28);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-2) + "'", int21 == (-2));
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes5 = minutes3.minus((int) (short) 1);
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy(0);
        org.joda.time.Minutes minutes9 = minutes7.plus((-2147483648));
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes11 = minutes10.negated();
        org.joda.time.Minutes minutes12 = minutes10.negated();
        boolean boolean13 = minutes9.isGreaterThan(minutes12);
        int int14 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes9);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.THREE;
        int int17 = minutes16.size();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod19 = minutes18.toMutablePeriod();
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes22 = minutes20.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes24 = minutes20.plus(0);
        int int25 = minutes18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes20);
        org.joda.time.Minutes minutes27 = minutes20.plus((int) ' ');
        int int28 = minutes16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes27);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes32 = minutes30.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = minutes33.get(durationFieldType34);
        org.joda.time.DurationFieldType durationFieldType36 = minutes33.getFieldType();
        int int37 = minutes32.get(durationFieldType36);
        org.joda.time.Minutes minutes39 = minutes32.plus((-1));
        boolean boolean40 = minutes29.isGreaterThan(minutes32);
        org.joda.time.DurationFieldType durationFieldType41 = minutes32.getFieldType();
        int int43 = minutes32.getValue((int) (short) 0);
        org.joda.time.Period period44 = minutes32.toPeriod();
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes46 = minutes45.negated();
        org.joda.time.Minutes minutes47 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod48 = minutes47.toMutablePeriod();
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes50 = minutes47.plus(minutes49);
        int int51 = minutes46.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes49);
        org.joda.time.Minutes minutes52 = minutes32.minus(minutes46);
        boolean boolean53 = minutes16.isGreaterThan(minutes46);
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod55 = minutes54.toMutablePeriod();
        org.joda.time.Minutes minutes56 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes57 = minutes54.plus(minutes56);
        org.joda.time.Minutes minutes59 = minutes57.plus((int) 'a');
        org.joda.time.Duration duration60 = minutes57.toStandardDuration();
        int int61 = minutes16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes57);
        boolean boolean62 = minutes15.isLessThan(minutes16);
        org.joda.time.Minutes minutes63 = org.joda.time.Minutes.MIN_VALUE;
        int int64 = minutes63.getMinutes();
        org.joda.time.PeriodType periodType65 = minutes63.getPeriodType();
        org.joda.time.Minutes minutes67 = minutes63.multipliedBy(1);
        org.joda.time.DurationFieldType durationFieldType68 = minutes67.getFieldType();
        org.joda.time.DurationFieldType durationFieldType69 = minutes67.getFieldType();
        org.joda.time.Minutes minutes70 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType71 = null;
        int int72 = minutes70.get(durationFieldType71);
        org.joda.time.MutablePeriod mutablePeriod73 = minutes70.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType74 = minutes70.getFieldType();
        boolean boolean75 = minutes67.isSupported(durationFieldType74);
        boolean boolean76 = minutes15.isSupported(durationFieldType74);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-2) + "'", int37 == (-2));
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-2) + "'", int43 == (-2));
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(mutablePeriod55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-2147483648) + "'", int64 == (-2147483648));
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(durationFieldType68);
        org.junit.Assert.assertNotNull(durationFieldType69);
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod73);
        org.junit.Assert.assertNotNull(durationFieldType74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Period period3 = minutes2.toPeriod();
        org.joda.time.DurationFieldType durationFieldType4 = minutes2.getFieldType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(durationFieldType4);
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT2M");
        org.joda.time.Minutes minutes3 = minutes1.minus(0);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes5 = minutes1.plus(2147483647);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 2 + 2147483647");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        int int1 = minutes0.getMinutes();
        org.joda.time.PeriodType periodType2 = minutes0.getPeriodType();
        org.joda.time.Minutes minutes4 = minutes0.multipliedBy(1);
        org.joda.time.DurationFieldType durationFieldType5 = minutes4.getFieldType();
        org.joda.time.DurationFieldType durationFieldType6 = minutes4.getFieldType();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = minutes7.get(durationFieldType8);
        org.joda.time.MutablePeriod mutablePeriod10 = minutes7.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType11 = minutes7.getFieldType();
        boolean boolean12 = minutes4.isSupported(durationFieldType11);
        org.joda.time.Period period13 = minutes4.toPeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-2147483648) + "'", int1 == (-2147483648));
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(period13);
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes5 = minutes3.minus((int) (short) 1);
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy(0);
        org.joda.time.Minutes minutes9 = minutes7.plus((-2147483648));
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes11 = minutes10.negated();
        org.joda.time.Minutes minutes12 = minutes10.negated();
        boolean boolean13 = minutes9.isGreaterThan(minutes12);
        int int14 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes9);
        org.joda.time.Minutes minutes15 = minutes0.negated();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        org.joda.time.Minutes minutes14 = minutes7.plus((-1));
        org.joda.time.Minutes minutes16 = minutes7.minus((int) (short) 10);
        org.joda.time.Minutes minutes18 = minutes16.dividedBy((-2147483648));
        org.joda.time.Minutes minutes19 = minutes4.plus(minutes18);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes22 = minutes20.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = minutes23.get(durationFieldType24);
        org.joda.time.MutablePeriod mutablePeriod26 = minutes23.toMutablePeriod();
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes23);
        boolean boolean28 = minutes22.isLessThan(minutes27);
        org.joda.time.DurationFieldType durationFieldType29 = minutes27.getFieldType();
        boolean boolean30 = minutes19.isSupported(durationFieldType29);
        org.joda.time.Minutes minutes32 = minutes19.plus((int) (short) -1);
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes35 = minutes33.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes36 = minutes33.negated();
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes39 = minutes33.minus(minutes38);
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod41 = minutes40.toMutablePeriod();
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod41);
        boolean boolean43 = minutes33.isLessThan(minutes42);
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes42);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes47 = minutes45.minus((int) (short) 0);
        boolean boolean48 = minutes42.isLessThan(minutes47);
        org.joda.time.Minutes minutes50 = minutes47.multipliedBy((int) (short) 0);
        boolean boolean51 = minutes19.isGreaterThan(minutes50);
        // The following exception was thrown during execution in test generation
        try {
            int int53 = minutes50.getValue((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod3 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes5 = minutes2.plus(minutes4);
        int int6 = minutes1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes4);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MAX_VALUE;
        int int8 = minutes1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes7);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.MutablePeriod mutablePeriod15 = minutes12.toMutablePeriod();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes12);
        boolean boolean17 = minutes11.isLessThan(minutes16);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes20 = minutes18.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = minutes21.get(durationFieldType22);
        org.joda.time.DurationFieldType durationFieldType24 = minutes21.getFieldType();
        int int25 = minutes20.get(durationFieldType24);
        org.joda.time.Minutes minutes27 = minutes20.plus((-1));
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod29 = minutes28.toMutablePeriod();
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes32 = minutes30.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes34 = minutes30.plus(0);
        int int35 = minutes28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes30);
        org.joda.time.Minutes minutes37 = minutes30.plus((int) ' ');
        java.lang.String str38 = minutes30.toString();
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean41 = minutes30.isLessThan(minutes40);
        boolean boolean42 = minutes27.isLessThan(minutes30);
        org.joda.time.Minutes minutes43 = minutes11.minus(minutes27);
        org.joda.time.MutablePeriod mutablePeriod44 = minutes11.toMutablePeriod();
        org.joda.time.Minutes minutes46 = minutes11.dividedBy(2);
        org.joda.time.Minutes minutes47 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes49 = minutes47.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes50 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType51 = null;
        int int52 = minutes50.get(durationFieldType51);
        org.joda.time.DurationFieldType durationFieldType53 = minutes50.getFieldType();
        int int54 = minutes49.get(durationFieldType53);
        org.joda.time.Minutes minutes56 = minutes49.plus((-1));
        org.joda.time.Minutes minutes57 = minutes56.negated();
        org.joda.time.Minutes minutes58 = minutes46.plus(minutes57);
        org.joda.time.Minutes minutes60 = minutes46.minus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType61 = minutes60.getFieldType();
        int int62 = minutes7.get(durationFieldType61);
        org.joda.time.DurationFieldType durationFieldType63 = minutes7.getFieldType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes65 = minutes7.plus(98);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 2147483647 + 98");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-2) + "'", int25 == (-2));
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "PT2M" + "'", str38, "PT2M");
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(mutablePeriod44);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-2) + "'", int54 == (-2));
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2147483647 + "'", int62 == 2147483647);
        org.junit.Assert.assertNotNull(durationFieldType63);
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        int int1 = minutes0.size();
        int int3 = minutes0.getValue(0);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        org.joda.time.Minutes minutes14 = minutes7.plus((-1));
        org.joda.time.Minutes minutes16 = minutes7.minus((int) (short) 10);
        org.joda.time.Duration duration17 = minutes7.toStandardDuration();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes19 = minutes18.negated();
        org.joda.time.Minutes minutes20 = minutes18.negated();
        java.lang.String str21 = minutes18.toString();
        org.joda.time.Minutes minutes23 = minutes18.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes27 = minutes25.multipliedBy((int) (byte) 0);
        boolean boolean28 = minutes23.equals((java.lang.Object) minutes25);
        boolean boolean29 = minutes7.isGreaterThan(minutes25);
        boolean boolean30 = minutes4.equals((java.lang.Object) boolean29);
        org.joda.time.MutablePeriod mutablePeriod31 = minutes4.toMutablePeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2147483647 + "'", int3 == 2147483647);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT2147483647M" + "'", str21, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(mutablePeriod31);
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod3 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes5 = minutes2.plus(minutes4);
        int int6 = minutes1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes4);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MAX_VALUE;
        int int8 = minutes1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes7);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.MutablePeriod mutablePeriod15 = minutes12.toMutablePeriod();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes12);
        boolean boolean17 = minutes11.isLessThan(minutes16);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes20 = minutes18.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = minutes21.get(durationFieldType22);
        org.joda.time.DurationFieldType durationFieldType24 = minutes21.getFieldType();
        int int25 = minutes20.get(durationFieldType24);
        org.joda.time.Minutes minutes27 = minutes20.plus((-1));
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod29 = minutes28.toMutablePeriod();
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes32 = minutes30.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes34 = minutes30.plus(0);
        int int35 = minutes28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes30);
        org.joda.time.Minutes minutes37 = minutes30.plus((int) ' ');
        java.lang.String str38 = minutes30.toString();
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean41 = minutes30.isLessThan(minutes40);
        boolean boolean42 = minutes27.isLessThan(minutes30);
        org.joda.time.Minutes minutes43 = minutes11.minus(minutes27);
        org.joda.time.MutablePeriod mutablePeriod44 = minutes11.toMutablePeriod();
        org.joda.time.Minutes minutes46 = minutes11.dividedBy(2);
        org.joda.time.Minutes minutes47 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes49 = minutes47.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes50 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType51 = null;
        int int52 = minutes50.get(durationFieldType51);
        org.joda.time.DurationFieldType durationFieldType53 = minutes50.getFieldType();
        int int54 = minutes49.get(durationFieldType53);
        org.joda.time.Minutes minutes56 = minutes49.plus((-1));
        org.joda.time.Minutes minutes57 = minutes56.negated();
        org.joda.time.Minutes minutes58 = minutes46.plus(minutes57);
        org.joda.time.Minutes minutes60 = minutes46.minus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType61 = minutes60.getFieldType();
        int int62 = minutes7.get(durationFieldType61);
        int int63 = minutes7.getMinutes();
        int int64 = minutes7.size();
        java.lang.String str65 = minutes7.toString();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-2) + "'", int25 == (-2));
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "PT2M" + "'", str38, "PT2M");
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(mutablePeriod44);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-2) + "'", int54 == (-2));
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2147483647 + "'", int62 == 2147483647);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2147483647 + "'", int63 == 2147483647);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "PT2147483647M" + "'", str65, "PT2147483647M");
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        int int1 = minutes0.size();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes3 = minutes2.negated();
        org.joda.time.Minutes minutes5 = minutes3.dividedBy((int) (byte) -1);
        boolean boolean6 = minutes0.isLessThan(minutes3);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod12 = minutes11.toMutablePeriod();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes17 = minutes13.plus(0);
        int int18 = minutes11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes13);
        org.joda.time.Minutes minutes20 = minutes13.plus((int) ' ');
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType22 = minutes21.getFieldType();
        int int23 = minutes13.get(durationFieldType22);
        boolean boolean24 = minutes10.isSupported(durationFieldType22);
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod26 = minutes25.toMutablePeriod();
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes28 = minutes25.plus(minutes27);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod30 = minutes29.toMutablePeriod();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes32 = minutes29.plus(minutes31);
        boolean boolean33 = minutes28.isLessThan(minutes29);
        org.joda.time.PeriodType periodType34 = minutes28.getPeriodType();
        org.joda.time.Minutes minutes36 = minutes28.dividedBy(3);
        org.joda.time.Minutes minutes38 = minutes36.dividedBy(10);
        boolean boolean39 = minutes10.isGreaterThan(minutes38);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes40 = minutes3.minus(minutes10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: -2147483647 + -2147483647");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes3 = minutes1.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        int int13 = minutes4.get(durationFieldType11);
        int int14 = minutes4.getMinutes();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.parseMinutes("PT-2147483548M");
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration18 = minutes17.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod19 = minutes17.toMutablePeriod();
        java.lang.String str20 = minutes17.toString();
        int int21 = minutes17.size();
        org.joda.time.Minutes minutes22 = minutes17.negated();
        org.joda.time.Minutes minutes23 = minutes16.plus(minutes17);
        org.joda.time.Minutes minutes24 = minutes4.plus(minutes16);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2147483647 + "'", int13 == 2147483647);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2147483647 + "'", int14 == 2147483647);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "PT2M" + "'", str20, "PT2M");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.DurationFieldType durationFieldType12 = minutes3.getFieldType();
        int int14 = minutes3.getValue((int) (short) 0);
        org.joda.time.Period period15 = minutes3.toPeriod();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes17 = minutes16.negated();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod19 = minutes18.toMutablePeriod();
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes21 = minutes18.plus(minutes20);
        int int22 = minutes17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes20);
        org.joda.time.Minutes minutes23 = minutes3.minus(minutes17);
        org.joda.time.PeriodType periodType24 = minutes17.getPeriodType();
        org.joda.time.Period period25 = minutes17.toPeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-2) + "'", int14 == (-2));
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period25);
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType2 = minutes1.getPeriodType();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes4 = minutes3.negated();
        org.joda.time.Minutes minutes5 = minutes3.negated();
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        java.lang.String str7 = minutes3.toString();
        boolean boolean8 = minutes1.isGreaterThan(minutes3);
        boolean boolean9 = minutes0.equals((java.lang.Object) minutes1);
        int int10 = minutes0.size();
        java.lang.String str11 = minutes0.toString();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT2147483647M" + "'", str7, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "PT2147483647M" + "'", str11, "PT2147483647M");
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        org.joda.time.Period period10 = minutes2.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod11 = minutes2.toMutablePeriod();
        org.joda.time.Period period12 = minutes2.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod13 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes15 = minutes2.multipliedBy(100);
        org.joda.time.Minutes minutes17 = minutes15.minus((int) (short) 0);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes19 = minutes18.negated();
        org.joda.time.Minutes minutes20 = minutes18.negated();
        org.joda.time.DurationFieldType durationFieldType21 = minutes18.getFieldType();
        java.lang.String str22 = minutes18.toString();
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes24 = minutes23.negated();
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes23);
        int int26 = minutes23.size();
        org.joda.time.MutablePeriod mutablePeriod27 = minutes23.toMutablePeriod();
        boolean boolean28 = minutes18.equals((java.lang.Object) minutes23);
        org.joda.time.DurationFieldType durationFieldType30 = minutes23.getFieldType((int) (short) 0);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod32 = minutes31.toMutablePeriod();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes35 = minutes33.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes37 = minutes33.plus(0);
        int int38 = minutes31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes33);
        org.joda.time.Minutes minutes40 = minutes33.plus((int) ' ');
        java.lang.String str41 = minutes33.toString();
        org.joda.time.Minutes minutes43 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean44 = minutes33.isLessThan(minutes43);
        org.joda.time.Period period45 = minutes43.toPeriod();
        boolean boolean46 = minutes23.isGreaterThan(minutes43);
        boolean boolean47 = minutes17.equals((java.lang.Object) minutes23);
        java.lang.String str48 = minutes17.toString();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PT2147483647M" + "'", str22, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "PT2M" + "'", str41, "PT2M");
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "PT200M" + "'", str48, "PT200M");
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = minutes5.negated();
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes11 = minutes5.minus(minutes10);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod13 = minutes12.toMutablePeriod();
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod13);
        boolean boolean15 = minutes5.isLessThan(minutes14);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes19 = minutes17.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = minutes20.get(durationFieldType21);
        org.joda.time.DurationFieldType durationFieldType23 = minutes20.getFieldType();
        int int24 = minutes19.get(durationFieldType23);
        org.joda.time.Minutes minutes26 = minutes19.plus((-1));
        boolean boolean27 = minutes16.isGreaterThan(minutes19);
        org.joda.time.Minutes minutes29 = minutes19.multipliedBy(2);
        org.joda.time.Minutes minutes30 = minutes29.negated();
        org.joda.time.Minutes minutes31 = minutes30.negated();
        boolean boolean32 = minutes5.isLessThan(minutes30);
        org.joda.time.Minutes minutes34 = minutes30.dividedBy((int) (short) 1);
        org.joda.time.Duration duration35 = minutes30.toStandardDuration();
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod37 = minutes36.toMutablePeriod();
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes40 = minutes38.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes42 = minutes38.plus(0);
        int int43 = minutes36.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes38);
        org.joda.time.Minutes minutes45 = minutes38.plus((int) ' ');
        java.lang.String str46 = minutes38.toString();
        org.joda.time.Minutes minutes47 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod48 = minutes47.toMutablePeriod();
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes51 = minutes49.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes53 = minutes49.plus(0);
        int int54 = minutes47.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes49);
        org.joda.time.Minutes minutes56 = minutes49.plus((int) ' ');
        java.lang.String str57 = minutes49.toString();
        org.joda.time.Minutes minutes59 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean60 = minutes49.isLessThan(minutes59);
        org.joda.time.Minutes minutes61 = minutes38.minus(minutes49);
        java.lang.String str62 = minutes49.toString();
        org.joda.time.Minutes minutes63 = minutes30.plus(minutes49);
        org.joda.time.Minutes minutes65 = minutes63.dividedBy((-2147483548));
        org.joda.time.Minutes minutes67 = minutes65.minus((-2147483548));
        boolean boolean68 = minutes0.isGreaterThan(minutes65);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-2) + "'", int24 == (-2));
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "PT2M" + "'", str46, "PT2M");
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "PT2M" + "'", str57, "PT2M");
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "PT2M" + "'", str62, "PT2M");
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        org.joda.time.Minutes minutes14 = minutes7.plus((-1));
        org.joda.time.Minutes minutes16 = minutes7.minus((int) (short) 10);
        org.joda.time.Minutes minutes18 = minutes16.dividedBy((-2147483648));
        org.joda.time.Minutes minutes19 = minutes4.plus(minutes18);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes22 = minutes20.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = minutes23.get(durationFieldType24);
        org.joda.time.MutablePeriod mutablePeriod26 = minutes23.toMutablePeriod();
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes23);
        boolean boolean28 = minutes22.isLessThan(minutes27);
        org.joda.time.DurationFieldType durationFieldType29 = minutes27.getFieldType();
        boolean boolean30 = minutes19.isSupported(durationFieldType29);
        org.joda.time.Minutes minutes32 = minutes19.plus((int) (short) -1);
        int int33 = minutes32.size();
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes35 = minutes34.negated();
        org.joda.time.PeriodType periodType36 = minutes35.getPeriodType();
        org.joda.time.Minutes minutes38 = minutes35.minus(0);
        org.joda.time.Minutes minutes40 = minutes35.minus((-1));
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes43 = minutes41.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = minutes44.get(durationFieldType45);
        org.joda.time.MutablePeriod mutablePeriod47 = minutes44.toMutablePeriod();
        org.joda.time.Minutes minutes48 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes44);
        boolean boolean49 = minutes43.isLessThan(minutes48);
        org.joda.time.Minutes minutes50 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes52 = minutes50.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes53 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType54 = null;
        int int55 = minutes53.get(durationFieldType54);
        org.joda.time.DurationFieldType durationFieldType56 = minutes53.getFieldType();
        int int57 = minutes52.get(durationFieldType56);
        org.joda.time.Minutes minutes59 = minutes52.plus((-1));
        org.joda.time.Minutes minutes60 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod61 = minutes60.toMutablePeriod();
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes64 = minutes62.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes66 = minutes62.plus(0);
        int int67 = minutes60.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes62);
        org.joda.time.Minutes minutes69 = minutes62.plus((int) ' ');
        java.lang.String str70 = minutes62.toString();
        org.joda.time.Minutes minutes72 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean73 = minutes62.isLessThan(minutes72);
        boolean boolean74 = minutes59.isLessThan(minutes62);
        org.joda.time.Minutes minutes75 = minutes43.minus(minutes59);
        org.joda.time.Minutes minutes76 = org.joda.time.Minutes.ZERO;
        int int77 = minutes75.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes76);
        org.joda.time.Minutes minutes79 = minutes76.multipliedBy((int) (short) 0);
        boolean boolean80 = minutes35.isGreaterThan(minutes79);
        org.joda.time.Minutes minutes81 = minutes32.minus(minutes79);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-2) + "'", int57 == (-2));
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(mutablePeriod61);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "PT2M" + "'", str70, "PT2M");
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(minutes75);
        org.junit.Assert.assertNotNull(minutes76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(minutes79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(minutes81);
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        int int1 = minutes0.size();
        int int3 = minutes0.getValue(0);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        org.joda.time.Minutes minutes14 = minutes7.plus((-1));
        org.joda.time.Minutes minutes16 = minutes7.minus((int) (short) 10);
        org.joda.time.Duration duration17 = minutes7.toStandardDuration();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes19 = minutes18.negated();
        org.joda.time.Minutes minutes20 = minutes18.negated();
        java.lang.String str21 = minutes18.toString();
        org.joda.time.Minutes minutes23 = minutes18.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes27 = minutes25.multipliedBy((int) (byte) 0);
        boolean boolean28 = minutes23.equals((java.lang.Object) minutes25);
        boolean boolean29 = minutes7.isGreaterThan(minutes25);
        boolean boolean30 = minutes4.equals((java.lang.Object) boolean29);
        org.joda.time.Minutes minutes31 = minutes4.negated();
        org.joda.time.Minutes minutes32 = minutes4.negated();
        java.lang.String str33 = minutes32.toString();
        int int34 = minutes32.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2147483647 + "'", int3 == 2147483647);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT2147483647M" + "'", str21, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "PT-2147483647M" + "'", str33, "PT-2147483647M");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-2147483647) + "'", int34 == (-2147483647));
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        org.joda.time.Minutes minutes11 = minutes2.multipliedBy((int) 'a');
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes2);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.parseMinutes("PT-2147483548M");
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration16 = minutes15.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod17 = minutes15.toMutablePeriod();
        java.lang.String str18 = minutes15.toString();
        int int19 = minutes15.size();
        org.joda.time.Minutes minutes20 = minutes15.negated();
        org.joda.time.Minutes minutes21 = minutes14.plus(minutes15);
        int int22 = minutes2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes15);
        org.joda.time.Minutes minutes23 = null;
        boolean boolean24 = minutes2.isLessThan(minutes23);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "PT2M" + "'", str18, "PT2M");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = minutes0.negated();
        java.lang.String str3 = minutes0.toString();
        org.joda.time.Minutes minutes5 = minutes0.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes8 = minutes6.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes11 = minutes9.minus((int) (short) 1);
        org.joda.time.Minutes minutes13 = minutes11.multipliedBy(0);
        org.joda.time.Minutes minutes15 = minutes13.plus((-2147483648));
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes17 = minutes16.negated();
        org.joda.time.Minutes minutes18 = minutes16.negated();
        boolean boolean19 = minutes15.isGreaterThan(minutes18);
        int int20 = minutes6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes15);
        org.joda.time.MutablePeriod mutablePeriod21 = minutes15.toMutablePeriod();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration23 = minutes22.toStandardDuration();
        org.joda.time.Duration duration24 = minutes22.toStandardDuration();
        org.joda.time.Minutes minutes26 = minutes22.minus(2);
        boolean boolean27 = minutes15.isGreaterThan(minutes26);
        int int28 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes26);
        org.joda.time.PeriodType periodType29 = minutes0.getPeriodType();
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType32 = minutes31.getPeriodType();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes34 = minutes33.negated();
        org.joda.time.Minutes minutes35 = minutes33.negated();
        org.joda.time.DurationFieldType durationFieldType36 = minutes33.getFieldType();
        java.lang.String str37 = minutes33.toString();
        boolean boolean38 = minutes31.isGreaterThan(minutes33);
        boolean boolean39 = minutes30.equals((java.lang.Object) minutes31);
        int int40 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes30);
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes42 = minutes41.negated();
        org.joda.time.Minutes minutes43 = minutes41.negated();
        java.lang.String str44 = minutes41.toString();
        int int45 = minutes41.size();
        org.joda.time.Period period46 = minutes41.toPeriod();
        org.joda.time.PeriodType periodType47 = minutes41.getPeriodType();
        boolean boolean48 = minutes30.equals((java.lang.Object) minutes41);
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes51 = minutes49.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes52 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType53 = null;
        int int54 = minutes52.get(durationFieldType53);
        org.joda.time.MutablePeriod mutablePeriod55 = minutes52.toMutablePeriod();
        org.joda.time.Minutes minutes56 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes52);
        boolean boolean57 = minutes51.isLessThan(minutes56);
        int int58 = minutes51.getMinutes();
        org.joda.time.Minutes minutes60 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean61 = minutes51.isLessThan(minutes60);
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes51);
        org.joda.time.Minutes minutes63 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes65 = minutes63.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes66 = minutes63.negated();
        org.joda.time.Minutes minutes68 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes69 = minutes63.minus(minutes68);
        boolean boolean70 = minutes51.isLessThan(minutes63);
        org.joda.time.Minutes minutes72 = minutes63.plus((int) (short) 10);
        boolean boolean73 = minutes30.equals((java.lang.Object) minutes72);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2147483647M" + "'", str3, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "PT2147483647M" + "'", str37, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "PT2147483647M" + "'", str44, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-2) + "'", int58 == (-2));
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = minutes12.getFieldType();
        int int16 = minutes11.get(durationFieldType15);
        org.joda.time.Minutes minutes18 = minutes11.plus((-1));
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = minutes21.plus(0);
        int int26 = minutes19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes21);
        org.joda.time.Minutes minutes28 = minutes21.plus((int) ' ');
        java.lang.String str29 = minutes21.toString();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean32 = minutes21.isLessThan(minutes31);
        boolean boolean33 = minutes18.isLessThan(minutes21);
        org.joda.time.Minutes minutes34 = minutes2.minus(minutes18);
        org.joda.time.MutablePeriod mutablePeriod35 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes37 = minutes2.dividedBy(2);
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes40 = minutes38.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType42 = null;
        int int43 = minutes41.get(durationFieldType42);
        org.joda.time.DurationFieldType durationFieldType44 = minutes41.getFieldType();
        int int45 = minutes40.get(durationFieldType44);
        org.joda.time.Minutes minutes47 = minutes40.plus((-1));
        org.joda.time.Minutes minutes48 = minutes47.negated();
        org.joda.time.Minutes minutes49 = minutes37.plus(minutes48);
        org.joda.time.Minutes minutes51 = minutes37.minus((int) (short) 1);
        org.joda.time.Minutes minutes52 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes54 = minutes52.dividedBy((int) 'a');
        org.joda.time.Minutes minutes56 = minutes52.plus((int) (short) 1);
        org.joda.time.Minutes minutes57 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes58 = minutes57.negated();
        org.joda.time.Minutes minutes59 = minutes57.negated();
        org.joda.time.DurationFieldType durationFieldType60 = minutes57.getFieldType();
        java.lang.String str61 = minutes57.toString();
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType63 = null;
        int int64 = minutes62.get(durationFieldType63);
        org.joda.time.MutablePeriod mutablePeriod65 = minutes62.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType66 = minutes62.getFieldType();
        int int67 = minutes57.get(durationFieldType66);
        org.joda.time.Minutes minutes68 = org.joda.time.Minutes.MAX_VALUE;
        boolean boolean69 = minutes57.isLessThan(minutes68);
        int int70 = minutes56.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes57);
        org.joda.time.Minutes minutes71 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes72 = minutes71.negated();
        org.joda.time.PeriodType periodType73 = minutes72.getPeriodType();
        org.joda.time.Minutes minutes75 = minutes72.minus(0);
        org.joda.time.MutablePeriod mutablePeriod76 = minutes75.toMutablePeriod();
        boolean boolean77 = minutes56.equals((java.lang.Object) minutes75);
        org.joda.time.Minutes minutes79 = minutes75.multipliedBy(0);
        boolean boolean80 = minutes37.isLessThan(minutes79);
        org.joda.time.Duration duration81 = minutes37.toStandardDuration();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2M" + "'", str29, "PT2M");
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-2) + "'", int45 == (-2));
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(durationFieldType60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "PT2147483647M" + "'", str61, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod65);
        org.junit.Assert.assertNotNull(durationFieldType66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2147483647 + "'", int67 == 2147483647);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertNotNull(minutes75);
        org.junit.Assert.assertNotNull(mutablePeriod76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(minutes79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(duration81);
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT214748364M");
        org.joda.time.DurationFieldType durationFieldType2 = minutes1.getFieldType();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(durationFieldType2);
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes2.toMutablePeriod();
        org.joda.time.Period period4 = minutes2.toPeriod();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod6 = minutes5.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes8 = minutes5.plus(minutes7);
        int int9 = minutes7.getMinutes();
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MAX_VALUE;
        int int14 = minutes13.size();
        int int15 = minutes10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes13);
        org.joda.time.Minutes minutes16 = minutes7.minus(minutes10);
        int int17 = minutes2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes10);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes2.toMutablePeriod();
        java.lang.Class<?> wildcardClass4 = mutablePeriod3.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        int int3 = minutes0.size();
        org.joda.time.Minutes minutes5 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = null;
        boolean boolean7 = minutes0.isGreaterThan(minutes6);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod8 = minutes7.toMutablePeriod();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod8);
        boolean boolean10 = minutes0.isLessThan(minutes9);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = minutes15.get(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = minutes15.getFieldType();
        int int19 = minutes14.get(durationFieldType18);
        org.joda.time.Minutes minutes21 = minutes14.plus((-1));
        boolean boolean22 = minutes11.isGreaterThan(minutes14);
        org.joda.time.Minutes minutes24 = minutes14.multipliedBy(2);
        org.joda.time.Minutes minutes25 = minutes24.negated();
        org.joda.time.Minutes minutes26 = minutes25.negated();
        boolean boolean27 = minutes0.isLessThan(minutes25);
        org.joda.time.Minutes minutes29 = minutes25.dividedBy((int) (short) 1);
        org.joda.time.Duration duration30 = minutes25.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod31 = minutes25.toMutablePeriod();
        org.joda.time.Minutes minutes33 = minutes25.plus((int) (byte) 0);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2) + "'", int19 == (-2));
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(minutes33);
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        boolean boolean6 = minutes0.isGreaterThan(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes8 = minutes7.negated();
        org.joda.time.Minutes minutes10 = minutes8.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes10);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = minutes15.get(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = minutes15.getFieldType();
        int int19 = minutes14.get(durationFieldType18);
        int int20 = minutes11.get(durationFieldType18);
        org.joda.time.PeriodType periodType21 = minutes11.getPeriodType();
        int int22 = minutes11.getMinutes();
        boolean boolean23 = minutes0.isLessThan(minutes11);
        int int24 = minutes11.size();
        int int25 = minutes11.size();
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes28 = minutes26.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = minutes29.get(durationFieldType30);
        org.joda.time.DurationFieldType durationFieldType32 = minutes29.getFieldType();
        int int33 = minutes28.get(durationFieldType32);
        org.joda.time.Minutes minutes35 = minutes28.plus((-1));
        org.joda.time.Minutes minutes37 = minutes28.minus((int) (short) 10);
        org.joda.time.Duration duration38 = minutes28.toStandardDuration();
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes28);
        org.joda.time.Minutes minutes40 = minutes11.plus(minutes28);
        org.joda.time.Minutes minutes42 = minutes28.plus((-24));
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2) + "'", int19 == (-2));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2147483647 + "'", int20 == 2147483647);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2147483647 + "'", int22 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-2) + "'", int33 == (-2));
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes42);
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = minutes12.getFieldType();
        int int16 = minutes11.get(durationFieldType15);
        org.joda.time.Minutes minutes18 = minutes11.plus((-1));
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = minutes21.plus(0);
        int int26 = minutes19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes21);
        org.joda.time.Minutes minutes28 = minutes21.plus((int) ' ');
        java.lang.String str29 = minutes21.toString();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean32 = minutes21.isLessThan(minutes31);
        boolean boolean33 = minutes18.isLessThan(minutes21);
        org.joda.time.Minutes minutes34 = minutes2.minus(minutes18);
        org.joda.time.MutablePeriod mutablePeriod35 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes37 = minutes2.dividedBy(2);
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes40 = minutes38.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.MAX_VALUE;
        int int42 = minutes41.size();
        int int43 = minutes38.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes41);
        org.joda.time.Minutes minutes44 = minutes2.plus(minutes38);
        int int45 = minutes38.size();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2M" + "'", str29, "PT2M");
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.Minutes minutes13 = minutes3.multipliedBy(2);
        org.joda.time.Minutes minutes14 = minutes13.negated();
        org.joda.time.DurationFieldType durationFieldType16 = minutes14.getFieldType(0);
        // The following exception was thrown during execution in test generation
        try {
            int int18 = minutes14.getValue(32);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 32");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(durationFieldType16);
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = minutes0.negated();
        org.joda.time.DurationFieldType durationFieldType3 = minutes0.getFieldType();
        java.lang.String str4 = minutes0.toString();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = minutes5.get(durationFieldType6);
        org.joda.time.MutablePeriod mutablePeriod8 = minutes5.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType9 = minutes5.getFieldType();
        int int10 = minutes0.get(durationFieldType9);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MAX_VALUE;
        boolean boolean12 = minutes0.isLessThan(minutes11);
        org.joda.time.Minutes minutes13 = null;
        org.joda.time.Minutes minutes14 = minutes11.plus(minutes13);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MAX_VALUE;
        int int16 = minutes15.size();
        int int18 = minutes15.getValue(0);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes15);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes21 = minutes20.negated();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes20);
        java.lang.String str23 = minutes20.toString();
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = minutes24.getFieldType();
        boolean boolean26 = minutes20.isSupported(durationFieldType25);
        int int27 = minutes19.get(durationFieldType25);
        boolean boolean28 = minutes14.isGreaterThan(minutes19);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes31 = minutes29.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = minutes32.get(durationFieldType33);
        org.joda.time.DurationFieldType durationFieldType35 = minutes32.getFieldType();
        int int36 = minutes31.get(durationFieldType35);
        org.joda.time.Minutes minutes38 = minutes31.plus((-1));
        org.joda.time.Minutes minutes40 = minutes31.minus((int) (short) 10);
        org.joda.time.Minutes minutes42 = minutes40.dividedBy((-2147483648));
        org.joda.time.Minutes minutes44 = minutes40.plus(100);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes47 = minutes45.minus((int) (short) 1);
        org.joda.time.Minutes minutes49 = minutes47.multipliedBy(0);
        org.joda.time.Minutes minutes50 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes52 = minutes50.dividedBy((int) 'a');
        org.joda.time.Minutes minutes54 = minutes50.plus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType55 = minutes54.getFieldType();
        boolean boolean56 = minutes47.isSupported(durationFieldType55);
        boolean boolean57 = minutes40.isSupported(durationFieldType55);
        int int58 = minutes14.get(durationFieldType55);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT2147483647M" + "'", str4, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2147483647 + "'", int10 == 2147483647);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483647 + "'", int18 == 2147483647);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT2147483647M" + "'", str23, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2147483647 + "'", int27 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-2) + "'", int36 == (-2));
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2147483647 + "'", int58 == 2147483647);
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        org.joda.time.Minutes minutes10 = minutes9.negated();
        org.joda.time.Period period11 = minutes9.toPeriod();
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = minutes12.negated();
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes18 = minutes12.minus(minutes17);
        boolean boolean19 = minutes9.isLessThan(minutes17);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes22 = minutes20.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = minutes23.get(durationFieldType24);
        org.joda.time.DurationFieldType durationFieldType26 = minutes23.getFieldType();
        int int27 = minutes22.get(durationFieldType26);
        org.joda.time.Minutes minutes29 = minutes22.plus((-1));
        org.joda.time.Minutes minutes31 = minutes22.minus((int) (short) 10);
        org.joda.time.Minutes minutes33 = minutes31.dividedBy((-2147483648));
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod35 = minutes34.toMutablePeriod();
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes37 = minutes34.plus(minutes36);
        org.joda.time.Minutes minutes38 = minutes31.minus(minutes36);
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes41 = minutes39.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes43 = minutes39.plus(0);
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes46 = minutes44.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes47 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType48 = null;
        int int49 = minutes47.get(durationFieldType48);
        org.joda.time.DurationFieldType durationFieldType50 = minutes47.getFieldType();
        int int51 = minutes46.get(durationFieldType50);
        org.joda.time.Minutes minutes53 = minutes46.plus((-1));
        org.joda.time.Minutes minutes55 = minutes46.minus((int) (short) 10);
        org.joda.time.Minutes minutes57 = minutes55.dividedBy((-2147483648));
        org.joda.time.Minutes minutes58 = minutes43.plus(minutes57);
        org.joda.time.Minutes minutes59 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes61 = minutes59.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType63 = null;
        int int64 = minutes62.get(durationFieldType63);
        org.joda.time.MutablePeriod mutablePeriod65 = minutes62.toMutablePeriod();
        org.joda.time.Minutes minutes66 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes62);
        boolean boolean67 = minutes61.isLessThan(minutes66);
        org.joda.time.DurationFieldType durationFieldType68 = minutes66.getFieldType();
        boolean boolean69 = minutes58.isSupported(durationFieldType68);
        int int70 = minutes31.get(durationFieldType68);
        org.joda.time.Minutes minutes71 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes31);
        boolean boolean72 = minutes9.isGreaterThan(minutes71);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-2) + "'", int27 == (-2));
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-2) + "'", int51 == (-2));
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod65);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(durationFieldType68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-12) + "'", int70 == (-12));
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.Duration duration2 = minutes0.toStandardDuration();
        org.joda.time.Minutes minutes4 = minutes0.minus(2);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.MutablePeriod mutablePeriod11 = minutes8.toMutablePeriod();
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes8);
        boolean boolean13 = minutes7.isLessThan(minutes12);
        int int14 = minutes7.getMinutes();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean17 = minutes7.isLessThan(minutes16);
        org.joda.time.Minutes minutes18 = minutes4.minus(minutes16);
        org.joda.time.MutablePeriod mutablePeriod19 = minutes16.toMutablePeriod();
        org.joda.time.PeriodType periodType20 = minutes16.getPeriodType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-2) + "'", int14 == (-2));
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(periodType20);
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = minutes0.get(durationFieldType1);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType4 = minutes0.getFieldType();
        org.joda.time.Minutes minutes6 = minutes0.dividedBy((-1));
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MAX_VALUE;
        int int8 = minutes7.size();
        org.joda.time.Minutes minutes9 = minutes0.plus(minutes7);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = minutes13.get(durationFieldType14);
        org.joda.time.DurationFieldType durationFieldType16 = minutes13.getFieldType();
        int int17 = minutes12.get(durationFieldType16);
        int int18 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes12);
        org.joda.time.Minutes minutes20 = minutes0.plus(2147483647);
        org.joda.time.Period period21 = minutes0.toPeriod();
        java.lang.String str22 = minutes0.toString();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-2) + "'", int17 == (-2));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PT-2147483648M" + "'", str22, "PT-2147483648M");
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.THREE;
        int int1 = minutes0.size();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod3 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = minutes4.plus(0);
        int int9 = minutes2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes4);
        org.joda.time.Minutes minutes11 = minutes4.plus((int) ' ');
        int int12 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes11);
        org.joda.time.Minutes minutes14 = minutes11.minus((int) (byte) 0);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.parseMinutes("PT0M");
        boolean boolean17 = minutes14.isLessThan(minutes16);
        org.joda.time.DurationFieldType durationFieldType18 = minutes14.getFieldType();
        org.joda.time.PeriodType periodType19 = minutes14.getPeriodType();
        org.joda.time.Minutes minutes21 = minutes14.dividedBy((-2));
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(minutes21);
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = minutes0.getFieldType();
        org.joda.time.Period period2 = minutes0.toPeriod();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration4 = minutes3.toStandardDuration();
        org.joda.time.Duration duration5 = minutes3.toStandardDuration();
        org.joda.time.Minutes minutes7 = minutes3.minus(2);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.minutes((-2147483548));
        org.joda.time.Period period10 = minutes9.toPeriod();
        org.joda.time.Minutes minutes12 = minutes9.minus(0);
        boolean boolean13 = minutes7.isGreaterThan(minutes12);
        org.joda.time.Period period14 = minutes12.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes15 = minutes0.plus(minutes12);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: -2147483648 + -2147483548");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(period14);
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        java.lang.String str3 = minutes0.toString();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = minutes4.getFieldType();
        boolean boolean6 = minutes0.isSupported(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes0.getFieldType();
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = minutes11.get(durationFieldType12);
        org.joda.time.DurationFieldType durationFieldType14 = minutes11.getFieldType();
        int int15 = minutes10.get(durationFieldType14);
        org.joda.time.Minutes minutes17 = minutes10.plus((-1));
        org.joda.time.Minutes minutes19 = minutes10.minus((int) (short) 10);
        org.joda.time.Minutes minutes20 = minutes0.plus(minutes10);
        org.joda.time.Period period21 = minutes20.toPeriod();
        org.joda.time.PeriodType periodType22 = minutes20.getPeriodType();
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.MIN_VALUE;
        int int24 = minutes23.getMinutes();
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes27 = minutes25.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = minutes28.get(durationFieldType29);
        org.joda.time.DurationFieldType durationFieldType31 = minutes28.getFieldType();
        int int32 = minutes27.get(durationFieldType31);
        org.joda.time.Minutes minutes34 = minutes27.plus((-1));
        org.joda.time.Minutes minutes36 = minutes27.minus((int) (short) 10);
        org.joda.time.Minutes minutes38 = minutes36.dividedBy((-2147483648));
        org.joda.time.Minutes minutes39 = minutes38.negated();
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes41 = minutes40.negated();
        org.joda.time.Minutes minutes42 = minutes40.negated();
        org.joda.time.Minutes minutes43 = minutes38.minus(minutes42);
        org.joda.time.Minutes minutes45 = minutes42.plus((int) 'a');
        boolean boolean46 = minutes23.isLessThan(minutes45);
        org.joda.time.Minutes minutes48 = minutes45.dividedBy((int) '4');
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes51 = minutes49.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes52 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes54 = minutes52.minus((int) (short) 1);
        org.joda.time.Minutes minutes56 = minutes54.multipliedBy(0);
        org.joda.time.Minutes minutes58 = minutes56.plus((-2147483648));
        org.joda.time.Minutes minutes59 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes60 = minutes59.negated();
        org.joda.time.Minutes minutes61 = minutes59.negated();
        boolean boolean62 = minutes58.isGreaterThan(minutes61);
        int int63 = minutes49.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes58);
        org.joda.time.MutablePeriod mutablePeriod64 = minutes58.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType65 = minutes58.getFieldType();
        int int66 = minutes48.get(durationFieldType65);
        boolean boolean67 = minutes20.equals((java.lang.Object) int66);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2147483647M" + "'", str3, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-2) + "'", int15 == (-2));
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-2147483648) + "'", int24 == (-2147483648));
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-2) + "'", int32 == (-2));
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod64);
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-41297760) + "'", int66 == (-41297760));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod5 = minutes4.toMutablePeriod();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes7 = minutes4.plus(minutes6);
        boolean boolean8 = minutes3.isLessThan(minutes4);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        org.joda.time.Minutes minutes12 = minutes10.plus(0);
        org.joda.time.Duration duration13 = minutes10.toStandardDuration();
        org.joda.time.Minutes minutes14 = minutes10.negated();
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes17 = minutes15.minus((int) (short) 0);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes19 = minutes18.negated();
        org.joda.time.PeriodType periodType20 = minutes19.getPeriodType();
        org.joda.time.Minutes minutes21 = minutes19.negated();
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes25 = minutes23.plus(0);
        org.joda.time.DurationFieldType durationFieldType26 = minutes25.getFieldType();
        int int27 = minutes21.get(durationFieldType26);
        int int28 = minutes15.get(durationFieldType26);
        boolean boolean29 = minutes10.isSupported(durationFieldType26);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2147483647 + "'", int27 == 2147483647);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-2147483648) + "'", int28 == (-2147483648));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        org.joda.time.Period period10 = minutes2.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod11 = minutes2.toMutablePeriod();
        org.joda.time.Period period12 = minutes2.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod13 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes15 = minutes2.plus((int) '4');
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes18 = minutes16.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = minutes19.get(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType22 = minutes19.getFieldType();
        int int23 = minutes18.get(durationFieldType22);
        org.joda.time.Minutes minutes25 = minutes18.plus((-1));
        org.joda.time.Minutes minutes27 = minutes18.minus((int) (short) 10);
        org.joda.time.Minutes minutes29 = minutes27.dividedBy((-2147483648));
        org.joda.time.Minutes minutes30 = minutes29.negated();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes32 = minutes31.negated();
        org.joda.time.Minutes minutes33 = minutes31.negated();
        org.joda.time.Minutes minutes34 = minutes29.minus(minutes33);
        org.joda.time.Minutes minutes36 = minutes33.plus((int) 'a');
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes36);
        org.joda.time.Minutes minutes39 = minutes36.dividedBy((int) (byte) 1);
        java.lang.String str40 = minutes36.toString();
        boolean boolean41 = minutes15.isLessThan(minutes36);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod43 = minutes42.toMutablePeriod();
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes45 = minutes42.plus(minutes44);
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod47 = minutes46.toMutablePeriod();
        org.joda.time.Minutes minutes48 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes49 = minutes46.plus(minutes48);
        boolean boolean50 = minutes45.isLessThan(minutes46);
        org.joda.time.PeriodType periodType51 = minutes45.getPeriodType();
        org.joda.time.Minutes minutes53 = minutes45.dividedBy(3);
        org.joda.time.Minutes minutes55 = minutes53.dividedBy(10);
        org.joda.time.Minutes minutes57 = minutes55.minus((-22139006));
        org.joda.time.Minutes minutes59 = minutes57.plus((-22139006));
        org.joda.time.Minutes minutes60 = minutes59.negated();
        int int61 = minutes15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes59);
        java.lang.String str62 = minutes59.toString();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-2) + "'", int23 == (-2));
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "PT-2147483550M" + "'", str40, "PT-2147483550M");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(mutablePeriod47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "PT-71582788M" + "'", str62, "PT-71582788M");
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod2 = minutes0.toMutablePeriod();
        java.lang.String str3 = minutes0.toString();
        int int4 = minutes0.size();
        org.joda.time.Minutes minutes5 = minutes0.negated();
        org.joda.time.Minutes minutes6 = null;
        org.joda.time.Minutes minutes7 = minutes0.minus(minutes6);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes9 = minutes8.negated();
        org.joda.time.DurationFieldType durationFieldType10 = minutes8.getFieldType();
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes13 = minutes12.negated();
        org.joda.time.Minutes minutes14 = minutes12.negated();
        java.lang.String str15 = minutes12.toString();
        int int16 = minutes12.size();
        org.joda.time.Minutes minutes18 = minutes12.minus(0);
        org.joda.time.Minutes minutes20 = minutes12.plus((int) (short) 0);
        boolean boolean21 = minutes8.isLessThan(minutes12);
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes23 = minutes22.negated();
        org.joda.time.Minutes minutes24 = minutes22.negated();
        boolean boolean25 = minutes12.isGreaterThan(minutes22);
        org.joda.time.Minutes minutes26 = minutes7.minus(minutes22);
        java.lang.Object obj27 = null;
        boolean boolean28 = minutes22.equals(obj27);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2M" + "'", str3, "PT2M");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PT2147483647M" + "'", str15, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        java.lang.String str10 = minutes2.toString();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod12 = minutes11.toMutablePeriod();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes17 = minutes13.plus(0);
        int int18 = minutes11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes13);
        org.joda.time.Minutes minutes20 = minutes13.plus((int) ' ');
        java.lang.String str21 = minutes13.toString();
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean24 = minutes13.isLessThan(minutes23);
        org.joda.time.Minutes minutes25 = minutes2.minus(minutes13);
        int int26 = minutes2.size();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT2M" + "'", str10, "PT2M");
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT2M" + "'", str21, "PT2M");
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.THREE;
        int int1 = minutes0.size();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod3 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = minutes4.plus(0);
        int int9 = minutes2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes4);
        org.joda.time.Minutes minutes11 = minutes4.plus((int) ' ');
        int int12 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes11);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes16 = minutes14.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = minutes17.get(durationFieldType18);
        org.joda.time.DurationFieldType durationFieldType20 = minutes17.getFieldType();
        int int21 = minutes16.get(durationFieldType20);
        org.joda.time.Minutes minutes23 = minutes16.plus((-1));
        boolean boolean24 = minutes13.isGreaterThan(minutes16);
        org.joda.time.DurationFieldType durationFieldType25 = minutes16.getFieldType();
        int int27 = minutes16.getValue((int) (short) 0);
        org.joda.time.Period period28 = minutes16.toPeriod();
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes30 = minutes29.negated();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod32 = minutes31.toMutablePeriod();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes34 = minutes31.plus(minutes33);
        int int35 = minutes30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes33);
        org.joda.time.Minutes minutes36 = minutes16.minus(minutes30);
        boolean boolean37 = minutes0.isGreaterThan(minutes30);
        org.joda.time.Minutes minutes39 = minutes30.plus(2147483647);
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes42 = minutes40.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType43 = minutes42.getFieldType();
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes45 = minutes44.negated();
        org.joda.time.Minutes minutes46 = minutes44.negated();
        java.lang.String str47 = minutes44.toString();
        int int48 = minutes44.size();
        org.joda.time.Minutes minutes50 = minutes44.minus(0);
        org.joda.time.Duration duration51 = minutes50.toStandardDuration();
        boolean boolean52 = minutes42.isGreaterThan(minutes50);
        int int53 = minutes50.getMinutes();
        boolean boolean54 = minutes30.isGreaterThan(minutes50);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType56 = minutes50.getFieldType((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-2) + "'", int21 == (-2));
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-2) + "'", int27 == (-2));
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "PT2147483647M" + "'", str47, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2147483647 + "'", int53 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType3 = minutes2.getFieldType();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes5 = minutes4.negated();
        org.joda.time.Minutes minutes6 = minutes4.negated();
        java.lang.String str7 = minutes4.toString();
        int int8 = minutes4.size();
        org.joda.time.Minutes minutes10 = minutes4.minus(0);
        org.joda.time.Duration duration11 = minutes10.toStandardDuration();
        boolean boolean12 = minutes2.isGreaterThan(minutes10);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes2);
        org.joda.time.Period period14 = minutes13.toPeriod();
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod16 = minutes15.toMutablePeriod();
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes19 = minutes17.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes21 = minutes17.plus(0);
        int int22 = minutes15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes17);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes25 = minutes23.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes27 = minutes23.plus(0);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes30 = minutes28.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = minutes31.get(durationFieldType32);
        org.joda.time.DurationFieldType durationFieldType34 = minutes31.getFieldType();
        int int35 = minutes30.get(durationFieldType34);
        org.joda.time.Minutes minutes37 = minutes30.plus((-1));
        org.joda.time.Minutes minutes39 = minutes30.minus((int) (short) 10);
        org.joda.time.Minutes minutes41 = minutes39.dividedBy((-2147483648));
        org.joda.time.Minutes minutes42 = minutes27.plus(minutes41);
        org.joda.time.Minutes minutes43 = minutes17.minus(minutes27);
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod45 = minutes44.toMutablePeriod();
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes48 = minutes46.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes50 = minutes46.plus(0);
        int int51 = minutes44.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes46);
        org.joda.time.Minutes minutes52 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes54 = minutes52.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes56 = minutes52.plus(0);
        org.joda.time.Minutes minutes57 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes59 = minutes57.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes60 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType61 = null;
        int int62 = minutes60.get(durationFieldType61);
        org.joda.time.DurationFieldType durationFieldType63 = minutes60.getFieldType();
        int int64 = minutes59.get(durationFieldType63);
        org.joda.time.Minutes minutes66 = minutes59.plus((-1));
        org.joda.time.Minutes minutes68 = minutes59.minus((int) (short) 10);
        org.joda.time.Minutes minutes70 = minutes68.dividedBy((-2147483648));
        org.joda.time.Minutes minutes71 = minutes56.plus(minutes70);
        org.joda.time.Minutes minutes72 = minutes46.minus(minutes56);
        org.joda.time.PeriodType periodType73 = minutes46.getPeriodType();
        boolean boolean74 = minutes27.isLessThan(minutes46);
        org.joda.time.Minutes minutes75 = minutes13.minus(minutes46);
        org.joda.time.Duration duration76 = minutes75.toStandardDuration();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT2147483647M" + "'", str7, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-2) + "'", int35 == (-2));
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(mutablePeriod45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-2) + "'", int64 == (-2));
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(minutes75);
        org.junit.Assert.assertNotNull(duration76);
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.Minutes minutes13 = minutes3.multipliedBy(2);
        org.joda.time.Minutes minutes14 = minutes13.negated();
        org.joda.time.Minutes minutes16 = minutes13.plus(2147483647);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes19 = minutes17.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = minutes20.get(durationFieldType21);
        org.joda.time.MutablePeriod mutablePeriod23 = minutes20.toMutablePeriod();
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes20);
        boolean boolean25 = minutes19.isLessThan(minutes24);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes28 = minutes26.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = minutes29.get(durationFieldType30);
        org.joda.time.DurationFieldType durationFieldType32 = minutes29.getFieldType();
        int int33 = minutes28.get(durationFieldType32);
        org.joda.time.Minutes minutes35 = minutes28.plus((-1));
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod37 = minutes36.toMutablePeriod();
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes40 = minutes38.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes42 = minutes38.plus(0);
        int int43 = minutes36.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes38);
        org.joda.time.Minutes minutes45 = minutes38.plus((int) ' ');
        java.lang.String str46 = minutes38.toString();
        org.joda.time.Minutes minutes48 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean49 = minutes38.isLessThan(minutes48);
        boolean boolean50 = minutes35.isLessThan(minutes38);
        org.joda.time.Minutes minutes51 = minutes19.minus(minutes35);
        org.joda.time.Minutes minutes52 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes54 = minutes52.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType55 = minutes54.getFieldType();
        org.joda.time.Minutes minutes56 = minutes54.negated();
        org.joda.time.Minutes minutes57 = minutes51.minus(minutes56);
        org.joda.time.Minutes minutes59 = org.joda.time.Minutes.parseMinutes("PT-12M");
        org.joda.time.Minutes minutes60 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration61 = minutes60.toStandardDuration();
        org.joda.time.Duration duration62 = minutes60.toStandardDuration();
        org.joda.time.Minutes minutes64 = minutes60.minus(2);
        org.joda.time.Minutes minutes65 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes67 = minutes65.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes68 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType69 = null;
        int int70 = minutes68.get(durationFieldType69);
        org.joda.time.MutablePeriod mutablePeriod71 = minutes68.toMutablePeriod();
        org.joda.time.Minutes minutes72 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes68);
        boolean boolean73 = minutes67.isLessThan(minutes72);
        int int74 = minutes67.getMinutes();
        org.joda.time.Minutes minutes76 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean77 = minutes67.isLessThan(minutes76);
        org.joda.time.Minutes minutes78 = minutes64.minus(minutes76);
        int int79 = minutes76.getMinutes();
        org.joda.time.Minutes minutes80 = minutes59.minus(minutes76);
        org.joda.time.Minutes minutes81 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes83 = minutes81.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes84 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType85 = null;
        int int86 = minutes84.get(durationFieldType85);
        org.joda.time.DurationFieldType durationFieldType87 = minutes84.getFieldType();
        int int88 = minutes83.get(durationFieldType87);
        org.joda.time.Minutes minutes90 = minutes83.plus((-1));
        org.joda.time.Minutes minutes91 = minutes90.negated();
        org.joda.time.Duration duration92 = minutes91.toStandardDuration();
        boolean boolean93 = minutes80.isGreaterThan(minutes91);
        int int94 = minutes51.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes91);
        org.joda.time.Minutes minutes95 = minutes91.negated();
        org.joda.time.MutablePeriod mutablePeriod96 = minutes91.toMutablePeriod();
        int int97 = minutes13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes91);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-2) + "'", int33 == (-2));
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "PT2M" + "'", str46, "PT2M");
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod71);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-2) + "'", int74 == (-2));
        org.junit.Assert.assertNotNull(minutes76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(minutes78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-2147483645) + "'", int79 == (-2147483645));
        org.junit.Assert.assertNotNull(minutes80);
        org.junit.Assert.assertNotNull(minutes81);
        org.junit.Assert.assertNotNull(minutes83);
        org.junit.Assert.assertNotNull(minutes84);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNotNull(durationFieldType87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-2) + "'", int88 == (-2));
        org.junit.Assert.assertNotNull(minutes90);
        org.junit.Assert.assertNotNull(minutes91);
        org.junit.Assert.assertNotNull(duration92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertNotNull(minutes95);
        org.junit.Assert.assertNotNull(mutablePeriod96);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + (-1) + "'", int97 == (-1));
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.dividedBy((int) 'a');
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((-12));
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        org.joda.time.Minutes minutes14 = minutes7.plus((-1));
        org.joda.time.Minutes minutes16 = minutes7.minus((int) (short) 10);
        org.joda.time.Minutes minutes18 = minutes16.dividedBy((-2147483648));
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes22 = minutes19.plus(minutes21);
        org.joda.time.Minutes minutes23 = minutes16.minus(minutes21);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes26 = minutes24.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes28 = minutes24.plus(0);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes31 = minutes29.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = minutes32.get(durationFieldType33);
        org.joda.time.DurationFieldType durationFieldType35 = minutes32.getFieldType();
        int int36 = minutes31.get(durationFieldType35);
        org.joda.time.Minutes minutes38 = minutes31.plus((-1));
        org.joda.time.Minutes minutes40 = minutes31.minus((int) (short) 10);
        org.joda.time.Minutes minutes42 = minutes40.dividedBy((-2147483648));
        org.joda.time.Minutes minutes43 = minutes28.plus(minutes42);
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes46 = minutes44.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes47 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType48 = null;
        int int49 = minutes47.get(durationFieldType48);
        org.joda.time.MutablePeriod mutablePeriod50 = minutes47.toMutablePeriod();
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes47);
        boolean boolean52 = minutes46.isLessThan(minutes51);
        org.joda.time.DurationFieldType durationFieldType53 = minutes51.getFieldType();
        boolean boolean54 = minutes43.isSupported(durationFieldType53);
        int int55 = minutes16.get(durationFieldType53);
        boolean boolean56 = minutes2.isSupported(durationFieldType53);
        org.joda.time.Minutes minutes57 = org.joda.time.Minutes.MIN_VALUE;
        int int58 = minutes57.getMinutes();
        org.joda.time.PeriodType periodType59 = minutes57.getPeriodType();
        org.joda.time.Minutes minutes61 = minutes57.multipliedBy(1);
        int int63 = minutes57.getValue(0);
        boolean boolean64 = minutes2.isLessThan(minutes57);
        // The following exception was thrown during execution in test generation
        try {
            int int66 = minutes57.getValue((-2));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-2) + "'", int36 == (-2));
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod50);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-12) + "'", int55 == (-12));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-2147483648) + "'", int58 == (-2147483648));
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-2147483648) + "'", int63 == (-2147483648));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.minus((int) (short) 1);
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy(0);
        org.joda.time.Minutes minutes6 = minutes4.plus((-2147483648));
        org.joda.time.Minutes minutes8 = minutes6.minus((int) (byte) 0);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes13 = minutes11.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = minutes14.get(durationFieldType15);
        org.joda.time.DurationFieldType durationFieldType17 = minutes14.getFieldType();
        int int18 = minutes13.get(durationFieldType17);
        org.joda.time.Minutes minutes20 = minutes13.plus((-1));
        boolean boolean21 = minutes10.isGreaterThan(minutes13);
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes24 = minutes22.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = minutes25.get(durationFieldType26);
        org.joda.time.DurationFieldType durationFieldType28 = minutes25.getFieldType();
        int int29 = minutes24.get(durationFieldType28);
        boolean boolean30 = minutes13.isSupported(durationFieldType28);
        boolean boolean31 = minutes9.isSupported(durationFieldType28);
        boolean boolean32 = minutes8.isSupported(durationFieldType28);
        int int33 = minutes8.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-2) + "'", int18 == (-2));
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-2) + "'", int29 == (-2));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-2147483648) + "'", int33 == (-2147483648));
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes0.getFieldType();
        // The following exception was thrown during execution in test generation
        try {
            int int9 = minutes0.getValue(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(durationFieldType7);
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType3 = minutes2.getFieldType();
        org.joda.time.Minutes minutes4 = minutes2.negated();
        org.joda.time.MutablePeriod mutablePeriod5 = minutes2.toMutablePeriod();
        int int6 = minutes2.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-2) + "'", int6 == (-2));
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        int int1 = minutes0.size();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes3 = minutes2.negated();
        org.joda.time.Minutes minutes5 = minutes3.dividedBy((int) (byte) -1);
        boolean boolean6 = minutes0.isLessThan(minutes3);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        org.joda.time.Minutes minutes10 = minutes8.minus(1);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes12 = minutes10.minus(34);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: -2147483648 + -34");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes(100);
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MAX_VALUE;
        int int3 = minutes2.size();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes5 = minutes4.negated();
        org.joda.time.Minutes minutes7 = minutes5.dividedBy((int) (byte) -1);
        boolean boolean8 = minutes2.isLessThan(minutes5);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes5);
        int int10 = minutes1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes5);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.Minutes minutes13 = minutes3.multipliedBy(2);
        org.joda.time.Minutes minutes14 = minutes13.negated();
        org.joda.time.DurationFieldType durationFieldType16 = minutes14.getFieldType(0);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod18 = minutes17.toMutablePeriod();
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes21 = minutes19.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes23 = minutes19.plus(0);
        int int24 = minutes17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes19);
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes27 = minutes25.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes29 = minutes25.plus(0);
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes32 = minutes30.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = minutes33.get(durationFieldType34);
        org.joda.time.DurationFieldType durationFieldType36 = minutes33.getFieldType();
        int int37 = minutes32.get(durationFieldType36);
        org.joda.time.Minutes minutes39 = minutes32.plus((-1));
        org.joda.time.Minutes minutes41 = minutes32.minus((int) (short) 10);
        org.joda.time.Minutes minutes43 = minutes41.dividedBy((-2147483648));
        org.joda.time.Minutes minutes44 = minutes29.plus(minutes43);
        org.joda.time.Minutes minutes45 = minutes19.minus(minutes29);
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod47 = minutes46.toMutablePeriod();
        org.joda.time.Minutes minutes48 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes49 = minutes46.plus(minutes48);
        org.joda.time.Minutes minutes50 = minutes45.plus(minutes48);
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes53 = minutes51.multipliedBy((int) (short) -1);
        org.joda.time.MutablePeriod mutablePeriod54 = minutes51.toMutablePeriod();
        org.joda.time.Minutes minutes55 = minutes48.minus(minutes51);
        boolean boolean56 = minutes14.isGreaterThan(minutes51);
        org.joda.time.Minutes minutes57 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes59 = minutes57.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes60 = minutes57.negated();
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes63 = minutes57.minus(minutes62);
        org.joda.time.Minutes minutes65 = minutes62.multipliedBy((int) (short) 1);
        org.joda.time.Minutes minutes67 = minutes62.multipliedBy(100);
        org.joda.time.DurationFieldType durationFieldType68 = minutes67.getFieldType();
        boolean boolean69 = minutes14.isSupported(durationFieldType68);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-2) + "'", int37 == (-2));
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(mutablePeriod47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(mutablePeriod54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(durationFieldType68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        org.joda.time.Period period4 = minutes3.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes6 = minutes3.minus(10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: -2147483645 + -10");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(period4);
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = minutes12.getFieldType();
        int int16 = minutes11.get(durationFieldType15);
        org.joda.time.Minutes minutes18 = minutes11.plus((-1));
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = minutes21.plus(0);
        int int26 = minutes19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes21);
        org.joda.time.Minutes minutes28 = minutes21.plus((int) ' ');
        java.lang.String str29 = minutes21.toString();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean32 = minutes21.isLessThan(minutes31);
        boolean boolean33 = minutes18.isLessThan(minutes21);
        org.joda.time.Minutes minutes34 = minutes2.minus(minutes18);
        org.joda.time.MutablePeriod mutablePeriod35 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes37 = minutes2.dividedBy(2);
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes40 = minutes38.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.MAX_VALUE;
        int int42 = minutes41.size();
        int int43 = minutes38.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes41);
        org.joda.time.Minutes minutes44 = minutes2.plus(minutes38);
        org.joda.time.Minutes minutes46 = minutes38.minus(4);
        org.joda.time.Minutes minutes48 = minutes46.minus((-2147483645));
        org.joda.time.MutablePeriod mutablePeriod49 = minutes48.toMutablePeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2M" + "'", str29, "PT2M");
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(mutablePeriod49);
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((-2147483647));
        org.joda.time.Minutes minutes2 = minutes1.negated();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.Duration duration2 = minutes0.toStandardDuration();
        org.joda.time.Minutes minutes4 = minutes0.minus(2);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.MutablePeriod mutablePeriod11 = minutes8.toMutablePeriod();
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes8);
        boolean boolean13 = minutes7.isLessThan(minutes12);
        int int14 = minutes7.getMinutes();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean17 = minutes7.isLessThan(minutes16);
        org.joda.time.Minutes minutes18 = minutes4.minus(minutes16);
        int int19 = minutes16.getMinutes();
        org.joda.time.PeriodType periodType20 = minutes16.getPeriodType();
        java.lang.Class<?> wildcardClass21 = minutes16.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-2) + "'", int14 == (-2));
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2147483645) + "'", int19 == (-2147483645));
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = minutes8.plus(0);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = minutes16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = minutes16.getFieldType();
        int int20 = minutes15.get(durationFieldType19);
        org.joda.time.Minutes minutes22 = minutes15.plus((-1));
        org.joda.time.Minutes minutes24 = minutes15.minus((int) (short) 10);
        org.joda.time.Minutes minutes26 = minutes24.dividedBy((-2147483648));
        org.joda.time.Minutes minutes27 = minutes12.plus(minutes26);
        org.joda.time.Minutes minutes28 = minutes2.minus(minutes12);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MAX_VALUE;
        int int30 = minutes29.size();
        int int32 = minutes29.getValue(0);
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes29);
        org.joda.time.Minutes minutes34 = minutes28.plus(minutes29);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-2) + "'", int20 == (-2));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2147483647 + "'", int32 == 2147483647);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = minutes0.getFieldType();
        org.joda.time.Period period2 = minutes0.toPeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.minutes((int) ' ');
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes6 = minutes5.negated();
        org.joda.time.PeriodType periodType7 = minutes6.getPeriodType();
        org.joda.time.Minutes minutes8 = minutes6.negated();
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes12 = minutes10.plus(0);
        org.joda.time.DurationFieldType durationFieldType13 = minutes12.getFieldType();
        int int14 = minutes8.get(durationFieldType13);
        boolean boolean15 = minutes4.isSupported(durationFieldType13);
        int int16 = minutes4.getMinutes();
        boolean boolean17 = minutes0.isLessThan(minutes4);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes4);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2147483647 + "'", int14 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 32 + "'", int16 == 32);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(minutes18);
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        int int1 = minutes0.getMinutes();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes3 = minutes2.negated();
        org.joda.time.Minutes minutes4 = minutes2.negated();
        org.joda.time.DurationFieldType durationFieldType5 = minutes2.getFieldType();
        int int6 = minutes0.get(durationFieldType5);
        org.joda.time.Minutes minutes8 = minutes0.dividedBy(34);
        org.joda.time.Minutes minutes10 = minutes8.minus((-2147483647));
        int int11 = minutes8.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-2147483648) + "'", int1 == (-2147483648));
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-2147483648) + "'", int6 == (-2147483648));
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-63161283) + "'", int11 == (-63161283));
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = minutes0.negated();
        org.joda.time.DurationFieldType durationFieldType3 = minutes0.getFieldType();
        java.lang.String str4 = minutes0.toString();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = minutes5.get(durationFieldType6);
        org.joda.time.MutablePeriod mutablePeriod8 = minutes5.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType9 = minutes5.getFieldType();
        int int10 = minutes0.get(durationFieldType9);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MAX_VALUE;
        boolean boolean12 = minutes0.isLessThan(minutes11);
        org.joda.time.Minutes minutes13 = null;
        org.joda.time.Minutes minutes14 = minutes11.plus(minutes13);
        java.lang.String str15 = minutes14.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes17 = minutes14.plus(2147483645);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 2147483647 + 2147483645");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT2147483647M" + "'", str4, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2147483647 + "'", int10 == 2147483647);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PT2147483647M" + "'", str15, "PT2147483647M");
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        org.joda.time.Period period10 = minutes2.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod11 = minutes2.toMutablePeriod();
        org.joda.time.Period period12 = minutes2.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod13 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes15 = minutes2.multipliedBy(100);
        org.joda.time.Minutes minutes17 = minutes15.minus((int) (short) 0);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MAX_VALUE;
        int int19 = minutes18.size();
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes21 = minutes20.negated();
        org.joda.time.Minutes minutes23 = minutes21.dividedBy((int) (byte) -1);
        boolean boolean24 = minutes18.isLessThan(minutes21);
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes21);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes21);
        boolean boolean27 = minutes17.isLessThan(minutes21);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes30 = minutes28.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = minutes31.get(durationFieldType32);
        org.joda.time.MutablePeriod mutablePeriod34 = minutes31.toMutablePeriod();
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes31);
        boolean boolean36 = minutes30.isLessThan(minutes35);
        int int37 = minutes30.getMinutes();
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes41 = minutes39.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = minutes42.get(durationFieldType43);
        org.joda.time.DurationFieldType durationFieldType45 = minutes42.getFieldType();
        int int46 = minutes41.get(durationFieldType45);
        org.joda.time.Minutes minutes48 = minutes41.plus((-1));
        boolean boolean49 = minutes38.isGreaterThan(minutes41);
        org.joda.time.DurationFieldType durationFieldType50 = minutes41.getFieldType();
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes52 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType53 = minutes52.getPeriodType();
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes55 = minutes54.negated();
        org.joda.time.Minutes minutes56 = minutes54.negated();
        org.joda.time.DurationFieldType durationFieldType57 = minutes54.getFieldType();
        java.lang.String str58 = minutes54.toString();
        boolean boolean59 = minutes52.isGreaterThan(minutes54);
        boolean boolean60 = minutes51.equals((java.lang.Object) minutes52);
        org.joda.time.Minutes minutes61 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes51);
        int int62 = minutes41.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes51);
        int int63 = minutes30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes51);
        boolean boolean64 = minutes17.isGreaterThan(minutes51);
        java.lang.String str65 = minutes51.toString();
        org.joda.time.Minutes minutes67 = minutes51.dividedBy((-24));
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-2) + "'", int37 == (-2));
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-2) + "'", int46 == (-2));
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "PT2147483647M" + "'", str58, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "PT2147483647M" + "'", str65, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes67);
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        int int1 = minutes0.getMinutes();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes9 = minutes7.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = minutes10.get(durationFieldType11);
        org.joda.time.DurationFieldType durationFieldType13 = minutes10.getFieldType();
        int int14 = minutes9.get(durationFieldType13);
        org.joda.time.Minutes minutes16 = minutes9.plus((-1));
        org.joda.time.Minutes minutes18 = minutes9.minus((int) (short) 10);
        org.joda.time.Minutes minutes20 = minutes18.dividedBy((-2147483648));
        org.joda.time.Minutes minutes21 = minutes6.plus(minutes20);
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes24 = minutes22.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = minutes25.get(durationFieldType26);
        org.joda.time.MutablePeriod mutablePeriod28 = minutes25.toMutablePeriod();
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes25);
        boolean boolean30 = minutes24.isLessThan(minutes29);
        org.joda.time.DurationFieldType durationFieldType31 = minutes29.getFieldType();
        boolean boolean32 = minutes21.isSupported(durationFieldType31);
        boolean boolean33 = minutes0.isLessThan(minutes21);
        org.joda.time.Minutes minutes35 = minutes21.plus((int) ' ');
        java.lang.Class<?> wildcardClass36 = minutes21.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-2147483648) + "'", int1 == (-2147483648));
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-2) + "'", int14 == (-2));
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((-41297760));
        org.junit.Assert.assertNotNull(minutes1);
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod5 = minutes4.toMutablePeriod();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes8 = minutes6.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes10 = minutes6.plus(0);
        int int11 = minutes4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes6);
        org.joda.time.Duration duration12 = minutes4.toStandardDuration();
        org.joda.time.Minutes minutes13 = minutes0.plus(minutes4);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod15 = minutes14.toMutablePeriod();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes17 = minutes14.plus(minutes16);
        org.joda.time.Minutes minutes19 = minutes17.plus((int) 'a');
        org.joda.time.Minutes minutes21 = minutes19.minus(4);
        int int22 = minutes4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes19);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (byte) 0);
        org.joda.time.Minutes minutes4 = minutes1.negated();
        org.joda.time.DurationFieldType durationFieldType5 = minutes1.getFieldType();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes8 = minutes6.minus((int) (short) 0);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes10 = minutes9.negated();
        org.joda.time.PeriodType periodType11 = minutes10.getPeriodType();
        org.joda.time.Minutes minutes12 = minutes10.negated();
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes16 = minutes14.plus(0);
        org.joda.time.DurationFieldType durationFieldType17 = minutes16.getFieldType();
        int int18 = minutes12.get(durationFieldType17);
        int int19 = minutes6.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType20 = minutes6.getFieldType();
        boolean boolean21 = minutes1.isSupported(durationFieldType20);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483647 + "'", int18 == 2147483647);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2147483648) + "'", int19 == (-2147483648));
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod2 = minutes0.toMutablePeriod();
        java.lang.String str3 = minutes0.toString();
        int int4 = minutes0.size();
        org.joda.time.Minutes minutes5 = minutes0.negated();
        org.joda.time.Minutes minutes6 = null;
        org.joda.time.Minutes minutes7 = minutes0.minus(minutes6);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes9 = minutes8.negated();
        org.joda.time.DurationFieldType durationFieldType10 = minutes8.getFieldType();
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes13 = minutes12.negated();
        org.joda.time.Minutes minutes14 = minutes12.negated();
        java.lang.String str15 = minutes12.toString();
        int int16 = minutes12.size();
        org.joda.time.Minutes minutes18 = minutes12.minus(0);
        org.joda.time.Minutes minutes20 = minutes12.plus((int) (short) 0);
        boolean boolean21 = minutes8.isLessThan(minutes12);
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes23 = minutes22.negated();
        org.joda.time.Minutes minutes24 = minutes22.negated();
        boolean boolean25 = minutes12.isGreaterThan(minutes22);
        org.joda.time.Minutes minutes26 = minutes7.minus(minutes22);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod28 = minutes27.toMutablePeriod();
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes31 = minutes29.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes33 = minutes29.plus(0);
        int int34 = minutes27.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes29);
        org.joda.time.Minutes minutes36 = minutes29.plus((int) ' ');
        java.lang.String str37 = minutes29.toString();
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean40 = minutes29.isLessThan(minutes39);
        org.joda.time.Minutes minutes41 = minutes7.minus(minutes29);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes44 = minutes42.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType46 = null;
        int int47 = minutes45.get(durationFieldType46);
        org.joda.time.DurationFieldType durationFieldType48 = minutes45.getFieldType();
        int int49 = minutes44.get(durationFieldType48);
        org.joda.time.Minutes minutes51 = minutes44.plus((-1));
        org.joda.time.Minutes minutes53 = minutes44.minus((int) (short) 10);
        org.joda.time.Minutes minutes55 = minutes53.dividedBy((-2147483648));
        org.joda.time.Minutes minutes56 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod57 = minutes56.toMutablePeriod();
        org.joda.time.Minutes minutes58 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes59 = minutes56.plus(minutes58);
        org.joda.time.Minutes minutes60 = minutes53.minus(minutes58);
        org.joda.time.Minutes minutes61 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes63 = minutes61.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes65 = minutes61.plus(0);
        org.joda.time.Minutes minutes66 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes68 = minutes66.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes69 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType70 = null;
        int int71 = minutes69.get(durationFieldType70);
        org.joda.time.DurationFieldType durationFieldType72 = minutes69.getFieldType();
        int int73 = minutes68.get(durationFieldType72);
        org.joda.time.Minutes minutes75 = minutes68.plus((-1));
        org.joda.time.Minutes minutes77 = minutes68.minus((int) (short) 10);
        org.joda.time.Minutes minutes79 = minutes77.dividedBy((-2147483648));
        org.joda.time.Minutes minutes80 = minutes65.plus(minutes79);
        org.joda.time.Minutes minutes81 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes83 = minutes81.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes84 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType85 = null;
        int int86 = minutes84.get(durationFieldType85);
        org.joda.time.MutablePeriod mutablePeriod87 = minutes84.toMutablePeriod();
        org.joda.time.Minutes minutes88 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes84);
        boolean boolean89 = minutes83.isLessThan(minutes88);
        org.joda.time.DurationFieldType durationFieldType90 = minutes88.getFieldType();
        boolean boolean91 = minutes80.isSupported(durationFieldType90);
        int int92 = minutes53.get(durationFieldType90);
        boolean boolean93 = minutes7.isSupported(durationFieldType90);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2M" + "'", str3, "PT2M");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PT2147483647M" + "'", str15, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "PT2M" + "'", str37, "PT2M");
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-2) + "'", int49 == (-2));
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(mutablePeriod57);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(durationFieldType72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-2) + "'", int73 == (-2));
        org.junit.Assert.assertNotNull(minutes75);
        org.junit.Assert.assertNotNull(minutes77);
        org.junit.Assert.assertNotNull(minutes79);
        org.junit.Assert.assertNotNull(minutes80);
        org.junit.Assert.assertNotNull(minutes81);
        org.junit.Assert.assertNotNull(minutes83);
        org.junit.Assert.assertNotNull(minutes84);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod87);
        org.junit.Assert.assertNotNull(minutes88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(durationFieldType90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-12) + "'", int92 == (-12));
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        org.joda.time.Minutes minutes14 = minutes7.plus((-1));
        org.joda.time.Minutes minutes16 = minutes7.minus((int) (short) 10);
        org.joda.time.Minutes minutes18 = minutes16.dividedBy((-2147483648));
        org.joda.time.Minutes minutes19 = minutes4.plus(minutes18);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType21 = minutes20.getPeriodType();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes23 = minutes22.negated();
        org.joda.time.Minutes minutes24 = minutes22.negated();
        org.joda.time.DurationFieldType durationFieldType25 = minutes22.getFieldType();
        java.lang.String str26 = minutes22.toString();
        boolean boolean27 = minutes20.isGreaterThan(minutes22);
        boolean boolean28 = minutes4.isLessThan(minutes22);
        org.joda.time.PeriodType periodType29 = minutes22.getPeriodType();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes33 = minutes31.plus(0);
        org.joda.time.DurationFieldType durationFieldType34 = minutes33.getFieldType();
        boolean boolean35 = minutes22.isSupported(durationFieldType34);
        org.joda.time.PeriodType periodType36 = minutes22.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType37 = minutes22.getFieldType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "PT2147483647M" + "'", str26, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(durationFieldType37);
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        int int4 = minutes3.getMinutes();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes8 = minutes6.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = minutes9.get(durationFieldType10);
        org.joda.time.DurationFieldType durationFieldType12 = minutes9.getFieldType();
        int int13 = minutes8.get(durationFieldType12);
        org.joda.time.Minutes minutes15 = minutes8.plus((-1));
        boolean boolean16 = minutes5.isGreaterThan(minutes8);
        org.joda.time.Minutes minutes18 = minutes8.multipliedBy(2);
        org.joda.time.PeriodType periodType19 = minutes8.getPeriodType();
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes22 = minutes20.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes24 = minutes20.plus(0);
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes27 = minutes25.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = minutes28.get(durationFieldType29);
        org.joda.time.DurationFieldType durationFieldType31 = minutes28.getFieldType();
        int int32 = minutes27.get(durationFieldType31);
        org.joda.time.Minutes minutes34 = minutes27.plus((-1));
        org.joda.time.Minutes minutes36 = minutes27.minus((int) (short) 10);
        org.joda.time.Minutes minutes38 = minutes36.dividedBy((-2147483648));
        org.joda.time.Minutes minutes39 = minutes24.plus(minutes38);
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes42 = minutes40.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes43 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType44 = null;
        int int45 = minutes43.get(durationFieldType44);
        org.joda.time.MutablePeriod mutablePeriod46 = minutes43.toMutablePeriod();
        org.joda.time.Minutes minutes47 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes43);
        boolean boolean48 = minutes42.isLessThan(minutes47);
        org.joda.time.DurationFieldType durationFieldType49 = minutes47.getFieldType();
        boolean boolean50 = minutes39.isSupported(durationFieldType49);
        org.joda.time.Minutes minutes52 = minutes39.plus((int) (short) -1);
        int int53 = minutes52.size();
        boolean boolean54 = minutes8.isLessThan(minutes52);
        org.joda.time.MutablePeriod mutablePeriod55 = minutes8.toMutablePeriod();
        boolean boolean56 = minutes3.equals((java.lang.Object) mutablePeriod55);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-2) + "'", int4 == (-2));
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-2) + "'", int13 == (-2));
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-2) + "'", int32 == (-2));
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod46);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(mutablePeriod55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes8 = minutes5.multipliedBy((int) (short) 1);
        org.joda.time.Minutes minutes10 = minutes5.multipliedBy(100);
        org.joda.time.Minutes minutes12 = minutes5.dividedBy((int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType14 = minutes12.getFieldType((-71582788));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -71582788");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.Minutes minutes13 = minutes3.multipliedBy(2);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType15 = minutes3.getFieldType((-6));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -6");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(minutes13);
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes5 = minutes3.minus((int) (short) 1);
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy(0);
        org.joda.time.Minutes minutes9 = minutes7.plus((-2147483648));
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes11 = minutes10.negated();
        org.joda.time.Minutes minutes12 = minutes10.negated();
        boolean boolean13 = minutes9.isGreaterThan(minutes12);
        int int14 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes9);
        org.joda.time.MutablePeriod mutablePeriod15 = minutes9.toMutablePeriod();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration17 = minutes16.toStandardDuration();
        org.joda.time.Duration duration18 = minutes16.toStandardDuration();
        org.joda.time.Minutes minutes20 = minutes16.minus(2);
        boolean boolean21 = minutes9.isGreaterThan(minutes20);
        int int22 = minutes20.getMinutes();
        org.joda.time.Minutes minutes24 = minutes20.multipliedBy((int) (byte) 0);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(minutes24);
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod4 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes9 = minutes5.plus(0);
        int int10 = minutes3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes5);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes13 = minutes11.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = minutes11.plus(0);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes18 = minutes16.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = minutes19.get(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType22 = minutes19.getFieldType();
        int int23 = minutes18.get(durationFieldType22);
        org.joda.time.Minutes minutes25 = minutes18.plus((-1));
        org.joda.time.Minutes minutes27 = minutes18.minus((int) (short) 10);
        org.joda.time.Minutes minutes29 = minutes27.dividedBy((-2147483648));
        org.joda.time.Minutes minutes30 = minutes15.plus(minutes29);
        org.joda.time.Minutes minutes31 = minutes5.minus(minutes15);
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod33 = minutes32.toMutablePeriod();
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes35 = minutes32.plus(minutes34);
        org.joda.time.Minutes minutes36 = minutes31.plus(minutes34);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes39 = minutes37.multipliedBy((int) (short) -1);
        org.joda.time.MutablePeriod mutablePeriod40 = minutes37.toMutablePeriod();
        org.joda.time.Minutes minutes41 = minutes34.minus(minutes37);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes44 = minutes42.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType46 = null;
        int int47 = minutes45.get(durationFieldType46);
        org.joda.time.DurationFieldType durationFieldType48 = minutes45.getFieldType();
        int int49 = minutes44.get(durationFieldType48);
        org.joda.time.Minutes minutes51 = minutes44.plus((-1));
        org.joda.time.Minutes minutes53 = minutes44.minus((int) (short) 10);
        org.joda.time.Minutes minutes55 = minutes53.dividedBy((-2147483648));
        org.joda.time.Minutes minutes56 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes53);
        java.lang.Class<?> wildcardClass57 = minutes53.getClass();
        boolean boolean58 = minutes34.equals((java.lang.Object) minutes53);
        boolean boolean59 = minutes0.isLessThan(minutes34);
        org.joda.time.Minutes minutes61 = org.joda.time.Minutes.minutes((int) (byte) -1);
        boolean boolean62 = minutes0.isGreaterThan(minutes61);
        org.joda.time.Minutes minutes63 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes65 = minutes63.minus((int) (short) 0);
        org.joda.time.Minutes minutes66 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes67 = minutes66.negated();
        org.joda.time.Minutes minutes68 = minutes66.negated();
        org.joda.time.DurationFieldType durationFieldType69 = minutes66.getFieldType();
        boolean boolean70 = minutes63.isSupported(durationFieldType69);
        boolean boolean71 = minutes61.isSupported(durationFieldType69);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-2) + "'", int23 == (-2));
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-2) + "'", int49 == (-2));
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(durationFieldType69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        int int1 = minutes0.getMinutes();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = minutes5.get(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType8 = minutes5.getFieldType();
        int int9 = minutes4.get(durationFieldType8);
        org.joda.time.Minutes minutes11 = minutes4.plus((-1));
        org.joda.time.Minutes minutes13 = minutes4.minus((int) (short) 10);
        org.joda.time.Minutes minutes15 = minutes13.dividedBy((-2147483648));
        org.joda.time.Minutes minutes16 = minutes15.negated();
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes18 = minutes17.negated();
        org.joda.time.Minutes minutes19 = minutes17.negated();
        org.joda.time.Minutes minutes20 = minutes15.minus(minutes19);
        org.joda.time.Minutes minutes22 = minutes19.plus((int) 'a');
        boolean boolean23 = minutes0.isLessThan(minutes22);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes26 = minutes24.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = minutes27.get(durationFieldType28);
        org.joda.time.MutablePeriod mutablePeriod30 = minutes27.toMutablePeriod();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes27);
        boolean boolean32 = minutes26.isLessThan(minutes31);
        int int33 = minutes26.getMinutes();
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean36 = minutes26.isLessThan(minutes35);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration38 = minutes37.toStandardDuration();
        org.joda.time.Duration duration39 = minutes37.toStandardDuration();
        org.joda.time.Minutes minutes41 = minutes37.minus(2);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes44 = minutes42.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes45 = minutes42.negated();
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes47 = minutes46.negated();
        org.joda.time.Minutes minutes48 = minutes46.negated();
        boolean boolean49 = minutes42.equals((java.lang.Object) minutes48);
        boolean boolean50 = minutes41.isLessThan(minutes42);
        org.joda.time.Minutes minutes51 = minutes35.minus(minutes42);
        org.joda.time.Minutes minutes52 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes53 = minutes52.negated();
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes52);
        java.lang.String str55 = minutes52.toString();
        org.joda.time.Minutes minutes56 = minutes51.plus(minutes52);
        org.joda.time.Minutes minutes58 = org.joda.time.Minutes.minutes((int) (short) -1);
        int int59 = minutes58.size();
        boolean boolean60 = minutes56.isGreaterThan(minutes58);
        int int61 = minutes22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes58);
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes63 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType64 = minutes63.getPeriodType();
        org.joda.time.Minutes minutes65 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes66 = minutes65.negated();
        org.joda.time.Minutes minutes67 = minutes65.negated();
        org.joda.time.DurationFieldType durationFieldType68 = minutes65.getFieldType();
        java.lang.String str69 = minutes65.toString();
        boolean boolean70 = minutes63.isGreaterThan(minutes65);
        boolean boolean71 = minutes62.equals((java.lang.Object) minutes63);
        org.joda.time.Minutes minutes72 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes62);
        org.joda.time.Minutes minutes73 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes74 = minutes73.negated();
        org.joda.time.Minutes minutes75 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes73);
        org.joda.time.Minutes minutes76 = minutes72.minus(minutes75);
        org.joda.time.Minutes minutes78 = minutes72.minus(34);
        org.joda.time.Duration duration79 = minutes78.toStandardDuration();
        org.joda.time.Minutes minutes80 = minutes58.minus(minutes78);
        org.joda.time.Minutes minutes82 = minutes58.plus(98);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-2147483648) + "'", int1 == (-2147483648));
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-2) + "'", int9 == (-2));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-2) + "'", int33 == (-2));
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "PT2147483647M" + "'", str55, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(durationFieldType68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "PT2147483647M" + "'", str69, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertNotNull(minutes73);
        org.junit.Assert.assertNotNull(minutes74);
        org.junit.Assert.assertNotNull(minutes75);
        org.junit.Assert.assertNotNull(minutes76);
        org.junit.Assert.assertNotNull(minutes78);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertNotNull(minutes80);
        org.junit.Assert.assertNotNull(minutes82);
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        java.lang.String str10 = minutes2.toString();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = minutes11.get(durationFieldType12);
        org.joda.time.MutablePeriod mutablePeriod14 = minutes11.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType15 = minutes11.getFieldType();
        org.joda.time.Minutes minutes17 = minutes11.dividedBy((-1));
        org.joda.time.Minutes minutes19 = minutes11.dividedBy(2147483646);
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.minutes((int) (byte) 10);
        boolean boolean22 = minutes11.isLessThan(minutes21);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes25 = minutes23.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = minutes26.get(durationFieldType27);
        org.joda.time.MutablePeriod mutablePeriod29 = minutes26.toMutablePeriod();
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes26);
        boolean boolean31 = minutes25.isLessThan(minutes30);
        org.joda.time.Minutes minutes32 = minutes21.plus(minutes25);
        boolean boolean33 = minutes2.isGreaterThan(minutes21);
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.minutes((int) (byte) -1);
        org.joda.time.Minutes minutes36 = minutes21.minus(minutes35);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration38 = minutes37.toStandardDuration();
        org.joda.time.Duration duration39 = minutes37.toStandardDuration();
        org.joda.time.Minutes minutes41 = minutes37.minus(2);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes44 = minutes42.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType46 = null;
        int int47 = minutes45.get(durationFieldType46);
        org.joda.time.MutablePeriod mutablePeriod48 = minutes45.toMutablePeriod();
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes45);
        boolean boolean50 = minutes44.isLessThan(minutes49);
        int int51 = minutes44.getMinutes();
        org.joda.time.Minutes minutes53 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean54 = minutes44.isLessThan(minutes53);
        org.joda.time.Minutes minutes55 = minutes41.minus(minutes53);
        org.joda.time.Minutes minutes56 = minutes36.minus(minutes55);
        org.joda.time.Minutes minutes57 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration58 = minutes57.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod59 = minutes57.toMutablePeriod();
        org.joda.time.Minutes minutes60 = org.joda.time.Minutes.MAX_VALUE;
        int int61 = minutes60.size();
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes63 = minutes62.negated();
        org.joda.time.Minutes minutes65 = minutes63.dividedBy((int) (byte) -1);
        boolean boolean66 = minutes60.isLessThan(minutes63);
        boolean boolean67 = minutes57.isLessThan(minutes60);
        org.joda.time.Duration duration68 = minutes57.toStandardDuration();
        org.joda.time.Minutes minutes69 = minutes56.minus(minutes57);
        org.joda.time.Minutes minutes70 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType71 = null;
        int int72 = minutes70.get(durationFieldType71);
        org.joda.time.MutablePeriod mutablePeriod73 = minutes70.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType74 = minutes70.getFieldType();
        int int75 = minutes56.get(durationFieldType74);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT2M" + "'", str10, "PT2M");
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-2) + "'", int51 == (-2));
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertNotNull(mutablePeriod59);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod73);
        org.junit.Assert.assertNotNull(durationFieldType74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-2147483634) + "'", int75 == (-2147483634));
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes1.plus(0);
        org.joda.time.Minutes minutes5 = minutes3.multipliedBy((int) (byte) -1);
        org.joda.time.Minutes minutes6 = minutes5.negated();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.Duration duration2 = minutes0.toStandardDuration();
        org.joda.time.Minutes minutes4 = minutes0.minus(2);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.MutablePeriod mutablePeriod11 = minutes8.toMutablePeriod();
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes8);
        boolean boolean13 = minutes7.isLessThan(minutes12);
        int int14 = minutes7.getMinutes();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean17 = minutes7.isLessThan(minutes16);
        org.joda.time.Minutes minutes18 = minutes4.minus(minutes16);
        int int20 = minutes4.getValue(0);
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes22 = minutes21.negated();
        org.joda.time.Minutes minutes23 = minutes21.negated();
        org.joda.time.DurationFieldType durationFieldType24 = minutes21.getFieldType();
        java.lang.String str25 = minutes21.toString();
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes27 = minutes26.negated();
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes26);
        int int29 = minutes26.size();
        org.joda.time.MutablePeriod mutablePeriod30 = minutes26.toMutablePeriod();
        boolean boolean31 = minutes21.equals((java.lang.Object) minutes26);
        org.joda.time.DurationFieldType durationFieldType33 = minutes26.getFieldType((int) (short) 0);
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod35 = minutes34.toMutablePeriod();
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes38 = minutes36.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes40 = minutes36.plus(0);
        int int41 = minutes34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes36);
        org.joda.time.Minutes minutes43 = minutes36.plus((int) ' ');
        java.lang.String str44 = minutes36.toString();
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean47 = minutes36.isLessThan(minutes46);
        org.joda.time.Period period48 = minutes46.toPeriod();
        boolean boolean49 = minutes26.isGreaterThan(minutes46);
        org.joda.time.Period period50 = minutes26.toPeriod();
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) period50);
        org.joda.time.Minutes minutes52 = minutes51.negated();
        org.joda.time.Minutes minutes53 = minutes51.negated();
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod55 = minutes54.toMutablePeriod();
        org.joda.time.Minutes minutes56 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes57 = minutes54.plus(minutes56);
        int int58 = minutes57.getMinutes();
        org.joda.time.Minutes minutes59 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes61 = minutes59.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType63 = null;
        int int64 = minutes62.get(durationFieldType63);
        org.joda.time.DurationFieldType durationFieldType65 = minutes62.getFieldType();
        int int66 = minutes61.get(durationFieldType65);
        org.joda.time.Minutes minutes68 = minutes61.plus((-1));
        org.joda.time.Minutes minutes70 = minutes61.minus((int) (short) 10);
        org.joda.time.Minutes minutes72 = minutes70.dividedBy((-2147483648));
        org.joda.time.Minutes minutes74 = minutes70.plus(100);
        org.joda.time.DurationFieldType durationFieldType75 = minutes74.getFieldType();
        boolean boolean76 = minutes57.isSupported(durationFieldType75);
        boolean boolean77 = minutes53.isSupported(durationFieldType75);
        boolean boolean78 = minutes4.isSupported(durationFieldType75);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-2) + "'", int14 == (-2));
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "PT2147483647M" + "'", str25, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "PT2M" + "'", str44, "PT2M");
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(mutablePeriod55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-2147483645) + "'", int58 == (-2147483645));
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-2) + "'", int66 == (-2));
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertNotNull(minutes74);
        org.junit.Assert.assertNotNull(durationFieldType75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        int int1 = minutes0.size();
        int int3 = minutes0.getValue(0);
        org.joda.time.Minutes minutes4 = minutes0.negated();
        java.lang.String str5 = minutes0.toString();
        org.joda.time.PeriodType periodType6 = minutes0.getPeriodType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2147483647 + "'", int3 == 2147483647);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PT2147483647M" + "'", str5, "PT2147483647M");
        org.junit.Assert.assertNotNull(periodType6);
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.DurationFieldType durationFieldType12 = minutes3.getFieldType();
        org.joda.time.Period period13 = minutes3.toPeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(period13);
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        boolean boolean6 = minutes0.isGreaterThan(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes8 = minutes7.negated();
        org.joda.time.Minutes minutes10 = minutes8.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes10);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = minutes15.get(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = minutes15.getFieldType();
        int int19 = minutes14.get(durationFieldType18);
        int int20 = minutes11.get(durationFieldType18);
        org.joda.time.PeriodType periodType21 = minutes11.getPeriodType();
        int int22 = minutes11.getMinutes();
        boolean boolean23 = minutes0.isLessThan(minutes11);
        int int24 = minutes11.size();
        int int25 = minutes11.size();
        int int26 = minutes11.getMinutes();
        int int27 = minutes11.size();
        org.joda.time.Period period28 = minutes11.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod29 = minutes11.toMutablePeriod();
        // The following exception was thrown during execution in test generation
        try {
            int int31 = minutes11.getValue(4);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2) + "'", int19 == (-2));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2147483647 + "'", int20 == 2147483647);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2147483647 + "'", int22 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2147483647 + "'", int26 == 2147483647);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        int int9 = minutes2.getMinutes();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean12 = minutes2.isLessThan(minutes11);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration14 = minutes13.toStandardDuration();
        org.joda.time.Duration duration15 = minutes13.toStandardDuration();
        org.joda.time.Minutes minutes17 = minutes13.minus(2);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes20 = minutes18.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes21 = minutes18.negated();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes23 = minutes22.negated();
        org.joda.time.Minutes minutes24 = minutes22.negated();
        boolean boolean25 = minutes18.equals((java.lang.Object) minutes24);
        boolean boolean26 = minutes17.isLessThan(minutes18);
        org.joda.time.Minutes minutes27 = minutes11.minus(minutes18);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes29 = minutes28.negated();
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes28);
        java.lang.String str31 = minutes28.toString();
        org.joda.time.Minutes minutes32 = minutes27.plus(minutes28);
        org.joda.time.Minutes minutes33 = minutes27.negated();
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = minutes34.get(durationFieldType35);
        org.joda.time.MutablePeriod mutablePeriod37 = minutes34.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType38 = minutes34.getFieldType();
        org.joda.time.Minutes minutes40 = minutes34.dividedBy((-1));
        org.joda.time.Minutes minutes42 = minutes34.dividedBy(2147483646);
        org.joda.time.DurationFieldType durationFieldType43 = minutes34.getFieldType();
        boolean boolean44 = minutes27.isSupported(durationFieldType43);
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.minutes(100);
        org.joda.time.PeriodType periodType47 = minutes46.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType48 = minutes46.getFieldType();
        boolean boolean49 = minutes27.isSupported(durationFieldType48);
        java.lang.Class<?> wildcardClass50 = durationFieldType48.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-2) + "'", int9 == (-2));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "PT2147483647M" + "'", str31, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        int int3 = minutes0.size();
        org.joda.time.MutablePeriod mutablePeriod4 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes7 = minutes5.minus((int) (short) 1);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.minutes(10);
        org.joda.time.Hours hours10 = minutes9.toStandardHours();
        // The following exception was thrown during execution in test generation
        try {
            int int11 = minutes5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) hours10);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class org.joda.time.Minutes cannot be compared to class org.joda.time.Hours");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(hours10);
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((int) (byte) 10);
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration3 = minutes2.toStandardDuration();
        org.joda.time.Duration duration4 = minutes2.toStandardDuration();
        org.joda.time.Minutes minutes6 = minutes2.minus(2);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        int int8 = minutes7.getMinutes();
        org.joda.time.PeriodType periodType9 = minutes7.getPeriodType();
        org.joda.time.Minutes minutes10 = null;
        org.joda.time.Minutes minutes11 = minutes7.plus(minutes10);
        boolean boolean12 = minutes2.isLessThan(minutes11);
        boolean boolean13 = minutes1.isGreaterThan(minutes2);
        int int14 = minutes2.getMinutes();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2147483648) + "'", int8 == (-2147483648));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = minutes0.negated();
        java.lang.String str3 = minutes0.toString();
        org.joda.time.Minutes minutes5 = minutes0.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes9 = minutes7.multipliedBy((int) (byte) 0);
        boolean boolean10 = minutes5.equals((java.lang.Object) minutes7);
        org.joda.time.MutablePeriod mutablePeriod11 = minutes5.toMutablePeriod();
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = minutes15.get(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = minutes15.getFieldType();
        int int19 = minutes14.get(durationFieldType18);
        org.joda.time.Minutes minutes21 = minutes14.plus((-1));
        org.joda.time.Minutes minutes23 = minutes14.minus((int) (short) 10);
        org.joda.time.Minutes minutes25 = minutes23.dividedBy((-2147483648));
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod27 = minutes26.toMutablePeriod();
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes29 = minutes26.plus(minutes28);
        org.joda.time.Minutes minutes30 = minutes23.minus(minutes28);
        org.joda.time.MutablePeriod mutablePeriod31 = minutes23.toMutablePeriod();
        org.joda.time.Minutes minutes32 = minutes5.plus(minutes23);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2147483647M" + "'", str3, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2) + "'", int19 == (-2));
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(minutes32);
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType2 = minutes1.getPeriodType();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes4 = minutes3.negated();
        org.joda.time.Minutes minutes5 = minutes3.negated();
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        java.lang.String str7 = minutes3.toString();
        boolean boolean8 = minutes1.isGreaterThan(minutes3);
        boolean boolean9 = minutes0.equals((java.lang.Object) minutes1);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes12 = minutes11.negated();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes11);
        org.joda.time.Minutes minutes14 = minutes10.minus(minutes13);
        org.joda.time.DurationFieldType durationFieldType15 = minutes10.getFieldType();
        int int16 = minutes10.size();
        org.joda.time.Minutes minutes17 = minutes10.negated();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT2147483647M" + "'", str7, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(minutes17);
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes2 = minutes0.minus((int) '4');
        org.joda.time.Minutes minutes4 = minutes0.plus((int) (short) 1);
        org.joda.time.PeriodType periodType5 = minutes0.getPeriodType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(periodType5);
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes11 = minutes10.negated();
        org.joda.time.Minutes minutes12 = minutes10.negated();
        org.joda.time.DurationFieldType durationFieldType13 = minutes10.getFieldType();
        java.lang.String str14 = minutes10.toString();
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes16 = minutes15.negated();
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes15);
        int int18 = minutes15.size();
        org.joda.time.MutablePeriod mutablePeriod19 = minutes15.toMutablePeriod();
        boolean boolean20 = minutes10.equals((java.lang.Object) minutes15);
        org.joda.time.DurationFieldType durationFieldType22 = minutes15.getFieldType((int) (short) 0);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod24 = minutes23.toMutablePeriod();
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes27 = minutes25.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes29 = minutes25.plus(0);
        int int30 = minutes23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes25);
        org.joda.time.Minutes minutes32 = minutes25.plus((int) ' ');
        java.lang.String str33 = minutes25.toString();
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean36 = minutes25.isLessThan(minutes35);
        org.joda.time.Period period37 = minutes35.toPeriod();
        boolean boolean38 = minutes15.isGreaterThan(minutes35);
        org.joda.time.Period period39 = minutes15.toPeriod();
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) period39);
        org.joda.time.Minutes minutes41 = minutes9.minus(minutes40);
        org.joda.time.Minutes minutes43 = minutes41.dividedBy((-2));
        java.lang.Class<?> wildcardClass44 = minutes41.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "PT2147483647M" + "'", str14, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "PT2M" + "'", str33, "PT2M");
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes5 = minutes3.minus((int) (short) 1);
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy(0);
        org.joda.time.Minutes minutes9 = minutes7.plus((-2147483648));
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes11 = minutes10.negated();
        org.joda.time.Minutes minutes12 = minutes10.negated();
        boolean boolean13 = minutes9.isGreaterThan(minutes12);
        int int14 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes9);
        org.joda.time.MutablePeriod mutablePeriod15 = minutes9.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType16 = minutes9.getFieldType();
        org.joda.time.DurationFieldType durationFieldType17 = minutes9.getFieldType();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType20 = minutes19.getPeriodType();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes22 = minutes21.negated();
        org.joda.time.Minutes minutes23 = minutes21.negated();
        org.joda.time.DurationFieldType durationFieldType24 = minutes21.getFieldType();
        java.lang.String str25 = minutes21.toString();
        boolean boolean26 = minutes19.isGreaterThan(minutes21);
        boolean boolean27 = minutes18.equals((java.lang.Object) minutes19);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes18);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes30 = minutes29.negated();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes29);
        java.lang.String str32 = minutes29.toString();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType34 = minutes33.getFieldType();
        boolean boolean35 = minutes29.isSupported(durationFieldType34);
        org.joda.time.DurationFieldType durationFieldType36 = minutes29.getFieldType();
        boolean boolean37 = minutes18.isSupported(durationFieldType36);
        org.joda.time.DurationFieldType durationFieldType38 = minutes18.getFieldType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes39 = minutes9.minus(minutes18);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: -2147483648 + -2147483647");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "PT2147483647M" + "'", str25, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "PT2147483647M" + "'", str32, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(durationFieldType38);
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod8 = minutes7.toMutablePeriod();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod8);
        boolean boolean10 = minutes0.isLessThan(minutes9);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes9);
        org.joda.time.Period period12 = minutes9.toPeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(period12);
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.minus((int) (short) 1);
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy(0);
        org.joda.time.Duration duration5 = minutes2.toStandardDuration();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.MAX_VALUE;
        int int7 = minutes6.size();
        int int9 = minutes6.getValue(0);
        org.joda.time.Minutes minutes10 = minutes6.negated();
        org.joda.time.DurationFieldType durationFieldType12 = minutes6.getFieldType(0);
        boolean boolean13 = minutes2.equals((java.lang.Object) 0);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes16 = minutes14.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = minutes17.get(durationFieldType18);
        org.joda.time.MutablePeriod mutablePeriod20 = minutes17.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes17);
        boolean boolean22 = minutes16.isLessThan(minutes21);
        int int23 = minutes16.getMinutes();
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean26 = minutes16.isLessThan(minutes25);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes16);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes30 = minutes28.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes31 = minutes28.negated();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes34 = minutes28.minus(minutes33);
        boolean boolean35 = minutes16.isLessThan(minutes28);
        boolean boolean36 = minutes2.isLessThan(minutes16);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes2);
        org.joda.time.MutablePeriod mutablePeriod38 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes40 = minutes2.dividedBy((-4));
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2147483647 + "'", int9 == 2147483647);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-2) + "'", int23 == (-2));
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(minutes40);
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.PeriodType periodType8 = minutes0.getPeriodType();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = minutes13.get(durationFieldType14);
        org.joda.time.DurationFieldType durationFieldType16 = minutes13.getFieldType();
        int int17 = minutes12.get(durationFieldType16);
        org.joda.time.Minutes minutes19 = minutes12.plus((-1));
        boolean boolean20 = minutes9.isGreaterThan(minutes12);
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration22 = minutes21.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod23 = minutes21.toMutablePeriod();
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.MAX_VALUE;
        int int25 = minutes24.size();
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes27 = minutes26.negated();
        org.joda.time.Minutes minutes29 = minutes27.dividedBy((int) (byte) -1);
        boolean boolean30 = minutes24.isLessThan(minutes27);
        boolean boolean31 = minutes21.isLessThan(minutes24);
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = minutes32.get(durationFieldType33);
        org.joda.time.MutablePeriod mutablePeriod35 = minutes32.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType36 = minutes32.getFieldType();
        org.joda.time.Minutes minutes38 = minutes32.dividedBy((-1));
        org.joda.time.Minutes minutes40 = minutes32.dividedBy(2147483646);
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes43 = minutes41.minus((int) (short) 1);
        org.joda.time.Minutes minutes45 = minutes43.multipliedBy(0);
        org.joda.time.Duration duration46 = minutes43.toStandardDuration();
        org.joda.time.Minutes minutes47 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes48 = minutes47.negated();
        org.joda.time.DurationFieldType durationFieldType49 = minutes47.getFieldType();
        int int50 = minutes43.get(durationFieldType49);
        boolean boolean51 = minutes32.isSupported(durationFieldType49);
        int int52 = minutes24.get(durationFieldType49);
        int int53 = minutes12.get(durationFieldType49);
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes56 = minutes54.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes57 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType58 = null;
        int int59 = minutes57.get(durationFieldType58);
        org.joda.time.MutablePeriod mutablePeriod60 = minutes57.toMutablePeriod();
        org.joda.time.Minutes minutes61 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes57);
        boolean boolean62 = minutes56.isLessThan(minutes61);
        org.joda.time.Minutes minutes63 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes65 = minutes63.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes66 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType67 = null;
        int int68 = minutes66.get(durationFieldType67);
        org.joda.time.DurationFieldType durationFieldType69 = minutes66.getFieldType();
        int int70 = minutes65.get(durationFieldType69);
        org.joda.time.Minutes minutes72 = minutes65.plus((-1));
        org.joda.time.Minutes minutes73 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod74 = minutes73.toMutablePeriod();
        org.joda.time.Minutes minutes75 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes77 = minutes75.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes79 = minutes75.plus(0);
        int int80 = minutes73.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes75);
        org.joda.time.Minutes minutes82 = minutes75.plus((int) ' ');
        java.lang.String str83 = minutes75.toString();
        org.joda.time.Minutes minutes85 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean86 = minutes75.isLessThan(minutes85);
        boolean boolean87 = minutes72.isLessThan(minutes75);
        org.joda.time.Minutes minutes88 = minutes56.minus(minutes72);
        org.joda.time.Minutes minutes89 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes91 = minutes89.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType92 = minutes91.getFieldType();
        org.joda.time.Minutes minutes93 = minutes91.negated();
        org.joda.time.Minutes minutes94 = minutes88.minus(minutes93);
        org.joda.time.DurationFieldType durationFieldType95 = minutes94.getFieldType();
        boolean boolean96 = minutes12.isSupported(durationFieldType95);
        boolean boolean97 = minutes0.equals((java.lang.Object) durationFieldType95);
        org.joda.time.DurationFieldType durationFieldType98 = minutes0.getFieldType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-2) + "'", int17 == (-2));
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2147483646 + "'", int50 == 2147483646);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2147483647 + "'", int52 == 2147483647);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-2) + "'", int53 == (-2));
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(durationFieldType69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-2) + "'", int70 == (-2));
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertNotNull(minutes73);
        org.junit.Assert.assertNotNull(mutablePeriod74);
        org.junit.Assert.assertNotNull(minutes75);
        org.junit.Assert.assertNotNull(minutes77);
        org.junit.Assert.assertNotNull(minutes79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(minutes82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "PT2M" + "'", str83, "PT2M");
        org.junit.Assert.assertNotNull(minutes85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(minutes88);
        org.junit.Assert.assertNotNull(minutes89);
        org.junit.Assert.assertNotNull(minutes91);
        org.junit.Assert.assertNotNull(durationFieldType92);
        org.junit.Assert.assertNotNull(minutes93);
        org.junit.Assert.assertNotNull(minutes94);
        org.junit.Assert.assertNotNull(durationFieldType95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(durationFieldType98);
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.THREE;
        int int1 = minutes0.size();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod3 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = minutes4.plus(0);
        int int9 = minutes2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes4);
        org.joda.time.Minutes minutes11 = minutes4.plus((int) ' ');
        int int12 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes11);
        org.joda.time.Minutes minutes14 = minutes11.minus((int) (byte) 0);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.THREE;
        org.joda.time.Duration duration16 = minutes15.toStandardDuration();
        org.joda.time.Minutes minutes17 = minutes11.plus(minutes15);
        int int18 = minutes15.size();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes9 = minutes2.plus((-1));
        org.joda.time.Minutes minutes11 = minutes2.minus((int) (short) 10);
        org.joda.time.Minutes minutes13 = minutes11.dividedBy((-2147483648));
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod15 = minutes14.toMutablePeriod();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes17 = minutes14.plus(minutes16);
        org.joda.time.Minutes minutes18 = minutes11.minus(minutes16);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes21 = minutes19.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes23 = minutes19.plus(0);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes26 = minutes24.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = minutes27.get(durationFieldType28);
        org.joda.time.DurationFieldType durationFieldType30 = minutes27.getFieldType();
        int int31 = minutes26.get(durationFieldType30);
        org.joda.time.Minutes minutes33 = minutes26.plus((-1));
        org.joda.time.Minutes minutes35 = minutes26.minus((int) (short) 10);
        org.joda.time.Minutes minutes37 = minutes35.dividedBy((-2147483648));
        org.joda.time.Minutes minutes38 = minutes23.plus(minutes37);
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes41 = minutes39.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = minutes42.get(durationFieldType43);
        org.joda.time.MutablePeriod mutablePeriod45 = minutes42.toMutablePeriod();
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes42);
        boolean boolean47 = minutes41.isLessThan(minutes46);
        org.joda.time.DurationFieldType durationFieldType48 = minutes46.getFieldType();
        boolean boolean49 = minutes38.isSupported(durationFieldType48);
        int int50 = minutes11.get(durationFieldType48);
        org.joda.time.PeriodType periodType51 = minutes11.getPeriodType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-2) + "'", int31 == (-2));
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-12) + "'", int50 == (-12));
        org.junit.Assert.assertNotNull(periodType51);
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.DurationFieldType durationFieldType12 = minutes3.getFieldType();
        org.joda.time.PeriodType periodType13 = minutes3.getPeriodType();
        org.joda.time.Minutes minutes15 = minutes3.plus(2);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(minutes15);
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes5 = minutes4.negated();
        org.joda.time.Minutes minutes6 = minutes4.negated();
        boolean boolean7 = minutes0.equals((java.lang.Object) minutes6);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = minutes11.get(durationFieldType12);
        org.joda.time.MutablePeriod mutablePeriod14 = minutes11.toMutablePeriod();
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes11);
        boolean boolean16 = minutes10.isLessThan(minutes15);
        int int17 = minutes10.getMinutes();
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean20 = minutes10.isLessThan(minutes19);
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration22 = minutes21.toStandardDuration();
        org.joda.time.Duration duration23 = minutes21.toStandardDuration();
        org.joda.time.Minutes minutes25 = minutes21.minus(2);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes28 = minutes26.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes29 = minutes26.negated();
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes31 = minutes30.negated();
        org.joda.time.Minutes minutes32 = minutes30.negated();
        boolean boolean33 = minutes26.equals((java.lang.Object) minutes32);
        boolean boolean34 = minutes25.isLessThan(minutes26);
        org.joda.time.Minutes minutes35 = minutes19.minus(minutes26);
        org.joda.time.Minutes minutes37 = minutes19.dividedBy((-12));
        org.joda.time.Minutes minutes38 = minutes6.plus(minutes37);
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes38);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-2) + "'", int17 == (-2));
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        int int3 = minutes0.size();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration5 = minutes4.toStandardDuration();
        org.joda.time.Duration duration6 = minutes4.toStandardDuration();
        org.joda.time.Minutes minutes8 = minutes4.minus(2);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = minutes9.negated();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes14 = minutes13.negated();
        org.joda.time.Minutes minutes15 = minutes13.negated();
        boolean boolean16 = minutes9.equals((java.lang.Object) minutes15);
        boolean boolean17 = minutes8.isLessThan(minutes9);
        org.joda.time.Minutes minutes18 = minutes0.plus(minutes8);
        java.lang.String str19 = minutes18.toString();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "PT2147483647M" + "'", str19, "PT2147483647M");
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = minutes8.plus(0);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = minutes16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = minutes16.getFieldType();
        int int20 = minutes15.get(durationFieldType19);
        org.joda.time.Minutes minutes22 = minutes15.plus((-1));
        org.joda.time.Minutes minutes24 = minutes15.minus((int) (short) 10);
        org.joda.time.Minutes minutes26 = minutes24.dividedBy((-2147483648));
        org.joda.time.Minutes minutes27 = minutes12.plus(minutes26);
        org.joda.time.Minutes minutes28 = minutes2.minus(minutes12);
        org.joda.time.PeriodType periodType29 = minutes2.getPeriodType();
        org.joda.time.Duration duration30 = minutes2.toStandardDuration();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-2) + "'", int20 == (-2));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(duration30);
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        int int1 = minutes0.getMinutes();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes9 = minutes7.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = minutes10.get(durationFieldType11);
        org.joda.time.DurationFieldType durationFieldType13 = minutes10.getFieldType();
        int int14 = minutes9.get(durationFieldType13);
        org.joda.time.Minutes minutes16 = minutes9.plus((-1));
        org.joda.time.Minutes minutes18 = minutes9.minus((int) (short) 10);
        org.joda.time.Minutes minutes20 = minutes18.dividedBy((-2147483648));
        org.joda.time.Minutes minutes21 = minutes6.plus(minutes20);
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes24 = minutes22.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = minutes25.get(durationFieldType26);
        org.joda.time.MutablePeriod mutablePeriod28 = minutes25.toMutablePeriod();
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes25);
        boolean boolean30 = minutes24.isLessThan(minutes29);
        org.joda.time.DurationFieldType durationFieldType31 = minutes29.getFieldType();
        boolean boolean32 = minutes21.isSupported(durationFieldType31);
        boolean boolean33 = minutes0.isLessThan(minutes21);
        org.joda.time.Minutes minutes35 = minutes21.plus((int) ' ');
        int int36 = minutes35.size();
        org.joda.time.Minutes minutes37 = minutes35.negated();
        org.joda.time.Minutes minutes38 = minutes35.negated();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-2147483648) + "'", int1 == (-2147483648));
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-2) + "'", int14 == (-2));
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        org.joda.time.Minutes minutes14 = minutes7.plus((-1));
        org.joda.time.Minutes minutes16 = minutes7.minus((int) (short) 10);
        org.joda.time.Minutes minutes18 = minutes16.dividedBy((-2147483648));
        org.joda.time.Minutes minutes19 = minutes4.plus(minutes18);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType21 = minutes20.getPeriodType();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes23 = minutes22.negated();
        org.joda.time.Minutes minutes24 = minutes22.negated();
        org.joda.time.DurationFieldType durationFieldType25 = minutes22.getFieldType();
        java.lang.String str26 = minutes22.toString();
        boolean boolean27 = minutes20.isGreaterThan(minutes22);
        boolean boolean28 = minutes4.isLessThan(minutes22);
        org.joda.time.PeriodType periodType29 = minutes22.getPeriodType();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes33 = minutes31.plus(0);
        org.joda.time.DurationFieldType durationFieldType34 = minutes33.getFieldType();
        boolean boolean35 = minutes22.isSupported(durationFieldType34);
        org.joda.time.Duration duration36 = minutes22.toStandardDuration();
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType38 = minutes37.getPeriodType();
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes40 = minutes39.negated();
        org.joda.time.Minutes minutes41 = minutes39.negated();
        org.joda.time.DurationFieldType durationFieldType42 = minutes39.getFieldType();
        java.lang.String str43 = minutes39.toString();
        boolean boolean44 = minutes37.isGreaterThan(minutes39);
        org.joda.time.Minutes minutes45 = minutes39.negated();
        boolean boolean46 = minutes22.isGreaterThan(minutes45);
        org.joda.time.DurationFieldType durationFieldType47 = minutes22.getFieldType();
        java.lang.String str48 = minutes22.toString();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "PT2147483647M" + "'", str26, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "PT2147483647M" + "'", str43, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "PT2147483647M" + "'", str48, "PT2147483647M");
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod2 = minutes0.toMutablePeriod();
        java.lang.String str3 = minutes0.toString();
        int int4 = minutes0.size();
        org.joda.time.Minutes minutes5 = minutes0.negated();
        org.joda.time.Minutes minutes6 = null;
        org.joda.time.Minutes minutes7 = minutes0.minus(minutes6);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes9 = minutes8.negated();
        org.joda.time.DurationFieldType durationFieldType10 = minutes8.getFieldType();
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes13 = minutes12.negated();
        org.joda.time.Minutes minutes14 = minutes12.negated();
        java.lang.String str15 = minutes12.toString();
        int int16 = minutes12.size();
        org.joda.time.Minutes minutes18 = minutes12.minus(0);
        org.joda.time.Minutes minutes20 = minutes12.plus((int) (short) 0);
        boolean boolean21 = minutes8.isLessThan(minutes12);
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes23 = minutes22.negated();
        org.joda.time.Minutes minutes24 = minutes22.negated();
        boolean boolean25 = minutes12.isGreaterThan(minutes22);
        org.joda.time.Minutes minutes26 = minutes7.minus(minutes22);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod28 = minutes27.toMutablePeriod();
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes31 = minutes29.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes33 = minutes29.plus(0);
        int int34 = minutes27.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes29);
        org.joda.time.Minutes minutes36 = minutes29.plus((int) ' ');
        java.lang.String str37 = minutes29.toString();
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean40 = minutes29.isLessThan(minutes39);
        org.joda.time.Minutes minutes41 = minutes7.minus(minutes29);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes44 = minutes42.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType45 = minutes44.getFieldType();
        org.joda.time.Minutes minutes46 = minutes44.negated();
        org.joda.time.Minutes minutes48 = minutes44.plus((int) (short) 1);
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes50 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType51 = minutes50.getPeriodType();
        org.joda.time.Minutes minutes52 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes53 = minutes52.negated();
        org.joda.time.Minutes minutes54 = minutes52.negated();
        org.joda.time.DurationFieldType durationFieldType55 = minutes52.getFieldType();
        java.lang.String str56 = minutes52.toString();
        boolean boolean57 = minutes50.isGreaterThan(minutes52);
        boolean boolean58 = minutes49.equals((java.lang.Object) minutes50);
        org.joda.time.Minutes minutes59 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes49);
        org.joda.time.Minutes minutes60 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes61 = minutes60.negated();
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes60);
        org.joda.time.Minutes minutes63 = minutes59.minus(minutes62);
        org.joda.time.DurationFieldType durationFieldType64 = minutes62.getFieldType();
        org.joda.time.PeriodType periodType65 = minutes62.getPeriodType();
        boolean boolean66 = minutes44.isGreaterThan(minutes62);
        org.joda.time.Minutes minutes67 = minutes41.minus(minutes62);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2M" + "'", str3, "PT2M");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PT2147483647M" + "'", str15, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "PT2M" + "'", str37, "PT2M");
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "PT2147483647M" + "'", str56, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(durationFieldType64);
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(minutes67);
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = minutes0.negated();
        org.joda.time.DurationFieldType durationFieldType3 = minutes0.getFieldType();
        java.lang.String str4 = minutes0.toString();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes6 = minutes5.negated();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes5);
        int int8 = minutes5.size();
        org.joda.time.MutablePeriod mutablePeriod9 = minutes5.toMutablePeriod();
        boolean boolean10 = minutes0.equals((java.lang.Object) minutes5);
        org.joda.time.DurationFieldType durationFieldType12 = minutes5.getFieldType((int) (short) 0);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod14 = minutes13.toMutablePeriod();
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes17 = minutes15.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes19 = minutes15.plus(0);
        int int20 = minutes13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes15);
        org.joda.time.Minutes minutes22 = minutes15.plus((int) ' ');
        java.lang.String str23 = minutes15.toString();
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean26 = minutes15.isLessThan(minutes25);
        org.joda.time.Period period27 = minutes25.toPeriod();
        boolean boolean28 = minutes5.isGreaterThan(minutes25);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes5);
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes31 = minutes30.negated();
        org.joda.time.Minutes minutes33 = minutes31.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes36 = minutes34.dividedBy((int) 'a');
        org.joda.time.Minutes minutes38 = minutes34.plus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType39 = minutes38.getFieldType();
        boolean boolean40 = minutes31.isSupported(durationFieldType39);
        boolean boolean41 = minutes5.isSupported(durationFieldType39);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT2147483647M" + "'", str4, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT2M" + "'", str23, "PT2M");
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = minutes5.get(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType8 = minutes5.getFieldType();
        int int9 = minutes4.get(durationFieldType8);
        org.joda.time.Minutes minutes11 = minutes4.plus((-1));
        boolean boolean12 = minutes1.isGreaterThan(minutes4);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = minutes16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = minutes16.getFieldType();
        int int20 = minutes15.get(durationFieldType19);
        boolean boolean21 = minutes4.isSupported(durationFieldType19);
        boolean boolean22 = minutes0.isSupported(durationFieldType19);
        org.joda.time.MutablePeriod mutablePeriod23 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes26 = minutes24.dividedBy((int) 'a');
        int int27 = minutes26.getMinutes();
        boolean boolean28 = minutes0.isLessThan(minutes26);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod30 = minutes29.toMutablePeriod();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes32 = minutes29.plus(minutes31);
        org.joda.time.Minutes minutes34 = minutes32.plus((int) 'a');
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes36 = minutes35.negated();
        org.joda.time.DurationFieldType durationFieldType37 = minutes35.getFieldType();
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType39 = null;
        int int40 = minutes38.get(durationFieldType39);
        org.joda.time.DurationFieldType durationFieldType41 = minutes38.getFieldType();
        boolean boolean42 = minutes35.isSupported(durationFieldType41);
        int int43 = minutes34.get(durationFieldType41);
        boolean boolean44 = minutes0.isSupported(durationFieldType41);
        org.joda.time.Period period45 = minutes0.toPeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-2) + "'", int9 == (-2));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-2) + "'", int20 == (-2));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-22139006) + "'", int27 == (-22139006));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-2147483548) + "'", int43 == (-2147483548));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(period45);
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT-2147483548M");
        org.joda.time.Minutes minutes3 = minutes1.plus((int) ' ');
        java.lang.Object obj4 = null;
        boolean boolean5 = minutes3.equals(obj4);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.minus((int) (short) 1);
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy(0);
        org.joda.time.Minutes minutes6 = minutes4.plus((-2147483648));
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.TWO;
        boolean boolean8 = minutes4.isGreaterThan(minutes7);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = minutes12.getFieldType();
        int int16 = minutes11.get(durationFieldType15);
        org.joda.time.Minutes minutes18 = minutes11.plus((-1));
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = minutes21.plus(0);
        int int26 = minutes19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes21);
        org.joda.time.Minutes minutes28 = minutes21.plus((int) ' ');
        java.lang.String str29 = minutes21.toString();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean32 = minutes21.isLessThan(minutes31);
        boolean boolean33 = minutes18.isLessThan(minutes21);
        int int34 = minutes18.getMinutes();
        org.joda.time.MutablePeriod mutablePeriod35 = minutes18.toMutablePeriod();
        org.joda.time.Minutes minutes37 = minutes18.dividedBy((-2147483548));
        boolean boolean38 = minutes4.isLessThan(minutes18);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2M" + "'", str29, "PT2M");
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-3) + "'", int34 == (-3));
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = minutes12.getFieldType();
        int int16 = minutes11.get(durationFieldType15);
        org.joda.time.Minutes minutes18 = minutes11.plus((-1));
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = minutes21.plus(0);
        int int26 = minutes19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes21);
        org.joda.time.Minutes minutes28 = minutes21.plus((int) ' ');
        java.lang.String str29 = minutes21.toString();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean32 = minutes21.isLessThan(minutes31);
        boolean boolean33 = minutes18.isLessThan(minutes21);
        org.joda.time.Minutes minutes34 = minutes2.minus(minutes18);
        org.joda.time.MutablePeriod mutablePeriod35 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes37 = minutes2.dividedBy(2);
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes40 = minutes38.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType42 = null;
        int int43 = minutes41.get(durationFieldType42);
        org.joda.time.DurationFieldType durationFieldType44 = minutes41.getFieldType();
        int int45 = minutes40.get(durationFieldType44);
        org.joda.time.Minutes minutes47 = minutes40.plus((-1));
        org.joda.time.Minutes minutes48 = minutes47.negated();
        org.joda.time.Minutes minutes49 = minutes37.plus(minutes48);
        org.joda.time.Minutes minutes50 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes52 = minutes50.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes53 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType54 = null;
        int int55 = minutes53.get(durationFieldType54);
        org.joda.time.MutablePeriod mutablePeriod56 = minutes53.toMutablePeriod();
        org.joda.time.Minutes minutes57 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes53);
        boolean boolean58 = minutes52.isLessThan(minutes57);
        int int59 = minutes52.getMinutes();
        org.joda.time.Minutes minutes61 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean62 = minutes52.isLessThan(minutes61);
        org.joda.time.Minutes minutes63 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration64 = minutes63.toStandardDuration();
        org.joda.time.Duration duration65 = minutes63.toStandardDuration();
        org.joda.time.Minutes minutes67 = minutes63.minus(2);
        org.joda.time.Minutes minutes68 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes70 = minutes68.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes71 = minutes68.negated();
        org.joda.time.Minutes minutes72 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes73 = minutes72.negated();
        org.joda.time.Minutes minutes74 = minutes72.negated();
        boolean boolean75 = minutes68.equals((java.lang.Object) minutes74);
        boolean boolean76 = minutes67.isLessThan(minutes68);
        org.joda.time.Minutes minutes77 = minutes61.minus(minutes68);
        org.joda.time.Minutes minutes78 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes79 = minutes78.negated();
        org.joda.time.Minutes minutes80 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes78);
        java.lang.String str81 = minutes78.toString();
        org.joda.time.Minutes minutes82 = minutes77.plus(minutes78);
        int int83 = minutes48.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes77);
        org.joda.time.Minutes minutes84 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes86 = minutes84.dividedBy((int) 'a');
        org.joda.time.Minutes minutes88 = minutes86.multipliedBy((-12));
        org.joda.time.Minutes minutes89 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes90 = minutes89.negated();
        org.joda.time.Minutes minutes91 = minutes89.negated();
        org.joda.time.DurationFieldType durationFieldType92 = minutes89.getFieldType();
        boolean boolean93 = minutes88.isSupported(durationFieldType92);
        boolean boolean94 = minutes77.isSupported(durationFieldType92);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2M" + "'", str29, "PT2M");
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-2) + "'", int45 == (-2));
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-2) + "'", int59 == (-2));
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertNotNull(minutes73);
        org.junit.Assert.assertNotNull(minutes74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(minutes77);
        org.junit.Assert.assertNotNull(minutes78);
        org.junit.Assert.assertNotNull(minutes79);
        org.junit.Assert.assertNotNull(minutes80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "PT2147483647M" + "'", str81, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertNotNull(minutes84);
        org.junit.Assert.assertNotNull(minutes86);
        org.junit.Assert.assertNotNull(minutes88);
        org.junit.Assert.assertNotNull(minutes89);
        org.junit.Assert.assertNotNull(minutes90);
        org.junit.Assert.assertNotNull(minutes91);
        org.junit.Assert.assertNotNull(durationFieldType92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Period period1 = minutes0.toPeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType5 = minutes4.getPeriodType();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes7 = minutes6.negated();
        org.joda.time.Minutes minutes8 = minutes6.negated();
        org.joda.time.DurationFieldType durationFieldType9 = minutes6.getFieldType();
        java.lang.String str10 = minutes6.toString();
        boolean boolean11 = minutes4.isGreaterThan(minutes6);
        boolean boolean12 = minutes3.equals((java.lang.Object) minutes4);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes15 = minutes14.negated();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes14);
        java.lang.String str17 = minutes14.toString();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = minutes18.getFieldType();
        boolean boolean20 = minutes14.isSupported(durationFieldType19);
        org.joda.time.DurationFieldType durationFieldType21 = minutes14.getFieldType();
        boolean boolean22 = minutes3.isSupported(durationFieldType21);
        int int23 = minutes2.get(durationFieldType21);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT2147483647M" + "'", str10, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "PT2147483647M" + "'", str17, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2147483647 + "'", int23 == 2147483647);
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.ZERO;
        org.joda.time.PeriodType periodType1 = minutes0.getPeriodType();
        int int3 = minutes0.getValue(0);
        org.joda.time.Duration duration4 = minutes0.toStandardDuration();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(duration4);
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes3 = minutes1.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        int int13 = minutes4.get(durationFieldType11);
        org.joda.time.MutablePeriod mutablePeriod14 = minutes4.toMutablePeriod();
        org.joda.time.Minutes minutes16 = minutes4.dividedBy(2);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2147483647 + "'", int13 == 2147483647);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(minutes16);
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = minutes12.getFieldType();
        int int16 = minutes11.get(durationFieldType15);
        org.joda.time.Minutes minutes18 = minutes11.plus((-1));
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = minutes21.plus(0);
        int int26 = minutes19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes21);
        org.joda.time.Minutes minutes28 = minutes21.plus((int) ' ');
        java.lang.String str29 = minutes21.toString();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean32 = minutes21.isLessThan(minutes31);
        boolean boolean33 = minutes18.isLessThan(minutes21);
        org.joda.time.Minutes minutes34 = minutes2.minus(minutes18);
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.ZERO;
        int int36 = minutes34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes35);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes38 = minutes37.negated();
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod40 = minutes39.toMutablePeriod();
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes42 = minutes39.plus(minutes41);
        int int43 = minutes38.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes41);
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.MAX_VALUE;
        int int45 = minutes38.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes44);
        boolean boolean46 = minutes34.isLessThan(minutes38);
        org.joda.time.Minutes minutes48 = minutes34.multipliedBy(100);
        org.joda.time.PeriodType periodType49 = minutes34.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType51 = minutes34.getFieldType((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 35");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2M" + "'", str29, "PT2M");
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(periodType49);
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes3 = minutes1.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        int int13 = minutes4.get(durationFieldType11);
        int int14 = minutes4.getMinutes();
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration16 = minutes15.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod17 = minutes15.toMutablePeriod();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MAX_VALUE;
        int int19 = minutes18.size();
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes21 = minutes20.negated();
        org.joda.time.Minutes minutes23 = minutes21.dividedBy((int) (byte) -1);
        boolean boolean24 = minutes18.isLessThan(minutes21);
        boolean boolean25 = minutes15.isLessThan(minutes18);
        org.joda.time.Minutes minutes27 = minutes15.multipliedBy((int) (short) -1);
        org.joda.time.Period period28 = minutes15.toPeriod();
        boolean boolean29 = minutes4.isGreaterThan(minutes15);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes31 = minutes15.multipliedBy(2147483647);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 2 * 2147483647");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2147483647 + "'", int13 == 2147483647);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2147483647 + "'", int14 == 2147483647);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.PeriodType periodType8 = minutes0.getPeriodType();
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes12 = minutes10.plus(0);
        org.joda.time.PeriodType periodType13 = minutes10.getPeriodType();
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes15 = minutes14.negated();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod17 = minutes16.toMutablePeriod();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes19 = minutes16.plus(minutes18);
        int int20 = minutes15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes18);
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MAX_VALUE;
        int int22 = minutes15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes21);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes25 = minutes23.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = minutes26.get(durationFieldType27);
        org.joda.time.MutablePeriod mutablePeriod29 = minutes26.toMutablePeriod();
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes26);
        boolean boolean31 = minutes25.isLessThan(minutes30);
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes34 = minutes32.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType36 = null;
        int int37 = minutes35.get(durationFieldType36);
        org.joda.time.DurationFieldType durationFieldType38 = minutes35.getFieldType();
        int int39 = minutes34.get(durationFieldType38);
        org.joda.time.Minutes minutes41 = minutes34.plus((-1));
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod43 = minutes42.toMutablePeriod();
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes46 = minutes44.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes48 = minutes44.plus(0);
        int int49 = minutes42.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes44);
        org.joda.time.Minutes minutes51 = minutes44.plus((int) ' ');
        java.lang.String str52 = minutes44.toString();
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean55 = minutes44.isLessThan(minutes54);
        boolean boolean56 = minutes41.isLessThan(minutes44);
        org.joda.time.Minutes minutes57 = minutes25.minus(minutes41);
        org.joda.time.MutablePeriod mutablePeriod58 = minutes25.toMutablePeriod();
        org.joda.time.Minutes minutes60 = minutes25.dividedBy(2);
        org.joda.time.Minutes minutes61 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes63 = minutes61.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes64 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType65 = null;
        int int66 = minutes64.get(durationFieldType65);
        org.joda.time.DurationFieldType durationFieldType67 = minutes64.getFieldType();
        int int68 = minutes63.get(durationFieldType67);
        org.joda.time.Minutes minutes70 = minutes63.plus((-1));
        org.joda.time.Minutes minutes71 = minutes70.negated();
        org.joda.time.Minutes minutes72 = minutes60.plus(minutes71);
        org.joda.time.Minutes minutes74 = minutes60.minus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType75 = minutes74.getFieldType();
        int int76 = minutes21.get(durationFieldType75);
        int int77 = minutes10.get(durationFieldType75);
        int int78 = minutes0.get(durationFieldType75);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes80 = minutes0.minus(2);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: -2147483648 + -2");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-2) + "'", int39 == (-2));
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "PT2M" + "'", str52, "PT2M");
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(mutablePeriod58);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(durationFieldType67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-2) + "'", int68 == (-2));
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertNotNull(minutes74);
        org.junit.Assert.assertNotNull(durationFieldType75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2147483647 + "'", int76 == 2147483647);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-2147483648) + "'", int78 == (-2147483648));
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.PeriodType periodType2 = minutes1.getPeriodType();
        org.joda.time.Minutes minutes3 = minutes1.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes7 = minutes5.plus(0);
        org.joda.time.DurationFieldType durationFieldType8 = minutes7.getFieldType();
        int int9 = minutes3.get(durationFieldType8);
        org.joda.time.Minutes minutes11 = minutes3.dividedBy((int) ' ');
        java.lang.String str12 = minutes3.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds13 = minutes3.toStandardSeconds();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 2147483647 * 60");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2147483647 + "'", int9 == 2147483647);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PT2147483647M" + "'", str12, "PT2147483647M");
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        java.lang.String str10 = minutes2.toString();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = minutes11.get(durationFieldType12);
        org.joda.time.MutablePeriod mutablePeriod14 = minutes11.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType15 = minutes11.getFieldType();
        org.joda.time.Minutes minutes17 = minutes11.dividedBy((-1));
        org.joda.time.Minutes minutes19 = minutes11.dividedBy(2147483646);
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.minutes((int) (byte) 10);
        boolean boolean22 = minutes11.isLessThan(minutes21);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes25 = minutes23.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = minutes26.get(durationFieldType27);
        org.joda.time.MutablePeriod mutablePeriod29 = minutes26.toMutablePeriod();
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes26);
        boolean boolean31 = minutes25.isLessThan(minutes30);
        org.joda.time.Minutes minutes32 = minutes21.plus(minutes25);
        boolean boolean33 = minutes2.isGreaterThan(minutes21);
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.minutes((int) (byte) -1);
        org.joda.time.Minutes minutes36 = minutes21.minus(minutes35);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration38 = minutes37.toStandardDuration();
        org.joda.time.Duration duration39 = minutes37.toStandardDuration();
        org.joda.time.Minutes minutes41 = minutes37.minus(2);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes44 = minutes42.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType46 = null;
        int int47 = minutes45.get(durationFieldType46);
        org.joda.time.MutablePeriod mutablePeriod48 = minutes45.toMutablePeriod();
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes45);
        boolean boolean50 = minutes44.isLessThan(minutes49);
        int int51 = minutes44.getMinutes();
        org.joda.time.Minutes minutes53 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean54 = minutes44.isLessThan(minutes53);
        org.joda.time.Minutes minutes55 = minutes41.minus(minutes53);
        org.joda.time.Minutes minutes56 = minutes36.minus(minutes55);
        org.joda.time.Minutes minutes57 = minutes56.negated();
        org.joda.time.Minutes minutes59 = minutes57.multipliedBy((int) (byte) 1);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT2M" + "'", str10, "PT2M");
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-2) + "'", int51 == (-2));
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes59);
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT-12M");
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration3 = minutes2.toStandardDuration();
        org.joda.time.Duration duration4 = minutes2.toStandardDuration();
        org.joda.time.Minutes minutes6 = minutes2.minus(2);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes9 = minutes7.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = minutes10.get(durationFieldType11);
        org.joda.time.MutablePeriod mutablePeriod13 = minutes10.toMutablePeriod();
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes10);
        boolean boolean15 = minutes9.isLessThan(minutes14);
        int int16 = minutes9.getMinutes();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean19 = minutes9.isLessThan(minutes18);
        org.joda.time.Minutes minutes20 = minutes6.minus(minutes18);
        int int21 = minutes18.getMinutes();
        org.joda.time.Minutes minutes22 = minutes1.minus(minutes18);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes22);
        // The following exception was thrown during execution in test generation
        try {
            int int25 = minutes22.getValue(4);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-2147483645) + "'", int21 == (-2147483645));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = minutes12.getFieldType();
        int int16 = minutes11.get(durationFieldType15);
        org.joda.time.Minutes minutes18 = minutes11.plus((-1));
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = minutes21.plus(0);
        int int26 = minutes19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes21);
        org.joda.time.Minutes minutes28 = minutes21.plus((int) ' ');
        java.lang.String str29 = minutes21.toString();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean32 = minutes21.isLessThan(minutes31);
        boolean boolean33 = minutes18.isLessThan(minutes21);
        org.joda.time.Minutes minutes34 = minutes2.minus(minutes18);
        org.joda.time.MutablePeriod mutablePeriod35 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes37 = minutes2.dividedBy(2);
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes40 = minutes38.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType42 = null;
        int int43 = minutes41.get(durationFieldType42);
        org.joda.time.DurationFieldType durationFieldType44 = minutes41.getFieldType();
        int int45 = minutes40.get(durationFieldType44);
        org.joda.time.Minutes minutes47 = minutes40.plus((-1));
        org.joda.time.Minutes minutes48 = minutes47.negated();
        org.joda.time.Minutes minutes49 = minutes37.plus(minutes48);
        org.joda.time.Minutes minutes51 = minutes49.multipliedBy((-12));
        org.joda.time.Minutes minutes52 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes54 = minutes52.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes56 = minutes52.plus(0);
        org.joda.time.Minutes minutes57 = org.joda.time.Minutes.MIN_VALUE;
        boolean boolean58 = minutes52.isGreaterThan(minutes57);
        org.joda.time.Minutes minutes59 = minutes52.negated();
        boolean boolean60 = minutes51.equals((java.lang.Object) minutes59);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2M" + "'", str29, "PT2M");
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-2) + "'", int45 == (-2));
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes0.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes0.dividedBy((int) '#');
        org.joda.time.PeriodType periodType11 = minutes0.getPeriodType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(periodType11);
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.minus((int) (short) 0);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = minutes7.get(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType10 = minutes7.getFieldType();
        int int11 = minutes6.get(durationFieldType10);
        org.joda.time.Minutes minutes13 = minutes6.plus((-1));
        boolean boolean14 = minutes3.isGreaterThan(minutes6);
        org.joda.time.DurationFieldType durationFieldType15 = minutes6.getFieldType();
        org.joda.time.PeriodType periodType16 = minutes6.getPeriodType();
        boolean boolean17 = minutes0.isLessThan(minutes6);
        org.joda.time.Minutes minutes19 = minutes6.dividedBy((int) 'a');
        // The following exception was thrown during execution in test generation
        try {
            int int21 = minutes19.getValue(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-2) + "'", int11 == (-2));
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(minutes19);
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = minutes0.negated();
        java.lang.String str3 = minutes0.toString();
        int int4 = minutes0.size();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        int int6 = minutes5.size();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes8 = minutes7.negated();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes7);
        java.lang.String str10 = minutes7.toString();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType12 = minutes11.getFieldType();
        boolean boolean13 = minutes7.isSupported(durationFieldType12);
        org.joda.time.DurationFieldType durationFieldType14 = minutes7.getFieldType();
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes17 = minutes15.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = minutes18.get(durationFieldType19);
        org.joda.time.DurationFieldType durationFieldType21 = minutes18.getFieldType();
        int int22 = minutes17.get(durationFieldType21);
        org.joda.time.Minutes minutes24 = minutes17.plus((-1));
        org.joda.time.Minutes minutes26 = minutes17.minus((int) (short) 10);
        org.joda.time.Minutes minutes27 = minutes7.plus(minutes17);
        org.joda.time.Period period28 = minutes27.toPeriod();
        org.joda.time.PeriodType periodType29 = minutes27.getPeriodType();
        boolean boolean30 = minutes5.isGreaterThan(minutes27);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2147483647M" + "'", str3, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT2147483647M" + "'", str10, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-2) + "'", int22 == (-2));
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = minutes0.negated();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        int int4 = minutes3.size();
        int int6 = minutes3.getValue(0);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = minutes11.get(durationFieldType12);
        org.joda.time.DurationFieldType durationFieldType14 = minutes11.getFieldType();
        int int15 = minutes10.get(durationFieldType14);
        org.joda.time.Minutes minutes17 = minutes10.plus((-1));
        org.joda.time.Minutes minutes19 = minutes10.minus((int) (short) 10);
        org.joda.time.Duration duration20 = minutes10.toStandardDuration();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes22 = minutes21.negated();
        org.joda.time.Minutes minutes23 = minutes21.negated();
        java.lang.String str24 = minutes21.toString();
        org.joda.time.Minutes minutes26 = minutes21.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes30 = minutes28.multipliedBy((int) (byte) 0);
        boolean boolean31 = minutes26.equals((java.lang.Object) minutes28);
        boolean boolean32 = minutes10.isGreaterThan(minutes28);
        boolean boolean33 = minutes7.equals((java.lang.Object) boolean32);
        org.joda.time.Minutes minutes34 = minutes0.minus(minutes7);
        org.joda.time.Minutes minutes36 = minutes0.plus((-22139006));
        org.joda.time.Minutes minutes38 = minutes36.minus((int) (byte) 1);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2147483647 + "'", int6 == 2147483647);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-2) + "'", int15 == (-2));
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "PT2147483647M" + "'", str24, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes38);
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod5 = minutes4.toMutablePeriod();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes7 = minutes4.plus(minutes6);
        boolean boolean8 = minutes3.isLessThan(minutes4);
        org.joda.time.PeriodType periodType9 = minutes3.getPeriodType();
        org.joda.time.Minutes minutes11 = minutes3.dividedBy(3);
        org.joda.time.Minutes minutes13 = minutes11.dividedBy(10);
        org.joda.time.Minutes minutes15 = minutes13.minus((int) (short) 1);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        org.joda.time.Minutes minutes5 = minutes3.plus((int) 'a');
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes7 = minutes6.negated();
        org.joda.time.Minutes minutes8 = minutes6.negated();
        org.joda.time.DurationFieldType durationFieldType9 = minutes6.getFieldType();
        java.lang.String str10 = minutes6.toString();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes12 = minutes11.negated();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes11);
        int int14 = minutes11.size();
        org.joda.time.MutablePeriod mutablePeriod15 = minutes11.toMutablePeriod();
        boolean boolean16 = minutes6.equals((java.lang.Object) minutes11);
        org.joda.time.DurationFieldType durationFieldType18 = minutes11.getFieldType((int) (short) 0);
        int int19 = minutes5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes11);
        org.joda.time.PeriodType periodType20 = minutes5.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType21 = minutes5.getFieldType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT2147483647M" + "'", str10, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(durationFieldType21);
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.Minutes minutes13 = minutes3.multipliedBy(2);
        org.joda.time.Minutes minutes14 = minutes13.negated();
        org.joda.time.Minutes minutes16 = minutes13.plus(2147483647);
        int int17 = minutes13.getMinutes();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes20 = minutes18.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes21 = minutes18.negated();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes23 = minutes22.negated();
        org.joda.time.Minutes minutes24 = minutes22.negated();
        boolean boolean25 = minutes18.equals((java.lang.Object) minutes24);
        boolean boolean26 = minutes13.isGreaterThan(minutes24);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-4) + "'", int17 == (-4));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes9 = minutes2.plus((-1));
        org.joda.time.Minutes minutes11 = minutes2.minus((int) (short) 10);
        org.joda.time.Duration duration12 = minutes2.toStandardDuration();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes2);
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy(3);
        org.joda.time.Minutes minutes17 = minutes15.minus(0);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = minutes18.get(durationFieldType19);
        org.joda.time.MutablePeriod mutablePeriod21 = minutes18.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType22 = minutes18.getFieldType();
        org.joda.time.Minutes minutes24 = minutes18.dividedBy((-1));
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.MAX_VALUE;
        int int26 = minutes25.size();
        org.joda.time.Minutes minutes27 = minutes18.plus(minutes25);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes29 = minutes28.negated();
        org.joda.time.PeriodType periodType30 = minutes29.getPeriodType();
        org.joda.time.Minutes minutes31 = minutes29.negated();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes35 = minutes33.plus(0);
        org.joda.time.DurationFieldType durationFieldType36 = minutes35.getFieldType();
        int int37 = minutes31.get(durationFieldType36);
        boolean boolean38 = minutes25.isSupported(durationFieldType36);
        int int39 = minutes15.get(durationFieldType36);
        org.joda.time.Minutes minutes41 = minutes15.minus((-3));
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2147483647 + "'", int37 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-6) + "'", int39 == (-6));
        org.junit.Assert.assertNotNull(minutes41);
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.PeriodType periodType2 = minutes1.getPeriodType();
        org.joda.time.Minutes minutes3 = minutes1.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes7 = minutes5.plus(0);
        org.joda.time.DurationFieldType durationFieldType8 = minutes7.getFieldType();
        int int9 = minutes3.get(durationFieldType8);
        int int11 = minutes3.getValue((int) (byte) 0);
        org.joda.time.Minutes minutes13 = minutes3.dividedBy(1);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        int int15 = minutes3.size();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2147483647 + "'", int9 == 2147483647);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2147483647 + "'", int11 == 2147483647);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes3 = minutes1.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        org.joda.time.PeriodType periodType5 = minutes4.getPeriodType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(periodType5);
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        int int8 = minutes2.getMinutes();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Period period10 = minutes9.toPeriod();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes9);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod13 = minutes12.toMutablePeriod();
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes16 = minutes14.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes18 = minutes14.plus(0);
        int int19 = minutes12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes14);
        org.joda.time.Minutes minutes21 = minutes14.plus((int) ' ');
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType23 = minutes22.getFieldType();
        int int24 = minutes14.get(durationFieldType23);
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes27 = minutes25.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes28 = minutes25.negated();
        org.joda.time.Minutes minutes29 = minutes14.plus(minutes25);
        org.joda.time.DurationFieldType durationFieldType30 = minutes14.getFieldType();
        java.lang.Class<?> wildcardClass31 = durationFieldType30.getClass();
        boolean boolean32 = minutes9.equals((java.lang.Object) wildcardClass31);
        boolean boolean33 = minutes2.isLessThan(minutes9);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.PeriodType periodType2 = minutes0.getPeriodType();
        org.joda.time.Period period3 = minutes0.toPeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(period3);
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes5 = minutes2.negated();
        boolean boolean6 = minutes1.equals((java.lang.Object) minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes9 = minutes7.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes10 = minutes7.negated();
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes13 = minutes7.minus(minutes12);
        org.joda.time.DurationFieldType durationFieldType14 = minutes7.getFieldType();
        boolean boolean15 = minutes5.isSupported(durationFieldType14);
        org.joda.time.Minutes minutes17 = minutes5.dividedBy((-2147483548));
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes17);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.DurationFieldType durationFieldType12 = minutes3.getFieldType();
        int int14 = minutes3.getValue((int) (short) 0);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod16 = minutes15.toMutablePeriod();
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes19 = minutes17.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes21 = minutes17.plus(0);
        int int22 = minutes15.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes17);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes25 = minutes23.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes27 = minutes23.plus(0);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes30 = minutes28.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = minutes31.get(durationFieldType32);
        org.joda.time.DurationFieldType durationFieldType34 = minutes31.getFieldType();
        int int35 = minutes30.get(durationFieldType34);
        org.joda.time.Minutes minutes37 = minutes30.plus((-1));
        org.joda.time.Minutes minutes39 = minutes30.minus((int) (short) 10);
        org.joda.time.Minutes minutes41 = minutes39.dividedBy((-2147483648));
        org.joda.time.Minutes minutes42 = minutes27.plus(minutes41);
        org.joda.time.Minutes minutes43 = minutes17.minus(minutes27);
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod45 = minutes44.toMutablePeriod();
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes48 = minutes46.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes50 = minutes46.plus(0);
        int int51 = minutes44.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes46);
        org.joda.time.Minutes minutes52 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes54 = minutes52.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes56 = minutes52.plus(0);
        org.joda.time.Minutes minutes57 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes59 = minutes57.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes60 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType61 = null;
        int int62 = minutes60.get(durationFieldType61);
        org.joda.time.DurationFieldType durationFieldType63 = minutes60.getFieldType();
        int int64 = minutes59.get(durationFieldType63);
        org.joda.time.Minutes minutes66 = minutes59.plus((-1));
        org.joda.time.Minutes minutes68 = minutes59.minus((int) (short) 10);
        org.joda.time.Minutes minutes70 = minutes68.dividedBy((-2147483648));
        org.joda.time.Minutes minutes71 = minutes56.plus(minutes70);
        org.joda.time.Minutes minutes72 = minutes46.minus(minutes56);
        org.joda.time.PeriodType periodType73 = minutes46.getPeriodType();
        boolean boolean74 = minutes27.isLessThan(minutes46);
        int int75 = minutes46.getMinutes();
        boolean boolean76 = minutes3.isGreaterThan(minutes46);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-2) + "'", int14 == (-2));
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-2) + "'", int35 == (-2));
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(mutablePeriod45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-2) + "'", int64 == (-2));
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2 + "'", int75 == 2);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod8 = minutes7.toMutablePeriod();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod8);
        boolean boolean10 = minutes0.isLessThan(minutes9);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = minutes15.get(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = minutes15.getFieldType();
        int int19 = minutes14.get(durationFieldType18);
        org.joda.time.Minutes minutes21 = minutes14.plus((-1));
        boolean boolean22 = minutes11.isGreaterThan(minutes14);
        org.joda.time.Minutes minutes24 = minutes14.multipliedBy(2);
        org.joda.time.Minutes minutes25 = minutes24.negated();
        org.joda.time.Minutes minutes26 = minutes25.negated();
        boolean boolean27 = minutes0.isLessThan(minutes25);
        org.joda.time.Minutes minutes29 = minutes25.dividedBy((int) (short) 1);
        org.joda.time.Duration duration30 = minutes25.toStandardDuration();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod32 = minutes31.toMutablePeriod();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes35 = minutes33.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes37 = minutes33.plus(0);
        int int38 = minutes31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes33);
        org.joda.time.Minutes minutes40 = minutes33.plus((int) ' ');
        java.lang.String str41 = minutes33.toString();
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod43 = minutes42.toMutablePeriod();
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes46 = minutes44.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes48 = minutes44.plus(0);
        int int49 = minutes42.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes44);
        org.joda.time.Minutes minutes51 = minutes44.plus((int) ' ');
        java.lang.String str52 = minutes44.toString();
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean55 = minutes44.isLessThan(minutes54);
        org.joda.time.Minutes minutes56 = minutes33.minus(minutes44);
        java.lang.String str57 = minutes44.toString();
        org.joda.time.Minutes minutes58 = minutes25.plus(minutes44);
        org.joda.time.Minutes minutes60 = minutes58.dividedBy((-2147483548));
        org.joda.time.Minutes minutes61 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes64 = minutes62.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes65 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType66 = null;
        int int67 = minutes65.get(durationFieldType66);
        org.joda.time.DurationFieldType durationFieldType68 = minutes65.getFieldType();
        int int69 = minutes64.get(durationFieldType68);
        org.joda.time.Minutes minutes71 = minutes64.plus((-1));
        boolean boolean72 = minutes61.isGreaterThan(minutes64);
        org.joda.time.DurationFieldType durationFieldType73 = minutes64.getFieldType();
        org.joda.time.Minutes minutes74 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes75 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType76 = minutes75.getPeriodType();
        org.joda.time.Minutes minutes77 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes78 = minutes77.negated();
        org.joda.time.Minutes minutes79 = minutes77.negated();
        org.joda.time.DurationFieldType durationFieldType80 = minutes77.getFieldType();
        java.lang.String str81 = minutes77.toString();
        boolean boolean82 = minutes75.isGreaterThan(minutes77);
        boolean boolean83 = minutes74.equals((java.lang.Object) minutes75);
        org.joda.time.Minutes minutes84 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes74);
        int int85 = minutes64.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes74);
        org.joda.time.Minutes minutes86 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes88 = minutes86.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType89 = minutes88.getFieldType();
        org.joda.time.Minutes minutes90 = minutes88.negated();
        org.joda.time.Minutes minutes92 = minutes88.dividedBy((int) '4');
        org.joda.time.Minutes minutes93 = minutes74.plus(minutes88);
        org.joda.time.Minutes minutes95 = minutes74.dividedBy((-12));
        boolean boolean96 = minutes60.isGreaterThan(minutes95);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2) + "'", int19 == (-2));
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "PT2M" + "'", str41, "PT2M");
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "PT2M" + "'", str52, "PT2M");
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "PT2M" + "'", str57, "PT2M");
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(durationFieldType68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-2) + "'", int69 == (-2));
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(durationFieldType73);
        org.junit.Assert.assertNotNull(minutes74);
        org.junit.Assert.assertNotNull(minutes75);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(minutes77);
        org.junit.Assert.assertNotNull(minutes78);
        org.junit.Assert.assertNotNull(minutes79);
        org.junit.Assert.assertNotNull(durationFieldType80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "PT2147483647M" + "'", str81, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(minutes84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNotNull(minutes86);
        org.junit.Assert.assertNotNull(minutes88);
        org.junit.Assert.assertNotNull(durationFieldType89);
        org.junit.Assert.assertNotNull(minutes90);
        org.junit.Assert.assertNotNull(minutes92);
        org.junit.Assert.assertNotNull(minutes93);
        org.junit.Assert.assertNotNull(minutes95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        java.lang.String str10 = minutes2.toString();
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean13 = minutes2.isLessThan(minutes12);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes2);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT2M" + "'", str10, "PT2M");
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(minutes14);
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod2 = minutes0.toMutablePeriod();
        java.lang.String str3 = minutes0.toString();
        org.joda.time.PeriodType periodType4 = minutes0.getPeriodType();
        org.joda.time.Period period5 = minutes0.toPeriod();
        org.joda.time.Seconds seconds6 = minutes0.toStandardSeconds();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2M" + "'", str3, "PT2M");
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(seconds6);
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT-12M");
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration3 = minutes2.toStandardDuration();
        org.joda.time.Duration duration4 = minutes2.toStandardDuration();
        org.joda.time.Minutes minutes6 = minutes2.minus(2);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes9 = minutes7.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = minutes10.get(durationFieldType11);
        org.joda.time.MutablePeriod mutablePeriod13 = minutes10.toMutablePeriod();
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes10);
        boolean boolean15 = minutes9.isLessThan(minutes14);
        int int16 = minutes9.getMinutes();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean19 = minutes9.isLessThan(minutes18);
        org.joda.time.Minutes minutes20 = minutes6.minus(minutes18);
        int int21 = minutes18.getMinutes();
        org.joda.time.Minutes minutes22 = minutes1.minus(minutes18);
        org.joda.time.Minutes minutes24 = minutes22.plus((int) (byte) 0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-2147483645) + "'", int21 == (-2147483645));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Duration duration8 = minutes2.toStandardDuration();
        org.joda.time.Minutes minutes10 = minutes2.dividedBy((-22139006));
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes13 = minutes11.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = minutes14.get(durationFieldType15);
        org.joda.time.DurationFieldType durationFieldType17 = minutes14.getFieldType();
        int int18 = minutes13.get(durationFieldType17);
        org.joda.time.Minutes minutes20 = minutes13.plus((-1));
        org.joda.time.PeriodType periodType21 = minutes13.getPeriodType();
        org.joda.time.Minutes minutes22 = minutes13.negated();
        org.joda.time.Minutes minutes23 = minutes10.minus(minutes13);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes23);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType26 = minutes24.getFieldType((-6));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -6");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-2) + "'", int18 == (-2));
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        java.lang.String str10 = minutes2.toString();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = minutes11.get(durationFieldType12);
        org.joda.time.MutablePeriod mutablePeriod14 = minutes11.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType15 = minutes11.getFieldType();
        org.joda.time.Minutes minutes17 = minutes11.dividedBy((-1));
        org.joda.time.Minutes minutes19 = minutes11.dividedBy(2147483646);
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.minutes((int) (byte) 10);
        boolean boolean22 = minutes11.isLessThan(minutes21);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes25 = minutes23.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = minutes26.get(durationFieldType27);
        org.joda.time.MutablePeriod mutablePeriod29 = minutes26.toMutablePeriod();
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes26);
        boolean boolean31 = minutes25.isLessThan(minutes30);
        org.joda.time.Minutes minutes32 = minutes21.plus(minutes25);
        boolean boolean33 = minutes2.isGreaterThan(minutes21);
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.minutes((int) (byte) -1);
        org.joda.time.Minutes minutes36 = minutes21.minus(minutes35);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration38 = minutes37.toStandardDuration();
        org.joda.time.Duration duration39 = minutes37.toStandardDuration();
        org.joda.time.Minutes minutes41 = minutes37.minus(2);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes44 = minutes42.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType46 = null;
        int int47 = minutes45.get(durationFieldType46);
        org.joda.time.MutablePeriod mutablePeriod48 = minutes45.toMutablePeriod();
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes45);
        boolean boolean50 = minutes44.isLessThan(minutes49);
        int int51 = minutes44.getMinutes();
        org.joda.time.Minutes minutes53 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean54 = minutes44.isLessThan(minutes53);
        org.joda.time.Minutes minutes55 = minutes41.minus(minutes53);
        org.joda.time.Minutes minutes56 = minutes36.minus(minutes55);
        org.joda.time.Minutes minutes57 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration58 = minutes57.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod59 = minutes57.toMutablePeriod();
        org.joda.time.Minutes minutes60 = org.joda.time.Minutes.MAX_VALUE;
        int int61 = minutes60.size();
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes63 = minutes62.negated();
        org.joda.time.Minutes minutes65 = minutes63.dividedBy((int) (byte) -1);
        boolean boolean66 = minutes60.isLessThan(minutes63);
        boolean boolean67 = minutes57.isLessThan(minutes60);
        org.joda.time.Duration duration68 = minutes57.toStandardDuration();
        org.joda.time.Minutes minutes69 = minutes56.minus(minutes57);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType71 = minutes56.getFieldType((-41297760));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -41297760");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT2M" + "'", str10, "PT2M");
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-2) + "'", int51 == (-2));
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertNotNull(mutablePeriod59);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertNotNull(minutes69);
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((int) (byte) 0);
        org.joda.time.Days days2 = minutes1.toStandardDays();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        int int4 = minutes3.getMinutes();
        org.joda.time.PeriodType periodType5 = minutes3.getPeriodType();
        org.joda.time.Minutes minutes7 = minutes3.multipliedBy(1);
        org.joda.time.DurationFieldType durationFieldType8 = minutes7.getFieldType();
        org.joda.time.DurationFieldType durationFieldType9 = minutes7.getFieldType();
        int int10 = minutes7.getMinutes();
        // The following exception was thrown during execution in test generation
        try {
            int int11 = days2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes7);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class org.joda.time.Days cannot be compared to class org.joda.time.Minutes");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-2147483648) + "'", int4 == (-2147483648));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-2147483648) + "'", int10 == (-2147483648));
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        java.lang.String str3 = minutes2.toString();
        org.joda.time.Minutes minutes4 = minutes2.negated();
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((-12));
        org.joda.time.Minutes minutes8 = minutes4.minus((int) ' ');
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT-2M" + "'", str3, "PT-2M");
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Duration duration8 = minutes2.toStandardDuration();
        org.joda.time.Minutes minutes10 = minutes2.dividedBy((-22139006));
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes13 = minutes11.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = minutes14.get(durationFieldType15);
        org.joda.time.DurationFieldType durationFieldType17 = minutes14.getFieldType();
        int int18 = minutes13.get(durationFieldType17);
        org.joda.time.Minutes minutes20 = minutes13.plus((-1));
        org.joda.time.PeriodType periodType21 = minutes13.getPeriodType();
        org.joda.time.Minutes minutes22 = minutes13.negated();
        org.joda.time.Minutes minutes23 = minutes10.minus(minutes13);
        // The following exception was thrown during execution in test generation
        try {
            int int25 = minutes10.getValue((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-2) + "'", int18 == (-2));
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = minutes0.negated();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.THREE;
        int int4 = minutes3.size();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod6 = minutes5.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes9 = minutes7.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes11 = minutes7.plus(0);
        int int12 = minutes5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes7);
        org.joda.time.Minutes minutes14 = minutes7.plus((int) ' ');
        int int15 = minutes3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes14);
        boolean boolean16 = minutes0.isLessThan(minutes3);
        org.joda.time.DurationFieldType durationFieldType17 = minutes0.getFieldType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes19 = minutes0.minus((-2147483648));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Integer.MIN_VALUE cannot be negated");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(durationFieldType17);
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        org.joda.time.Minutes minutes5 = minutes3.plus((int) 'a');
        org.joda.time.Minutes minutes7 = minutes5.dividedBy((-2147483645));
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod9 = minutes8.toMutablePeriod();
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes11 = minutes8.plus(minutes10);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod13 = minutes12.toMutablePeriod();
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes15 = minutes12.plus(minutes14);
        boolean boolean16 = minutes11.isLessThan(minutes12);
        org.joda.time.PeriodType periodType17 = minutes11.getPeriodType();
        org.joda.time.Minutes minutes19 = minutes11.dividedBy(3);
        org.joda.time.Minutes minutes21 = minutes19.dividedBy(10);
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod23 = minutes22.toMutablePeriod();
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes26 = minutes24.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes28 = minutes24.plus(0);
        int int29 = minutes22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes24);
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes32 = minutes30.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes34 = minutes30.plus(0);
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes37 = minutes35.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType39 = null;
        int int40 = minutes38.get(durationFieldType39);
        org.joda.time.DurationFieldType durationFieldType41 = minutes38.getFieldType();
        int int42 = minutes37.get(durationFieldType41);
        org.joda.time.Minutes minutes44 = minutes37.plus((-1));
        org.joda.time.Minutes minutes46 = minutes37.minus((int) (short) 10);
        org.joda.time.Minutes minutes48 = minutes46.dividedBy((-2147483648));
        org.joda.time.Minutes minutes49 = minutes34.plus(minutes48);
        org.joda.time.Minutes minutes50 = minutes24.minus(minutes34);
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod52 = minutes51.toMutablePeriod();
        org.joda.time.Minutes minutes53 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes54 = minutes51.plus(minutes53);
        org.joda.time.Minutes minutes55 = minutes50.plus(minutes53);
        org.joda.time.Minutes minutes56 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes58 = minutes56.multipliedBy((int) (short) -1);
        org.joda.time.MutablePeriod mutablePeriod59 = minutes56.toMutablePeriod();
        org.joda.time.Minutes minutes60 = minutes53.minus(minutes56);
        org.joda.time.Minutes minutes61 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes63 = minutes61.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes64 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType65 = null;
        int int66 = minutes64.get(durationFieldType65);
        org.joda.time.DurationFieldType durationFieldType67 = minutes64.getFieldType();
        int int68 = minutes63.get(durationFieldType67);
        org.joda.time.Minutes minutes70 = minutes63.plus((-1));
        org.joda.time.Minutes minutes72 = minutes63.minus((int) (short) 10);
        org.joda.time.Minutes minutes74 = minutes72.dividedBy((-2147483648));
        org.joda.time.Minutes minutes75 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes72);
        java.lang.Class<?> wildcardClass76 = minutes72.getClass();
        boolean boolean77 = minutes53.equals((java.lang.Object) minutes72);
        boolean boolean78 = minutes21.equals((java.lang.Object) minutes53);
        org.joda.time.Minutes minutes79 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType80 = null;
        int int81 = minutes79.get(durationFieldType80);
        org.joda.time.DurationFieldType durationFieldType82 = minutes79.getFieldType();
        boolean boolean83 = minutes21.isSupported(durationFieldType82);
        org.joda.time.Minutes minutes85 = minutes21.minus(4);
        org.joda.time.Minutes minutes86 = minutes5.minus(minutes85);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-2) + "'", int42 == (-2));
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(mutablePeriod52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(mutablePeriod59);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(durationFieldType67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-2) + "'", int68 == (-2));
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertNotNull(minutes74);
        org.junit.Assert.assertNotNull(minutes75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(minutes79);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(durationFieldType82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(minutes85);
        org.junit.Assert.assertNotNull(minutes86);
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod5 = minutes4.toMutablePeriod();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes7 = minutes4.plus(minutes6);
        boolean boolean8 = minutes3.isLessThan(minutes4);
        org.joda.time.PeriodType periodType9 = minutes3.getPeriodType();
        org.joda.time.Minutes minutes11 = minutes3.dividedBy(3);
        org.joda.time.Minutes minutes13 = minutes11.dividedBy(10);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod15 = minutes14.toMutablePeriod();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes18 = minutes16.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes20 = minutes16.plus(0);
        int int21 = minutes14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes16);
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes24 = minutes22.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes26 = minutes22.plus(0);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes29 = minutes27.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = minutes30.get(durationFieldType31);
        org.joda.time.DurationFieldType durationFieldType33 = minutes30.getFieldType();
        int int34 = minutes29.get(durationFieldType33);
        org.joda.time.Minutes minutes36 = minutes29.plus((-1));
        org.joda.time.Minutes minutes38 = minutes29.minus((int) (short) 10);
        org.joda.time.Minutes minutes40 = minutes38.dividedBy((-2147483648));
        org.joda.time.Minutes minutes41 = minutes26.plus(minutes40);
        org.joda.time.Minutes minutes42 = minutes16.minus(minutes26);
        org.joda.time.Minutes minutes43 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod44 = minutes43.toMutablePeriod();
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes46 = minutes43.plus(minutes45);
        org.joda.time.Minutes minutes47 = minutes42.plus(minutes45);
        org.joda.time.Minutes minutes48 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes50 = minutes48.multipliedBy((int) (short) -1);
        org.joda.time.MutablePeriod mutablePeriod51 = minutes48.toMutablePeriod();
        org.joda.time.Minutes minutes52 = minutes45.minus(minutes48);
        org.joda.time.Minutes minutes53 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes55 = minutes53.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes56 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType57 = null;
        int int58 = minutes56.get(durationFieldType57);
        org.joda.time.DurationFieldType durationFieldType59 = minutes56.getFieldType();
        int int60 = minutes55.get(durationFieldType59);
        org.joda.time.Minutes minutes62 = minutes55.plus((-1));
        org.joda.time.Minutes minutes64 = minutes55.minus((int) (short) 10);
        org.joda.time.Minutes minutes66 = minutes64.dividedBy((-2147483648));
        org.joda.time.Minutes minutes67 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes64);
        java.lang.Class<?> wildcardClass68 = minutes64.getClass();
        boolean boolean69 = minutes45.equals((java.lang.Object) minutes64);
        boolean boolean70 = minutes13.equals((java.lang.Object) minutes45);
        org.joda.time.Minutes minutes71 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType72 = null;
        int int73 = minutes71.get(durationFieldType72);
        org.joda.time.DurationFieldType durationFieldType74 = minutes71.getFieldType();
        boolean boolean75 = minutes13.isSupported(durationFieldType74);
        org.joda.time.Minutes minutes77 = minutes13.minus(4);
        org.joda.time.Minutes minutes78 = null;
        boolean boolean79 = minutes13.isLessThan(minutes78);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-2) + "'", int34 == (-2));
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(mutablePeriod44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-2) + "'", int60 == (-2));
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(durationFieldType74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(minutes77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType3 = minutes2.getFieldType();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes5 = minutes4.negated();
        org.joda.time.Minutes minutes6 = minutes4.negated();
        java.lang.String str7 = minutes4.toString();
        int int8 = minutes4.size();
        org.joda.time.Minutes minutes10 = minutes4.minus(0);
        org.joda.time.Duration duration11 = minutes10.toStandardDuration();
        boolean boolean12 = minutes2.isGreaterThan(minutes10);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes2);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod17 = minutes16.toMutablePeriod();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes20 = minutes18.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes22 = minutes18.plus(0);
        int int23 = minutes16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes18);
        org.joda.time.Minutes minutes25 = minutes18.plus((int) ' ');
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = minutes26.getFieldType();
        int int28 = minutes18.get(durationFieldType27);
        boolean boolean29 = minutes15.isSupported(durationFieldType27);
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod31 = minutes30.toMutablePeriod();
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes33 = minutes30.plus(minutes32);
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod35 = minutes34.toMutablePeriod();
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes37 = minutes34.plus(minutes36);
        boolean boolean38 = minutes33.isLessThan(minutes34);
        org.joda.time.PeriodType periodType39 = minutes33.getPeriodType();
        org.joda.time.Minutes minutes41 = minutes33.dividedBy(3);
        org.joda.time.Minutes minutes43 = minutes41.dividedBy(10);
        boolean boolean44 = minutes15.isGreaterThan(minutes43);
        org.joda.time.Minutes minutes45 = minutes2.plus(minutes43);
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes48 = minutes46.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = minutes49.get(durationFieldType50);
        org.joda.time.DurationFieldType durationFieldType52 = minutes49.getFieldType();
        int int53 = minutes48.get(durationFieldType52);
        org.joda.time.Minutes minutes55 = minutes48.plus((-1));
        org.joda.time.Minutes minutes57 = minutes48.minus((int) (short) 10);
        org.joda.time.Duration duration58 = minutes48.toStandardDuration();
        org.joda.time.Minutes minutes59 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes48);
        java.lang.String str60 = minutes59.toString();
        org.joda.time.Minutes minutes62 = minutes59.minus((-22139006));
        org.joda.time.DurationFieldType durationFieldType63 = minutes62.getFieldType();
        int int64 = minutes2.get(durationFieldType63);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT2147483647M" + "'", str7, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-2) + "'", int53 == (-2));
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "PT-2M" + "'", str60, "PT-2M");
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-2) + "'", int64 == (-2));
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes2 = minutes0.minus((int) '4');
        org.joda.time.Minutes minutes4 = minutes0.plus((int) (short) 1);
        int int5 = minutes4.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 4 + "'", int5 == 4);
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod8 = minutes7.toMutablePeriod();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod8);
        boolean boolean10 = minutes0.isLessThan(minutes9);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod12 = minutes11.toMutablePeriod();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes14 = minutes11.plus(minutes13);
        org.joda.time.Period period15 = minutes14.toPeriod();
        int int16 = minutes9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes14);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod18 = minutes17.toMutablePeriod();
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes20 = minutes17.plus(minutes19);
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod22 = minutes21.toMutablePeriod();
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes24 = minutes21.plus(minutes23);
        boolean boolean25 = minutes20.isLessThan(minutes21);
        org.joda.time.PeriodType periodType26 = minutes20.getPeriodType();
        org.joda.time.Minutes minutes28 = minutes20.dividedBy(3);
        org.joda.time.Minutes minutes30 = minutes28.dividedBy(10);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod32 = minutes31.toMutablePeriod();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes35 = minutes33.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes37 = minutes33.plus(0);
        int int38 = minutes31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes33);
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes41 = minutes39.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes43 = minutes39.plus(0);
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes46 = minutes44.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes47 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType48 = null;
        int int49 = minutes47.get(durationFieldType48);
        org.joda.time.DurationFieldType durationFieldType50 = minutes47.getFieldType();
        int int51 = minutes46.get(durationFieldType50);
        org.joda.time.Minutes minutes53 = minutes46.plus((-1));
        org.joda.time.Minutes minutes55 = minutes46.minus((int) (short) 10);
        org.joda.time.Minutes minutes57 = minutes55.dividedBy((-2147483648));
        org.joda.time.Minutes minutes58 = minutes43.plus(minutes57);
        org.joda.time.Minutes minutes59 = minutes33.minus(minutes43);
        org.joda.time.Minutes minutes60 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod61 = minutes60.toMutablePeriod();
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes63 = minutes60.plus(minutes62);
        org.joda.time.Minutes minutes64 = minutes59.plus(minutes62);
        org.joda.time.Minutes minutes65 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes67 = minutes65.multipliedBy((int) (short) -1);
        org.joda.time.MutablePeriod mutablePeriod68 = minutes65.toMutablePeriod();
        org.joda.time.Minutes minutes69 = minutes62.minus(minutes65);
        org.joda.time.Minutes minutes70 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes72 = minutes70.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes73 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType74 = null;
        int int75 = minutes73.get(durationFieldType74);
        org.joda.time.DurationFieldType durationFieldType76 = minutes73.getFieldType();
        int int77 = minutes72.get(durationFieldType76);
        org.joda.time.Minutes minutes79 = minutes72.plus((-1));
        org.joda.time.Minutes minutes81 = minutes72.minus((int) (short) 10);
        org.joda.time.Minutes minutes83 = minutes81.dividedBy((-2147483648));
        org.joda.time.Minutes minutes84 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes81);
        java.lang.Class<?> wildcardClass85 = minutes81.getClass();
        boolean boolean86 = minutes62.equals((java.lang.Object) minutes81);
        boolean boolean87 = minutes30.equals((java.lang.Object) minutes62);
        org.joda.time.Minutes minutes88 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType89 = null;
        int int90 = minutes88.get(durationFieldType89);
        org.joda.time.DurationFieldType durationFieldType91 = minutes88.getFieldType();
        boolean boolean92 = minutes30.isSupported(durationFieldType91);
        org.joda.time.Minutes minutes94 = minutes30.minus(4);
        org.joda.time.Minutes minutes96 = minutes94.minus((int) (byte) 10);
        int int97 = minutes14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes94);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-2) + "'", int51 == (-2));
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(mutablePeriod61);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(mutablePeriod68);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertNotNull(minutes73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(durationFieldType76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-2) + "'", int77 == (-2));
        org.junit.Assert.assertNotNull(minutes79);
        org.junit.Assert.assertNotNull(minutes81);
        org.junit.Assert.assertNotNull(minutes83);
        org.junit.Assert.assertNotNull(minutes84);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(minutes88);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertNotNull(durationFieldType91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(minutes94);
        org.junit.Assert.assertNotNull(minutes96);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + (-1) + "'", int97 == (-1));
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        java.lang.String str10 = minutes2.toString();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod12 = minutes11.toMutablePeriod();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes17 = minutes13.plus(0);
        int int18 = minutes11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes13);
        org.joda.time.Minutes minutes20 = minutes13.plus((int) ' ');
        java.lang.String str21 = minutes13.toString();
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean24 = minutes13.isLessThan(minutes23);
        org.joda.time.Minutes minutes25 = minutes2.minus(minutes13);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes27 = minutes26.negated();
        org.joda.time.DurationFieldType durationFieldType28 = minutes26.getFieldType();
        org.joda.time.DurationFieldType durationFieldType29 = minutes26.getFieldType();
        boolean boolean30 = minutes2.isSupported(durationFieldType29);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = minutes31.get(durationFieldType32);
        org.joda.time.MutablePeriod mutablePeriod34 = minutes31.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType35 = minutes31.getFieldType();
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration37 = minutes36.toStandardDuration();
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes36);
        boolean boolean39 = minutes31.isGreaterThan(minutes36);
        org.joda.time.Minutes minutes40 = minutes2.plus(minutes36);
        org.joda.time.Minutes minutes41 = minutes36.negated();
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod43 = minutes42.toMutablePeriod();
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes46 = minutes44.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes48 = minutes44.plus(0);
        int int49 = minutes42.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes44);
        org.joda.time.Minutes minutes51 = minutes44.plus((int) ' ');
        java.lang.String str52 = minutes44.toString();
        org.joda.time.Minutes minutes53 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod54 = minutes53.toMutablePeriod();
        org.joda.time.Minutes minutes55 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes57 = minutes55.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes59 = minutes55.plus(0);
        int int60 = minutes53.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes55);
        org.joda.time.Minutes minutes62 = minutes55.plus((int) ' ');
        java.lang.String str63 = minutes55.toString();
        org.joda.time.Minutes minutes65 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean66 = minutes55.isLessThan(minutes65);
        org.joda.time.Minutes minutes67 = minutes44.minus(minutes55);
        boolean boolean68 = minutes36.isLessThan(minutes44);
        org.joda.time.Minutes minutes70 = minutes36.minus((int) (byte) -1);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT2M" + "'", str10, "PT2M");
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT2M" + "'", str21, "PT2M");
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "PT2M" + "'", str52, "PT2M");
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(mutablePeriod54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "PT2M" + "'", str63, "PT2M");
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(minutes70);
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes9 = minutes2.plus((-1));
        org.joda.time.Minutes minutes11 = minutes2.minus((int) (short) 10);
        org.joda.time.Minutes minutes13 = minutes11.dividedBy((-2147483648));
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod15 = minutes14.toMutablePeriod();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes17 = minutes14.plus(minutes16);
        org.joda.time.Minutes minutes18 = minutes11.minus(minutes16);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes21 = minutes19.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType22 = minutes21.getFieldType();
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes24 = minutes23.negated();
        org.joda.time.Minutes minutes25 = minutes23.negated();
        java.lang.String str26 = minutes23.toString();
        int int27 = minutes23.size();
        org.joda.time.Minutes minutes29 = minutes23.minus(0);
        org.joda.time.Duration duration30 = minutes29.toStandardDuration();
        boolean boolean31 = minutes21.isGreaterThan(minutes29);
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes21);
        org.joda.time.DurationFieldType durationFieldType33 = minutes21.getFieldType();
        int int34 = minutes21.size();
        org.joda.time.Minutes minutes35 = minutes18.plus(minutes21);
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes38 = minutes36.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType40 = null;
        int int41 = minutes39.get(durationFieldType40);
        org.joda.time.DurationFieldType durationFieldType42 = minutes39.getFieldType();
        int int43 = minutes38.get(durationFieldType42);
        org.joda.time.Minutes minutes45 = minutes38.plus((-1));
        boolean boolean46 = minutes18.isGreaterThan(minutes38);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "PT2147483647M" + "'", str26, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-2) + "'", int43 == (-2));
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        int int1 = minutes0.getMinutes();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes3 = minutes2.negated();
        org.joda.time.Minutes minutes4 = minutes2.negated();
        org.joda.time.DurationFieldType durationFieldType5 = minutes2.getFieldType();
        int int6 = minutes0.get(durationFieldType5);
        org.joda.time.Minutes minutes8 = minutes0.dividedBy(34);
        org.joda.time.Minutes minutes10 = minutes8.minus((-2147483647));
        java.lang.String str11 = minutes10.toString();
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes13 = minutes12.negated();
        org.joda.time.Minutes minutes14 = minutes12.negated();
        org.joda.time.DurationFieldType durationFieldType15 = minutes12.getFieldType();
        java.lang.String str16 = minutes12.toString();
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes18 = minutes17.negated();
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes17);
        int int20 = minutes17.size();
        org.joda.time.MutablePeriod mutablePeriod21 = minutes17.toMutablePeriod();
        boolean boolean22 = minutes12.equals((java.lang.Object) minutes17);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes26 = minutes24.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = minutes27.get(durationFieldType28);
        org.joda.time.DurationFieldType durationFieldType30 = minutes27.getFieldType();
        int int31 = minutes26.get(durationFieldType30);
        org.joda.time.Minutes minutes33 = minutes26.plus((-1));
        boolean boolean34 = minutes23.isGreaterThan(minutes26);
        org.joda.time.DurationFieldType durationFieldType35 = minutes23.getFieldType();
        int int36 = minutes12.get(durationFieldType35);
        org.joda.time.Minutes minutes37 = minutes10.minus(minutes12);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-2147483648) + "'", int1 == (-2147483648));
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-2147483648) + "'", int6 == (-2147483648));
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "PT2084322364M" + "'", str11, "PT2084322364M");
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483647M" + "'", str16, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-2) + "'", int31 == (-2));
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2147483647 + "'", int36 == 2147483647);
        org.junit.Assert.assertNotNull(minutes37);
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType3 = minutes2.getFieldType();
        org.joda.time.Minutes minutes4 = minutes2.negated();
        org.joda.time.PeriodType periodType5 = minutes4.getPeriodType();
        int int6 = minutes4.size();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        int int1 = minutes0.getMinutes();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = minutes5.get(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType8 = minutes5.getFieldType();
        int int9 = minutes4.get(durationFieldType8);
        org.joda.time.Minutes minutes11 = minutes4.plus((-1));
        org.joda.time.Minutes minutes13 = minutes4.minus((int) (short) 10);
        org.joda.time.Minutes minutes15 = minutes13.dividedBy((-2147483648));
        org.joda.time.Minutes minutes16 = minutes15.negated();
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes18 = minutes17.negated();
        org.joda.time.Minutes minutes19 = minutes17.negated();
        org.joda.time.Minutes minutes20 = minutes15.minus(minutes19);
        org.joda.time.Minutes minutes22 = minutes19.plus((int) 'a');
        boolean boolean23 = minutes0.isLessThan(minutes22);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes26 = minutes24.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = minutes27.get(durationFieldType28);
        org.joda.time.MutablePeriod mutablePeriod30 = minutes27.toMutablePeriod();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes27);
        boolean boolean32 = minutes26.isLessThan(minutes31);
        int int33 = minutes26.getMinutes();
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean36 = minutes26.isLessThan(minutes35);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration38 = minutes37.toStandardDuration();
        org.joda.time.Duration duration39 = minutes37.toStandardDuration();
        org.joda.time.Minutes minutes41 = minutes37.minus(2);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes44 = minutes42.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes45 = minutes42.negated();
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes47 = minutes46.negated();
        org.joda.time.Minutes minutes48 = minutes46.negated();
        boolean boolean49 = minutes42.equals((java.lang.Object) minutes48);
        boolean boolean50 = minutes41.isLessThan(minutes42);
        org.joda.time.Minutes minutes51 = minutes35.minus(minutes42);
        org.joda.time.Minutes minutes52 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes53 = minutes52.negated();
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes52);
        java.lang.String str55 = minutes52.toString();
        org.joda.time.Minutes minutes56 = minutes51.plus(minutes52);
        org.joda.time.Minutes minutes58 = org.joda.time.Minutes.minutes((int) (short) -1);
        int int59 = minutes58.size();
        boolean boolean60 = minutes56.isGreaterThan(minutes58);
        int int61 = minutes22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes58);
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes22);
        org.joda.time.Minutes minutes63 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration64 = minutes63.toStandardDuration();
        org.joda.time.Minutes minutes65 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes63);
        int int66 = minutes22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes63);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-2147483648) + "'", int1 == (-2147483648));
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-2) + "'", int9 == (-2));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-2) + "'", int33 == (-2));
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "PT2147483647M" + "'", str55, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType2 = minutes1.getPeriodType();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes4 = minutes3.negated();
        org.joda.time.Minutes minutes5 = minutes3.negated();
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        java.lang.String str7 = minutes3.toString();
        boolean boolean8 = minutes1.isGreaterThan(minutes3);
        boolean boolean9 = minutes0.equals((java.lang.Object) minutes1);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes12 = minutes11.negated();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes11);
        org.joda.time.Minutes minutes14 = minutes10.minus(minutes13);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes17 = minutes15.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = minutes18.get(durationFieldType19);
        org.joda.time.DurationFieldType durationFieldType21 = minutes18.getFieldType();
        int int22 = minutes17.get(durationFieldType21);
        org.joda.time.Minutes minutes24 = minutes17.plus((-1));
        org.joda.time.Minutes minutes26 = minutes17.minus((int) (short) 10);
        org.joda.time.Duration duration27 = minutes17.toStandardDuration();
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes17);
        int int29 = minutes14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes28);
        java.lang.Class<?> wildcardClass30 = minutes14.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT2147483647M" + "'", str7, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-2) + "'", int22 == (-2));
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((int) (short) -1);
        int int2 = minutes1.size();
        org.joda.time.Minutes minutes3 = minutes1.negated();
        int int4 = minutes3.getMinutes();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration13 = minutes12.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod14 = minutes12.toMutablePeriod();
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MAX_VALUE;
        int int16 = minutes15.size();
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes18 = minutes17.negated();
        org.joda.time.Minutes minutes20 = minutes18.dividedBy((int) (byte) -1);
        boolean boolean21 = minutes15.isLessThan(minutes18);
        boolean boolean22 = minutes12.isLessThan(minutes15);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = minutes23.get(durationFieldType24);
        org.joda.time.MutablePeriod mutablePeriod26 = minutes23.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType27 = minutes23.getFieldType();
        org.joda.time.Minutes minutes29 = minutes23.dividedBy((-1));
        org.joda.time.Minutes minutes31 = minutes23.dividedBy(2147483646);
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes34 = minutes32.minus((int) (short) 1);
        org.joda.time.Minutes minutes36 = minutes34.multipliedBy(0);
        org.joda.time.Duration duration37 = minutes34.toStandardDuration();
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes39 = minutes38.negated();
        org.joda.time.DurationFieldType durationFieldType40 = minutes38.getFieldType();
        int int41 = minutes34.get(durationFieldType40);
        boolean boolean42 = minutes23.isSupported(durationFieldType40);
        int int43 = minutes15.get(durationFieldType40);
        int int44 = minutes3.get(durationFieldType40);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes47 = minutes45.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes48 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = minutes48.get(durationFieldType49);
        org.joda.time.MutablePeriod mutablePeriod51 = minutes48.toMutablePeriod();
        org.joda.time.Minutes minutes52 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes48);
        boolean boolean53 = minutes47.isLessThan(minutes52);
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes56 = minutes54.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes57 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType58 = null;
        int int59 = minutes57.get(durationFieldType58);
        org.joda.time.DurationFieldType durationFieldType60 = minutes57.getFieldType();
        int int61 = minutes56.get(durationFieldType60);
        org.joda.time.Minutes minutes63 = minutes56.plus((-1));
        org.joda.time.Minutes minutes64 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod65 = minutes64.toMutablePeriod();
        org.joda.time.Minutes minutes66 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes68 = minutes66.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes70 = minutes66.plus(0);
        int int71 = minutes64.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes66);
        org.joda.time.Minutes minutes73 = minutes66.plus((int) ' ');
        java.lang.String str74 = minutes66.toString();
        org.joda.time.Minutes minutes76 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean77 = minutes66.isLessThan(minutes76);
        boolean boolean78 = minutes63.isLessThan(minutes66);
        org.joda.time.Minutes minutes79 = minutes47.minus(minutes63);
        org.joda.time.Minutes minutes80 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes82 = minutes80.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType83 = minutes82.getFieldType();
        org.joda.time.Minutes minutes84 = minutes82.negated();
        org.joda.time.Minutes minutes85 = minutes79.minus(minutes84);
        org.joda.time.DurationFieldType durationFieldType86 = minutes85.getFieldType();
        boolean boolean87 = minutes3.isSupported(durationFieldType86);
        org.joda.time.Duration duration88 = minutes3.toStandardDuration();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2147483646 + "'", int41 == 2147483646);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2147483647 + "'", int43 == 2147483647);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-2) + "'", int44 == (-2));
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(durationFieldType60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-2) + "'", int61 == (-2));
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(mutablePeriod65);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(minutes73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "PT2M" + "'", str74, "PT2M");
        org.junit.Assert.assertNotNull(minutes76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(minutes79);
        org.junit.Assert.assertNotNull(minutes80);
        org.junit.Assert.assertNotNull(minutes82);
        org.junit.Assert.assertNotNull(durationFieldType83);
        org.junit.Assert.assertNotNull(minutes84);
        org.junit.Assert.assertNotNull(minutes85);
        org.junit.Assert.assertNotNull(durationFieldType86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(duration88);
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        int int1 = minutes0.size();
        int int3 = minutes0.getValue(0);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes6 = minutes4.dividedBy((-1));
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod8 = minutes7.toMutablePeriod();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes13 = minutes9.plus(0);
        int int14 = minutes7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes9);
        org.joda.time.Minutes minutes16 = minutes9.plus((int) ' ');
        java.lang.String str17 = minutes9.toString();
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean20 = minutes9.isLessThan(minutes19);
        boolean boolean21 = minutes4.equals((java.lang.Object) minutes9);
        org.joda.time.Duration duration22 = minutes4.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType23 = minutes4.getFieldType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2147483647 + "'", int3 == 2147483647);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "PT2M" + "'", str17, "PT2M");
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(durationFieldType23);
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.PeriodType periodType2 = minutes1.getPeriodType();
        org.joda.time.Minutes minutes4 = minutes1.minus(0);
        org.joda.time.Minutes minutes6 = minutes1.minus((-1));
        org.joda.time.Minutes minutes7 = minutes1.negated();
        org.joda.time.Minutes minutes9 = minutes7.multipliedBy(1);
        int int10 = minutes9.size();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = minutes8.plus(0);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = minutes16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = minutes16.getFieldType();
        int int20 = minutes15.get(durationFieldType19);
        org.joda.time.Minutes minutes22 = minutes15.plus((-1));
        org.joda.time.Minutes minutes24 = minutes15.minus((int) (short) 10);
        org.joda.time.Minutes minutes26 = minutes24.dividedBy((-2147483648));
        org.joda.time.Minutes minutes27 = minutes12.plus(minutes26);
        org.joda.time.Minutes minutes28 = minutes2.minus(minutes12);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod30 = minutes29.toMutablePeriod();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes33 = minutes31.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes35 = minutes31.plus(0);
        int int36 = minutes29.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes31);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes39 = minutes37.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes41 = minutes37.plus(0);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes44 = minutes42.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType46 = null;
        int int47 = minutes45.get(durationFieldType46);
        org.joda.time.DurationFieldType durationFieldType48 = minutes45.getFieldType();
        int int49 = minutes44.get(durationFieldType48);
        org.joda.time.Minutes minutes51 = minutes44.plus((-1));
        org.joda.time.Minutes minutes53 = minutes44.minus((int) (short) 10);
        org.joda.time.Minutes minutes55 = minutes53.dividedBy((-2147483648));
        org.joda.time.Minutes minutes56 = minutes41.plus(minutes55);
        org.joda.time.Minutes minutes57 = minutes31.minus(minutes41);
        org.joda.time.PeriodType periodType58 = minutes31.getPeriodType();
        boolean boolean59 = minutes12.isLessThan(minutes31);
        org.joda.time.Minutes minutes60 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType61 = minutes60.getPeriodType();
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes63 = minutes62.negated();
        org.joda.time.Minutes minutes64 = minutes62.negated();
        org.joda.time.DurationFieldType durationFieldType65 = minutes62.getFieldType();
        java.lang.String str66 = minutes62.toString();
        boolean boolean67 = minutes60.isGreaterThan(minutes62);
        boolean boolean68 = minutes31.isLessThan(minutes60);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes70 = minutes60.multipliedBy((-2147483645));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 3 * -2147483645");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-2) + "'", int20 == (-2));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-2) + "'", int49 == (-2));
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "PT2147483647M" + "'", str66, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.Duration duration2 = minutes0.toStandardDuration();
        org.joda.time.Minutes minutes4 = minutes0.minus(2);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = minutes5.negated();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes10 = minutes9.negated();
        org.joda.time.Minutes minutes11 = minutes9.negated();
        boolean boolean12 = minutes5.equals((java.lang.Object) minutes11);
        boolean boolean13 = minutes4.isLessThan(minutes5);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes15 = minutes14.negated();
        org.joda.time.Minutes minutes16 = minutes14.negated();
        org.joda.time.DurationFieldType durationFieldType17 = minutes14.getFieldType();
        java.lang.String str18 = minutes14.toString();
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = minutes19.get(durationFieldType20);
        org.joda.time.MutablePeriod mutablePeriod22 = minutes19.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType23 = minutes19.getFieldType();
        int int24 = minutes14.get(durationFieldType23);
        org.joda.time.Period period25 = minutes14.toPeriod();
        org.joda.time.Minutes minutes26 = minutes14.negated();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes27 = minutes5.minus(minutes26);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 2 + 2147483647");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "PT2147483647M" + "'", str18, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2147483647 + "'", int24 == 2147483647);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(minutes26);
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod2 = minutes1.toMutablePeriod();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes5 = minutes3.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes7 = minutes3.plus(0);
        int int8 = minutes1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes3);
        org.joda.time.Minutes minutes10 = minutes3.plus((int) ' ');
        java.lang.String str11 = minutes3.toString();
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod13 = minutes12.toMutablePeriod();
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes16 = minutes14.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes18 = minutes14.plus(0);
        int int19 = minutes12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes14);
        org.joda.time.Minutes minutes21 = minutes14.plus((int) ' ');
        java.lang.String str22 = minutes14.toString();
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean25 = minutes14.isLessThan(minutes24);
        org.joda.time.Minutes minutes26 = minutes3.minus(minutes14);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes28 = minutes27.negated();
        org.joda.time.DurationFieldType durationFieldType29 = minutes27.getFieldType();
        org.joda.time.DurationFieldType durationFieldType30 = minutes27.getFieldType();
        boolean boolean31 = minutes3.isSupported(durationFieldType30);
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = minutes32.get(durationFieldType33);
        org.joda.time.MutablePeriod mutablePeriod35 = minutes32.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType36 = minutes32.getFieldType();
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration38 = minutes37.toStandardDuration();
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes37);
        boolean boolean40 = minutes32.isGreaterThan(minutes37);
        org.joda.time.Minutes minutes41 = minutes3.plus(minutes37);
        org.joda.time.Minutes minutes42 = minutes37.negated();
        org.joda.time.Minutes minutes43 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType45 = minutes44.getPeriodType();
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes47 = minutes46.negated();
        org.joda.time.Minutes minutes48 = minutes46.negated();
        org.joda.time.DurationFieldType durationFieldType49 = minutes46.getFieldType();
        java.lang.String str50 = minutes46.toString();
        boolean boolean51 = minutes44.isGreaterThan(minutes46);
        boolean boolean52 = minutes43.equals((java.lang.Object) minutes44);
        org.joda.time.Minutes minutes54 = minutes44.minus(1);
        org.joda.time.PeriodType periodType55 = minutes54.getPeriodType();
        org.joda.time.Minutes minutes56 = minutes42.plus(minutes54);
        org.joda.time.MutablePeriod mutablePeriod57 = minutes54.toMutablePeriod();
        boolean boolean58 = minutes0.equals((java.lang.Object) minutes54);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes60 = minutes0.minus((-2147483647));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 2147483647 + 2147483647");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "PT2M" + "'", str11, "PT2M");
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PT2M" + "'", str22, "PT2M");
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "PT2147483647M" + "'", str50, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(mutablePeriod57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes11 = minutes10.negated();
        org.joda.time.Minutes minutes12 = minutes10.negated();
        org.joda.time.DurationFieldType durationFieldType13 = minutes10.getFieldType();
        java.lang.String str14 = minutes10.toString();
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes16 = minutes15.negated();
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes15);
        int int18 = minutes15.size();
        org.joda.time.MutablePeriod mutablePeriod19 = minutes15.toMutablePeriod();
        boolean boolean20 = minutes10.equals((java.lang.Object) minutes15);
        org.joda.time.DurationFieldType durationFieldType22 = minutes15.getFieldType((int) (short) 0);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod24 = minutes23.toMutablePeriod();
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes27 = minutes25.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes29 = minutes25.plus(0);
        int int30 = minutes23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes25);
        org.joda.time.Minutes minutes32 = minutes25.plus((int) ' ');
        java.lang.String str33 = minutes25.toString();
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean36 = minutes25.isLessThan(minutes35);
        org.joda.time.Period period37 = minutes35.toPeriod();
        boolean boolean38 = minutes15.isGreaterThan(minutes35);
        org.joda.time.Period period39 = minutes15.toPeriod();
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) period39);
        org.joda.time.Minutes minutes41 = minutes9.minus(minutes40);
        org.joda.time.Period period42 = minutes40.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod43 = minutes40.toMutablePeriod();
        java.lang.Class<?> wildcardClass44 = mutablePeriod43.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "PT2147483647M" + "'", str14, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "PT2M" + "'", str33, "PT2M");
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes9 = minutes2.plus((-1));
        org.joda.time.Minutes minutes11 = minutes2.minus((int) (short) 10);
        org.joda.time.Minutes minutes13 = minutes11.dividedBy((-2147483648));
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod15 = minutes14.toMutablePeriod();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes17 = minutes14.plus(minutes16);
        org.joda.time.Minutes minutes18 = minutes11.minus(minutes16);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes21 = minutes19.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType22 = minutes21.getFieldType();
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes24 = minutes23.negated();
        org.joda.time.Minutes minutes25 = minutes23.negated();
        java.lang.String str26 = minutes23.toString();
        int int27 = minutes23.size();
        org.joda.time.Minutes minutes29 = minutes23.minus(0);
        org.joda.time.Duration duration30 = minutes29.toStandardDuration();
        boolean boolean31 = minutes21.isGreaterThan(minutes29);
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes21);
        org.joda.time.DurationFieldType durationFieldType33 = minutes21.getFieldType();
        int int34 = minutes21.size();
        org.joda.time.Minutes minutes35 = minutes18.plus(minutes21);
        org.joda.time.Period period36 = minutes21.toPeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "PT2147483647M" + "'", str26, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(period36);
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.Minutes minutes13 = minutes3.plus(10);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes16 = minutes14.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = minutes17.get(durationFieldType18);
        org.joda.time.DurationFieldType durationFieldType20 = minutes17.getFieldType();
        int int21 = minutes16.get(durationFieldType20);
        org.joda.time.Minutes minutes22 = minutes16.negated();
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = minutes23.get(durationFieldType24);
        org.joda.time.MutablePeriod mutablePeriod26 = minutes23.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType27 = minutes23.getFieldType();
        org.joda.time.Minutes minutes29 = minutes23.dividedBy((-1));
        org.joda.time.Minutes minutes31 = minutes23.dividedBy(2147483646);
        org.joda.time.DurationFieldType durationFieldType32 = minutes23.getFieldType();
        boolean boolean33 = minutes16.isSupported(durationFieldType32);
        boolean boolean34 = minutes3.isSupported(durationFieldType32);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-2) + "'", int21 == (-2));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        int int9 = minutes2.getMinutes();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean12 = minutes2.isLessThan(minutes11);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes2);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes16 = minutes14.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes18 = minutes14.plus(0);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        boolean boolean20 = minutes14.isGreaterThan(minutes19);
        org.joda.time.PeriodType periodType21 = minutes14.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType22 = minutes14.getFieldType();
        org.joda.time.Minutes minutes24 = minutes14.minus((int) (byte) -1);
        org.joda.time.Minutes minutes25 = minutes2.plus(minutes24);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes27 = minutes26.negated();
        org.joda.time.Minutes minutes28 = minutes26.negated();
        java.lang.String str29 = minutes26.toString();
        org.joda.time.Minutes minutes31 = minutes26.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes35 = minutes33.multipliedBy((int) (byte) 0);
        boolean boolean36 = minutes31.equals((java.lang.Object) minutes33);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes39 = minutes37.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes41 = minutes37.plus(0);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes44 = minutes42.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType46 = null;
        int int47 = minutes45.get(durationFieldType46);
        org.joda.time.DurationFieldType durationFieldType48 = minutes45.getFieldType();
        int int49 = minutes44.get(durationFieldType48);
        org.joda.time.Minutes minutes51 = minutes44.plus((-1));
        org.joda.time.Minutes minutes53 = minutes44.minus((int) (short) 10);
        org.joda.time.Minutes minutes55 = minutes53.dividedBy((-2147483648));
        org.joda.time.Minutes minutes56 = minutes41.plus(minutes55);
        org.joda.time.Minutes minutes57 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes59 = minutes57.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes60 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType61 = null;
        int int62 = minutes60.get(durationFieldType61);
        org.joda.time.MutablePeriod mutablePeriod63 = minutes60.toMutablePeriod();
        org.joda.time.Minutes minutes64 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes60);
        boolean boolean65 = minutes59.isLessThan(minutes64);
        org.joda.time.DurationFieldType durationFieldType66 = minutes64.getFieldType();
        boolean boolean67 = minutes56.isSupported(durationFieldType66);
        org.joda.time.Minutes minutes69 = minutes56.plus((int) (short) -1);
        org.joda.time.Minutes minutes70 = minutes31.plus(minutes56);
        boolean boolean71 = minutes2.isLessThan(minutes70);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-2) + "'", int9 == (-2));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2147483647M" + "'", str29, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-2) + "'", int49 == (-2));
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod63);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(durationFieldType66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = minutes12.getFieldType();
        int int16 = minutes11.get(durationFieldType15);
        org.joda.time.Minutes minutes18 = minutes11.plus((-1));
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = minutes21.plus(0);
        int int26 = minutes19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes21);
        org.joda.time.Minutes minutes28 = minutes21.plus((int) ' ');
        java.lang.String str29 = minutes21.toString();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean32 = minutes21.isLessThan(minutes31);
        boolean boolean33 = minutes18.isLessThan(minutes21);
        org.joda.time.Minutes minutes34 = minutes2.minus(minutes18);
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.ZERO;
        int int36 = minutes34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes35);
        org.joda.time.Minutes minutes38 = minutes35.multipliedBy((int) (short) 0);
        org.joda.time.Duration duration39 = minutes35.toStandardDuration();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2M" + "'", str29, "PT2M");
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(duration39);
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.Days days2 = minutes0.toStandardDays();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(days2);
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes5 = minutes4.negated();
        org.joda.time.Minutes minutes6 = minutes4.negated();
        boolean boolean7 = minutes0.equals((java.lang.Object) minutes6);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = minutes11.get(durationFieldType12);
        org.joda.time.MutablePeriod mutablePeriod14 = minutes11.toMutablePeriod();
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes11);
        boolean boolean16 = minutes10.isLessThan(minutes15);
        int int17 = minutes10.getMinutes();
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean20 = minutes10.isLessThan(minutes19);
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration22 = minutes21.toStandardDuration();
        org.joda.time.Duration duration23 = minutes21.toStandardDuration();
        org.joda.time.Minutes minutes25 = minutes21.minus(2);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes28 = minutes26.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes29 = minutes26.negated();
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes31 = minutes30.negated();
        org.joda.time.Minutes minutes32 = minutes30.negated();
        boolean boolean33 = minutes26.equals((java.lang.Object) minutes32);
        boolean boolean34 = minutes25.isLessThan(minutes26);
        org.joda.time.Minutes minutes35 = minutes19.minus(minutes26);
        org.joda.time.Minutes minutes37 = minutes19.dividedBy((-12));
        org.joda.time.Minutes minutes38 = minutes6.plus(minutes37);
        org.joda.time.Minutes minutes40 = minutes6.dividedBy((int) (short) 10);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-2) + "'", int17 == (-2));
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((int) '4');
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes3 = minutes2.negated();
        org.joda.time.Minutes minutes4 = minutes2.negated();
        org.joda.time.DurationFieldType durationFieldType5 = minutes2.getFieldType();
        java.lang.String str6 = minutes2.toString();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes8 = minutes7.negated();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes7);
        int int10 = minutes7.size();
        org.joda.time.MutablePeriod mutablePeriod11 = minutes7.toMutablePeriod();
        boolean boolean12 = minutes2.equals((java.lang.Object) minutes7);
        org.joda.time.DurationFieldType durationFieldType14 = minutes7.getFieldType((int) (short) 0);
        int int15 = minutes1.get(durationFieldType14);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes1);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT2147483647M" + "'", str6, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(minutes16);
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = minutes12.getFieldType();
        int int16 = minutes11.get(durationFieldType15);
        org.joda.time.Minutes minutes18 = minutes11.plus((-1));
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = minutes21.plus(0);
        int int26 = minutes19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes21);
        org.joda.time.Minutes minutes28 = minutes21.plus((int) ' ');
        java.lang.String str29 = minutes21.toString();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean32 = minutes21.isLessThan(minutes31);
        boolean boolean33 = minutes18.isLessThan(minutes21);
        org.joda.time.Minutes minutes34 = minutes2.minus(minutes18);
        org.joda.time.MutablePeriod mutablePeriod35 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod37 = minutes36.toMutablePeriod();
        boolean boolean38 = minutes2.isLessThan(minutes36);
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes36);
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes42 = minutes40.minus((int) (short) 0);
        org.joda.time.Minutes minutes43 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes46 = minutes44.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes47 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType48 = null;
        int int49 = minutes47.get(durationFieldType48);
        org.joda.time.DurationFieldType durationFieldType50 = minutes47.getFieldType();
        int int51 = minutes46.get(durationFieldType50);
        org.joda.time.Minutes minutes53 = minutes46.plus((-1));
        boolean boolean54 = minutes43.isGreaterThan(minutes46);
        org.joda.time.DurationFieldType durationFieldType55 = minutes46.getFieldType();
        org.joda.time.PeriodType periodType56 = minutes46.getPeriodType();
        boolean boolean57 = minutes40.isLessThan(minutes46);
        org.joda.time.Minutes minutes59 = org.joda.time.Minutes.parseMinutes("PT-3M");
        int int60 = minutes40.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes59);
        int int61 = minutes36.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes40);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2M" + "'", str29, "PT2M");
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-2) + "'", int51 == (-2));
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.Minutes minutes13 = minutes3.multipliedBy(2);
        int int14 = minutes3.size();
        org.joda.time.Period period15 = minutes3.toPeriod();
        org.joda.time.Minutes minutes17 = minutes3.minus(36);
        org.joda.time.Minutes minutes18 = null;
        boolean boolean19 = minutes17.isLessThan(minutes18);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.minus((int) (short) 1);
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy(0);
        org.joda.time.Minutes minutes6 = minutes4.plus((-2147483648));
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes8 = minutes7.negated();
        org.joda.time.Minutes minutes9 = minutes7.negated();
        boolean boolean10 = minutes6.isGreaterThan(minutes9);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod12 = minutes11.toMutablePeriod();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes17 = minutes13.plus(0);
        int int18 = minutes11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes13);
        boolean boolean19 = minutes6.equals((java.lang.Object) minutes13);
        org.joda.time.MutablePeriod mutablePeriod20 = minutes6.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod21 = minutes6.toMutablePeriod();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes23 = minutes22.negated();
        org.joda.time.Minutes minutes24 = minutes22.negated();
        org.joda.time.DurationFieldType durationFieldType25 = minutes22.getFieldType();
        java.lang.String str26 = minutes22.toString();
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes28 = minutes27.negated();
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes27);
        int int30 = minutes27.size();
        org.joda.time.MutablePeriod mutablePeriod31 = minutes27.toMutablePeriod();
        boolean boolean32 = minutes22.equals((java.lang.Object) minutes27);
        boolean boolean33 = minutes6.isGreaterThan(minutes22);
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.MIN_VALUE;
        int int35 = minutes34.getMinutes();
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes38 = minutes36.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes40 = minutes36.plus(0);
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes43 = minutes41.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = minutes44.get(durationFieldType45);
        org.joda.time.DurationFieldType durationFieldType47 = minutes44.getFieldType();
        int int48 = minutes43.get(durationFieldType47);
        org.joda.time.Minutes minutes50 = minutes43.plus((-1));
        org.joda.time.Minutes minutes52 = minutes43.minus((int) (short) 10);
        org.joda.time.Minutes minutes54 = minutes52.dividedBy((-2147483648));
        org.joda.time.Minutes minutes55 = minutes40.plus(minutes54);
        org.joda.time.Minutes minutes56 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes58 = minutes56.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes59 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType60 = null;
        int int61 = minutes59.get(durationFieldType60);
        org.joda.time.MutablePeriod mutablePeriod62 = minutes59.toMutablePeriod();
        org.joda.time.Minutes minutes63 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes59);
        boolean boolean64 = minutes58.isLessThan(minutes63);
        org.joda.time.DurationFieldType durationFieldType65 = minutes63.getFieldType();
        boolean boolean66 = minutes55.isSupported(durationFieldType65);
        boolean boolean67 = minutes34.isLessThan(minutes55);
        org.joda.time.Minutes minutes69 = minutes55.plus((int) ' ');
        int int70 = minutes69.size();
        org.joda.time.Minutes minutes71 = minutes69.negated();
        org.joda.time.Minutes minutes73 = org.joda.time.Minutes.minutes(1);
        org.joda.time.PeriodType periodType74 = minutes73.getPeriodType();
        org.joda.time.Period period75 = minutes73.toPeriod();
        java.lang.String str76 = minutes73.toString();
        org.joda.time.Minutes minutes77 = minutes69.plus(minutes73);
        org.joda.time.Minutes minutes78 = minutes6.plus(minutes73);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "PT2147483647M" + "'", str26, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-2147483648) + "'", int35 == (-2147483648));
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-2) + "'", int48 == (-2));
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod62);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertNotNull(minutes73);
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "PT1M" + "'", str76, "PT1M");
        org.junit.Assert.assertNotNull(minutes77);
        org.junit.Assert.assertNotNull(minutes78);
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = minutes8.plus(0);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = minutes16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = minutes16.getFieldType();
        int int20 = minutes15.get(durationFieldType19);
        org.joda.time.Minutes minutes22 = minutes15.plus((-1));
        org.joda.time.Minutes minutes24 = minutes15.minus((int) (short) 10);
        org.joda.time.Minutes minutes26 = minutes24.dividedBy((-2147483648));
        org.joda.time.Minutes minutes27 = minutes12.plus(minutes26);
        org.joda.time.Minutes minutes28 = minutes2.minus(minutes12);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes31 = minutes29.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes33 = minutes29.plus(0);
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes36 = minutes34.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = minutes37.get(durationFieldType38);
        org.joda.time.DurationFieldType durationFieldType40 = minutes37.getFieldType();
        int int41 = minutes36.get(durationFieldType40);
        org.joda.time.Minutes minutes43 = minutes36.plus((-1));
        org.joda.time.Minutes minutes45 = minutes36.minus((int) (short) 10);
        org.joda.time.Minutes minutes47 = minutes45.dividedBy((-2147483648));
        org.joda.time.Minutes minutes48 = minutes33.plus(minutes47);
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType50 = minutes49.getPeriodType();
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes52 = minutes51.negated();
        org.joda.time.Minutes minutes53 = minutes51.negated();
        org.joda.time.DurationFieldType durationFieldType54 = minutes51.getFieldType();
        java.lang.String str55 = minutes51.toString();
        boolean boolean56 = minutes49.isGreaterThan(minutes51);
        boolean boolean57 = minutes33.isLessThan(minutes51);
        int int58 = minutes12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes51);
        org.joda.time.Minutes minutes60 = minutes51.dividedBy((-2147483647));
        org.joda.time.Minutes minutes61 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes63 = minutes61.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes64 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType65 = null;
        int int66 = minutes64.get(durationFieldType65);
        org.joda.time.MutablePeriod mutablePeriod67 = minutes64.toMutablePeriod();
        org.joda.time.Minutes minutes68 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes64);
        boolean boolean69 = minutes63.isLessThan(minutes68);
        int int70 = minutes63.getMinutes();
        org.joda.time.Minutes minutes72 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean73 = minutes63.isLessThan(minutes72);
        org.joda.time.Minutes minutes74 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration75 = minutes74.toStandardDuration();
        org.joda.time.Duration duration76 = minutes74.toStandardDuration();
        org.joda.time.Minutes minutes78 = minutes74.minus(2);
        org.joda.time.Minutes minutes79 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes81 = minutes79.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes82 = minutes79.negated();
        org.joda.time.Minutes minutes83 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes84 = minutes83.negated();
        org.joda.time.Minutes minutes85 = minutes83.negated();
        boolean boolean86 = minutes79.equals((java.lang.Object) minutes85);
        boolean boolean87 = minutes78.isLessThan(minutes79);
        org.joda.time.Minutes minutes88 = minutes72.minus(minutes79);
        org.joda.time.Minutes minutes90 = minutes72.dividedBy((-12));
        int int91 = minutes90.size();
        int int92 = minutes60.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes90);
        org.joda.time.Duration duration93 = minutes90.toStandardDuration();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-2) + "'", int20 == (-2));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-2) + "'", int41 == (-2));
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "PT2147483647M" + "'", str55, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod67);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-2) + "'", int70 == (-2));
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(minutes74);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertNotNull(minutes78);
        org.junit.Assert.assertNotNull(minutes79);
        org.junit.Assert.assertNotNull(minutes81);
        org.junit.Assert.assertNotNull(minutes82);
        org.junit.Assert.assertNotNull(minutes83);
        org.junit.Assert.assertNotNull(minutes84);
        org.junit.Assert.assertNotNull(minutes85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(minutes88);
        org.junit.Assert.assertNotNull(minutes90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 1 + "'", int91 == 1);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertNotNull(duration93);
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = minutes8.plus(0);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = minutes16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = minutes16.getFieldType();
        int int20 = minutes15.get(durationFieldType19);
        org.joda.time.Minutes minutes22 = minutes15.plus((-1));
        org.joda.time.Minutes minutes24 = minutes15.minus((int) (short) 10);
        org.joda.time.Minutes minutes26 = minutes24.dividedBy((-2147483648));
        org.joda.time.Minutes minutes27 = minutes12.plus(minutes26);
        org.joda.time.Minutes minutes28 = minutes2.minus(minutes12);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod30 = minutes29.toMutablePeriod();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes32 = minutes29.plus(minutes31);
        org.joda.time.Minutes minutes33 = minutes28.plus(minutes31);
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes36 = minutes34.multipliedBy((int) (short) -1);
        org.joda.time.MutablePeriod mutablePeriod37 = minutes34.toMutablePeriod();
        org.joda.time.Minutes minutes38 = minutes31.minus(minutes34);
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes40 = minutes39.negated();
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes39);
        java.lang.String str42 = minutes39.toString();
        org.joda.time.Minutes minutes43 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType44 = minutes43.getFieldType();
        boolean boolean45 = minutes39.isSupported(durationFieldType44);
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes39);
        org.joda.time.MutablePeriod mutablePeriod47 = minutes46.toMutablePeriod();
        boolean boolean48 = minutes34.isGreaterThan(minutes46);
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes34);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-2) + "'", int20 == (-2));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT2147483647M" + "'", str42, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(mutablePeriod47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(minutes49);
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT-71582788M");
        org.junit.Assert.assertNotNull(minutes1);
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod2 = minutes0.toMutablePeriod();
        org.joda.time.Days days3 = minutes0.toStandardDays();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(days3);
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.THREE;
        int int1 = minutes0.size();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod3 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = minutes4.plus(0);
        int int9 = minutes2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes4);
        org.joda.time.Minutes minutes11 = minutes4.plus((int) ' ');
        int int12 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes11);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes16 = minutes14.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = minutes17.get(durationFieldType18);
        org.joda.time.DurationFieldType durationFieldType20 = minutes17.getFieldType();
        int int21 = minutes16.get(durationFieldType20);
        org.joda.time.Minutes minutes23 = minutes16.plus((-1));
        boolean boolean24 = minutes13.isGreaterThan(minutes16);
        org.joda.time.DurationFieldType durationFieldType25 = minutes16.getFieldType();
        int int27 = minutes16.getValue((int) (short) 0);
        org.joda.time.Period period28 = minutes16.toPeriod();
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes30 = minutes29.negated();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod32 = minutes31.toMutablePeriod();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes34 = minutes31.plus(minutes33);
        int int35 = minutes30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes33);
        org.joda.time.Minutes minutes36 = minutes16.minus(minutes30);
        boolean boolean37 = minutes0.isGreaterThan(minutes30);
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod39 = minutes38.toMutablePeriod();
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes41 = minutes38.plus(minutes40);
        org.joda.time.Minutes minutes43 = minutes41.plus((int) 'a');
        org.joda.time.Duration duration44 = minutes41.toStandardDuration();
        int int45 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes41);
        org.joda.time.Duration duration46 = minutes0.toStandardDuration();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-2) + "'", int21 == (-2));
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-2) + "'", int27 == (-2));
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(duration46);
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes9 = minutes2.plus((-1));
        org.joda.time.Minutes minutes11 = minutes2.minus((int) (short) 10);
        org.joda.time.Duration duration12 = minutes2.toStandardDuration();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes2);
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy(3);
        org.joda.time.MutablePeriod mutablePeriod16 = minutes15.toMutablePeriod();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = minutes21.plus(0);
        int int26 = minutes19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes21);
        org.joda.time.Minutes minutes28 = minutes21.plus((int) ' ');
        java.lang.String str29 = minutes21.toString();
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod31 = minutes30.toMutablePeriod();
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes34 = minutes32.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes36 = minutes32.plus(0);
        int int37 = minutes30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes32);
        org.joda.time.Minutes minutes39 = minutes32.plus((int) ' ');
        java.lang.String str40 = minutes32.toString();
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean43 = minutes32.isLessThan(minutes42);
        org.joda.time.Minutes minutes44 = minutes21.minus(minutes32);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes46 = minutes45.negated();
        org.joda.time.DurationFieldType durationFieldType47 = minutes45.getFieldType();
        org.joda.time.DurationFieldType durationFieldType48 = minutes45.getFieldType();
        boolean boolean49 = minutes21.isSupported(durationFieldType48);
        org.joda.time.Duration duration50 = minutes21.toStandardDuration();
        boolean boolean51 = minutes18.equals((java.lang.Object) minutes21);
        org.joda.time.Minutes minutes52 = minutes15.minus(minutes21);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType54 = minutes21.getFieldType((-2147483645));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -2147483645");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2M" + "'", str29, "PT2M");
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "PT2M" + "'", str40, "PT2M");
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(minutes52);
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod5 = minutes4.toMutablePeriod();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes7 = minutes4.plus(minutes6);
        boolean boolean8 = minutes3.isLessThan(minutes4);
        org.joda.time.PeriodType periodType9 = minutes3.getPeriodType();
        org.joda.time.Minutes minutes11 = minutes3.dividedBy(3);
        org.joda.time.Minutes minutes13 = minutes11.dividedBy(10);
        org.joda.time.Duration duration14 = minutes11.toStandardDuration();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes16 = minutes11.multipliedBy((-12));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: -715827881 * -12");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(duration14);
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = minutes0.negated();
        org.joda.time.DurationFieldType durationFieldType3 = minutes0.getFieldType();
        java.lang.String str4 = minutes0.toString();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = minutes5.get(durationFieldType6);
        org.joda.time.MutablePeriod mutablePeriod8 = minutes5.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType9 = minutes5.getFieldType();
        int int10 = minutes0.get(durationFieldType9);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MAX_VALUE;
        boolean boolean12 = minutes0.isLessThan(minutes11);
        org.joda.time.Minutes minutes13 = null;
        org.joda.time.Minutes minutes14 = minutes11.plus(minutes13);
        org.joda.time.PeriodType periodType15 = minutes11.getPeriodType();
        org.joda.time.Minutes minutes16 = minutes11.negated();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT2147483647M" + "'", str4, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2147483647 + "'", int10 == 2147483647);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(minutes16);
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = minutes0.get(durationFieldType1);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType4 = minutes0.getFieldType();
        org.joda.time.Minutes minutes6 = minutes0.dividedBy((-1));
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MAX_VALUE;
        int int8 = minutes7.size();
        org.joda.time.Minutes minutes9 = minutes0.plus(minutes7);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = minutes13.get(durationFieldType14);
        org.joda.time.MutablePeriod mutablePeriod16 = minutes13.toMutablePeriod();
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes13);
        boolean boolean18 = minutes12.isLessThan(minutes17);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes21 = minutes19.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType23 = null;
        int int24 = minutes22.get(durationFieldType23);
        org.joda.time.DurationFieldType durationFieldType25 = minutes22.getFieldType();
        int int26 = minutes21.get(durationFieldType25);
        org.joda.time.Minutes minutes28 = minutes21.plus((-1));
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod30 = minutes29.toMutablePeriod();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes33 = minutes31.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes35 = minutes31.plus(0);
        int int36 = minutes29.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes31);
        org.joda.time.Minutes minutes38 = minutes31.plus((int) ' ');
        java.lang.String str39 = minutes31.toString();
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean42 = minutes31.isLessThan(minutes41);
        boolean boolean43 = minutes28.isLessThan(minutes31);
        org.joda.time.Minutes minutes44 = minutes12.minus(minutes28);
        org.joda.time.MutablePeriod mutablePeriod45 = minutes12.toMutablePeriod();
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod47 = minutes46.toMutablePeriod();
        boolean boolean48 = minutes12.isLessThan(minutes46);
        org.joda.time.Minutes minutes50 = minutes12.plus((int) ' ');
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes53 = minutes51.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType55 = null;
        int int56 = minutes54.get(durationFieldType55);
        org.joda.time.DurationFieldType durationFieldType57 = minutes54.getFieldType();
        int int58 = minutes53.get(durationFieldType57);
        boolean boolean59 = minutes12.isSupported(durationFieldType57);
        int int60 = minutes9.get(durationFieldType57);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType62 = minutes9.getFieldType((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-2) + "'", int26 == (-2));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "PT2M" + "'", str39, "PT2M");
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(mutablePeriod45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(mutablePeriod47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-2) + "'", int58 == (-2));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = minutes0.get(durationFieldType1);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType4 = minutes0.getFieldType();
        org.joda.time.Minutes minutes6 = minutes0.dividedBy((-1));
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MAX_VALUE;
        int int8 = minutes7.size();
        org.joda.time.Minutes minutes9 = minutes0.plus(minutes7);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = minutes13.get(durationFieldType14);
        org.joda.time.DurationFieldType durationFieldType16 = minutes13.getFieldType();
        int int17 = minutes12.get(durationFieldType16);
        int int18 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes12);
        org.joda.time.Minutes minutes20 = minutes0.plus(2147483647);
        org.joda.time.Minutes minutes22 = minutes20.plus((int) '4');
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-2) + "'", int17 == (-2));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT2147483646M");
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod3 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes2);
        org.joda.time.Minutes minutes6 = minutes4.dividedBy((int) (short) 10);
        java.lang.String str7 = minutes6.toString();
        org.joda.time.Minutes minutes8 = minutes6.negated();
        org.joda.time.DurationFieldType durationFieldType9 = minutes6.getFieldType();
        boolean boolean10 = minutes1.isSupported(durationFieldType9);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT-214748364M" + "'", str7, "PT-214748364M");
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType3 = minutes2.getFieldType();
        org.joda.time.Period period4 = minutes2.toPeriod();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = minutes5.negated();
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes11 = minutes5.minus(minutes10);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.MutablePeriod mutablePeriod15 = minutes12.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType16 = minutes12.getFieldType();
        org.joda.time.Minutes minutes18 = minutes12.dividedBy((-1));
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MAX_VALUE;
        int int20 = minutes19.size();
        org.joda.time.Minutes minutes21 = minutes12.plus(minutes19);
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes24 = minutes22.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = minutes25.get(durationFieldType26);
        org.joda.time.DurationFieldType durationFieldType28 = minutes25.getFieldType();
        int int29 = minutes24.get(durationFieldType28);
        int int30 = minutes12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes24);
        int int31 = minutes11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes12);
        boolean boolean32 = minutes2.equals((java.lang.Object) minutes12);
        org.joda.time.Period period33 = minutes12.toPeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-2) + "'", int29 == (-2));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(period33);
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        int int3 = minutes0.size();
        org.joda.time.Minutes minutes5 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod7 = minutes6.toMutablePeriod();
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = minutes8.plus(0);
        int int13 = minutes6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes8);
        org.joda.time.Minutes minutes15 = minutes8.plus((int) ' ');
        java.lang.String str16 = minutes8.toString();
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod18 = minutes17.toMutablePeriod();
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes21 = minutes19.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes23 = minutes19.plus(0);
        int int24 = minutes17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes19);
        org.joda.time.Minutes minutes26 = minutes19.plus((int) ' ');
        java.lang.String str27 = minutes19.toString();
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean30 = minutes19.isLessThan(minutes29);
        org.joda.time.Minutes minutes31 = minutes8.minus(minutes19);
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes33 = minutes32.negated();
        org.joda.time.DurationFieldType durationFieldType34 = minutes32.getFieldType();
        org.joda.time.DurationFieldType durationFieldType35 = minutes32.getFieldType();
        boolean boolean36 = minutes8.isSupported(durationFieldType35);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = minutes37.get(durationFieldType38);
        org.joda.time.MutablePeriod mutablePeriod40 = minutes37.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType41 = minutes37.getFieldType();
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration43 = minutes42.toStandardDuration();
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes42);
        boolean boolean45 = minutes37.isGreaterThan(minutes42);
        org.joda.time.Minutes minutes46 = minutes8.plus(minutes42);
        org.joda.time.DurationFieldType durationFieldType48 = minutes8.getFieldType(0);
        boolean boolean49 = minutes5.isLessThan(minutes8);
        java.lang.Object obj50 = null;
        boolean boolean51 = minutes8.equals(obj50);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2M" + "'", str16, "PT2M");
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "PT2M" + "'", str27, "PT2M");
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = minutes12.getFieldType();
        int int16 = minutes11.get(durationFieldType15);
        org.joda.time.Minutes minutes18 = minutes11.plus((-1));
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = minutes21.plus(0);
        int int26 = minutes19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes21);
        org.joda.time.Minutes minutes28 = minutes21.plus((int) ' ');
        java.lang.String str29 = minutes21.toString();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean32 = minutes21.isLessThan(minutes31);
        boolean boolean33 = minutes18.isLessThan(minutes21);
        org.joda.time.Minutes minutes34 = minutes2.minus(minutes18);
        org.joda.time.MutablePeriod mutablePeriod35 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes37 = minutes2.dividedBy(2);
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes40 = minutes38.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType42 = null;
        int int43 = minutes41.get(durationFieldType42);
        org.joda.time.DurationFieldType durationFieldType44 = minutes41.getFieldType();
        int int45 = minutes40.get(durationFieldType44);
        org.joda.time.Minutes minutes47 = minutes40.plus((-1));
        org.joda.time.Minutes minutes48 = minutes47.negated();
        org.joda.time.Minutes minutes49 = minutes37.plus(minutes48);
        org.joda.time.Minutes minutes50 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes52 = minutes50.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes53 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType54 = null;
        int int55 = minutes53.get(durationFieldType54);
        org.joda.time.MutablePeriod mutablePeriod56 = minutes53.toMutablePeriod();
        org.joda.time.Minutes minutes57 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes53);
        boolean boolean58 = minutes52.isLessThan(minutes57);
        int int59 = minutes52.getMinutes();
        org.joda.time.Minutes minutes61 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean62 = minutes52.isLessThan(minutes61);
        org.joda.time.Minutes minutes63 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration64 = minutes63.toStandardDuration();
        org.joda.time.Duration duration65 = minutes63.toStandardDuration();
        org.joda.time.Minutes minutes67 = minutes63.minus(2);
        org.joda.time.Minutes minutes68 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes70 = minutes68.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes71 = minutes68.negated();
        org.joda.time.Minutes minutes72 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes73 = minutes72.negated();
        org.joda.time.Minutes minutes74 = minutes72.negated();
        boolean boolean75 = minutes68.equals((java.lang.Object) minutes74);
        boolean boolean76 = minutes67.isLessThan(minutes68);
        org.joda.time.Minutes minutes77 = minutes61.minus(minutes68);
        org.joda.time.Minutes minutes78 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes79 = minutes78.negated();
        org.joda.time.Minutes minutes80 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes78);
        java.lang.String str81 = minutes78.toString();
        org.joda.time.Minutes minutes82 = minutes77.plus(minutes78);
        int int83 = minutes48.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes77);
        org.joda.time.PeriodType periodType84 = minutes48.getPeriodType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2M" + "'", str29, "PT2M");
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-2) + "'", int45 == (-2));
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-2) + "'", int59 == (-2));
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertNotNull(minutes73);
        org.junit.Assert.assertNotNull(minutes74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(minutes77);
        org.junit.Assert.assertNotNull(minutes78);
        org.junit.Assert.assertNotNull(minutes79);
        org.junit.Assert.assertNotNull(minutes80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "PT2147483647M" + "'", str81, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertNotNull(periodType84);
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        int int3 = minutes0.size();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = minutes4.plus(0);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = minutes12.getFieldType();
        int int16 = minutes11.get(durationFieldType15);
        org.joda.time.Minutes minutes18 = minutes11.plus((-1));
        org.joda.time.Minutes minutes20 = minutes11.minus((int) (short) 10);
        org.joda.time.Minutes minutes22 = minutes20.dividedBy((-2147483648));
        org.joda.time.Minutes minutes23 = minutes8.plus(minutes22);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes26 = minutes24.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = minutes27.get(durationFieldType28);
        org.joda.time.MutablePeriod mutablePeriod30 = minutes27.toMutablePeriod();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes27);
        boolean boolean32 = minutes26.isLessThan(minutes31);
        org.joda.time.DurationFieldType durationFieldType33 = minutes31.getFieldType();
        boolean boolean34 = minutes23.isSupported(durationFieldType33);
        org.joda.time.Minutes minutes36 = minutes23.plus((int) (short) -1);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes39 = minutes37.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes40 = minutes37.negated();
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes43 = minutes37.minus(minutes42);
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod45 = minutes44.toMutablePeriod();
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod45);
        boolean boolean47 = minutes37.isLessThan(minutes46);
        org.joda.time.Minutes minutes48 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes46);
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes51 = minutes49.minus((int) (short) 0);
        boolean boolean52 = minutes46.isLessThan(minutes51);
        org.joda.time.Minutes minutes54 = minutes51.multipliedBy((int) (short) 0);
        boolean boolean55 = minutes23.isGreaterThan(minutes54);
        int int56 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes23);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(mutablePeriod45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        int int9 = minutes2.getMinutes();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean12 = minutes2.isLessThan(minutes11);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration14 = minutes13.toStandardDuration();
        org.joda.time.Duration duration15 = minutes13.toStandardDuration();
        org.joda.time.Minutes minutes17 = minutes13.minus(2);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes20 = minutes18.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes21 = minutes18.negated();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes23 = minutes22.negated();
        org.joda.time.Minutes minutes24 = minutes22.negated();
        boolean boolean25 = minutes18.equals((java.lang.Object) minutes24);
        boolean boolean26 = minutes17.isLessThan(minutes18);
        org.joda.time.Minutes minutes27 = minutes11.minus(minutes18);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes29 = minutes28.negated();
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes28);
        java.lang.String str31 = minutes28.toString();
        org.joda.time.Minutes minutes32 = minutes27.plus(minutes28);
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes35 = minutes33.dividedBy((int) 'a');
        org.joda.time.Minutes minutes37 = minutes33.plus((int) (short) 1);
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes39 = minutes38.negated();
        org.joda.time.PeriodType periodType40 = minutes39.getPeriodType();
        org.joda.time.Minutes minutes41 = minutes39.negated();
        org.joda.time.Minutes minutes43 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes45 = minutes43.plus(0);
        org.joda.time.DurationFieldType durationFieldType46 = minutes45.getFieldType();
        int int47 = minutes41.get(durationFieldType46);
        org.joda.time.Minutes minutes48 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes50 = minutes48.minus((int) (short) 1);
        org.joda.time.Minutes minutes52 = minutes50.multipliedBy(0);
        org.joda.time.Duration duration53 = minutes50.toStandardDuration();
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes55 = minutes54.negated();
        org.joda.time.DurationFieldType durationFieldType56 = minutes54.getFieldType();
        int int57 = minutes50.get(durationFieldType56);
        boolean boolean58 = minutes41.isSupported(durationFieldType56);
        int int59 = minutes33.get(durationFieldType56);
        boolean boolean60 = minutes28.isGreaterThan(minutes33);
        int int61 = minutes28.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-2) + "'", int9 == (-2));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "PT2147483647M" + "'", str31, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2147483647 + "'", int47 == 2147483647);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2147483646 + "'", int57 == 2147483646);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-2147483648) + "'", int59 == (-2147483648));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2147483647 + "'", int61 == 2147483647);
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes9 = minutes2.plus((-1));
        org.joda.time.Minutes minutes11 = minutes2.minus((int) (short) 10);
        org.joda.time.Minutes minutes13 = minutes11.dividedBy((-2147483648));
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes11);
        org.joda.time.PeriodType periodType15 = minutes14.getPeriodType();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration17 = minutes16.toStandardDuration();
        org.joda.time.Duration duration18 = minutes16.toStandardDuration();
        org.joda.time.Minutes minutes20 = minutes16.minus(2);
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes24 = minutes21.negated();
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes26 = minutes25.negated();
        org.joda.time.Minutes minutes27 = minutes25.negated();
        boolean boolean28 = minutes21.equals((java.lang.Object) minutes27);
        boolean boolean29 = minutes20.isLessThan(minutes21);
        org.joda.time.Minutes minutes30 = minutes14.plus(minutes21);
        int int31 = minutes14.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-12) + "'", int31 == (-12));
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod5 = minutes4.toMutablePeriod();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes8 = minutes6.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes10 = minutes6.plus(0);
        int int11 = minutes4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes6);
        org.joda.time.Duration duration12 = minutes4.toStandardDuration();
        org.joda.time.Minutes minutes13 = minutes0.plus(minutes4);
        org.joda.time.Minutes minutes14 = minutes0.negated();
        org.joda.time.Minutes minutes16 = minutes14.minus(52);
        org.joda.time.Duration duration17 = minutes14.toStandardDuration();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(duration17);
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = minutes12.getFieldType();
        int int16 = minutes11.get(durationFieldType15);
        org.joda.time.Minutes minutes18 = minutes11.plus((-1));
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = minutes21.plus(0);
        int int26 = minutes19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes21);
        org.joda.time.Minutes minutes28 = minutes21.plus((int) ' ');
        java.lang.String str29 = minutes21.toString();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean32 = minutes21.isLessThan(minutes31);
        boolean boolean33 = minutes18.isLessThan(minutes21);
        org.joda.time.Minutes minutes34 = minutes2.minus(minutes18);
        org.joda.time.MutablePeriod mutablePeriod35 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod37 = minutes36.toMutablePeriod();
        boolean boolean38 = minutes2.isLessThan(minutes36);
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes41 = minutes39.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = minutes42.get(durationFieldType43);
        org.joda.time.DurationFieldType durationFieldType45 = minutes42.getFieldType();
        int int46 = minutes41.get(durationFieldType45);
        org.joda.time.Minutes minutes48 = minutes41.plus((-1));
        org.joda.time.Minutes minutes50 = minutes41.minus((int) (short) 10);
        org.joda.time.Minutes minutes52 = minutes50.dividedBy((-2147483648));
        boolean boolean53 = minutes2.isLessThan(minutes50);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2M" + "'", str29, "PT2M");
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-2) + "'", int46 == (-2));
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        boolean boolean6 = minutes0.isGreaterThan(minutes5);
        org.joda.time.PeriodType periodType7 = minutes0.getPeriodType();
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType10 = minutes9.getPeriodType();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes12 = minutes11.negated();
        org.joda.time.Minutes minutes13 = minutes11.negated();
        org.joda.time.DurationFieldType durationFieldType14 = minutes11.getFieldType();
        java.lang.String str15 = minutes11.toString();
        boolean boolean16 = minutes9.isGreaterThan(minutes11);
        boolean boolean17 = minutes8.equals((java.lang.Object) minutes9);
        org.joda.time.Minutes minutes19 = minutes9.minus(1);
        org.joda.time.Minutes minutes20 = minutes0.minus(minutes19);
        org.joda.time.DurationFieldType durationFieldType21 = minutes19.getFieldType();
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.parseMinutes("PT-12M");
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration25 = minutes24.toStandardDuration();
        org.joda.time.Duration duration26 = minutes24.toStandardDuration();
        org.joda.time.Minutes minutes28 = minutes24.minus(2);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes31 = minutes29.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = minutes32.get(durationFieldType33);
        org.joda.time.MutablePeriod mutablePeriod35 = minutes32.toMutablePeriod();
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes32);
        boolean boolean37 = minutes31.isLessThan(minutes36);
        int int38 = minutes31.getMinutes();
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean41 = minutes31.isLessThan(minutes40);
        org.joda.time.Minutes minutes42 = minutes28.minus(minutes40);
        int int43 = minutes40.getMinutes();
        org.joda.time.Minutes minutes44 = minutes23.minus(minutes40);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes48 = minutes46.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = minutes49.get(durationFieldType50);
        org.joda.time.DurationFieldType durationFieldType52 = minutes49.getFieldType();
        int int53 = minutes48.get(durationFieldType52);
        org.joda.time.Minutes minutes55 = minutes48.plus((-1));
        boolean boolean56 = minutes45.isGreaterThan(minutes48);
        org.joda.time.Minutes minutes58 = minutes48.multipliedBy(2);
        org.joda.time.Minutes minutes59 = minutes58.negated();
        int int60 = minutes58.getMinutes();
        org.joda.time.Minutes minutes61 = minutes58.negated();
        org.joda.time.Minutes minutes62 = minutes44.plus(minutes58);
        boolean boolean63 = minutes19.equals((java.lang.Object) minutes58);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PT2147483647M" + "'", str15, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-2) + "'", int38 == (-2));
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-2147483645) + "'", int43 == (-2147483645));
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-2) + "'", int53 == (-2));
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-4) + "'", int60 == (-4));
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        int int4 = minutes2.getMinutes();
        org.joda.time.PeriodType periodType5 = minutes2.getPeriodType();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod7 = minutes6.toMutablePeriod();
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes9 = minutes6.plus(minutes8);
        org.joda.time.Minutes minutes11 = minutes9.plus((int) 'a');
        org.joda.time.Period period12 = minutes9.toPeriod();
        boolean boolean13 = minutes2.isLessThan(minutes9);
        org.joda.time.Minutes minutes14 = minutes9.negated();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(minutes14);
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.minutes((-12));
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes11 = minutes9.minus((int) (short) 1);
        org.joda.time.Minutes minutes13 = minutes11.multipliedBy(0);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes16 = minutes14.dividedBy((int) 'a');
        org.joda.time.Minutes minutes18 = minutes14.plus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType19 = minutes18.getFieldType();
        boolean boolean20 = minutes11.isSupported(durationFieldType19);
        boolean boolean21 = minutes8.isSupported(durationFieldType19);
        org.joda.time.Minutes minutes23 = minutes8.multipliedBy((-12));
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes26 = minutes24.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = minutes27.get(durationFieldType28);
        org.joda.time.MutablePeriod mutablePeriod30 = minutes27.toMutablePeriod();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes27);
        boolean boolean32 = minutes26.isLessThan(minutes31);
        int int33 = minutes26.getMinutes();
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean36 = minutes26.isLessThan(minutes35);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration38 = minutes37.toStandardDuration();
        org.joda.time.Duration duration39 = minutes37.toStandardDuration();
        org.joda.time.Minutes minutes41 = minutes37.minus(2);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes44 = minutes42.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes45 = minutes42.negated();
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes47 = minutes46.negated();
        org.joda.time.Minutes minutes48 = minutes46.negated();
        boolean boolean49 = minutes42.equals((java.lang.Object) minutes48);
        boolean boolean50 = minutes41.isLessThan(minutes42);
        org.joda.time.Minutes minutes51 = minutes35.minus(minutes42);
        int int52 = minutes42.getMinutes();
        org.joda.time.Minutes minutes53 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration54 = minutes53.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod55 = minutes53.toMutablePeriod();
        java.lang.String str56 = minutes53.toString();
        org.joda.time.PeriodType periodType57 = minutes53.getPeriodType();
        boolean boolean58 = minutes42.isGreaterThan(minutes53);
        boolean boolean59 = minutes23.equals((java.lang.Object) minutes42);
        org.joda.time.Minutes minutes60 = minutes0.minus(minutes42);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-2) + "'", int33 == (-2));
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertNotNull(mutablePeriod55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "PT2M" + "'", str56, "PT2M");
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(minutes60);
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = minutes0.negated();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        int int4 = minutes3.size();
        int int6 = minutes3.getValue(0);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = minutes11.get(durationFieldType12);
        org.joda.time.DurationFieldType durationFieldType14 = minutes11.getFieldType();
        int int15 = minutes10.get(durationFieldType14);
        org.joda.time.Minutes minutes17 = minutes10.plus((-1));
        org.joda.time.Minutes minutes19 = minutes10.minus((int) (short) 10);
        org.joda.time.Duration duration20 = minutes10.toStandardDuration();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes22 = minutes21.negated();
        org.joda.time.Minutes minutes23 = minutes21.negated();
        java.lang.String str24 = minutes21.toString();
        org.joda.time.Minutes minutes26 = minutes21.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes30 = minutes28.multipliedBy((int) (byte) 0);
        boolean boolean31 = minutes26.equals((java.lang.Object) minutes28);
        boolean boolean32 = minutes10.isGreaterThan(minutes28);
        boolean boolean33 = minutes7.equals((java.lang.Object) boolean32);
        org.joda.time.Minutes minutes34 = minutes0.minus(minutes7);
        org.joda.time.Minutes minutes36 = minutes0.plus((-22139006));
        org.joda.time.DurationFieldType durationFieldType37 = minutes0.getFieldType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2147483647 + "'", int6 == 2147483647);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-2) + "'", int15 == (-2));
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "PT2147483647M" + "'", str24, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(durationFieldType37);
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = minutes0.get(durationFieldType1);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType4 = minutes0.getFieldType();
        org.joda.time.Minutes minutes6 = minutes0.dividedBy((-1));
        int int7 = minutes6.size();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        org.joda.time.Minutes minutes14 = minutes7.plus((-1));
        org.joda.time.Minutes minutes16 = minutes7.minus((int) (short) 10);
        org.joda.time.Minutes minutes18 = minutes16.dividedBy((-2147483648));
        org.joda.time.Minutes minutes19 = minutes4.plus(minutes18);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes22 = minutes20.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = minutes23.get(durationFieldType24);
        org.joda.time.MutablePeriod mutablePeriod26 = minutes23.toMutablePeriod();
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes23);
        boolean boolean28 = minutes22.isLessThan(minutes27);
        org.joda.time.DurationFieldType durationFieldType29 = minutes27.getFieldType();
        boolean boolean30 = minutes19.isSupported(durationFieldType29);
        org.joda.time.Minutes minutes32 = minutes19.plus((int) (short) -1);
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes35 = minutes33.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes36 = minutes33.negated();
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes39 = minutes33.minus(minutes38);
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod41 = minutes40.toMutablePeriod();
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod41);
        boolean boolean43 = minutes33.isLessThan(minutes42);
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes42);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes47 = minutes45.minus((int) (short) 0);
        boolean boolean48 = minutes42.isLessThan(minutes47);
        org.joda.time.Minutes minutes50 = minutes47.multipliedBy((int) (short) 0);
        boolean boolean51 = minutes19.isGreaterThan(minutes50);
        org.joda.time.Minutes minutes52 = minutes19.negated();
        org.joda.time.Minutes minutes53 = minutes19.negated();
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes55 = minutes54.negated();
        org.joda.time.Minutes minutes56 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod57 = minutes56.toMutablePeriod();
        org.joda.time.Minutes minutes58 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes59 = minutes56.plus(minutes58);
        int int60 = minutes55.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes58);
        org.joda.time.Minutes minutes61 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes62 = minutes61.negated();
        org.joda.time.Minutes minutes63 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes61);
        java.lang.String str64 = minutes61.toString();
        org.joda.time.Minutes minutes65 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType66 = minutes65.getFieldType();
        boolean boolean67 = minutes61.isSupported(durationFieldType66);
        org.joda.time.Minutes minutes68 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes61);
        org.joda.time.Minutes minutes69 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes70 = minutes69.negated();
        org.joda.time.Minutes minutes72 = minutes70.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes73 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes75 = minutes73.dividedBy((int) 'a');
        org.joda.time.Minutes minutes77 = minutes73.plus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType78 = minutes77.getFieldType();
        boolean boolean79 = minutes70.isSupported(durationFieldType78);
        org.joda.time.DurationFieldType durationFieldType80 = minutes70.getFieldType();
        boolean boolean81 = minutes61.isSupported(durationFieldType80);
        boolean boolean82 = minutes58.isSupported(durationFieldType80);
        boolean boolean83 = minutes53.equals((java.lang.Object) minutes58);
        org.joda.time.Minutes minutes84 = minutes58.negated();
        org.joda.time.Minutes minutes85 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes86 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes88 = minutes86.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes89 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType90 = null;
        int int91 = minutes89.get(durationFieldType90);
        org.joda.time.DurationFieldType durationFieldType92 = minutes89.getFieldType();
        int int93 = minutes88.get(durationFieldType92);
        org.joda.time.Minutes minutes95 = minutes88.plus((-1));
        boolean boolean96 = minutes85.isGreaterThan(minutes88);
        org.joda.time.DurationFieldType durationFieldType97 = minutes88.getFieldType();
        int int98 = minutes84.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes88);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(mutablePeriod57);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "PT2147483647M" + "'", str64, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(durationFieldType66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertNotNull(minutes73);
        org.junit.Assert.assertNotNull(minutes75);
        org.junit.Assert.assertNotNull(minutes77);
        org.junit.Assert.assertNotNull(durationFieldType78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(durationFieldType80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(minutes84);
        org.junit.Assert.assertNotNull(minutes85);
        org.junit.Assert.assertNotNull(minutes86);
        org.junit.Assert.assertNotNull(minutes88);
        org.junit.Assert.assertNotNull(minutes89);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertNotNull(durationFieldType92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-2) + "'", int93 == (-2));
        org.junit.Assert.assertNotNull(minutes95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNotNull(durationFieldType97);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + (-1) + "'", int98 == (-1));
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        int int9 = minutes2.getMinutes();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean12 = minutes2.isLessThan(minutes11);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration14 = minutes13.toStandardDuration();
        org.joda.time.Duration duration15 = minutes13.toStandardDuration();
        org.joda.time.Minutes minutes17 = minutes13.minus(2);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes20 = minutes18.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes21 = minutes18.negated();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes23 = minutes22.negated();
        org.joda.time.Minutes minutes24 = minutes22.negated();
        boolean boolean25 = minutes18.equals((java.lang.Object) minutes24);
        boolean boolean26 = minutes17.isLessThan(minutes18);
        org.joda.time.Minutes minutes27 = minutes11.minus(minutes18);
        int int28 = minutes18.getMinutes();
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration30 = minutes29.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod31 = minutes29.toMutablePeriod();
        java.lang.String str32 = minutes29.toString();
        org.joda.time.PeriodType periodType33 = minutes29.getPeriodType();
        boolean boolean34 = minutes18.isGreaterThan(minutes29);
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes18);
        java.lang.String str36 = minutes18.toString();
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType38 = minutes37.getPeriodType();
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes40 = minutes39.negated();
        org.joda.time.Minutes minutes41 = minutes39.negated();
        org.joda.time.DurationFieldType durationFieldType42 = minutes39.getFieldType();
        java.lang.String str43 = minutes39.toString();
        boolean boolean44 = minutes37.isGreaterThan(minutes39);
        org.joda.time.Duration duration45 = minutes39.toStandardDuration();
        int int46 = minutes18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes39);
        java.lang.String str47 = minutes18.toString();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-2) + "'", int9 == (-2));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "PT2M" + "'", str32, "PT2M");
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "PT2M" + "'", str36, "PT2M");
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "PT2147483647M" + "'", str43, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "PT2M" + "'", str47, "PT2M");
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        int int1 = minutes0.getMinutes();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = minutes5.get(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType8 = minutes5.getFieldType();
        int int9 = minutes4.get(durationFieldType8);
        org.joda.time.Minutes minutes11 = minutes4.plus((-1));
        org.joda.time.Minutes minutes13 = minutes4.minus((int) (short) 10);
        org.joda.time.Minutes minutes15 = minutes13.dividedBy((-2147483648));
        org.joda.time.Minutes minutes16 = minutes15.negated();
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes18 = minutes17.negated();
        org.joda.time.Minutes minutes19 = minutes17.negated();
        org.joda.time.Minutes minutes20 = minutes15.minus(minutes19);
        org.joda.time.Minutes minutes22 = minutes19.plus((int) 'a');
        boolean boolean23 = minutes0.isLessThan(minutes22);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes26 = minutes24.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = minutes27.get(durationFieldType28);
        org.joda.time.MutablePeriod mutablePeriod30 = minutes27.toMutablePeriod();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes27);
        boolean boolean32 = minutes26.isLessThan(minutes31);
        int int33 = minutes26.getMinutes();
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean36 = minutes26.isLessThan(minutes35);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration38 = minutes37.toStandardDuration();
        org.joda.time.Duration duration39 = minutes37.toStandardDuration();
        org.joda.time.Minutes minutes41 = minutes37.minus(2);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes44 = minutes42.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes45 = minutes42.negated();
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes47 = minutes46.negated();
        org.joda.time.Minutes minutes48 = minutes46.negated();
        boolean boolean49 = minutes42.equals((java.lang.Object) minutes48);
        boolean boolean50 = minutes41.isLessThan(minutes42);
        org.joda.time.Minutes minutes51 = minutes35.minus(minutes42);
        org.joda.time.Minutes minutes52 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes53 = minutes52.negated();
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes52);
        java.lang.String str55 = minutes52.toString();
        org.joda.time.Minutes minutes56 = minutes51.plus(minutes52);
        org.joda.time.Minutes minutes58 = org.joda.time.Minutes.minutes((int) (short) -1);
        int int59 = minutes58.size();
        boolean boolean60 = minutes56.isGreaterThan(minutes58);
        int int61 = minutes22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes58);
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes63 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType64 = minutes63.getPeriodType();
        org.joda.time.Minutes minutes65 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes66 = minutes65.negated();
        org.joda.time.Minutes minutes67 = minutes65.negated();
        org.joda.time.DurationFieldType durationFieldType68 = minutes65.getFieldType();
        java.lang.String str69 = minutes65.toString();
        boolean boolean70 = minutes63.isGreaterThan(minutes65);
        boolean boolean71 = minutes62.equals((java.lang.Object) minutes63);
        org.joda.time.Minutes minutes72 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes62);
        org.joda.time.Minutes minutes73 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes74 = minutes73.negated();
        org.joda.time.Minutes minutes75 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes73);
        org.joda.time.Minutes minutes76 = minutes72.minus(minutes75);
        org.joda.time.Minutes minutes78 = minutes72.minus(34);
        org.joda.time.Duration duration79 = minutes78.toStandardDuration();
        org.joda.time.Minutes minutes80 = minutes58.minus(minutes78);
        org.joda.time.DurationFieldType durationFieldType81 = minutes80.getFieldType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-2147483648) + "'", int1 == (-2147483648));
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-2) + "'", int9 == (-2));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-2) + "'", int33 == (-2));
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "PT2147483647M" + "'", str55, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(durationFieldType68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "PT2147483647M" + "'", str69, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertNotNull(minutes73);
        org.junit.Assert.assertNotNull(minutes74);
        org.junit.Assert.assertNotNull(minutes75);
        org.junit.Assert.assertNotNull(minutes76);
        org.junit.Assert.assertNotNull(minutes78);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertNotNull(minutes80);
        org.junit.Assert.assertNotNull(durationFieldType81);
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        java.lang.String str10 = minutes2.toString();
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean13 = minutes2.isLessThan(minutes12);
        org.joda.time.Period period14 = minutes2.toPeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT2M" + "'", str10, "PT2M");
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(period14);
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT200M");
        org.junit.Assert.assertNotNull(minutes1);
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.minus((int) (short) 1);
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy(0);
        org.joda.time.Period period5 = minutes2.toPeriod();
        java.lang.Class<?> wildcardClass6 = period5.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes8 = minutes2.negated();
        org.joda.time.Minutes minutes10 = minutes8.dividedBy((-4));
        org.joda.time.Minutes minutes12 = minutes8.dividedBy((int) (byte) 100);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = minutes0.negated();
        org.joda.time.Duration duration3 = minutes2.toStandardDuration();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes5 = minutes4.negated();
        org.joda.time.Minutes minutes6 = minutes4.negated();
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        java.lang.String str8 = minutes4.toString();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes10 = minutes9.negated();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes9);
        int int12 = minutes9.size();
        org.joda.time.MutablePeriod mutablePeriod13 = minutes9.toMutablePeriod();
        boolean boolean14 = minutes4.equals((java.lang.Object) minutes9);
        org.joda.time.DurationFieldType durationFieldType16 = minutes9.getFieldType((int) (short) 0);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod18 = minutes17.toMutablePeriod();
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes21 = minutes19.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes23 = minutes19.plus(0);
        int int24 = minutes17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes19);
        org.joda.time.Minutes minutes26 = minutes19.plus((int) ' ');
        java.lang.String str27 = minutes19.toString();
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean30 = minutes19.isLessThan(minutes29);
        org.joda.time.Period period31 = minutes29.toPeriod();
        boolean boolean32 = minutes9.isGreaterThan(minutes29);
        org.joda.time.Period period33 = minutes9.toPeriod();
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) period33);
        org.joda.time.Minutes minutes35 = minutes34.negated();
        org.joda.time.Minutes minutes36 = minutes34.negated();
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod38 = minutes37.toMutablePeriod();
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes40 = minutes37.plus(minutes39);
        int int41 = minutes40.getMinutes();
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes44 = minutes42.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType46 = null;
        int int47 = minutes45.get(durationFieldType46);
        org.joda.time.DurationFieldType durationFieldType48 = minutes45.getFieldType();
        int int49 = minutes44.get(durationFieldType48);
        org.joda.time.Minutes minutes51 = minutes44.plus((-1));
        org.joda.time.Minutes minutes53 = minutes44.minus((int) (short) 10);
        org.joda.time.Minutes minutes55 = minutes53.dividedBy((-2147483648));
        org.joda.time.Minutes minutes57 = minutes53.plus(100);
        org.joda.time.DurationFieldType durationFieldType58 = minutes57.getFieldType();
        boolean boolean59 = minutes40.isSupported(durationFieldType58);
        boolean boolean60 = minutes36.isSupported(durationFieldType58);
        int int61 = minutes2.get(durationFieldType58);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "PT2147483647M" + "'", str8, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "PT2M" + "'", str27, "PT2M");
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-2147483645) + "'", int41 == (-2147483645));
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-2) + "'", int49 == (-2));
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(durationFieldType58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-2147483647) + "'", int61 == (-2147483647));
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.THREE;
        org.joda.time.Days days1 = minutes0.toStandardDays();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(days1);
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.THREE;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.Minutes minutes3 = minutes0.multipliedBy(214748366);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(minutes3);
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes8 = minutes6.plus(4);
        org.joda.time.Minutes minutes10 = minutes6.multipliedBy((-2));
        org.joda.time.Minutes minutes12 = minutes6.dividedBy((-63161283));
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = minutes0.get(durationFieldType1);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType4 = minutes0.getFieldType();
        org.joda.time.Minutes minutes6 = minutes0.dividedBy((-1));
        org.joda.time.Minutes minutes8 = minutes0.dividedBy(2147483646);
        org.joda.time.Minutes minutes10 = minutes0.dividedBy((-3));
        int int11 = minutes10.size();
        org.joda.time.Minutes minutes12 = minutes10.negated();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(minutes12);
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType3 = minutes2.getFieldType();
        org.joda.time.Minutes minutes4 = minutes2.negated();
        org.joda.time.Minutes minutes6 = minutes2.dividedBy((int) '4');
        int int7 = minutes6.getMinutes();
        org.joda.time.Minutes minutes9 = minutes6.minus((int) (byte) 10);
        java.lang.String str10 = minutes6.toString();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT0M" + "'", str10, "PT0M");
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        java.lang.String str10 = minutes2.toString();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod12 = minutes11.toMutablePeriod();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes17 = minutes13.plus(0);
        int int18 = minutes11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes13);
        org.joda.time.Minutes minutes20 = minutes13.plus((int) ' ');
        java.lang.String str21 = minutes13.toString();
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean24 = minutes13.isLessThan(minutes23);
        org.joda.time.Minutes minutes25 = minutes2.minus(minutes13);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes27 = minutes26.negated();
        org.joda.time.DurationFieldType durationFieldType28 = minutes26.getFieldType();
        org.joda.time.DurationFieldType durationFieldType29 = minutes26.getFieldType();
        boolean boolean30 = minutes2.isSupported(durationFieldType29);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = minutes31.get(durationFieldType32);
        org.joda.time.MutablePeriod mutablePeriod34 = minutes31.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType35 = minutes31.getFieldType();
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration37 = minutes36.toStandardDuration();
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes36);
        boolean boolean39 = minutes31.isGreaterThan(minutes36);
        org.joda.time.Minutes minutes40 = minutes2.plus(minutes36);
        org.joda.time.Minutes minutes41 = minutes36.negated();
        org.joda.time.Minutes minutes42 = minutes41.negated();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT2M" + "'", str10, "PT2M");
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT2M" + "'", str21, "PT2M");
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        int int1 = minutes0.size();
        int int3 = minutes0.getValue(0);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes6 = minutes0.plus((int) (short) -1);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2147483647 + "'", int3 == 2147483647);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = minutes7.get(durationFieldType8);
        org.joda.time.MutablePeriod mutablePeriod10 = minutes7.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType11 = minutes7.getFieldType();
        org.joda.time.Minutes minutes13 = minutes7.dividedBy((-1));
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MAX_VALUE;
        int int15 = minutes14.size();
        org.joda.time.Minutes minutes16 = minutes7.plus(minutes14);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes19 = minutes17.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = minutes20.get(durationFieldType21);
        org.joda.time.DurationFieldType durationFieldType23 = minutes20.getFieldType();
        int int24 = minutes19.get(durationFieldType23);
        int int25 = minutes7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes19);
        int int26 = minutes6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes7);
        org.joda.time.PeriodType periodType27 = minutes6.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod28 = minutes6.toMutablePeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-2) + "'", int24 == (-2));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes(100);
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy(1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod5 = minutes4.toMutablePeriod();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes7 = minutes4.plus(minutes6);
        int int8 = minutes6.getMinutes();
        org.joda.time.PeriodType periodType9 = minutes6.getPeriodType();
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType12 = minutes11.getPeriodType();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes14 = minutes13.negated();
        org.joda.time.Minutes minutes15 = minutes13.negated();
        org.joda.time.DurationFieldType durationFieldType16 = minutes13.getFieldType();
        java.lang.String str17 = minutes13.toString();
        boolean boolean18 = minutes11.isGreaterThan(minutes13);
        boolean boolean19 = minutes10.equals((java.lang.Object) minutes11);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes10);
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes22 = minutes21.negated();
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes21);
        org.joda.time.Minutes minutes24 = minutes20.minus(minutes23);
        org.joda.time.DurationFieldType durationFieldType25 = minutes20.getFieldType();
        boolean boolean26 = minutes6.isSupported(durationFieldType25);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes6);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes30 = minutes28.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = minutes31.get(durationFieldType32);
        org.joda.time.MutablePeriod mutablePeriod34 = minutes31.toMutablePeriod();
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes31);
        boolean boolean36 = minutes30.isLessThan(minutes35);
        org.joda.time.DurationFieldType durationFieldType37 = minutes35.getFieldType();
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes39 = minutes38.negated();
        org.joda.time.Minutes minutes40 = minutes38.negated();
        int int41 = minutes40.getMinutes();
        org.joda.time.DurationFieldType durationFieldType42 = minutes40.getFieldType();
        boolean boolean43 = minutes35.equals((java.lang.Object) durationFieldType42);
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes35);
        boolean boolean45 = minutes27.isGreaterThan(minutes35);
        boolean boolean46 = minutes3.isGreaterThan(minutes27);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "PT2147483647M" + "'", str17, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-2147483647) + "'", int41 == (-2147483647));
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes5 = minutes3.minus((int) (short) 1);
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy(0);
        org.joda.time.Minutes minutes9 = minutes7.plus((-2147483648));
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.TWO;
        boolean boolean11 = minutes7.isGreaterThan(minutes10);
        int int12 = minutes2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes10);
        org.joda.time.DurationFieldType durationFieldType13 = minutes10.getFieldType();
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes16 = minutes14.dividedBy((int) 'a');
        org.joda.time.Minutes minutes18 = minutes14.plus((int) (short) 1);
        int int19 = minutes14.size();
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes22 = minutes20.dividedBy((int) 'a');
        org.joda.time.Minutes minutes24 = minutes20.dividedBy((int) (short) 100);
        int int25 = minutes14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes20);
        boolean boolean26 = minutes10.equals((java.lang.Object) minutes20);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.dividedBy((int) 'a');
        org.joda.time.Minutes minutes4 = minutes0.plus((int) (short) 1);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes6 = minutes5.negated();
        org.joda.time.PeriodType periodType7 = minutes6.getPeriodType();
        org.joda.time.Minutes minutes8 = minutes6.negated();
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes12 = minutes10.plus(0);
        org.joda.time.DurationFieldType durationFieldType13 = minutes12.getFieldType();
        int int14 = minutes8.get(durationFieldType13);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes17 = minutes15.minus((int) (short) 1);
        org.joda.time.Minutes minutes19 = minutes17.multipliedBy(0);
        org.joda.time.Duration duration20 = minutes17.toStandardDuration();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes22 = minutes21.negated();
        org.joda.time.DurationFieldType durationFieldType23 = minutes21.getFieldType();
        int int24 = minutes17.get(durationFieldType23);
        boolean boolean25 = minutes8.isSupported(durationFieldType23);
        int int26 = minutes0.get(durationFieldType23);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes28 = minutes27.negated();
        org.joda.time.PeriodType periodType29 = minutes28.getPeriodType();
        org.joda.time.Minutes minutes30 = minutes28.negated();
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes34 = minutes32.plus(0);
        org.joda.time.DurationFieldType durationFieldType35 = minutes34.getFieldType();
        int int36 = minutes30.get(durationFieldType35);
        org.joda.time.Minutes minutes38 = minutes30.dividedBy((int) ' ');
        org.joda.time.Minutes minutes39 = minutes0.plus(minutes30);
        java.lang.String str40 = minutes39.toString();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2147483647 + "'", int14 == 2147483647);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2147483646 + "'", int24 == 2147483646);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-2147483648) + "'", int26 == (-2147483648));
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2147483647 + "'", int36 == 2147483647);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "PT-1M" + "'", str40, "PT-1M");
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((-2147483645));
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod4 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes9 = minutes5.plus(0);
        int int10 = minutes3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes5);
        org.joda.time.Minutes minutes12 = minutes5.plus((int) ' ');
        java.lang.String str13 = minutes5.toString();
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod15 = minutes14.toMutablePeriod();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes18 = minutes16.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes20 = minutes16.plus(0);
        int int21 = minutes14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes16);
        org.joda.time.Minutes minutes23 = minutes16.plus((int) ' ');
        java.lang.String str24 = minutes16.toString();
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean27 = minutes16.isLessThan(minutes26);
        org.joda.time.Minutes minutes28 = minutes5.minus(minutes16);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes30 = minutes29.negated();
        org.joda.time.DurationFieldType durationFieldType31 = minutes29.getFieldType();
        org.joda.time.DurationFieldType durationFieldType32 = minutes29.getFieldType();
        boolean boolean33 = minutes5.isSupported(durationFieldType32);
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = minutes34.get(durationFieldType35);
        org.joda.time.MutablePeriod mutablePeriod37 = minutes34.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType38 = minutes34.getFieldType();
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration40 = minutes39.toStandardDuration();
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes39);
        boolean boolean42 = minutes34.isGreaterThan(minutes39);
        org.joda.time.Minutes minutes43 = minutes5.plus(minutes39);
        org.joda.time.Period period44 = minutes39.toPeriod();
        org.joda.time.PeriodType periodType45 = minutes39.getPeriodType();
        org.joda.time.Minutes minutes46 = minutes2.minus(minutes39);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PT2M" + "'", str13, "PT2M");
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "PT2M" + "'", str24, "PT2M");
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(minutes46);
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes5 = minutes3.minus((int) (short) 1);
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy(0);
        org.joda.time.Minutes minutes9 = minutes7.plus((-2147483648));
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes11 = minutes10.negated();
        org.joda.time.Minutes minutes12 = minutes10.negated();
        boolean boolean13 = minutes9.isGreaterThan(minutes12);
        int int14 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes9);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        java.lang.String str16 = minutes15.toString();
        int int17 = minutes15.size();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MIN_VALUE;
        int int19 = minutes18.getMinutes();
        org.joda.time.PeriodType periodType20 = minutes18.getPeriodType();
        boolean boolean21 = minutes15.equals((java.lang.Object) periodType20);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType23 = minutes15.getFieldType((-2147483647));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -2147483647");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2M" + "'", str16, "PT2M");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2147483648) + "'", int19 == (-2147483648));
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.ZERO;
        org.joda.time.PeriodType periodType1 = minutes0.getPeriodType();
        java.lang.String str2 = minutes0.toString();
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "PT0M" + "'", str2, "PT0M");
        org.junit.Assert.assertNotNull(mutablePeriod3);
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod2 = minutes0.toMutablePeriod();
        java.lang.String str3 = minutes0.toString();
        java.lang.String str4 = minutes0.toString();
        org.joda.time.Minutes minutes6 = minutes0.multipliedBy((int) '#');
        int int7 = minutes0.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2M" + "'", str3, "PT2M");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT2M" + "'", str4, "PT2M");
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = minutes12.getFieldType();
        int int16 = minutes11.get(durationFieldType15);
        org.joda.time.Minutes minutes18 = minutes11.plus((-1));
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = minutes21.plus(0);
        int int26 = minutes19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes21);
        org.joda.time.Minutes minutes28 = minutes21.plus((int) ' ');
        java.lang.String str29 = minutes21.toString();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean32 = minutes21.isLessThan(minutes31);
        boolean boolean33 = minutes18.isLessThan(minutes21);
        org.joda.time.Minutes minutes34 = minutes2.minus(minutes18);
        org.joda.time.MutablePeriod mutablePeriod35 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes37 = minutes2.dividedBy(2);
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes40 = minutes38.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes42 = minutes38.plus(0);
        org.joda.time.Minutes minutes43 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes45 = minutes43.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = minutes46.get(durationFieldType47);
        org.joda.time.DurationFieldType durationFieldType49 = minutes46.getFieldType();
        int int50 = minutes45.get(durationFieldType49);
        org.joda.time.Minutes minutes52 = minutes45.plus((-1));
        org.joda.time.Minutes minutes54 = minutes45.minus((int) (short) 10);
        org.joda.time.Minutes minutes56 = minutes54.dividedBy((-2147483648));
        org.joda.time.Minutes minutes57 = minutes42.plus(minutes56);
        org.joda.time.Minutes minutes58 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType59 = null;
        int int60 = minutes58.get(durationFieldType59);
        org.joda.time.MutablePeriod mutablePeriod61 = minutes58.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType62 = minutes58.getFieldType();
        boolean boolean63 = minutes57.isLessThan(minutes58);
        boolean boolean64 = minutes2.isGreaterThan(minutes57);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2M" + "'", str29, "PT2M");
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-2) + "'", int50 == (-2));
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod61);
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = minutes0.get(durationFieldType1);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType4 = minutes0.getFieldType();
        org.joda.time.Minutes minutes6 = minutes0.dividedBy((-1));
        org.joda.time.Minutes minutes8 = minutes0.dividedBy(2147483646);
        org.joda.time.MutablePeriod mutablePeriod9 = minutes0.toMutablePeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes5 = minutes2.negated();
        boolean boolean6 = minutes1.equals((java.lang.Object) minutes5);
        org.joda.time.Period period7 = minutes1.toPeriod();
        org.joda.time.DurationFieldType durationFieldType8 = minutes1.getFieldType();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(durationFieldType8);
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = minutes0.get(durationFieldType1);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = minutes5.get(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType8 = minutes5.getFieldType();
        boolean boolean9 = minutes0.isLessThan(minutes5);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes11 = minutes10.negated();
        org.joda.time.Minutes minutes12 = minutes10.negated();
        int int13 = minutes12.getMinutes();
        org.joda.time.DurationFieldType durationFieldType14 = minutes12.getFieldType();
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType17 = minutes16.getPeriodType();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes19 = minutes18.negated();
        org.joda.time.Minutes minutes20 = minutes18.negated();
        org.joda.time.DurationFieldType durationFieldType21 = minutes18.getFieldType();
        java.lang.String str22 = minutes18.toString();
        boolean boolean23 = minutes16.isGreaterThan(minutes18);
        boolean boolean24 = minutes15.equals((java.lang.Object) minutes16);
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes15);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes27 = minutes26.negated();
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes26);
        org.joda.time.Minutes minutes29 = minutes25.minus(minutes28);
        org.joda.time.DurationFieldType durationFieldType30 = minutes25.getFieldType();
        int int31 = minutes12.get(durationFieldType30);
        int int32 = minutes5.get(durationFieldType30);
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes5);
        org.joda.time.Duration duration34 = minutes33.toStandardDuration();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-2147483647) + "'", int13 == (-2147483647));
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PT2147483647M" + "'", str22, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-2147483647) + "'", int31 == (-2147483647));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-2147483648) + "'", int32 == (-2147483648));
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(duration34);
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType3 = minutes2.getFieldType();
        org.joda.time.Minutes minutes4 = minutes2.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes6 = minutes5.negated();
        org.joda.time.Minutes minutes7 = minutes5.negated();
        java.lang.String str8 = minutes5.toString();
        int int9 = minutes5.size();
        org.joda.time.Minutes minutes11 = minutes5.minus(0);
        org.joda.time.Minutes minutes13 = minutes5.plus((int) (short) 0);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes5);
        boolean boolean15 = minutes4.isLessThan(minutes5);
        org.joda.time.Duration duration16 = minutes5.toStandardDuration();
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration18 = minutes17.toStandardDuration();
        org.joda.time.Duration duration19 = minutes17.toStandardDuration();
        org.joda.time.Minutes minutes21 = minutes17.minus(2);
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes24 = minutes22.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = minutes22.negated();
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes27 = minutes26.negated();
        org.joda.time.Minutes minutes28 = minutes26.negated();
        boolean boolean29 = minutes22.equals((java.lang.Object) minutes28);
        boolean boolean30 = minutes21.isLessThan(minutes22);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod32 = minutes31.toMutablePeriod();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes35 = minutes33.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes37 = minutes33.plus(0);
        int int38 = minutes31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes33);
        org.joda.time.Minutes minutes40 = minutes33.plus((int) ' ');
        java.lang.String str41 = minutes33.toString();
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod43 = minutes42.toMutablePeriod();
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes46 = minutes44.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes48 = minutes44.plus(0);
        int int49 = minutes42.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes44);
        org.joda.time.Minutes minutes51 = minutes44.plus((int) ' ');
        java.lang.String str52 = minutes44.toString();
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean55 = minutes44.isLessThan(minutes54);
        org.joda.time.Minutes minutes56 = minutes33.minus(minutes44);
        int int57 = minutes56.size();
        org.joda.time.Minutes minutes58 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes60 = minutes58.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes61 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType62 = null;
        int int63 = minutes61.get(durationFieldType62);
        org.joda.time.DurationFieldType durationFieldType64 = minutes61.getFieldType();
        int int65 = minutes60.get(durationFieldType64);
        org.joda.time.Minutes minutes67 = minutes60.plus((-1));
        org.joda.time.Minutes minutes69 = minutes60.minus((int) (short) 10);
        org.joda.time.Minutes minutes71 = minutes69.dividedBy((-2147483648));
        org.joda.time.Minutes minutes73 = minutes69.plus(100);
        org.joda.time.Minutes minutes74 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes76 = minutes74.minus((int) (short) 1);
        org.joda.time.Minutes minutes78 = minutes76.multipliedBy(0);
        org.joda.time.Minutes minutes79 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes81 = minutes79.dividedBy((int) 'a');
        org.joda.time.Minutes minutes83 = minutes79.plus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType84 = minutes83.getFieldType();
        boolean boolean85 = minutes76.isSupported(durationFieldType84);
        boolean boolean86 = minutes69.isSupported(durationFieldType84);
        int int87 = minutes56.get(durationFieldType84);
        boolean boolean88 = minutes22.isSupported(durationFieldType84);
        int int89 = minutes5.get(durationFieldType84);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "PT2147483647M" + "'", str8, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "PT2M" + "'", str41, "PT2M");
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "PT2M" + "'", str52, "PT2M");
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(durationFieldType64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-2) + "'", int65 == (-2));
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertNotNull(minutes73);
        org.junit.Assert.assertNotNull(minutes74);
        org.junit.Assert.assertNotNull(minutes76);
        org.junit.Assert.assertNotNull(minutes78);
        org.junit.Assert.assertNotNull(minutes79);
        org.junit.Assert.assertNotNull(minutes81);
        org.junit.Assert.assertNotNull(minutes83);
        org.junit.Assert.assertNotNull(durationFieldType84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 2147483647 + "'", int89 == 2147483647);
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        java.lang.String str3 = minutes0.toString();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = minutes4.getFieldType();
        boolean boolean6 = minutes0.isSupported(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes0.getFieldType();
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = minutes11.get(durationFieldType12);
        org.joda.time.DurationFieldType durationFieldType14 = minutes11.getFieldType();
        int int15 = minutes10.get(durationFieldType14);
        org.joda.time.Minutes minutes17 = minutes10.plus((-1));
        org.joda.time.Minutes minutes19 = minutes10.minus((int) (short) 10);
        org.joda.time.Minutes minutes20 = minutes0.plus(minutes10);
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes22 = minutes21.negated();
        org.joda.time.Minutes minutes24 = minutes22.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes24);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes28 = minutes26.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = minutes29.get(durationFieldType30);
        org.joda.time.DurationFieldType durationFieldType32 = minutes29.getFieldType();
        int int33 = minutes28.get(durationFieldType32);
        int int34 = minutes25.get(durationFieldType32);
        int int35 = minutes25.getMinutes();
        boolean boolean36 = minutes0.isLessThan(minutes25);
        org.joda.time.PeriodType periodType37 = minutes0.getPeriodType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2147483647M" + "'", str3, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-2) + "'", int15 == (-2));
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-2) + "'", int33 == (-2));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2147483647 + "'", int34 == 2147483647);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2147483647 + "'", int35 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(periodType37);
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = minutes0.get(durationFieldType1);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType4 = minutes0.getFieldType();
        org.joda.time.Minutes minutes6 = minutes0.dividedBy((-1));
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MAX_VALUE;
        int int8 = minutes7.size();
        org.joda.time.Minutes minutes9 = minutes0.plus(minutes7);
        int int10 = minutes7.getMinutes();
        java.lang.String str11 = minutes7.toString();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2147483647 + "'", int10 == 2147483647);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "PT2147483647M" + "'", str11, "PT2147483647M");
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        int int4 = minutes2.getMinutes();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes8 = minutes6.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = minutes9.get(durationFieldType10);
        org.joda.time.DurationFieldType durationFieldType12 = minutes9.getFieldType();
        int int13 = minutes8.get(durationFieldType12);
        org.joda.time.Minutes minutes15 = minutes8.plus((-1));
        boolean boolean16 = minutes5.isGreaterThan(minutes8);
        org.joda.time.DurationFieldType durationFieldType17 = minutes8.getFieldType();
        org.joda.time.PeriodType periodType18 = minutes8.getPeriodType();
        boolean boolean19 = minutes2.equals((java.lang.Object) minutes8);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes2);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-2) + "'", int13 == (-2));
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(minutes20);
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.DurationFieldType durationFieldType2 = minutes0.getFieldType();
        org.joda.time.DurationFieldType durationFieldType3 = minutes0.getFieldType();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes6 = minutes4.minus((int) (short) 1);
        org.joda.time.Minutes minutes8 = minutes6.multipliedBy(0);
        org.joda.time.Duration duration9 = minutes8.toStandardDuration();
        org.joda.time.Minutes minutes11 = minutes8.dividedBy((-2147483648));
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = minutes15.get(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = minutes15.getFieldType();
        int int19 = minutes14.get(durationFieldType18);
        org.joda.time.Minutes minutes21 = minutes14.plus((-1));
        org.joda.time.Minutes minutes23 = minutes14.minus((int) (short) 10);
        org.joda.time.Minutes minutes25 = minutes23.dividedBy((-2147483648));
        org.joda.time.Minutes minutes27 = minutes23.plus(100);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes30 = minutes28.minus((int) (short) 1);
        org.joda.time.Minutes minutes32 = minutes30.multipliedBy(0);
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes35 = minutes33.dividedBy((int) 'a');
        org.joda.time.Minutes minutes37 = minutes33.plus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType38 = minutes37.getFieldType();
        boolean boolean39 = minutes30.isSupported(durationFieldType38);
        boolean boolean40 = minutes23.isSupported(durationFieldType38);
        int int41 = minutes11.get(durationFieldType38);
        java.lang.String str42 = minutes11.toString();
        org.joda.time.PeriodType periodType43 = minutes11.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType44 = minutes11.getFieldType();
        org.joda.time.Minutes minutes45 = minutes0.minus(minutes11);
        org.joda.time.Minutes minutes46 = minutes11.negated();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2) + "'", int19 == (-2));
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT0M" + "'", str42, "PT0M");
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.PeriodType periodType2 = minutes1.getPeriodType();
        org.joda.time.Minutes minutes3 = minutes1.negated();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType7 = minutes6.getFieldType();
        org.joda.time.Minutes minutes8 = minutes6.negated();
        org.joda.time.Minutes minutes10 = minutes6.plus((int) (short) 1);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes13 = minutes11.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = minutes14.get(durationFieldType15);
        org.joda.time.DurationFieldType durationFieldType17 = minutes14.getFieldType();
        int int18 = minutes13.get(durationFieldType17);
        org.joda.time.Minutes minutes20 = minutes13.plus((-1));
        org.joda.time.Minutes minutes22 = minutes13.minus((int) (short) 10);
        org.joda.time.Minutes minutes24 = minutes22.dividedBy((-2147483648));
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod26 = minutes25.toMutablePeriod();
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes28 = minutes25.plus(minutes27);
        org.joda.time.Minutes minutes29 = minutes22.minus(minutes27);
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes32 = minutes30.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes34 = minutes30.plus(0);
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes37 = minutes35.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType39 = null;
        int int40 = minutes38.get(durationFieldType39);
        org.joda.time.DurationFieldType durationFieldType41 = minutes38.getFieldType();
        int int42 = minutes37.get(durationFieldType41);
        org.joda.time.Minutes minutes44 = minutes37.plus((-1));
        org.joda.time.Minutes minutes46 = minutes37.minus((int) (short) 10);
        org.joda.time.Minutes minutes48 = minutes46.dividedBy((-2147483648));
        org.joda.time.Minutes minutes49 = minutes34.plus(minutes48);
        org.joda.time.Minutes minutes50 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes52 = minutes50.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes53 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType54 = null;
        int int55 = minutes53.get(durationFieldType54);
        org.joda.time.MutablePeriod mutablePeriod56 = minutes53.toMutablePeriod();
        org.joda.time.Minutes minutes57 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes53);
        boolean boolean58 = minutes52.isLessThan(minutes57);
        org.joda.time.DurationFieldType durationFieldType59 = minutes57.getFieldType();
        boolean boolean60 = minutes49.isSupported(durationFieldType59);
        int int61 = minutes22.get(durationFieldType59);
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes22);
        org.joda.time.Minutes minutes63 = minutes10.plus(minutes62);
        boolean boolean64 = minutes1.equals((java.lang.Object) minutes63);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-2) + "'", int18 == (-2));
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-2) + "'", int42 == (-2));
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-12) + "'", int61 == (-12));
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod5 = minutes4.toMutablePeriod();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes7 = minutes4.plus(minutes6);
        boolean boolean8 = minutes3.isLessThan(minutes4);
        org.joda.time.MutablePeriod mutablePeriod9 = minutes3.toMutablePeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(mutablePeriod9);
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = minutes0.get(durationFieldType1);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes7 = minutes6.negated();
        org.joda.time.PeriodType periodType8 = minutes7.getPeriodType();
        org.joda.time.Minutes minutes10 = minutes7.minus(0);
        org.joda.time.Minutes minutes12 = minutes7.minus((-1));
        org.joda.time.Minutes minutes13 = minutes7.negated();
        org.joda.time.DurationFieldType durationFieldType15 = minutes13.getFieldType(0);
        int int16 = minutes0.get(durationFieldType15);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2147483648) + "'", int16 == (-2147483648));
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((int) '#');
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = minutes5.get(durationFieldType6);
        org.joda.time.MutablePeriod mutablePeriod8 = minutes5.toMutablePeriod();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes5);
        boolean boolean10 = minutes4.isLessThan(minutes9);
        int int11 = minutes4.getMinutes();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean14 = minutes4.isLessThan(minutes13);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration16 = minutes15.toStandardDuration();
        org.joda.time.Duration duration17 = minutes15.toStandardDuration();
        org.joda.time.Minutes minutes19 = minutes15.minus(2);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes22 = minutes20.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes23 = minutes20.negated();
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes25 = minutes24.negated();
        org.joda.time.Minutes minutes26 = minutes24.negated();
        boolean boolean27 = minutes20.equals((java.lang.Object) minutes26);
        boolean boolean28 = minutes19.isLessThan(minutes20);
        org.joda.time.Minutes minutes29 = minutes13.minus(minutes20);
        int int30 = minutes20.getMinutes();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration32 = minutes31.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod33 = minutes31.toMutablePeriod();
        java.lang.String str34 = minutes31.toString();
        org.joda.time.PeriodType periodType35 = minutes31.getPeriodType();
        boolean boolean36 = minutes20.isGreaterThan(minutes31);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes20);
        org.joda.time.MutablePeriod mutablePeriod38 = minutes37.toMutablePeriod();
        org.joda.time.Minutes minutes39 = minutes1.plus(minutes37);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-2) + "'", int11 == (-2));
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "PT2M" + "'", str34, "PT2M");
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(minutes39);
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.Minutes minutes13 = minutes3.multipliedBy(2);
        org.joda.time.Minutes minutes14 = minutes13.negated();
        org.joda.time.Minutes minutes15 = minutes14.negated();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes17 = minutes16.negated();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes16);
        java.lang.String str19 = minutes16.toString();
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType21 = minutes20.getFieldType();
        boolean boolean22 = minutes16.isSupported(durationFieldType21);
        int int23 = minutes14.get(durationFieldType21);
        org.joda.time.Minutes minutes25 = minutes14.minus(0);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "PT2147483647M" + "'", str19, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 4 + "'", int23 == 4);
        org.junit.Assert.assertNotNull(minutes25);
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod2 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        int int4 = minutes3.size();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes6 = minutes5.negated();
        org.joda.time.Minutes minutes8 = minutes6.dividedBy((int) (byte) -1);
        boolean boolean9 = minutes3.isLessThan(minutes6);
        boolean boolean10 = minutes0.isLessThan(minutes3);
        int int11 = minutes3.size();
        // The following exception was thrown during execution in test generation
        try {
            int int13 = minutes3.getValue(1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes(10);
        org.joda.time.Minutes minutes3 = minutes1.plus(3);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes6 = minutes4.dividedBy((int) 'a');
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes9 = minutes7.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = minutes10.get(durationFieldType11);
        org.joda.time.DurationFieldType durationFieldType13 = minutes10.getFieldType();
        int int14 = minutes9.get(durationFieldType13);
        org.joda.time.Minutes minutes16 = minutes9.plus((-1));
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod18 = minutes17.toMutablePeriod();
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes21 = minutes19.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes23 = minutes19.plus(0);
        int int24 = minutes17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes19);
        org.joda.time.Minutes minutes26 = minutes19.plus((int) ' ');
        java.lang.String str27 = minutes19.toString();
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean30 = minutes19.isLessThan(minutes29);
        boolean boolean31 = minutes16.isLessThan(minutes19);
        int int32 = minutes16.getMinutes();
        boolean boolean33 = minutes4.isGreaterThan(minutes16);
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.MIN_VALUE;
        int int35 = minutes34.getMinutes();
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes38 = minutes36.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType40 = null;
        int int41 = minutes39.get(durationFieldType40);
        org.joda.time.DurationFieldType durationFieldType42 = minutes39.getFieldType();
        int int43 = minutes38.get(durationFieldType42);
        org.joda.time.Minutes minutes45 = minutes38.plus((-1));
        org.joda.time.Minutes minutes47 = minutes38.minus((int) (short) 10);
        org.joda.time.Minutes minutes49 = minutes47.dividedBy((-2147483648));
        org.joda.time.Minutes minutes50 = minutes49.negated();
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes52 = minutes51.negated();
        org.joda.time.Minutes minutes53 = minutes51.negated();
        org.joda.time.Minutes minutes54 = minutes49.minus(minutes53);
        org.joda.time.Minutes minutes56 = minutes53.plus((int) 'a');
        boolean boolean57 = minutes34.isLessThan(minutes56);
        org.joda.time.Minutes minutes59 = minutes56.dividedBy((int) '4');
        org.joda.time.Minutes minutes60 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes62 = minutes60.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes63 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes65 = minutes63.minus((int) (short) 1);
        org.joda.time.Minutes minutes67 = minutes65.multipliedBy(0);
        org.joda.time.Minutes minutes69 = minutes67.plus((-2147483648));
        org.joda.time.Minutes minutes70 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes71 = minutes70.negated();
        org.joda.time.Minutes minutes72 = minutes70.negated();
        boolean boolean73 = minutes69.isGreaterThan(minutes72);
        int int74 = minutes60.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes69);
        org.joda.time.MutablePeriod mutablePeriod75 = minutes69.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType76 = minutes69.getFieldType();
        int int77 = minutes59.get(durationFieldType76);
        boolean boolean78 = minutes16.isSupported(durationFieldType76);
        boolean boolean79 = minutes1.isLessThan(minutes16);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-2) + "'", int14 == (-2));
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "PT2M" + "'", str27, "PT2M");
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-3) + "'", int32 == (-3));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-2147483648) + "'", int35 == (-2147483648));
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-2) + "'", int43 == (-2));
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod75);
        org.junit.Assert.assertNotNull(durationFieldType76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-41297760) + "'", int77 == (-41297760));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod3 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes5 = minutes2.plus(minutes4);
        int int6 = minutes1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes4);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MAX_VALUE;
        int int8 = minutes1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes7);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.MutablePeriod mutablePeriod15 = minutes12.toMutablePeriod();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes12);
        boolean boolean17 = minutes11.isLessThan(minutes16);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes20 = minutes18.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = minutes21.get(durationFieldType22);
        org.joda.time.DurationFieldType durationFieldType24 = minutes21.getFieldType();
        int int25 = minutes20.get(durationFieldType24);
        org.joda.time.Minutes minutes27 = minutes20.plus((-1));
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod29 = minutes28.toMutablePeriod();
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes32 = minutes30.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes34 = minutes30.plus(0);
        int int35 = minutes28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes30);
        org.joda.time.Minutes minutes37 = minutes30.plus((int) ' ');
        java.lang.String str38 = minutes30.toString();
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean41 = minutes30.isLessThan(minutes40);
        boolean boolean42 = minutes27.isLessThan(minutes30);
        org.joda.time.Minutes minutes43 = minutes11.minus(minutes27);
        org.joda.time.MutablePeriod mutablePeriod44 = minutes11.toMutablePeriod();
        org.joda.time.Minutes minutes46 = minutes11.dividedBy(2);
        org.joda.time.Minutes minutes47 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes49 = minutes47.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes50 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType51 = null;
        int int52 = minutes50.get(durationFieldType51);
        org.joda.time.DurationFieldType durationFieldType53 = minutes50.getFieldType();
        int int54 = minutes49.get(durationFieldType53);
        org.joda.time.Minutes minutes56 = minutes49.plus((-1));
        org.joda.time.Minutes minutes57 = minutes56.negated();
        org.joda.time.Minutes minutes58 = minutes46.plus(minutes57);
        org.joda.time.Minutes minutes60 = minutes46.minus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType61 = minutes60.getFieldType();
        int int62 = minutes7.get(durationFieldType61);
        int int63 = minutes7.getMinutes();
        org.joda.time.Minutes minutes65 = minutes7.multipliedBy((-1));
        org.joda.time.Minutes minutes66 = minutes65.negated();
        org.joda.time.MutablePeriod mutablePeriod67 = minutes66.toMutablePeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-2) + "'", int25 == (-2));
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "PT2M" + "'", str38, "PT2M");
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(mutablePeriod44);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-2) + "'", int54 == (-2));
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2147483647 + "'", int62 == 2147483647);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2147483647 + "'", int63 == 2147483647);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(mutablePeriod67);
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = minutes0.getFieldType();
        org.joda.time.MutablePeriod mutablePeriod2 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType5 = minutes4.getPeriodType();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes7 = minutes6.negated();
        org.joda.time.Minutes minutes8 = minutes6.negated();
        org.joda.time.DurationFieldType durationFieldType9 = minutes6.getFieldType();
        java.lang.String str10 = minutes6.toString();
        boolean boolean11 = minutes4.isGreaterThan(minutes6);
        boolean boolean12 = minutes3.equals((java.lang.Object) minutes4);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes15 = minutes14.negated();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes14);
        org.joda.time.Minutes minutes17 = minutes13.minus(minutes16);
        org.joda.time.DurationFieldType durationFieldType18 = minutes16.getFieldType();
        boolean boolean19 = minutes0.equals((java.lang.Object) minutes16);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes22 = minutes20.dividedBy((int) 'a');
        int int23 = minutes22.getMinutes();
        org.joda.time.DurationFieldType durationFieldType24 = minutes22.getFieldType();
        boolean boolean25 = minutes16.isSupported(durationFieldType24);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes27 = minutes16.multipliedBy((-2147483548));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 2147483647 * -2147483548");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT2147483647M" + "'", str10, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-22139006) + "'", int23 == (-22139006));
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((-2147483646));
        org.joda.time.Weeks weeks2 = minutes1.toStandardWeeks();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(weeks2);
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes9 = minutes2.plus((-1));
        org.joda.time.Minutes minutes11 = minutes2.minus((int) (short) 10);
        org.joda.time.Duration duration12 = minutes2.toStandardDuration();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes14 = minutes13.negated();
        org.joda.time.Minutes minutes15 = minutes13.negated();
        java.lang.String str16 = minutes13.toString();
        org.joda.time.Minutes minutes18 = minutes13.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes22 = minutes20.multipliedBy((int) (byte) 0);
        boolean boolean23 = minutes18.equals((java.lang.Object) minutes20);
        boolean boolean24 = minutes2.isGreaterThan(minutes20);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes26 = minutes2.multipliedBy((-2147483647));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: -2 * -2147483647");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483647M" + "'", str16, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes1.plus(0);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.MutablePeriod mutablePeriod7 = minutes4.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType8 = minutes4.getFieldType();
        int int9 = minutes3.get(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType11 = minutes3.getFieldType((int) (short) 0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType11);
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        int int1 = minutes0.size();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes3 = minutes2.negated();
        org.joda.time.Minutes minutes5 = minutes3.dividedBy((int) (byte) -1);
        boolean boolean6 = minutes0.isLessThan(minutes3);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        org.joda.time.Minutes minutes9 = minutes3.multipliedBy(1);
        int int10 = minutes9.size();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType3 = minutes2.getFieldType();
        org.joda.time.Minutes minutes4 = minutes2.negated();
        org.joda.time.Minutes minutes6 = minutes2.plus((int) (short) 1);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType9 = minutes8.getPeriodType();
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes11 = minutes10.negated();
        org.joda.time.Minutes minutes12 = minutes10.negated();
        org.joda.time.DurationFieldType durationFieldType13 = minutes10.getFieldType();
        java.lang.String str14 = minutes10.toString();
        boolean boolean15 = minutes8.isGreaterThan(minutes10);
        boolean boolean16 = minutes7.equals((java.lang.Object) minutes8);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes7);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes19 = minutes18.negated();
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes18);
        org.joda.time.Minutes minutes21 = minutes17.minus(minutes20);
        org.joda.time.DurationFieldType durationFieldType22 = minutes20.getFieldType();
        org.joda.time.PeriodType periodType23 = minutes20.getPeriodType();
        boolean boolean24 = minutes2.isGreaterThan(minutes20);
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes27 = minutes25.minus((int) (short) 0);
        org.joda.time.Period period28 = minutes25.toPeriod();
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) period28);
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.MIN_VALUE;
        int int31 = minutes30.getMinutes();
        org.joda.time.PeriodType periodType32 = minutes30.getPeriodType();
        java.lang.String str33 = minutes30.toString();
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes35 = minutes34.negated();
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod37 = minutes36.toMutablePeriod();
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes39 = minutes36.plus(minutes38);
        int int40 = minutes35.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes38);
        int int41 = minutes30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes38);
        boolean boolean42 = minutes29.isGreaterThan(minutes30);
        boolean boolean43 = minutes20.isLessThan(minutes29);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "PT2147483647M" + "'", str14, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-2147483648) + "'", int31 == (-2147483648));
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "PT-2147483648M" + "'", str33, "PT-2147483648M");
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType3 = minutes2.getFieldType();
        org.joda.time.Minutes minutes4 = minutes2.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes6 = minutes5.negated();
        org.joda.time.Minutes minutes7 = minutes5.negated();
        java.lang.String str8 = minutes5.toString();
        int int9 = minutes5.size();
        org.joda.time.Minutes minutes11 = minutes5.minus(0);
        org.joda.time.Minutes minutes13 = minutes5.plus((int) (short) 0);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes5);
        boolean boolean15 = minutes4.isLessThan(minutes5);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes18 = minutes16.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes20 = minutes16.plus(0);
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MIN_VALUE;
        boolean boolean22 = minutes16.isGreaterThan(minutes21);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes24 = minutes23.negated();
        org.joda.time.Minutes minutes26 = minutes24.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes26);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes30 = minutes28.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = minutes31.get(durationFieldType32);
        org.joda.time.DurationFieldType durationFieldType34 = minutes31.getFieldType();
        int int35 = minutes30.get(durationFieldType34);
        int int36 = minutes27.get(durationFieldType34);
        org.joda.time.PeriodType periodType37 = minutes27.getPeriodType();
        int int38 = minutes27.getMinutes();
        boolean boolean39 = minutes16.isLessThan(minutes27);
        int int40 = minutes27.getMinutes();
        org.joda.time.Period period41 = minutes27.toPeriod();
        boolean boolean42 = minutes4.equals((java.lang.Object) minutes27);
        org.joda.time.Minutes minutes43 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes44 = minutes43.negated();
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes43);
        java.lang.String str46 = minutes43.toString();
        org.joda.time.Minutes minutes47 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType48 = minutes47.getFieldType();
        boolean boolean49 = minutes43.isSupported(durationFieldType48);
        org.joda.time.Minutes minutes50 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes43);
        org.joda.time.MutablePeriod mutablePeriod51 = minutes50.toMutablePeriod();
        boolean boolean52 = minutes27.isGreaterThan(minutes50);
        org.joda.time.Minutes minutes53 = minutes50.negated();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes55 = minutes50.minus((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 2147483647 + 1");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "PT2147483647M" + "'", str8, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-2) + "'", int35 == (-2));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2147483647 + "'", int36 == 2147483647);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2147483647 + "'", int38 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2147483647 + "'", int40 == 2147483647);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "PT2147483647M" + "'", str46, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(minutes53);
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.dividedBy(2);
        int int3 = minutes0.size();
        org.joda.time.Minutes minutes5 = minutes0.minus((-12));
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = minutes6.get(durationFieldType7);
        org.joda.time.MutablePeriod mutablePeriod9 = minutes6.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType10 = minutes6.getFieldType();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes13 = minutes11.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = minutes14.get(durationFieldType15);
        org.joda.time.MutablePeriod mutablePeriod17 = minutes14.toMutablePeriod();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes14);
        boolean boolean19 = minutes13.isLessThan(minutes18);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes22 = minutes20.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = minutes23.get(durationFieldType24);
        org.joda.time.DurationFieldType durationFieldType26 = minutes23.getFieldType();
        int int27 = minutes22.get(durationFieldType26);
        org.joda.time.Minutes minutes29 = minutes22.plus((-1));
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod31 = minutes30.toMutablePeriod();
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes34 = minutes32.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes36 = minutes32.plus(0);
        int int37 = minutes30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes32);
        org.joda.time.Minutes minutes39 = minutes32.plus((int) ' ');
        java.lang.String str40 = minutes32.toString();
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean43 = minutes32.isLessThan(minutes42);
        boolean boolean44 = minutes29.isLessThan(minutes32);
        org.joda.time.Minutes minutes45 = minutes13.minus(minutes29);
        org.joda.time.MutablePeriod mutablePeriod46 = minutes13.toMutablePeriod();
        org.joda.time.Minutes minutes48 = minutes13.dividedBy(2);
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes51 = minutes49.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes52 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType53 = null;
        int int54 = minutes52.get(durationFieldType53);
        org.joda.time.DurationFieldType durationFieldType55 = minutes52.getFieldType();
        int int56 = minutes51.get(durationFieldType55);
        org.joda.time.Minutes minutes58 = minutes51.plus((-1));
        org.joda.time.Minutes minutes59 = minutes58.negated();
        org.joda.time.Minutes minutes60 = minutes48.plus(minutes59);
        org.joda.time.Minutes minutes62 = minutes59.multipliedBy((-22139006));
        org.joda.time.Minutes minutes64 = org.joda.time.Minutes.minutes((int) ' ');
        org.joda.time.Minutes minutes65 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes66 = minutes65.negated();
        org.joda.time.PeriodType periodType67 = minutes66.getPeriodType();
        org.joda.time.Minutes minutes68 = minutes66.negated();
        org.joda.time.Minutes minutes70 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes72 = minutes70.plus(0);
        org.joda.time.DurationFieldType durationFieldType73 = minutes72.getFieldType();
        int int74 = minutes68.get(durationFieldType73);
        boolean boolean75 = minutes64.isSupported(durationFieldType73);
        boolean boolean76 = minutes62.isSupported(durationFieldType73);
        boolean boolean77 = minutes6.isSupported(durationFieldType73);
        boolean boolean78 = minutes5.isSupported(durationFieldType73);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType80 = minutes5.getFieldType((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 32");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-2) + "'", int27 == (-2));
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "PT2M" + "'", str40, "PT2M");
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(mutablePeriod46);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-2) + "'", int56 == (-2));
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertNotNull(durationFieldType73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 2147483647 + "'", int74 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = minutes8.plus(0);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = minutes16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = minutes16.getFieldType();
        int int20 = minutes15.get(durationFieldType19);
        org.joda.time.Minutes minutes22 = minutes15.plus((-1));
        org.joda.time.Minutes minutes24 = minutes15.minus((int) (short) 10);
        org.joda.time.Minutes minutes26 = minutes24.dividedBy((-2147483648));
        org.joda.time.Minutes minutes27 = minutes12.plus(minutes26);
        org.joda.time.Minutes minutes28 = minutes2.minus(minutes12);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod30 = minutes29.toMutablePeriod();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes32 = minutes29.plus(minutes31);
        org.joda.time.Minutes minutes33 = minutes28.plus(minutes31);
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes36 = minutes34.multipliedBy((int) (short) -1);
        org.joda.time.MutablePeriod mutablePeriod37 = minutes34.toMutablePeriod();
        org.joda.time.Minutes minutes38 = minutes31.minus(minutes34);
        // The following exception was thrown during execution in test generation
        try {
            int int40 = minutes34.getValue((-2147483648));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -2147483648");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-2) + "'", int20 == (-2));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(minutes38);
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = minutes0.negated();
        java.lang.String str3 = minutes0.toString();
        int int4 = minutes0.size();
        org.joda.time.Minutes minutes6 = minutes0.minus(0);
        org.joda.time.Minutes minutes8 = minutes0.plus((int) (short) 0);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.PeriodType periodType10 = minutes9.getPeriodType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2147483647M" + "'", str3, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(periodType10);
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        int int1 = minutes0.getMinutes();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes7 = minutes4.negated();
        boolean boolean8 = minutes3.equals((java.lang.Object) minutes7);
        java.lang.String str9 = minutes7.toString();
        org.joda.time.DurationFieldType durationFieldType10 = minutes7.getFieldType();
        boolean boolean11 = minutes0.equals((java.lang.Object) minutes7);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes14 = minutes12.dividedBy((int) 'a');
        org.joda.time.Minutes minutes16 = minutes12.plus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType17 = minutes16.getFieldType();
        boolean boolean18 = minutes7.isSupported(durationFieldType17);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-2147483648) + "'", int1 == (-2147483648));
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT-2M" + "'", str9, "PT-2M");
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.Duration duration2 = minutes0.toStandardDuration();
        org.joda.time.Minutes minutes4 = minutes0.minus(2);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        int int6 = minutes5.getMinutes();
        org.joda.time.PeriodType periodType7 = minutes5.getPeriodType();
        org.joda.time.Minutes minutes8 = null;
        org.joda.time.Minutes minutes9 = minutes5.plus(minutes8);
        boolean boolean10 = minutes0.isLessThan(minutes9);
        int int11 = minutes9.getMinutes();
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes9);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = minutes16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = minutes16.getFieldType();
        int int20 = minutes15.get(durationFieldType19);
        org.joda.time.Minutes minutes22 = minutes15.plus((-1));
        org.joda.time.Minutes minutes24 = minutes15.minus((int) (short) 10);
        org.joda.time.Minutes minutes26 = minutes24.dividedBy((-2147483648));
        org.joda.time.Minutes minutes27 = minutes26.negated();
        org.joda.time.DurationFieldType durationFieldType28 = minutes26.getFieldType();
        org.joda.time.PeriodType periodType29 = minutes26.getPeriodType();
        org.joda.time.Minutes minutes30 = minutes26.negated();
        org.joda.time.Minutes minutes31 = minutes9.plus(minutes30);
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.parseMinutes("PT-12M");
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration35 = minutes34.toStandardDuration();
        org.joda.time.Duration duration36 = minutes34.toStandardDuration();
        org.joda.time.Minutes minutes38 = minutes34.minus(2);
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes41 = minutes39.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = minutes42.get(durationFieldType43);
        org.joda.time.MutablePeriod mutablePeriod45 = minutes42.toMutablePeriod();
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes42);
        boolean boolean47 = minutes41.isLessThan(minutes46);
        int int48 = minutes41.getMinutes();
        org.joda.time.Minutes minutes50 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean51 = minutes41.isLessThan(minutes50);
        org.joda.time.Minutes minutes52 = minutes38.minus(minutes50);
        int int53 = minutes50.getMinutes();
        org.joda.time.Minutes minutes54 = minutes33.minus(minutes50);
        org.joda.time.Minutes minutes55 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes56 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes58 = minutes56.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes59 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType60 = null;
        int int61 = minutes59.get(durationFieldType60);
        org.joda.time.DurationFieldType durationFieldType62 = minutes59.getFieldType();
        int int63 = minutes58.get(durationFieldType62);
        org.joda.time.Minutes minutes65 = minutes58.plus((-1));
        boolean boolean66 = minutes55.isGreaterThan(minutes58);
        org.joda.time.Minutes minutes68 = minutes58.multipliedBy(2);
        org.joda.time.Minutes minutes69 = minutes68.negated();
        int int70 = minutes68.getMinutes();
        org.joda.time.Minutes minutes71 = minutes68.negated();
        org.joda.time.Minutes minutes72 = minutes54.plus(minutes68);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes73 = minutes31.minus(minutes54);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: -2147483648 + -2147483633");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-2147483648) + "'", int6 == (-2147483648));
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-2147483648) + "'", int11 == (-2147483648));
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-2) + "'", int20 == (-2));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-2) + "'", int48 == (-2));
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-2147483645) + "'", int53 == (-2147483645));
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-2) + "'", int63 == (-2));
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-4) + "'", int70 == (-4));
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertNotNull(minutes72);
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = minutes0.get(durationFieldType1);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType4 = minutes0.getFieldType();
        org.joda.time.Minutes minutes6 = minutes0.dividedBy((-1));
        org.joda.time.Minutes minutes8 = minutes0.dividedBy(2147483646);
        org.joda.time.Minutes minutes10 = minutes0.dividedBy((-3));
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes10);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.dividedBy((int) 'a');
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((-12));
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.minutes((-2147483548));
        org.joda.time.Minutes minutes7 = null;
        org.joda.time.Minutes minutes8 = minutes6.minus(minutes7);
        org.joda.time.Minutes minutes9 = minutes4.minus(minutes7);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes3 = minutes1.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        int int13 = minutes4.get(durationFieldType11);
        int int14 = minutes4.getMinutes();
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration16 = minutes15.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod17 = minutes15.toMutablePeriod();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MAX_VALUE;
        int int19 = minutes18.size();
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes21 = minutes20.negated();
        org.joda.time.Minutes minutes23 = minutes21.dividedBy((int) (byte) -1);
        boolean boolean24 = minutes18.isLessThan(minutes21);
        boolean boolean25 = minutes15.isLessThan(minutes18);
        org.joda.time.Minutes minutes27 = minutes15.multipliedBy((int) (short) -1);
        org.joda.time.Period period28 = minutes15.toPeriod();
        boolean boolean29 = minutes4.isGreaterThan(minutes15);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes31 = minutes4.minus((-71582788));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 2147483647 + 71582788");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2147483647 + "'", int13 == 2147483647);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2147483647 + "'", int14 == 2147483647);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes8 = minutes2.negated();
        org.joda.time.Duration duration9 = minutes8.toStandardDuration();
        org.joda.time.Minutes minutes11 = minutes8.dividedBy((-2147483647));
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes8);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.DurationFieldType durationFieldType12 = minutes3.getFieldType();
        int int14 = minutes3.getValue((int) (short) 0);
        org.joda.time.Period period15 = minutes3.toPeriod();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes17 = minutes16.negated();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod19 = minutes18.toMutablePeriod();
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes21 = minutes18.plus(minutes20);
        int int22 = minutes17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes20);
        org.joda.time.Minutes minutes23 = minutes3.minus(minutes17);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes26 = minutes24.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType27 = minutes26.getFieldType();
        org.joda.time.Minutes minutes28 = minutes26.negated();
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes30 = minutes29.negated();
        org.joda.time.Minutes minutes31 = minutes29.negated();
        java.lang.String str32 = minutes29.toString();
        int int33 = minutes29.size();
        org.joda.time.Minutes minutes35 = minutes29.minus(0);
        org.joda.time.Minutes minutes37 = minutes29.plus((int) (short) 0);
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes29);
        boolean boolean39 = minutes28.isLessThan(minutes29);
        int int40 = minutes17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes29);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-2) + "'", int14 == (-2));
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "PT2147483647M" + "'", str32, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        int int1 = minutes0.getMinutes();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes3 = minutes2.negated();
        org.joda.time.Minutes minutes4 = minutes2.negated();
        org.joda.time.DurationFieldType durationFieldType5 = minutes2.getFieldType();
        int int6 = minutes0.get(durationFieldType5);
        int int7 = minutes0.getMinutes();
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration9 = minutes8.toStandardDuration();
        org.joda.time.Duration duration10 = minutes8.toStandardDuration();
        org.joda.time.Minutes minutes12 = minutes8.minus(2);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = minutes16.get(durationFieldType17);
        org.joda.time.MutablePeriod mutablePeriod19 = minutes16.toMutablePeriod();
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes16);
        boolean boolean21 = minutes15.isLessThan(minutes20);
        int int22 = minutes15.getMinutes();
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean25 = minutes15.isLessThan(minutes24);
        org.joda.time.Minutes minutes26 = minutes12.minus(minutes24);
        int int28 = minutes12.getValue(0);
        org.joda.time.Minutes minutes29 = minutes0.minus(minutes12);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes31 = minutes0.multipliedBy((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: -2147483648 * 35");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-2147483648) + "'", int1 == (-2147483648));
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-2147483648) + "'", int6 == (-2147483648));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2147483648) + "'", int7 == (-2147483648));
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-2) + "'", int22 == (-2));
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(minutes29);
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes9 = minutes2.plus((-1));
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod11 = minutes10.toMutablePeriod();
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes16 = minutes12.plus(0);
        int int17 = minutes10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes12);
        org.joda.time.Minutes minutes19 = minutes12.plus((int) ' ');
        java.lang.String str20 = minutes12.toString();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean23 = minutes12.isLessThan(minutes22);
        boolean boolean24 = minutes9.isLessThan(minutes12);
        int int25 = minutes9.getMinutes();
        org.joda.time.MutablePeriod mutablePeriod26 = minutes9.toMutablePeriod();
        org.joda.time.Minutes minutes28 = minutes9.dividedBy((-2147483548));
        java.lang.Class<?> wildcardClass29 = minutes9.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "PT2M" + "'", str20, "PT2M");
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((int) (short) 100);
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) '4');
        org.joda.time.Period period4 = minutes3.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            int int6 = minutes3.getValue(52);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(period4);
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod2 = minutes0.toMutablePeriod();
        java.lang.String str3 = minutes0.toString();
        int int4 = minutes0.size();
        org.joda.time.Minutes minutes5 = minutes0.negated();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes5);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType8 = minutes6.getFieldType((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 97");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2M" + "'", str3, "PT2M");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.dividedBy(2);
        int int3 = minutes0.size();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod5 = minutes4.toMutablePeriod();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes8 = minutes6.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes10 = minutes6.plus(0);
        int int11 = minutes4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes6);
        org.joda.time.Minutes minutes13 = minutes6.plus((int) ' ');
        int int14 = minutes13.size();
        org.joda.time.Minutes minutes16 = minutes13.minus(0);
        org.joda.time.Minutes minutes17 = minutes0.plus(minutes13);
        org.joda.time.Minutes minutes19 = minutes17.dividedBy((-2147483648));
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes21 = minutes20.negated();
        org.joda.time.Minutes minutes22 = minutes20.negated();
        java.lang.String str23 = minutes20.toString();
        org.joda.time.Minutes minutes25 = minutes20.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes29 = minutes27.multipliedBy((int) (byte) 0);
        boolean boolean30 = minutes25.equals((java.lang.Object) minutes27);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes32 = minutes31.negated();
        org.joda.time.DurationFieldType durationFieldType33 = minutes31.getFieldType();
        boolean boolean34 = minutes25.isSupported(durationFieldType33);
        int int35 = minutes17.get(durationFieldType33);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.parseMinutes("PT-12M");
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration39 = minutes38.toStandardDuration();
        org.joda.time.Duration duration40 = minutes38.toStandardDuration();
        org.joda.time.Minutes minutes42 = minutes38.minus(2);
        org.joda.time.Minutes minutes43 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes45 = minutes43.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = minutes46.get(durationFieldType47);
        org.joda.time.MutablePeriod mutablePeriod49 = minutes46.toMutablePeriod();
        org.joda.time.Minutes minutes50 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes46);
        boolean boolean51 = minutes45.isLessThan(minutes50);
        int int52 = minutes45.getMinutes();
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean55 = minutes45.isLessThan(minutes54);
        org.joda.time.Minutes minutes56 = minutes42.minus(minutes54);
        int int57 = minutes54.getMinutes();
        org.joda.time.Minutes minutes58 = minutes37.minus(minutes54);
        org.joda.time.Minutes minutes60 = org.joda.time.Minutes.minutes((int) (byte) -1);
        boolean boolean61 = minutes58.isLessThan(minutes60);
        boolean boolean62 = minutes17.isGreaterThan(minutes58);
        org.joda.time.Minutes minutes63 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod64 = minutes63.toMutablePeriod();
        org.joda.time.Minutes minutes65 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes67 = minutes65.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes69 = minutes65.plus(0);
        int int70 = minutes63.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes65);
        org.joda.time.Minutes minutes72 = minutes65.plus((int) ' ');
        org.joda.time.Minutes minutes73 = minutes72.negated();
        org.joda.time.Minutes minutes74 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType75 = null;
        int int76 = minutes74.get(durationFieldType75);
        org.joda.time.MutablePeriod mutablePeriod77 = minutes74.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType78 = minutes74.getFieldType();
        org.joda.time.Minutes minutes80 = minutes74.dividedBy((-1));
        org.joda.time.Minutes minutes82 = minutes74.dividedBy(2147483646);
        org.joda.time.Minutes minutes84 = org.joda.time.Minutes.minutes((int) (byte) 10);
        boolean boolean85 = minutes74.isLessThan(minutes84);
        org.joda.time.Minutes minutes86 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes88 = minutes86.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes89 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType90 = null;
        int int91 = minutes89.get(durationFieldType90);
        org.joda.time.MutablePeriod mutablePeriod92 = minutes89.toMutablePeriod();
        org.joda.time.Minutes minutes93 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes89);
        boolean boolean94 = minutes88.isLessThan(minutes93);
        org.joda.time.Minutes minutes95 = minutes84.plus(minutes88);
        org.joda.time.Duration duration96 = minutes95.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod97 = minutes95.toMutablePeriod();
        boolean boolean98 = minutes73.equals((java.lang.Object) minutes95);
        boolean boolean99 = minutes58.equals((java.lang.Object) boolean98);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT2147483647M" + "'", str23, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 36 + "'", int35 == 36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod49);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-2) + "'", int52 == (-2));
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-2147483645) + "'", int57 == (-2147483645));
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(mutablePeriod64);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertNotNull(minutes73);
        org.junit.Assert.assertNotNull(minutes74);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod77);
        org.junit.Assert.assertNotNull(durationFieldType78);
        org.junit.Assert.assertNotNull(minutes80);
        org.junit.Assert.assertNotNull(minutes82);
        org.junit.Assert.assertNotNull(minutes84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(minutes86);
        org.junit.Assert.assertNotNull(minutes88);
        org.junit.Assert.assertNotNull(minutes89);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod92);
        org.junit.Assert.assertNotNull(minutes93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(minutes95);
        org.junit.Assert.assertNotNull(duration96);
        org.junit.Assert.assertNotNull(mutablePeriod97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod5 = minutes4.toMutablePeriod();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes7 = minutes4.plus(minutes6);
        boolean boolean8 = minutes3.isLessThan(minutes4);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        org.joda.time.Minutes minutes12 = minutes10.plus(0);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MAX_VALUE;
        int int14 = minutes13.size();
        int int16 = minutes13.getValue(0);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes13);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes20 = minutes18.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = minutes21.get(durationFieldType22);
        org.joda.time.DurationFieldType durationFieldType24 = minutes21.getFieldType();
        int int25 = minutes20.get(durationFieldType24);
        org.joda.time.Minutes minutes27 = minutes20.plus((-1));
        org.joda.time.Minutes minutes29 = minutes20.minus((int) (short) 10);
        org.joda.time.Duration duration30 = minutes20.toStandardDuration();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes32 = minutes31.negated();
        org.joda.time.Minutes minutes33 = minutes31.negated();
        java.lang.String str34 = minutes31.toString();
        org.joda.time.Minutes minutes36 = minutes31.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes40 = minutes38.multipliedBy((int) (byte) 0);
        boolean boolean41 = minutes36.equals((java.lang.Object) minutes38);
        boolean boolean42 = minutes20.isGreaterThan(minutes38);
        boolean boolean43 = minutes17.equals((java.lang.Object) boolean42);
        org.joda.time.Minutes minutes44 = minutes17.negated();
        int int45 = minutes12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes44);
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes47 = minutes46.negated();
        org.joda.time.Minutes minutes49 = minutes47.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes50 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes49);
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes53 = minutes51.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType55 = null;
        int int56 = minutes54.get(durationFieldType55);
        org.joda.time.DurationFieldType durationFieldType57 = minutes54.getFieldType();
        int int58 = minutes53.get(durationFieldType57);
        int int59 = minutes50.get(durationFieldType57);
        org.joda.time.DurationFieldType durationFieldType60 = minutes50.getFieldType();
        boolean boolean61 = minutes12.isSupported(durationFieldType60);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2147483647 + "'", int16 == 2147483647);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-2) + "'", int25 == (-2));
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "PT2147483647M" + "'", str34, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-2) + "'", int58 == (-2));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2147483647 + "'", int59 == 2147483647);
        org.junit.Assert.assertNotNull(durationFieldType60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = minutes7.get(durationFieldType8);
        org.joda.time.MutablePeriod mutablePeriod10 = minutes7.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType11 = minutes7.getFieldType();
        org.joda.time.Minutes minutes13 = minutes7.dividedBy((-1));
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MAX_VALUE;
        int int15 = minutes14.size();
        org.joda.time.Minutes minutes16 = minutes7.plus(minutes14);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes19 = minutes17.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = minutes20.get(durationFieldType21);
        org.joda.time.DurationFieldType durationFieldType23 = minutes20.getFieldType();
        int int24 = minutes19.get(durationFieldType23);
        int int25 = minutes7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes19);
        int int26 = minutes6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes7);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes30 = minutes28.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = minutes31.get(durationFieldType32);
        org.joda.time.DurationFieldType durationFieldType34 = minutes31.getFieldType();
        int int35 = minutes30.get(durationFieldType34);
        org.joda.time.Minutes minutes37 = minutes30.plus((-1));
        boolean boolean38 = minutes27.isGreaterThan(minutes30);
        org.joda.time.Minutes minutes40 = minutes30.multipliedBy(2);
        org.joda.time.Minutes minutes41 = minutes40.negated();
        int int42 = minutes40.getMinutes();
        boolean boolean43 = minutes6.equals((java.lang.Object) int42);
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes6);
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.minutes((int) (short) -1);
        int int47 = minutes46.size();
        int int48 = minutes46.getMinutes();
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod50 = minutes49.toMutablePeriod();
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes52 = minutes49.plus(minutes51);
        org.joda.time.Minutes minutes53 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod54 = minutes53.toMutablePeriod();
        org.joda.time.Minutes minutes55 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes56 = minutes53.plus(minutes55);
        boolean boolean57 = minutes52.isLessThan(minutes53);
        java.lang.String str58 = minutes52.toString();
        boolean boolean59 = minutes46.equals((java.lang.Object) minutes52);
        org.joda.time.Duration duration60 = minutes46.toStandardDuration();
        boolean boolean61 = minutes6.isGreaterThan(minutes46);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-2) + "'", int24 == (-2));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-2) + "'", int35 == (-2));
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-4) + "'", int42 == (-4));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(mutablePeriod50);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(mutablePeriod54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "PT-2147483645M" + "'", str58, "PT-2147483645M");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        org.joda.time.DurationFieldType durationFieldType9 = minutes7.getFieldType();
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes11 = minutes10.negated();
        org.joda.time.Minutes minutes12 = minutes10.negated();
        int int13 = minutes12.getMinutes();
        org.joda.time.DurationFieldType durationFieldType14 = minutes12.getFieldType();
        boolean boolean15 = minutes7.equals((java.lang.Object) durationFieldType14);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes7);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes18 = minutes7.minus(2147483645);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: -2147483648 + -2147483645");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-2147483647) + "'", int13 == (-2147483647));
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(minutes16);
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        org.joda.time.Minutes minutes14 = minutes7.plus((-1));
        org.joda.time.Minutes minutes16 = minutes7.minus((int) (short) 10);
        org.joda.time.Minutes minutes18 = minutes16.dividedBy((-2147483648));
        org.joda.time.Minutes minutes19 = minutes4.plus(minutes18);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType21 = minutes20.getPeriodType();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes23 = minutes22.negated();
        org.joda.time.Minutes minutes24 = minutes22.negated();
        org.joda.time.DurationFieldType durationFieldType25 = minutes22.getFieldType();
        java.lang.String str26 = minutes22.toString();
        boolean boolean27 = minutes20.isGreaterThan(minutes22);
        boolean boolean28 = minutes4.isLessThan(minutes22);
        int int29 = minutes4.getMinutes();
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.MAX_VALUE;
        int int31 = minutes30.size();
        int int33 = minutes30.getValue(0);
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes30);
        org.joda.time.Minutes minutes36 = minutes34.dividedBy((-1));
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod38 = minutes37.toMutablePeriod();
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes41 = minutes39.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes43 = minutes39.plus(0);
        int int44 = minutes37.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes39);
        org.joda.time.Minutes minutes46 = minutes39.plus((int) ' ');
        java.lang.String str47 = minutes39.toString();
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean50 = minutes39.isLessThan(minutes49);
        boolean boolean51 = minutes34.equals((java.lang.Object) minutes39);
        java.lang.String str52 = minutes39.toString();
        java.lang.Class<?> wildcardClass53 = minutes39.getClass();
        boolean boolean54 = minutes4.equals((java.lang.Object) minutes39);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "PT2147483647M" + "'", str26, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2147483647 + "'", int33 == 2147483647);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "PT2M" + "'", str47, "PT2M");
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "PT2M" + "'", str52, "PT2M");
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes3 = minutes1.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        int int13 = minutes4.get(durationFieldType11);
        org.joda.time.PeriodType periodType14 = minutes4.getPeriodType();
        int int15 = minutes4.getMinutes();
        org.joda.time.Duration duration16 = minutes4.toStandardDuration();
        java.lang.Class<?> wildcardClass17 = duration16.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2147483647 + "'", int13 == 2147483647);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.PeriodType periodType2 = minutes1.getPeriodType();
        org.joda.time.Minutes minutes3 = minutes1.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes7 = minutes5.plus(0);
        org.joda.time.DurationFieldType durationFieldType8 = minutes7.getFieldType();
        int int9 = minutes3.get(durationFieldType8);
        org.joda.time.Minutes minutes11 = minutes3.dividedBy((int) ' ');
        java.lang.String str12 = minutes3.toString();
        org.joda.time.Duration duration13 = minutes3.toStandardDuration();
        int int14 = minutes3.getMinutes();
        org.joda.time.Minutes minutes16 = minutes3.minus(0);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2147483647 + "'", int9 == 2147483647);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PT2147483647M" + "'", str12, "PT2147483647M");
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2147483647 + "'", int14 == 2147483647);
        org.junit.Assert.assertNotNull(minutes16);
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod8 = minutes7.toMutablePeriod();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod8);
        boolean boolean10 = minutes0.isLessThan(minutes9);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = minutes15.get(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = minutes15.getFieldType();
        int int19 = minutes14.get(durationFieldType18);
        org.joda.time.Minutes minutes21 = minutes14.plus((-1));
        boolean boolean22 = minutes11.isGreaterThan(minutes14);
        org.joda.time.Minutes minutes24 = minutes14.multipliedBy(2);
        org.joda.time.Minutes minutes25 = minutes24.negated();
        org.joda.time.Minutes minutes26 = minutes25.negated();
        boolean boolean27 = minutes0.isLessThan(minutes25);
        boolean boolean29 = minutes0.equals((java.lang.Object) ' ');
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.minutes((int) (byte) 100);
        org.joda.time.Period period32 = minutes31.toPeriod();
        org.joda.time.Minutes minutes33 = minutes0.minus(minutes31);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2) + "'", int19 == (-2));
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(minutes33);
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = minutes5.get(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType8 = minutes5.getFieldType();
        int int9 = minutes4.get(durationFieldType8);
        org.joda.time.Minutes minutes11 = minutes4.plus((-1));
        boolean boolean12 = minutes1.isGreaterThan(minutes4);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = minutes16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = minutes16.getFieldType();
        int int20 = minutes15.get(durationFieldType19);
        boolean boolean21 = minutes4.isSupported(durationFieldType19);
        boolean boolean22 = minutes0.isSupported(durationFieldType19);
        org.joda.time.Duration duration23 = minutes0.toStandardDuration();
        // The following exception was thrown during execution in test generation
        try {
            int int25 = minutes0.getValue((-2147483634));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -2147483634");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-2) + "'", int9 == (-2));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-2) + "'", int20 == (-2));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(duration23);
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        int int7 = minutes0.size();
        int int8 = minutes0.size();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes10 = minutes9.negated();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod12 = minutes11.toMutablePeriod();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes14 = minutes11.plus(minutes13);
        int int15 = minutes10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes13);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MAX_VALUE;
        int int17 = minutes10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes16);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes20 = minutes18.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = minutes21.get(durationFieldType22);
        org.joda.time.MutablePeriod mutablePeriod24 = minutes21.toMutablePeriod();
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes21);
        boolean boolean26 = minutes20.isLessThan(minutes25);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes29 = minutes27.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = minutes30.get(durationFieldType31);
        org.joda.time.DurationFieldType durationFieldType33 = minutes30.getFieldType();
        int int34 = minutes29.get(durationFieldType33);
        org.joda.time.Minutes minutes36 = minutes29.plus((-1));
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod38 = minutes37.toMutablePeriod();
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes41 = minutes39.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes43 = minutes39.plus(0);
        int int44 = minutes37.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes39);
        org.joda.time.Minutes minutes46 = minutes39.plus((int) ' ');
        java.lang.String str47 = minutes39.toString();
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean50 = minutes39.isLessThan(minutes49);
        boolean boolean51 = minutes36.isLessThan(minutes39);
        org.joda.time.Minutes minutes52 = minutes20.minus(minutes36);
        org.joda.time.MutablePeriod mutablePeriod53 = minutes20.toMutablePeriod();
        org.joda.time.Minutes minutes55 = minutes20.dividedBy(2);
        org.joda.time.Minutes minutes56 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes58 = minutes56.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes59 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType60 = null;
        int int61 = minutes59.get(durationFieldType60);
        org.joda.time.DurationFieldType durationFieldType62 = minutes59.getFieldType();
        int int63 = minutes58.get(durationFieldType62);
        org.joda.time.Minutes minutes65 = minutes58.plus((-1));
        org.joda.time.Minutes minutes66 = minutes65.negated();
        org.joda.time.Minutes minutes67 = minutes55.plus(minutes66);
        org.joda.time.Minutes minutes69 = minutes55.minus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType70 = minutes69.getFieldType();
        int int71 = minutes16.get(durationFieldType70);
        int int72 = minutes16.getMinutes();
        org.joda.time.Minutes minutes74 = minutes16.multipliedBy((-1));
        boolean boolean75 = minutes0.isLessThan(minutes74);
        org.joda.time.Period period76 = minutes74.toPeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-2) + "'", int34 == (-2));
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "PT2M" + "'", str47, "PT2M");
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(mutablePeriod53);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-2) + "'", int63 == (-2));
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(durationFieldType70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2147483647 + "'", int71 == 2147483647);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2147483647 + "'", int72 == 2147483647);
        org.junit.Assert.assertNotNull(minutes74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(period76);
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((int) (short) 1);
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes4 = minutes2.minus((int) (short) 1);
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy(0);
        org.joda.time.Minutes minutes8 = minutes6.plus((-2147483648));
        boolean boolean9 = minutes1.isLessThan(minutes8);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes11 = minutes8.multipliedBy((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: -2147483648 * 100");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.THREE;
        int int1 = minutes0.size();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod3 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = minutes4.plus(0);
        int int9 = minutes2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes4);
        org.joda.time.Minutes minutes11 = minutes4.plus((int) ' ');
        int int12 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes11);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes16 = minutes14.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = minutes17.get(durationFieldType18);
        org.joda.time.DurationFieldType durationFieldType20 = minutes17.getFieldType();
        int int21 = minutes16.get(durationFieldType20);
        org.joda.time.Minutes minutes23 = minutes16.plus((-1));
        boolean boolean24 = minutes13.isGreaterThan(minutes16);
        org.joda.time.DurationFieldType durationFieldType25 = minutes16.getFieldType();
        int int27 = minutes16.getValue((int) (short) 0);
        org.joda.time.Period period28 = minutes16.toPeriod();
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes30 = minutes29.negated();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod32 = minutes31.toMutablePeriod();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes34 = minutes31.plus(minutes33);
        int int35 = minutes30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes33);
        org.joda.time.Minutes minutes36 = minutes16.minus(minutes30);
        boolean boolean37 = minutes0.isGreaterThan(minutes30);
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod39 = minutes38.toMutablePeriod();
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes41 = minutes38.plus(minutes40);
        org.joda.time.Minutes minutes43 = minutes41.plus((int) 'a');
        org.joda.time.Duration duration44 = minutes41.toStandardDuration();
        int int45 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes41);
        // The following exception was thrown during execution in test generation
        try {
            int int47 = minutes41.getValue((-6));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -6");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-2) + "'", int21 == (-2));
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-2) + "'", int27 == (-2));
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        int int4 = minutes3.size();
        int int5 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes3);
        org.joda.time.Minutes minutes7 = minutes3.dividedBy(2147483646);
        org.joda.time.Duration duration8 = minutes3.toStandardDuration();
        org.joda.time.Period period9 = minutes3.toPeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(period9);
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType2 = minutes1.getPeriodType();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes4 = minutes3.negated();
        org.joda.time.Minutes minutes5 = minutes3.negated();
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        java.lang.String str7 = minutes3.toString();
        boolean boolean8 = minutes1.isGreaterThan(minutes3);
        boolean boolean9 = minutes0.equals((java.lang.Object) minutes1);
        int int10 = minutes0.size();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes13 = minutes11.minus((int) '4');
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.ZERO;
        org.joda.time.Minutes minutes15 = minutes11.plus(minutes14);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes16 = minutes0.plus(minutes11);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 2147483647 + 3");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT2147483647M" + "'", str7, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod5 = minutes4.toMutablePeriod();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes8 = minutes6.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes10 = minutes6.plus(0);
        int int11 = minutes4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes6);
        org.joda.time.Duration duration12 = minutes4.toStandardDuration();
        org.joda.time.Minutes minutes13 = minutes0.plus(minutes4);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod15 = minutes14.toMutablePeriod();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes18 = minutes16.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes20 = minutes16.plus(0);
        int int21 = minutes14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes16);
        org.joda.time.Duration duration22 = minutes16.toStandardDuration();
        int int23 = minutes4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes16);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod25 = minutes24.toMutablePeriod();
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes28 = minutes26.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes30 = minutes26.plus(0);
        int int31 = minutes24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes26);
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes34 = minutes32.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes36 = minutes32.plus(0);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes39 = minutes37.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType41 = null;
        int int42 = minutes40.get(durationFieldType41);
        org.joda.time.DurationFieldType durationFieldType43 = minutes40.getFieldType();
        int int44 = minutes39.get(durationFieldType43);
        org.joda.time.Minutes minutes46 = minutes39.plus((-1));
        org.joda.time.Minutes minutes48 = minutes39.minus((int) (short) 10);
        org.joda.time.Minutes minutes50 = minutes48.dividedBy((-2147483648));
        org.joda.time.Minutes minutes51 = minutes36.plus(minutes50);
        org.joda.time.Minutes minutes52 = minutes26.minus(minutes36);
        org.joda.time.Minutes minutes53 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod54 = minutes53.toMutablePeriod();
        org.joda.time.Minutes minutes55 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes56 = minutes53.plus(minutes55);
        org.joda.time.Minutes minutes57 = minutes52.plus(minutes55);
        org.joda.time.Minutes minutes58 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes60 = minutes58.multipliedBy((int) (short) -1);
        org.joda.time.MutablePeriod mutablePeriod61 = minutes58.toMutablePeriod();
        org.joda.time.Minutes minutes62 = minutes55.minus(minutes58);
        boolean boolean63 = minutes4.equals((java.lang.Object) minutes55);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-2) + "'", int44 == (-2));
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(mutablePeriod54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(mutablePeriod61);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        int int1 = minutes0.getMinutes();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes3 = minutes2.negated();
        org.joda.time.Minutes minutes4 = minutes2.negated();
        org.joda.time.DurationFieldType durationFieldType5 = minutes2.getFieldType();
        int int6 = minutes0.get(durationFieldType5);
        int int7 = minutes0.getMinutes();
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration9 = minutes8.toStandardDuration();
        org.joda.time.Duration duration10 = minutes8.toStandardDuration();
        org.joda.time.Minutes minutes12 = minutes8.minus(2);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = minutes16.get(durationFieldType17);
        org.joda.time.MutablePeriod mutablePeriod19 = minutes16.toMutablePeriod();
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes16);
        boolean boolean21 = minutes15.isLessThan(minutes20);
        int int22 = minutes15.getMinutes();
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean25 = minutes15.isLessThan(minutes24);
        org.joda.time.Minutes minutes26 = minutes12.minus(minutes24);
        int int28 = minutes12.getValue(0);
        org.joda.time.Minutes minutes29 = minutes0.minus(minutes12);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes33 = minutes31.plus(0);
        org.joda.time.DurationFieldType durationFieldType34 = minutes33.getFieldType();
        boolean boolean35 = minutes29.equals((java.lang.Object) minutes33);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-2147483648) + "'", int1 == (-2147483648));
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-2147483648) + "'", int6 == (-2147483648));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2147483648) + "'", int7 == (-2147483648));
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-2) + "'", int22 == (-2));
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.dividedBy(2);
        int int3 = minutes0.size();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod5 = minutes4.toMutablePeriod();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes8 = minutes6.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes10 = minutes6.plus(0);
        int int11 = minutes4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes6);
        org.joda.time.Minutes minutes13 = minutes6.plus((int) ' ');
        int int14 = minutes13.size();
        org.joda.time.Minutes minutes16 = minutes13.minus(0);
        org.joda.time.Minutes minutes17 = minutes0.plus(minutes13);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes19 = minutes18.negated();
        org.joda.time.Minutes minutes21 = minutes19.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes24 = minutes22.dividedBy((int) 'a');
        org.joda.time.Minutes minutes26 = minutes22.plus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType27 = minutes26.getFieldType();
        boolean boolean28 = minutes19.isSupported(durationFieldType27);
        org.joda.time.DurationFieldType durationFieldType29 = minutes19.getFieldType();
        boolean boolean30 = minutes13.equals((java.lang.Object) minutes19);
        org.joda.time.DurationFieldType durationFieldType31 = minutes19.getFieldType();
        org.joda.time.MutablePeriod mutablePeriod32 = minutes19.toMutablePeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes8 = minutes2.negated();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType11 = minutes10.getPeriodType();
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes13 = minutes12.negated();
        org.joda.time.Minutes minutes14 = minutes12.negated();
        org.joda.time.DurationFieldType durationFieldType15 = minutes12.getFieldType();
        java.lang.String str16 = minutes12.toString();
        boolean boolean17 = minutes10.isGreaterThan(minutes12);
        boolean boolean18 = minutes9.equals((java.lang.Object) minutes10);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes9);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = minutes24.get(durationFieldType25);
        org.joda.time.DurationFieldType durationFieldType27 = minutes24.getFieldType();
        int int28 = minutes23.get(durationFieldType27);
        org.joda.time.Minutes minutes30 = minutes23.plus((-1));
        boolean boolean31 = minutes20.isGreaterThan(minutes23);
        org.joda.time.DurationFieldType durationFieldType32 = minutes23.getFieldType();
        boolean boolean33 = minutes19.isSupported(durationFieldType32);
        java.lang.String str34 = minutes19.toString();
        boolean boolean35 = minutes8.isLessThan(minutes19);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType37 = minutes19.getFieldType((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 32");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483647M" + "'", str16, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-2) + "'", int28 == (-2));
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "PT2147483647M" + "'", str34, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT-2M");
        int int2 = minutes1.size();
        java.lang.String str3 = minutes1.toString();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT-2M" + "'", str3, "PT-2M");
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        org.joda.time.Minutes minutes10 = minutes9.negated();
        org.joda.time.Minutes minutes11 = minutes10.negated();
        org.joda.time.Period period12 = minutes11.toPeriod();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.MutablePeriod mutablePeriod16 = minutes13.toMutablePeriod();
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod18 = minutes17.toMutablePeriod();
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes21 = minutes19.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes23 = minutes19.plus(0);
        int int24 = minutes17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes19);
        org.joda.time.Duration duration25 = minutes17.toStandardDuration();
        org.joda.time.Minutes minutes26 = minutes13.plus(minutes17);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod28 = minutes27.toMutablePeriod();
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes31 = minutes29.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes33 = minutes29.plus(0);
        int int34 = minutes27.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes29);
        org.joda.time.Duration duration35 = minutes29.toStandardDuration();
        int int36 = minutes17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes29);
        boolean boolean37 = minutes11.isLessThan(minutes29);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((-214748364));
        org.junit.Assert.assertNotNull(minutes1);
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        java.lang.String str10 = minutes2.toString();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod12 = minutes11.toMutablePeriod();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes17 = minutes13.plus(0);
        int int18 = minutes11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes13);
        org.joda.time.Minutes minutes20 = minutes13.plus((int) ' ');
        java.lang.String str21 = minutes13.toString();
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean24 = minutes13.isLessThan(minutes23);
        org.joda.time.Minutes minutes25 = minutes2.minus(minutes13);
        int int26 = minutes25.size();
        org.joda.time.Minutes minutes28 = minutes25.multipliedBy(0);
        org.joda.time.Minutes minutes30 = minutes25.minus((int) (short) 10);
        org.joda.time.Duration duration31 = minutes25.toStandardDuration();
        org.joda.time.Minutes minutes33 = minutes25.plus(0);
        org.joda.time.PeriodType periodType34 = minutes33.getPeriodType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT2M" + "'", str10, "PT2M");
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT2M" + "'", str21, "PT2M");
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(periodType34);
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.dividedBy(2);
        int int3 = minutes0.size();
        org.joda.time.Minutes minutes5 = minutes0.minus((-12));
        org.joda.time.Minutes minutes7 = minutes5.dividedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType8 = minutes5.getFieldType();
        org.joda.time.Minutes minutes9 = minutes5.negated();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(minutes9);
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        int int9 = minutes2.getMinutes();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean12 = minutes2.isLessThan(minutes11);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration14 = minutes13.toStandardDuration();
        org.joda.time.Duration duration15 = minutes13.toStandardDuration();
        org.joda.time.Minutes minutes17 = minutes13.minus(2);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes20 = minutes18.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes21 = minutes18.negated();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes23 = minutes22.negated();
        org.joda.time.Minutes minutes24 = minutes22.negated();
        boolean boolean25 = minutes18.equals((java.lang.Object) minutes24);
        boolean boolean26 = minutes17.isLessThan(minutes18);
        org.joda.time.Minutes minutes27 = minutes11.minus(minutes18);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes29 = minutes28.negated();
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes28);
        java.lang.String str31 = minutes28.toString();
        org.joda.time.Minutes minutes32 = minutes27.plus(minutes28);
        org.joda.time.Minutes minutes33 = minutes27.negated();
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = minutes34.get(durationFieldType35);
        org.joda.time.MutablePeriod mutablePeriod37 = minutes34.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType38 = minutes34.getFieldType();
        org.joda.time.Minutes minutes40 = minutes34.dividedBy((-1));
        org.joda.time.Minutes minutes42 = minutes34.dividedBy(2147483646);
        org.joda.time.DurationFieldType durationFieldType43 = minutes34.getFieldType();
        boolean boolean44 = minutes27.isSupported(durationFieldType43);
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.minutes(100);
        org.joda.time.PeriodType periodType47 = minutes46.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType48 = minutes46.getFieldType();
        boolean boolean49 = minutes27.isSupported(durationFieldType48);
        java.lang.String str50 = minutes27.toString();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-2) + "'", int9 == (-2));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "PT2147483647M" + "'", str31, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "PT-2147483647M" + "'", str50, "PT-2147483647M");
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.Duration duration2 = minutes0.toStandardDuration();
        org.joda.time.Minutes minutes4 = minutes0.minus(2);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.MutablePeriod mutablePeriod11 = minutes8.toMutablePeriod();
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes8);
        boolean boolean13 = minutes7.isLessThan(minutes12);
        int int14 = minutes7.getMinutes();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean17 = minutes7.isLessThan(minutes16);
        org.joda.time.Minutes minutes18 = minutes4.minus(minutes16);
        int int19 = minutes16.getMinutes();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes21 = minutes16.plus((-214748364));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: -2147483645 + -214748364");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-2) + "'", int14 == (-2));
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2147483645) + "'", int19 == (-2147483645));
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        int int1 = minutes0.getMinutes();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = minutes5.get(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType8 = minutes5.getFieldType();
        int int9 = minutes4.get(durationFieldType8);
        org.joda.time.Minutes minutes11 = minutes4.plus((-1));
        org.joda.time.Minutes minutes13 = minutes4.minus((int) (short) 10);
        org.joda.time.Minutes minutes15 = minutes13.dividedBy((-2147483648));
        org.joda.time.Minutes minutes16 = minutes15.negated();
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes18 = minutes17.negated();
        org.joda.time.Minutes minutes19 = minutes17.negated();
        org.joda.time.Minutes minutes20 = minutes15.minus(minutes19);
        org.joda.time.Minutes minutes22 = minutes19.plus((int) 'a');
        boolean boolean23 = minutes0.isLessThan(minutes22);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes26 = minutes24.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = minutes27.get(durationFieldType28);
        org.joda.time.MutablePeriod mutablePeriod30 = minutes27.toMutablePeriod();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes27);
        boolean boolean32 = minutes26.isLessThan(minutes31);
        int int33 = minutes26.getMinutes();
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean36 = minutes26.isLessThan(minutes35);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration38 = minutes37.toStandardDuration();
        org.joda.time.Duration duration39 = minutes37.toStandardDuration();
        org.joda.time.Minutes minutes41 = minutes37.minus(2);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes44 = minutes42.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes45 = minutes42.negated();
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes47 = minutes46.negated();
        org.joda.time.Minutes minutes48 = minutes46.negated();
        boolean boolean49 = minutes42.equals((java.lang.Object) minutes48);
        boolean boolean50 = minutes41.isLessThan(minutes42);
        org.joda.time.Minutes minutes51 = minutes35.minus(minutes42);
        org.joda.time.Minutes minutes52 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes53 = minutes52.negated();
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes52);
        java.lang.String str55 = minutes52.toString();
        org.joda.time.Minutes minutes56 = minutes51.plus(minutes52);
        org.joda.time.Minutes minutes58 = org.joda.time.Minutes.minutes((int) (short) -1);
        int int59 = minutes58.size();
        boolean boolean60 = minutes56.isGreaterThan(minutes58);
        int int61 = minutes22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes58);
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes63 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType64 = minutes63.getPeriodType();
        org.joda.time.Minutes minutes65 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes66 = minutes65.negated();
        org.joda.time.Minutes minutes67 = minutes65.negated();
        org.joda.time.DurationFieldType durationFieldType68 = minutes65.getFieldType();
        java.lang.String str69 = minutes65.toString();
        boolean boolean70 = minutes63.isGreaterThan(minutes65);
        boolean boolean71 = minutes62.equals((java.lang.Object) minutes63);
        org.joda.time.Minutes minutes72 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes62);
        org.joda.time.Minutes minutes73 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes74 = minutes73.negated();
        org.joda.time.Minutes minutes75 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes73);
        org.joda.time.Minutes minutes76 = minutes72.minus(minutes75);
        org.joda.time.Minutes minutes78 = minutes72.minus(34);
        org.joda.time.Duration duration79 = minutes78.toStandardDuration();
        org.joda.time.Minutes minutes80 = minutes58.minus(minutes78);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes82 = minutes80.plus((-2147483647));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: -2147483614 + -2147483647");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-2147483648) + "'", int1 == (-2147483648));
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-2) + "'", int9 == (-2));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-2) + "'", int33 == (-2));
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "PT2147483647M" + "'", str55, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(durationFieldType68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "PT2147483647M" + "'", str69, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertNotNull(minutes73);
        org.junit.Assert.assertNotNull(minutes74);
        org.junit.Assert.assertNotNull(minutes75);
        org.junit.Assert.assertNotNull(minutes76);
        org.junit.Assert.assertNotNull(minutes78);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertNotNull(minutes80);
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        int int1 = minutes0.size();
        org.joda.time.Period period2 = minutes0.toPeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(period2);
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.THREE;
        int int1 = minutes0.size();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod3 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = minutes4.plus(0);
        int int9 = minutes2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes4);
        org.joda.time.Minutes minutes11 = minutes4.plus((int) ' ');
        int int12 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes11);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes16 = minutes14.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = minutes17.get(durationFieldType18);
        org.joda.time.DurationFieldType durationFieldType20 = minutes17.getFieldType();
        int int21 = minutes16.get(durationFieldType20);
        org.joda.time.Minutes minutes23 = minutes16.plus((-1));
        boolean boolean24 = minutes13.isGreaterThan(minutes16);
        org.joda.time.DurationFieldType durationFieldType25 = minutes16.getFieldType();
        int int27 = minutes16.getValue((int) (short) 0);
        org.joda.time.Period period28 = minutes16.toPeriod();
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes30 = minutes29.negated();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod32 = minutes31.toMutablePeriod();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes34 = minutes31.plus(minutes33);
        int int35 = minutes30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes33);
        org.joda.time.Minutes minutes36 = minutes16.minus(minutes30);
        boolean boolean37 = minutes0.isGreaterThan(minutes30);
        org.joda.time.Minutes minutes39 = minutes30.plus(2147483647);
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes42 = minutes40.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType43 = minutes42.getFieldType();
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes45 = minutes44.negated();
        org.joda.time.Minutes minutes46 = minutes44.negated();
        java.lang.String str47 = minutes44.toString();
        int int48 = minutes44.size();
        org.joda.time.Minutes minutes50 = minutes44.minus(0);
        org.joda.time.Duration duration51 = minutes50.toStandardDuration();
        boolean boolean52 = minutes42.isGreaterThan(minutes50);
        int int53 = minutes50.getMinutes();
        boolean boolean54 = minutes30.isGreaterThan(minutes50);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds55 = minutes30.toStandardSeconds();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: -2147483647 * 60");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-2) + "'", int21 == (-2));
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-2) + "'", int27 == (-2));
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "PT2147483647M" + "'", str47, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2147483647 + "'", int53 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        int int9 = minutes2.getMinutes();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean12 = minutes2.isLessThan(minutes11);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes2);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.THREE;
        int int15 = minutes14.size();
        org.joda.time.Minutes minutes16 = minutes2.plus(minutes14);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes18 = minutes17.negated();
        org.joda.time.PeriodType periodType19 = minutes18.getPeriodType();
        org.joda.time.Minutes minutes20 = minutes18.negated();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes24 = minutes22.plus(0);
        org.joda.time.DurationFieldType durationFieldType25 = minutes24.getFieldType();
        int int26 = minutes20.get(durationFieldType25);
        org.joda.time.Minutes minutes28 = minutes20.dividedBy((int) ' ');
        java.lang.String str29 = minutes20.toString();
        int int30 = minutes14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes20);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-2) + "'", int9 == (-2));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2147483647 + "'", int26 == 2147483647);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2147483647M" + "'", str29, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        int int4 = minutes2.getMinutes();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod6 = minutes5.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes9 = minutes7.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes11 = minutes7.plus(0);
        int int12 = minutes5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes7);
        org.joda.time.Minutes minutes14 = minutes7.plus((int) ' ');
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = minutes15.getFieldType();
        int int17 = minutes7.get(durationFieldType16);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes20 = minutes18.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes21 = minutes18.negated();
        org.joda.time.Minutes minutes22 = minutes7.plus(minutes18);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes25 = minutes23.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = minutes26.get(durationFieldType27);
        org.joda.time.MutablePeriod mutablePeriod29 = minutes26.toMutablePeriod();
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes26);
        boolean boolean31 = minutes25.isLessThan(minutes30);
        int int32 = minutes25.getMinutes();
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean35 = minutes25.isLessThan(minutes34);
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration37 = minutes36.toStandardDuration();
        org.joda.time.Duration duration38 = minutes36.toStandardDuration();
        org.joda.time.Minutes minutes40 = minutes36.minus(2);
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes43 = minutes41.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes44 = minutes41.negated();
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes46 = minutes45.negated();
        org.joda.time.Minutes minutes47 = minutes45.negated();
        boolean boolean48 = minutes41.equals((java.lang.Object) minutes47);
        boolean boolean49 = minutes40.isLessThan(minutes41);
        org.joda.time.Minutes minutes50 = minutes34.minus(minutes41);
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes52 = minutes51.negated();
        org.joda.time.Minutes minutes53 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes51);
        java.lang.String str54 = minutes51.toString();
        org.joda.time.Minutes minutes55 = minutes50.plus(minutes51);
        boolean boolean56 = minutes22.isGreaterThan(minutes55);
        int int57 = minutes55.size();
        org.joda.time.Minutes minutes58 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes60 = minutes58.minus((int) (short) 0);
        org.joda.time.Minutes minutes61 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes64 = minutes62.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes65 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType66 = null;
        int int67 = minutes65.get(durationFieldType66);
        org.joda.time.DurationFieldType durationFieldType68 = minutes65.getFieldType();
        int int69 = minutes64.get(durationFieldType68);
        org.joda.time.Minutes minutes71 = minutes64.plus((-1));
        boolean boolean72 = minutes61.isGreaterThan(minutes64);
        org.joda.time.DurationFieldType durationFieldType73 = minutes64.getFieldType();
        org.joda.time.PeriodType periodType74 = minutes64.getPeriodType();
        boolean boolean75 = minutes58.isLessThan(minutes64);
        org.joda.time.Minutes minutes76 = minutes64.negated();
        org.joda.time.MutablePeriod mutablePeriod77 = minutes64.toMutablePeriod();
        boolean boolean78 = minutes55.isGreaterThan(minutes64);
        int int79 = minutes2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes55);
        org.joda.time.MutablePeriod mutablePeriod80 = minutes2.toMutablePeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-2) + "'", int32 == (-2));
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "PT2147483647M" + "'", str54, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(durationFieldType68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-2) + "'", int69 == (-2));
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(durationFieldType73);
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(minutes76);
        org.junit.Assert.assertNotNull(mutablePeriod77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod80);
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.minus((int) (short) 0);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes4 = minutes3.negated();
        org.joda.time.Minutes minutes5 = minutes3.negated();
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        boolean boolean7 = minutes0.isSupported(durationFieldType6);
        java.lang.String str8 = minutes0.toString();
        int int9 = minutes0.getMinutes();
        org.joda.time.Minutes minutes11 = minutes0.dividedBy(36);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod13 = minutes12.toMutablePeriod();
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes15 = minutes12.plus(minutes14);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod17 = minutes16.toMutablePeriod();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes19 = minutes16.plus(minutes18);
        boolean boolean20 = minutes15.isLessThan(minutes16);
        org.joda.time.Minutes minutes22 = minutes15.plus((-1));
        org.joda.time.Minutes minutes24 = minutes22.plus(0);
        org.joda.time.Duration duration25 = minutes22.toStandardDuration();
        int int26 = minutes11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes22);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "PT-2147483648M" + "'", str8, "PT-2147483648M");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-2147483648) + "'", int9 == (-2147483648));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        int int1 = minutes0.size();
        org.joda.time.Duration duration2 = minutes0.toStandardDuration();
        int int3 = minutes0.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2147483647 + "'", int3 == 2147483647);
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes9 = minutes2.plus((-1));
        java.lang.String str10 = minutes9.toString();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes13 = minutes11.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = minutes11.plus(0);
        int int16 = minutes9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes15);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod18 = minutes17.toMutablePeriod();
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes20 = minutes17.plus(minutes19);
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod22 = minutes21.toMutablePeriod();
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes24 = minutes21.plus(minutes23);
        boolean boolean25 = minutes20.isLessThan(minutes21);
        org.joda.time.Minutes minutes27 = minutes20.plus((-1));
        org.joda.time.Minutes minutes29 = minutes27.plus(0);
        org.joda.time.Duration duration30 = minutes27.toStandardDuration();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes32 = minutes31.negated();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes31);
        java.lang.String str34 = minutes31.toString();
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType36 = minutes35.getFieldType();
        boolean boolean37 = minutes31.isSupported(durationFieldType36);
        org.joda.time.DurationFieldType durationFieldType38 = minutes31.getFieldType();
        boolean boolean39 = minutes27.isSupported(durationFieldType38);
        int int40 = minutes15.get(durationFieldType38);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT-3M" + "'", str10, "PT-3M");
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "PT2147483647M" + "'", str34, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2 + "'", int40 == 2);
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes9 = minutes2.plus((-1));
        org.joda.time.Minutes minutes11 = minutes2.minus((int) (short) 10);
        org.joda.time.Duration duration12 = minutes2.toStandardDuration();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes2);
        java.lang.String str14 = minutes13.toString();
        org.joda.time.Minutes minutes16 = minutes13.minus((-22139006));
        org.joda.time.Minutes minutes17 = null;
        org.joda.time.Minutes minutes18 = minutes13.plus(minutes17);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "PT-2M" + "'", str14, "PT-2M");
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.minus((int) (short) 0);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = minutes7.get(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType10 = minutes7.getFieldType();
        int int11 = minutes6.get(durationFieldType10);
        org.joda.time.Minutes minutes13 = minutes6.plus((-1));
        boolean boolean14 = minutes3.isGreaterThan(minutes6);
        org.joda.time.DurationFieldType durationFieldType15 = minutes6.getFieldType();
        org.joda.time.PeriodType periodType16 = minutes6.getPeriodType();
        boolean boolean17 = minutes0.isLessThan(minutes6);
        org.joda.time.Minutes minutes18 = minutes6.negated();
        org.joda.time.Minutes minutes20 = minutes18.plus(0);
        org.joda.time.Minutes minutes21 = minutes20.negated();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-2) + "'", int11 == (-2));
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        int int1 = minutes0.size();
        int int3 = minutes0.getValue(0);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes6 = minutes4.dividedBy((-1));
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod8 = minutes7.toMutablePeriod();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes13 = minutes9.plus(0);
        int int14 = minutes7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes9);
        org.joda.time.Minutes minutes16 = minutes9.plus((int) ' ');
        java.lang.String str17 = minutes9.toString();
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean20 = minutes9.isLessThan(minutes19);
        boolean boolean21 = minutes4.equals((java.lang.Object) minutes9);
        java.lang.String str22 = minutes9.toString();
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.MIN_VALUE;
        int int24 = minutes23.getMinutes();
        org.joda.time.PeriodType periodType25 = minutes23.getPeriodType();
        org.joda.time.Minutes minutes27 = minutes23.multipliedBy(1);
        org.joda.time.DurationFieldType durationFieldType28 = minutes27.getFieldType();
        boolean boolean29 = minutes9.isGreaterThan(minutes27);
        org.joda.time.DurationFieldType durationFieldType30 = minutes9.getFieldType();
        org.joda.time.PeriodType periodType31 = minutes9.getPeriodType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2147483647 + "'", int3 == 2147483647);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "PT2M" + "'", str17, "PT2M");
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PT2M" + "'", str22, "PT2M");
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-2147483648) + "'", int24 == (-2147483648));
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertNotNull(periodType31);
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = minutes0.getFieldType();
        org.joda.time.MutablePeriod mutablePeriod2 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType5 = minutes4.getPeriodType();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes7 = minutes6.negated();
        org.joda.time.Minutes minutes8 = minutes6.negated();
        org.joda.time.DurationFieldType durationFieldType9 = minutes6.getFieldType();
        java.lang.String str10 = minutes6.toString();
        boolean boolean11 = minutes4.isGreaterThan(minutes6);
        boolean boolean12 = minutes3.equals((java.lang.Object) minutes4);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes15 = minutes14.negated();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes14);
        org.joda.time.Minutes minutes17 = minutes13.minus(minutes16);
        org.joda.time.DurationFieldType durationFieldType18 = minutes16.getFieldType();
        boolean boolean19 = minutes0.equals((java.lang.Object) minutes16);
        org.joda.time.DurationFieldType durationFieldType20 = null;
        boolean boolean21 = minutes0.isSupported(durationFieldType20);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT2147483647M" + "'", str10, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        int int1 = minutes0.getMinutes();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes3 = minutes2.negated();
        org.joda.time.Minutes minutes4 = minutes2.negated();
        org.joda.time.DurationFieldType durationFieldType5 = minutes2.getFieldType();
        int int6 = minutes0.get(durationFieldType5);
        org.joda.time.Minutes minutes8 = minutes0.dividedBy(34);
        org.joda.time.Minutes minutes9 = minutes8.negated();
        org.joda.time.Period period10 = minutes9.toPeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-2147483648) + "'", int1 == (-2147483648));
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-2147483648) + "'", int6 == (-2147483648));
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(period10);
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        java.lang.String str10 = minutes2.toString();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod12 = minutes11.toMutablePeriod();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes17 = minutes13.plus(0);
        int int18 = minutes11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes13);
        org.joda.time.Minutes minutes20 = minutes13.plus((int) ' ');
        java.lang.String str21 = minutes13.toString();
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean24 = minutes13.isLessThan(minutes23);
        org.joda.time.Minutes minutes25 = minutes2.minus(minutes13);
        int int26 = minutes25.size();
        org.joda.time.Minutes minutes28 = minutes25.multipliedBy(0);
        org.joda.time.Minutes minutes30 = minutes25.minus((int) (short) 10);
        org.joda.time.Duration duration31 = minutes25.toStandardDuration();
        org.joda.time.Minutes minutes33 = minutes25.plus(0);
        org.joda.time.Minutes minutes35 = minutes25.minus((int) (byte) 0);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes39 = minutes37.plus(0);
        org.joda.time.DurationFieldType durationFieldType40 = minutes37.getFieldType();
        boolean boolean41 = minutes25.isSupported(durationFieldType40);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT2M" + "'", str10, "PT2M");
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT2M" + "'", str21, "PT2M");
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes3 = minutes1.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.MutablePeriod mutablePeriod11 = minutes8.toMutablePeriod();
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes8);
        boolean boolean13 = minutes7.isLessThan(minutes12);
        org.joda.time.DurationFieldType durationFieldType14 = minutes12.getFieldType();
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes16 = minutes15.negated();
        org.joda.time.Minutes minutes17 = minutes15.negated();
        int int18 = minutes17.getMinutes();
        org.joda.time.DurationFieldType durationFieldType19 = minutes17.getFieldType();
        boolean boolean20 = minutes12.equals((java.lang.Object) durationFieldType19);
        boolean boolean21 = minutes4.isSupported(durationFieldType19);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds22 = minutes4.toStandardSeconds();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 2147483647 * 60");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-2147483647) + "'", int18 == (-2147483647));
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        int int1 = minutes0.getMinutes();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes3 = minutes2.negated();
        org.joda.time.Minutes minutes4 = minutes2.negated();
        org.joda.time.DurationFieldType durationFieldType5 = minutes2.getFieldType();
        int int6 = minutes0.get(durationFieldType5);
        org.joda.time.Minutes minutes8 = minutes0.dividedBy(34);
        org.joda.time.Minutes minutes10 = minutes8.minus((-2147483647));
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod12 = minutes11.toMutablePeriod();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes14 = minutes11.plus(minutes13);
        org.joda.time.Minutes minutes16 = minutes14.plus((int) 'a');
        org.joda.time.Minutes minutes18 = minutes16.dividedBy((-2147483645));
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes21 = minutes19.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType23 = null;
        int int24 = minutes22.get(durationFieldType23);
        org.joda.time.DurationFieldType durationFieldType25 = minutes22.getFieldType();
        int int26 = minutes21.get(durationFieldType25);
        org.joda.time.Minutes minutes28 = minutes21.plus((-1));
        org.joda.time.Minutes minutes30 = minutes21.minus((int) (short) 10);
        org.joda.time.Duration duration31 = minutes21.toStandardDuration();
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes21);
        java.lang.String str33 = minutes32.toString();
        org.joda.time.Minutes minutes35 = minutes32.minus((-22139006));
        org.joda.time.Minutes minutes37 = minutes35.dividedBy((-24));
        boolean boolean38 = minutes18.isLessThan(minutes35);
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod40 = minutes39.toMutablePeriod();
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes42 = minutes39.plus(minutes41);
        org.joda.time.Minutes minutes43 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod44 = minutes43.toMutablePeriod();
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes46 = minutes43.plus(minutes45);
        boolean boolean47 = minutes42.isLessThan(minutes43);
        org.joda.time.PeriodType periodType48 = minutes42.getPeriodType();
        org.joda.time.Minutes minutes50 = minutes42.dividedBy(3);
        org.joda.time.Minutes minutes52 = minutes50.dividedBy(10);
        org.joda.time.Minutes minutes54 = minutes52.minus((-22139006));
        org.joda.time.Minutes minutes56 = minutes54.plus((-22139006));
        org.joda.time.Minutes minutes57 = minutes35.plus(minutes56);
        org.joda.time.Minutes minutes58 = minutes8.minus(minutes56);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-2147483648) + "'", int1 == (-2147483648));
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-2147483648) + "'", int6 == (-2147483648));
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-2) + "'", int26 == (-2));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "PT-2M" + "'", str33, "PT-2M");
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(mutablePeriod44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes58);
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        org.joda.time.Minutes minutes11 = minutes2.multipliedBy((int) 'a');
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes2);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.parseMinutes("PT-2147483548M");
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration16 = minutes15.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod17 = minutes15.toMutablePeriod();
        java.lang.String str18 = minutes15.toString();
        int int19 = minutes15.size();
        org.joda.time.Minutes minutes20 = minutes15.negated();
        org.joda.time.Minutes minutes21 = minutes14.plus(minutes15);
        int int22 = minutes2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes15);
        org.joda.time.Minutes minutes24 = minutes2.plus((-2147483645));
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes24);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "PT2M" + "'", str18, "PT2M");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        int int1 = minutes0.getMinutes();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes9 = minutes7.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = minutes10.get(durationFieldType11);
        org.joda.time.DurationFieldType durationFieldType13 = minutes10.getFieldType();
        int int14 = minutes9.get(durationFieldType13);
        org.joda.time.Minutes minutes16 = minutes9.plus((-1));
        org.joda.time.Minutes minutes18 = minutes9.minus((int) (short) 10);
        org.joda.time.Minutes minutes20 = minutes18.dividedBy((-2147483648));
        org.joda.time.Minutes minutes21 = minutes6.plus(minutes20);
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes24 = minutes22.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = minutes25.get(durationFieldType26);
        org.joda.time.MutablePeriod mutablePeriod28 = minutes25.toMutablePeriod();
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes25);
        boolean boolean30 = minutes24.isLessThan(minutes29);
        org.joda.time.DurationFieldType durationFieldType31 = minutes29.getFieldType();
        boolean boolean32 = minutes21.isSupported(durationFieldType31);
        boolean boolean33 = minutes0.isLessThan(minutes21);
        org.joda.time.Minutes minutes35 = minutes21.plus((int) ' ');
        int int36 = minutes35.size();
        org.joda.time.Minutes minutes37 = minutes35.negated();
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.minutes(1);
        org.joda.time.PeriodType periodType40 = minutes39.getPeriodType();
        org.joda.time.Period period41 = minutes39.toPeriod();
        java.lang.String str42 = minutes39.toString();
        org.joda.time.Minutes minutes43 = minutes35.plus(minutes39);
        org.joda.time.Minutes minutes45 = minutes43.minus(34);
        int int46 = minutes45.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-2147483648) + "'", int1 == (-2147483648));
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-2) + "'", int14 == (-2));
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT1M" + "'", str42, "PT1M");
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes5 = minutes3.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = minutes6.get(durationFieldType7);
        org.joda.time.DurationFieldType durationFieldType9 = minutes6.getFieldType();
        int int10 = minutes5.get(durationFieldType9);
        org.joda.time.Minutes minutes12 = minutes5.plus((-1));
        boolean boolean13 = minutes2.isGreaterThan(minutes5);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes16 = minutes14.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = minutes17.get(durationFieldType18);
        org.joda.time.DurationFieldType durationFieldType20 = minutes17.getFieldType();
        int int21 = minutes16.get(durationFieldType20);
        boolean boolean22 = minutes5.isSupported(durationFieldType20);
        org.joda.time.Minutes minutes24 = minutes5.dividedBy((-2));
        int int25 = minutes5.size();
        boolean boolean26 = minutes0.isLessThan(minutes5);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-2) + "'", int10 == (-2));
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-2) + "'", int21 == (-2));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((int) ' ');
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes3 = minutes2.negated();
        org.joda.time.PeriodType periodType4 = minutes3.getPeriodType();
        org.joda.time.Minutes minutes5 = minutes3.negated();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes9 = minutes7.plus(0);
        org.joda.time.DurationFieldType durationFieldType10 = minutes9.getFieldType();
        int int11 = minutes5.get(durationFieldType10);
        boolean boolean12 = minutes1.isSupported(durationFieldType10);
        int int13 = minutes1.getMinutes();
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod15 = minutes14.toMutablePeriod();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes18 = minutes16.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes20 = minutes16.plus(0);
        int int21 = minutes14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes16);
        org.joda.time.Minutes minutes23 = minutes16.plus((int) ' ');
        java.lang.String str24 = minutes16.toString();
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = minutes25.get(durationFieldType26);
        org.joda.time.MutablePeriod mutablePeriod28 = minutes25.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType29 = minutes25.getFieldType();
        org.joda.time.Minutes minutes31 = minutes25.dividedBy((-1));
        org.joda.time.Minutes minutes33 = minutes25.dividedBy(2147483646);
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.minutes((int) (byte) 10);
        boolean boolean36 = minutes25.isLessThan(minutes35);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes39 = minutes37.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType41 = null;
        int int42 = minutes40.get(durationFieldType41);
        org.joda.time.MutablePeriod mutablePeriod43 = minutes40.toMutablePeriod();
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes40);
        boolean boolean45 = minutes39.isLessThan(minutes44);
        org.joda.time.Minutes minutes46 = minutes35.plus(minutes39);
        boolean boolean47 = minutes16.isGreaterThan(minutes35);
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.minutes((int) (byte) -1);
        org.joda.time.Minutes minutes50 = minutes35.minus(minutes49);
        boolean boolean51 = minutes1.isGreaterThan(minutes49);
        org.joda.time.Minutes minutes52 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes53 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes55 = minutes53.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes56 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType57 = null;
        int int58 = minutes56.get(durationFieldType57);
        org.joda.time.DurationFieldType durationFieldType59 = minutes56.getFieldType();
        int int60 = minutes55.get(durationFieldType59);
        org.joda.time.Minutes minutes62 = minutes55.plus((-1));
        boolean boolean63 = minutes52.isGreaterThan(minutes55);
        org.joda.time.DurationFieldType durationFieldType64 = minutes55.getFieldType();
        org.joda.time.Minutes minutes65 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes66 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType67 = minutes66.getPeriodType();
        org.joda.time.Minutes minutes68 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes69 = minutes68.negated();
        org.joda.time.Minutes minutes70 = minutes68.negated();
        org.joda.time.DurationFieldType durationFieldType71 = minutes68.getFieldType();
        java.lang.String str72 = minutes68.toString();
        boolean boolean73 = minutes66.isGreaterThan(minutes68);
        boolean boolean74 = minutes65.equals((java.lang.Object) minutes66);
        org.joda.time.Minutes minutes75 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes65);
        int int76 = minutes55.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes65);
        org.joda.time.Minutes minutes77 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes79 = minutes77.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType80 = minutes79.getFieldType();
        org.joda.time.Minutes minutes81 = minutes79.negated();
        org.joda.time.Minutes minutes83 = minutes79.dividedBy((int) '4');
        org.joda.time.Minutes minutes84 = minutes65.plus(minutes79);
        org.joda.time.Minutes minutes85 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes86 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes88 = minutes86.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes89 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType90 = null;
        int int91 = minutes89.get(durationFieldType90);
        org.joda.time.DurationFieldType durationFieldType92 = minutes89.getFieldType();
        int int93 = minutes88.get(durationFieldType92);
        org.joda.time.Minutes minutes95 = minutes88.plus((-1));
        boolean boolean96 = minutes85.isGreaterThan(minutes88);
        org.joda.time.DurationFieldType durationFieldType97 = minutes85.getFieldType();
        int int98 = minutes79.get(durationFieldType97);
        boolean boolean99 = minutes1.isSupported(durationFieldType97);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2147483647 + "'", int11 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 32 + "'", int13 == 32);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "PT2M" + "'", str24, "PT2M");
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-2) + "'", int60 == (-2));
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(durationFieldType64);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertNotNull(durationFieldType71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "PT2147483647M" + "'", str72, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(minutes75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(minutes77);
        org.junit.Assert.assertNotNull(minutes79);
        org.junit.Assert.assertNotNull(durationFieldType80);
        org.junit.Assert.assertNotNull(minutes81);
        org.junit.Assert.assertNotNull(minutes83);
        org.junit.Assert.assertNotNull(minutes84);
        org.junit.Assert.assertNotNull(minutes85);
        org.junit.Assert.assertNotNull(minutes86);
        org.junit.Assert.assertNotNull(minutes88);
        org.junit.Assert.assertNotNull(minutes89);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertNotNull(durationFieldType92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-2) + "'", int93 == (-2));
        org.junit.Assert.assertNotNull(minutes95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNotNull(durationFieldType97);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + (-2) + "'", int98 == (-2));
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Period period3 = minutes2.toPeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) period3);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(minutes4);
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        int int4 = minutes3.size();
        int int5 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes3);
        org.joda.time.Minutes minutes7 = minutes3.dividedBy(2147483646);
        org.joda.time.Duration duration8 = minutes3.toStandardDuration();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds9 = minutes3.toStandardSeconds();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 2147483647 * 60");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(duration8);
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        int int1 = minutes0.size();
        int int3 = minutes0.getValue(0);
        org.joda.time.Minutes minutes4 = minutes0.negated();
        org.joda.time.Minutes minutes6 = minutes4.plus(98);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2147483647 + "'", int3 == 2147483647);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        int int4 = minutes2.getMinutes();
        org.joda.time.PeriodType periodType5 = minutes2.getPeriodType();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod7 = minutes6.toMutablePeriod();
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes9 = minutes6.plus(minutes8);
        org.joda.time.Minutes minutes11 = minutes9.plus((int) 'a');
        org.joda.time.Period period12 = minutes9.toPeriod();
        boolean boolean13 = minutes2.isLessThan(minutes9);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = minutes14.get(durationFieldType15);
        org.joda.time.MutablePeriod mutablePeriod17 = minutes14.toMutablePeriod();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes14);
        int int19 = minutes14.getMinutes();
        boolean boolean20 = minutes9.isLessThan(minutes14);
        int int21 = minutes9.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2147483648) + "'", int19 == (-2147483648));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-2147483645) + "'", int21 == (-2147483645));
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        boolean boolean6 = minutes0.isGreaterThan(minutes5);
        org.joda.time.PeriodType periodType7 = minutes0.getPeriodType();
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType10 = minutes9.getPeriodType();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes12 = minutes11.negated();
        org.joda.time.Minutes minutes13 = minutes11.negated();
        org.joda.time.DurationFieldType durationFieldType14 = minutes11.getFieldType();
        java.lang.String str15 = minutes11.toString();
        boolean boolean16 = minutes9.isGreaterThan(minutes11);
        boolean boolean17 = minutes8.equals((java.lang.Object) minutes9);
        org.joda.time.Minutes minutes19 = minutes9.minus(1);
        org.joda.time.Minutes minutes20 = minutes0.minus(minutes19);
        org.joda.time.Duration duration21 = minutes19.toStandardDuration();
        int int22 = minutes19.getMinutes();
        org.joda.time.Minutes minutes23 = minutes19.negated();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PT2147483647M" + "'", str15, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertNotNull(minutes23);
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        org.joda.time.Minutes minutes14 = minutes7.plus((-1));
        org.joda.time.Minutes minutes16 = minutes7.minus((int) (short) 10);
        org.joda.time.Minutes minutes18 = minutes16.dividedBy((-2147483648));
        org.joda.time.Minutes minutes19 = minutes4.plus(minutes18);
        org.joda.time.Period period20 = minutes19.toPeriod();
        org.joda.time.Minutes minutes22 = minutes19.plus((-2147483645));
        org.joda.time.Minutes minutes24 = minutes19.multipliedBy((int) (short) 0);
        org.joda.time.MutablePeriod mutablePeriod25 = minutes24.toMutablePeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod8 = minutes7.toMutablePeriod();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod8);
        boolean boolean10 = minutes0.isLessThan(minutes9);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = minutes15.get(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = minutes15.getFieldType();
        int int19 = minutes14.get(durationFieldType18);
        org.joda.time.Minutes minutes21 = minutes14.plus((-1));
        boolean boolean22 = minutes11.isGreaterThan(minutes14);
        org.joda.time.Minutes minutes24 = minutes14.multipliedBy(2);
        org.joda.time.Minutes minutes25 = minutes24.negated();
        org.joda.time.Minutes minutes26 = minutes25.negated();
        boolean boolean27 = minutes0.isLessThan(minutes25);
        org.joda.time.Period period28 = minutes0.toPeriod();
        org.joda.time.Minutes minutes29 = minutes0.negated();
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes32 = minutes30.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes35 = minutes33.minus((int) (short) 1);
        org.joda.time.Minutes minutes37 = minutes35.multipliedBy(0);
        org.joda.time.Minutes minutes39 = minutes37.plus((-2147483648));
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes41 = minutes40.negated();
        org.joda.time.Minutes minutes42 = minutes40.negated();
        boolean boolean43 = minutes39.isGreaterThan(minutes42);
        int int44 = minutes30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes39);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes30);
        java.lang.String str46 = minutes45.toString();
        int int47 = minutes45.size();
        org.joda.time.Minutes minutes48 = org.joda.time.Minutes.MIN_VALUE;
        int int49 = minutes48.getMinutes();
        org.joda.time.PeriodType periodType50 = minutes48.getPeriodType();
        boolean boolean51 = minutes45.equals((java.lang.Object) periodType50);
        boolean boolean52 = minutes0.isGreaterThan(minutes45);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2) + "'", int19 == (-2));
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "PT2M" + "'", str46, "PT2M");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-2147483648) + "'", int49 == (-2147483648));
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.PeriodType periodType2 = minutes1.getPeriodType();
        org.joda.time.Minutes minutes3 = minutes1.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes7 = minutes5.plus(0);
        org.joda.time.DurationFieldType durationFieldType8 = minutes7.getFieldType();
        int int9 = minutes3.get(durationFieldType8);
        org.joda.time.Minutes minutes11 = minutes3.dividedBy((int) ' ');
        java.lang.String str12 = minutes3.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int14 = minutes3.getValue(3);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2147483647 + "'", int9 == 2147483647);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PT2147483647M" + "'", str12, "PT2147483647M");
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = minutes0.negated();
        java.lang.String str3 = minutes0.toString();
        org.joda.time.Minutes minutes5 = minutes0.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes8 = minutes6.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes11 = minutes9.minus((int) (short) 1);
        org.joda.time.Minutes minutes13 = minutes11.multipliedBy(0);
        org.joda.time.Minutes minutes15 = minutes13.plus((-2147483648));
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes17 = minutes16.negated();
        org.joda.time.Minutes minutes18 = minutes16.negated();
        boolean boolean19 = minutes15.isGreaterThan(minutes18);
        int int20 = minutes6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes15);
        org.joda.time.MutablePeriod mutablePeriod21 = minutes15.toMutablePeriod();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration23 = minutes22.toStandardDuration();
        org.joda.time.Duration duration24 = minutes22.toStandardDuration();
        org.joda.time.Minutes minutes26 = minutes22.minus(2);
        boolean boolean27 = minutes15.isGreaterThan(minutes26);
        int int28 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes26);
        org.joda.time.PeriodType periodType29 = minutes0.getPeriodType();
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType32 = minutes31.getPeriodType();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes34 = minutes33.negated();
        org.joda.time.Minutes minutes35 = minutes33.negated();
        org.joda.time.DurationFieldType durationFieldType36 = minutes33.getFieldType();
        java.lang.String str37 = minutes33.toString();
        boolean boolean38 = minutes31.isGreaterThan(minutes33);
        boolean boolean39 = minutes30.equals((java.lang.Object) minutes31);
        int int40 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes30);
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes42 = minutes41.negated();
        org.joda.time.Minutes minutes43 = minutes41.negated();
        java.lang.String str44 = minutes41.toString();
        int int45 = minutes41.size();
        org.joda.time.Period period46 = minutes41.toPeriod();
        org.joda.time.PeriodType periodType47 = minutes41.getPeriodType();
        boolean boolean48 = minutes30.equals((java.lang.Object) minutes41);
        org.joda.time.DurationFieldType durationFieldType49 = minutes41.getFieldType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2147483647M" + "'", str3, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "PT2147483647M" + "'", str37, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "PT2147483647M" + "'", str44, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(durationFieldType49);
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT-1M");
        java.lang.String str2 = minutes1.toString();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "PT-1M" + "'", str2, "PT-1M");
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes5 = minutes2.negated();
        boolean boolean6 = minutes1.equals((java.lang.Object) minutes5);
        java.lang.String str7 = minutes5.toString();
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes11 = minutes8.negated();
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = minutes16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = minutes16.getFieldType();
        int int20 = minutes15.get(durationFieldType19);
        org.joda.time.Minutes minutes22 = minutes15.plus((-1));
        boolean boolean23 = minutes12.isGreaterThan(minutes15);
        org.joda.time.DurationFieldType durationFieldType24 = minutes15.getFieldType();
        boolean boolean25 = minutes11.isSupported(durationFieldType24);
        int int26 = minutes5.get(durationFieldType24);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod28 = minutes27.toMutablePeriod();
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes31 = minutes29.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes33 = minutes29.plus(0);
        int int34 = minutes27.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes29);
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes37 = minutes35.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes39 = minutes35.plus(0);
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes42 = minutes40.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes43 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType44 = null;
        int int45 = minutes43.get(durationFieldType44);
        org.joda.time.DurationFieldType durationFieldType46 = minutes43.getFieldType();
        int int47 = minutes42.get(durationFieldType46);
        org.joda.time.Minutes minutes49 = minutes42.plus((-1));
        org.joda.time.Minutes minutes51 = minutes42.minus((int) (short) 10);
        org.joda.time.Minutes minutes53 = minutes51.dividedBy((-2147483648));
        org.joda.time.Minutes minutes54 = minutes39.plus(minutes53);
        org.joda.time.Minutes minutes55 = minutes29.minus(minutes39);
        org.joda.time.Minutes minutes56 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes58 = minutes56.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes60 = minutes56.plus(0);
        org.joda.time.Minutes minutes61 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes63 = minutes61.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes64 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType65 = null;
        int int66 = minutes64.get(durationFieldType65);
        org.joda.time.DurationFieldType durationFieldType67 = minutes64.getFieldType();
        int int68 = minutes63.get(durationFieldType67);
        org.joda.time.Minutes minutes70 = minutes63.plus((-1));
        org.joda.time.Minutes minutes72 = minutes63.minus((int) (short) 10);
        org.joda.time.Minutes minutes74 = minutes72.dividedBy((-2147483648));
        org.joda.time.Minutes minutes75 = minutes60.plus(minutes74);
        org.joda.time.Minutes minutes76 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType77 = minutes76.getPeriodType();
        org.joda.time.Minutes minutes78 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes79 = minutes78.negated();
        org.joda.time.Minutes minutes80 = minutes78.negated();
        org.joda.time.DurationFieldType durationFieldType81 = minutes78.getFieldType();
        java.lang.String str82 = minutes78.toString();
        boolean boolean83 = minutes76.isGreaterThan(minutes78);
        boolean boolean84 = minutes60.isLessThan(minutes78);
        int int85 = minutes39.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes78);
        org.joda.time.Minutes minutes87 = minutes78.dividedBy((-2147483647));
        boolean boolean88 = minutes5.isLessThan(minutes78);
        org.joda.time.Minutes minutes90 = minutes78.plus((int) (byte) 0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT-2M" + "'", str7, "PT-2M");
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-2) + "'", int20 == (-2));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-2) + "'", int26 == (-2));
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-2) + "'", int47 == (-2));
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(durationFieldType67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-2) + "'", int68 == (-2));
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertNotNull(minutes74);
        org.junit.Assert.assertNotNull(minutes75);
        org.junit.Assert.assertNotNull(minutes76);
        org.junit.Assert.assertNotNull(periodType77);
        org.junit.Assert.assertNotNull(minutes78);
        org.junit.Assert.assertNotNull(minutes79);
        org.junit.Assert.assertNotNull(minutes80);
        org.junit.Assert.assertNotNull(durationFieldType81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "PT2147483647M" + "'", str82, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNotNull(minutes87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(minutes90);
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        int int9 = minutes2.getMinutes();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean12 = minutes2.isLessThan(minutes11);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration14 = minutes13.toStandardDuration();
        org.joda.time.Duration duration15 = minutes13.toStandardDuration();
        org.joda.time.Minutes minutes17 = minutes13.minus(2);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes20 = minutes18.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes21 = minutes18.negated();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes23 = minutes22.negated();
        org.joda.time.Minutes minutes24 = minutes22.negated();
        boolean boolean25 = minutes18.equals((java.lang.Object) minutes24);
        boolean boolean26 = minutes17.isLessThan(minutes18);
        org.joda.time.Minutes minutes27 = minutes11.minus(minutes18);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes29 = minutes28.negated();
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes28);
        java.lang.String str31 = minutes28.toString();
        org.joda.time.Minutes minutes32 = minutes27.plus(minutes28);
        org.joda.time.Minutes minutes33 = minutes27.negated();
        org.joda.time.Minutes minutes35 = minutes33.minus(0);
        org.joda.time.Minutes minutes37 = minutes35.dividedBy((-2147483645));
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-2) + "'", int9 == (-2));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "PT2147483647M" + "'", str31, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        org.joda.time.Period period4 = minutes3.toPeriod();
        int int5 = minutes3.getMinutes();
        int int6 = minutes3.getMinutes();
        org.joda.time.Duration duration7 = minutes3.toStandardDuration();
        org.joda.time.Minutes minutes8 = minutes3.negated();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-2147483645) + "'", int5 == (-2147483645));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-2147483645) + "'", int6 == (-2147483645));
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(minutes8);
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod5 = minutes4.toMutablePeriod();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes7 = minutes4.plus(minutes6);
        boolean boolean8 = minutes3.isLessThan(minutes4);
        org.joda.time.PeriodType periodType9 = minutes3.getPeriodType();
        org.joda.time.Minutes minutes11 = minutes3.dividedBy(3);
        org.joda.time.Minutes minutes13 = minutes11.dividedBy(10);
        org.joda.time.Minutes minutes15 = minutes13.minus((-22139006));
        org.joda.time.Minutes minutes17 = minutes13.plus((int) (short) 10);
        org.joda.time.Duration duration18 = minutes13.toStandardDuration();
        boolean boolean20 = minutes13.equals((java.lang.Object) (-22139006));
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes1.plus(0);
        org.joda.time.PeriodType periodType4 = minutes1.getPeriodType();
        org.joda.time.Minutes minutes6 = minutes1.dividedBy((-2147483648));
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes8 = minutes1.dividedBy(0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(minutes6);
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.dividedBy((int) 'a');
        org.joda.time.Minutes minutes4 = minutes0.dividedBy((int) (short) 100);
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (byte) 1);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod8 = minutes7.toMutablePeriod();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes10 = minutes7.plus(minutes9);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod12 = minutes11.toMutablePeriod();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes14 = minutes11.plus(minutes13);
        boolean boolean15 = minutes10.isLessThan(minutes11);
        org.joda.time.Minutes minutes17 = minutes10.plus((-1));
        org.joda.time.Minutes minutes19 = minutes17.plus(0);
        org.joda.time.Duration duration20 = minutes17.toStandardDuration();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod22 = minutes21.toMutablePeriod();
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes25 = minutes23.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes27 = minutes23.plus(0);
        int int28 = minutes21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes23);
        org.joda.time.Minutes minutes30 = minutes23.plus((int) ' ');
        org.joda.time.Minutes minutes32 = minutes23.multipliedBy((int) 'a');
        int int33 = minutes17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes23);
        org.joda.time.Minutes minutes34 = minutes6.minus(minutes23);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(minutes34);
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.THREE;
        int int1 = minutes0.size();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod3 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = minutes4.plus(0);
        int int9 = minutes2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes4);
        org.joda.time.Minutes minutes11 = minutes4.plus((int) ' ');
        int int12 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes11);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes16 = minutes14.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = minutes17.get(durationFieldType18);
        org.joda.time.DurationFieldType durationFieldType20 = minutes17.getFieldType();
        int int21 = minutes16.get(durationFieldType20);
        org.joda.time.Minutes minutes23 = minutes16.plus((-1));
        boolean boolean24 = minutes13.isGreaterThan(minutes16);
        org.joda.time.DurationFieldType durationFieldType25 = minutes16.getFieldType();
        int int27 = minutes16.getValue((int) (short) 0);
        org.joda.time.Period period28 = minutes16.toPeriod();
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes30 = minutes29.negated();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod32 = minutes31.toMutablePeriod();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes34 = minutes31.plus(minutes33);
        int int35 = minutes30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes33);
        org.joda.time.Minutes minutes36 = minutes16.minus(minutes30);
        boolean boolean37 = minutes0.isGreaterThan(minutes30);
        org.joda.time.Minutes minutes39 = minutes30.plus(2147483647);
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes42 = minutes40.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType43 = minutes42.getFieldType();
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes45 = minutes44.negated();
        org.joda.time.Minutes minutes46 = minutes44.negated();
        java.lang.String str47 = minutes44.toString();
        int int48 = minutes44.size();
        org.joda.time.Minutes minutes50 = minutes44.minus(0);
        org.joda.time.Duration duration51 = minutes50.toStandardDuration();
        boolean boolean52 = minutes42.isGreaterThan(minutes50);
        int int53 = minutes50.getMinutes();
        boolean boolean54 = minutes30.isGreaterThan(minutes50);
        org.joda.time.Minutes minutes55 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes50);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-2) + "'", int21 == (-2));
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-2) + "'", int27 == (-2));
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "PT2147483647M" + "'", str47, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2147483647 + "'", int53 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(minutes55);
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.DurationFieldType durationFieldType12 = minutes3.getFieldType();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType15 = minutes14.getPeriodType();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes17 = minutes16.negated();
        org.joda.time.Minutes minutes18 = minutes16.negated();
        org.joda.time.DurationFieldType durationFieldType19 = minutes16.getFieldType();
        java.lang.String str20 = minutes16.toString();
        boolean boolean21 = minutes14.isGreaterThan(minutes16);
        boolean boolean22 = minutes13.equals((java.lang.Object) minutes14);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes13);
        int int24 = minutes3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes13);
        org.joda.time.DurationFieldType durationFieldType25 = minutes3.getFieldType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "PT2147483647M" + "'", str20, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType25);
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType1 = minutes0.getPeriodType();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes3 = minutes2.negated();
        org.joda.time.Minutes minutes4 = minutes2.negated();
        org.joda.time.DurationFieldType durationFieldType5 = minutes2.getFieldType();
        java.lang.String str6 = minutes2.toString();
        boolean boolean7 = minutes0.isGreaterThan(minutes2);
        org.joda.time.Minutes minutes9 = minutes0.multipliedBy((int) (byte) 0);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.minutes((int) (short) -1);
        int int12 = minutes11.size();
        int int13 = minutes11.getMinutes();
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod15 = minutes14.toMutablePeriod();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes17 = minutes14.plus(minutes16);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod19 = minutes18.toMutablePeriod();
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes21 = minutes18.plus(minutes20);
        boolean boolean22 = minutes17.isLessThan(minutes18);
        java.lang.String str23 = minutes17.toString();
        boolean boolean24 = minutes11.equals((java.lang.Object) minutes17);
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes27 = minutes25.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = minutes28.get(durationFieldType29);
        org.joda.time.MutablePeriod mutablePeriod31 = minutes28.toMutablePeriod();
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes28);
        boolean boolean33 = minutes27.isLessThan(minutes32);
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes36 = minutes34.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = minutes37.get(durationFieldType38);
        org.joda.time.DurationFieldType durationFieldType40 = minutes37.getFieldType();
        int int41 = minutes36.get(durationFieldType40);
        org.joda.time.Minutes minutes43 = minutes36.plus((-1));
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod45 = minutes44.toMutablePeriod();
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes48 = minutes46.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes50 = minutes46.plus(0);
        int int51 = minutes44.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes46);
        org.joda.time.Minutes minutes53 = minutes46.plus((int) ' ');
        java.lang.String str54 = minutes46.toString();
        org.joda.time.Minutes minutes56 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean57 = minutes46.isLessThan(minutes56);
        boolean boolean58 = minutes43.isLessThan(minutes46);
        org.joda.time.Minutes minutes59 = minutes27.minus(minutes43);
        org.joda.time.Minutes minutes60 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes62 = minutes60.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType63 = minutes62.getFieldType();
        org.joda.time.Minutes minutes64 = minutes62.negated();
        org.joda.time.Minutes minutes65 = minutes59.minus(minutes64);
        org.joda.time.Minutes minutes66 = minutes11.plus(minutes59);
        int int67 = minutes9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes11);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT2147483647M" + "'", str6, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT-2147483645M" + "'", str23, "PT-2147483645M");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-2) + "'", int41 == (-2));
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(mutablePeriod45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "PT2M" + "'", str54, "PT2M");
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        org.joda.time.Minutes minutes5 = minutes3.plus((int) 'a');
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes7 = minutes6.negated();
        org.joda.time.Minutes minutes8 = minutes6.negated();
        org.joda.time.DurationFieldType durationFieldType9 = minutes6.getFieldType();
        java.lang.String str10 = minutes6.toString();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes12 = minutes11.negated();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes11);
        int int14 = minutes11.size();
        org.joda.time.MutablePeriod mutablePeriod15 = minutes11.toMutablePeriod();
        boolean boolean16 = minutes6.equals((java.lang.Object) minutes11);
        org.joda.time.DurationFieldType durationFieldType18 = minutes11.getFieldType((int) (short) 0);
        int int19 = minutes5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes11);
        org.joda.time.PeriodType periodType20 = minutes5.getPeriodType();
        org.joda.time.Period period21 = minutes5.toPeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT2147483647M" + "'", str10, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period21);
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = minutes0.get(durationFieldType1);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        int int4 = minutes0.size();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        java.lang.String str3 = minutes0.toString();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = minutes4.getFieldType();
        boolean boolean6 = minutes0.isSupported(durationFieldType5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MAX_VALUE;
        int int9 = minutes8.size();
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes11 = minutes10.negated();
        org.joda.time.Minutes minutes13 = minutes11.dividedBy((int) (byte) -1);
        boolean boolean14 = minutes8.isLessThan(minutes11);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes11);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes18 = minutes16.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = minutes19.get(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType22 = minutes19.getFieldType();
        int int23 = minutes18.get(durationFieldType22);
        org.joda.time.Minutes minutes25 = minutes18.plus((-1));
        org.joda.time.Minutes minutes27 = minutes18.minus((int) (short) 10);
        org.joda.time.DurationFieldType durationFieldType29 = minutes18.getFieldType((int) (short) 0);
        boolean boolean30 = minutes15.isSupported(durationFieldType29);
        boolean boolean31 = minutes7.isSupported(durationFieldType29);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds32 = minutes7.toStandardSeconds();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 2147483647 * 60");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2147483647M" + "'", str3, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-2) + "'", int23 == (-2));
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = minutes12.getFieldType();
        int int16 = minutes11.get(durationFieldType15);
        org.joda.time.Minutes minutes18 = minutes11.plus((-1));
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = minutes21.plus(0);
        int int26 = minutes19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes21);
        org.joda.time.Minutes minutes28 = minutes21.plus((int) ' ');
        java.lang.String str29 = minutes21.toString();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean32 = minutes21.isLessThan(minutes31);
        boolean boolean33 = minutes18.isLessThan(minutes21);
        org.joda.time.Minutes minutes34 = minutes2.minus(minutes18);
        org.joda.time.MutablePeriod mutablePeriod35 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes37 = minutes2.dividedBy(2);
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes40 = minutes38.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType42 = null;
        int int43 = minutes41.get(durationFieldType42);
        org.joda.time.DurationFieldType durationFieldType44 = minutes41.getFieldType();
        int int45 = minutes40.get(durationFieldType44);
        org.joda.time.Minutes minutes47 = minutes40.plus((-1));
        org.joda.time.Minutes minutes48 = minutes47.negated();
        org.joda.time.Minutes minutes49 = minutes37.plus(minutes48);
        org.joda.time.Minutes minutes51 = minutes37.minus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType52 = minutes51.getFieldType();
        org.joda.time.Minutes minutes54 = minutes51.plus(52);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2M" + "'", str29, "PT2M");
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-2) + "'", int45 == (-2));
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertNotNull(minutes54);
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((-2147483548));
        org.joda.time.Period period2 = minutes1.toPeriod();
        org.joda.time.Minutes minutes4 = minutes1.plus((-12));
        java.lang.Class<?> wildcardClass5 = minutes1.getClass();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = minutes0.get(durationFieldType1);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes8 = minutes6.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = minutes9.get(durationFieldType10);
        org.joda.time.DurationFieldType durationFieldType12 = minutes9.getFieldType();
        int int13 = minutes8.get(durationFieldType12);
        org.joda.time.Minutes minutes15 = minutes8.plus((-1));
        org.joda.time.Minutes minutes17 = minutes8.minus((int) (short) 10);
        org.joda.time.Minutes minutes19 = minutes17.dividedBy((-2147483648));
        org.joda.time.Minutes minutes20 = minutes19.negated();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes22 = minutes21.negated();
        org.joda.time.Minutes minutes23 = minutes21.negated();
        org.joda.time.Minutes minutes24 = minutes19.minus(minutes23);
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes27 = minutes25.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType28 = minutes27.getFieldType();
        int int29 = minutes24.get(durationFieldType28);
        boolean boolean30 = minutes5.isSupported(durationFieldType28);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-2) + "'", int13 == (-2));
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2147483647 + "'", int29 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = minutes0.get(durationFieldType1);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType4 = minutes0.getFieldType();
        org.joda.time.Minutes minutes6 = minutes0.dividedBy((-1));
        org.joda.time.Minutes minutes8 = minutes0.dividedBy(2147483646);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod10 = minutes9.toMutablePeriod();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes13 = minutes11.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = minutes11.plus(0);
        int int16 = minutes9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes11);
        org.joda.time.Minutes minutes18 = minutes11.plus((int) ' ');
        org.joda.time.Minutes minutes20 = minutes11.multipliedBy((int) 'a');
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes11);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes22 = minutes0.minus(minutes21);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: -2147483648 + -2");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        java.lang.String str10 = minutes2.toString();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod12 = minutes11.toMutablePeriod();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes17 = minutes13.plus(0);
        int int18 = minutes11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes13);
        org.joda.time.Minutes minutes20 = minutes13.plus((int) ' ');
        java.lang.String str21 = minutes13.toString();
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean24 = minutes13.isLessThan(minutes23);
        org.joda.time.Minutes minutes25 = minutes2.minus(minutes13);
        int int26 = minutes25.size();
        org.joda.time.MutablePeriod mutablePeriod27 = minutes25.toMutablePeriod();
        org.joda.time.Minutes minutes29 = minutes25.dividedBy((-2147483548));
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod31 = minutes30.toMutablePeriod();
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes34 = minutes32.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes36 = minutes32.plus(0);
        int int37 = minutes30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes32);
        org.joda.time.Minutes minutes39 = minutes32.plus((int) ' ');
        java.lang.String str40 = minutes32.toString();
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod42 = minutes41.toMutablePeriod();
        org.joda.time.Minutes minutes43 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes45 = minutes43.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes47 = minutes43.plus(0);
        int int48 = minutes41.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes43);
        org.joda.time.Minutes minutes50 = minutes43.plus((int) ' ');
        java.lang.String str51 = minutes43.toString();
        org.joda.time.Minutes minutes53 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean54 = minutes43.isLessThan(minutes53);
        org.joda.time.Minutes minutes55 = minutes32.minus(minutes43);
        int int56 = minutes55.size();
        org.joda.time.MutablePeriod mutablePeriod57 = minutes55.toMutablePeriod();
        org.joda.time.Minutes minutes58 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes60 = minutes58.dividedBy((int) 'a');
        int int61 = minutes60.getMinutes();
        org.joda.time.DurationFieldType durationFieldType62 = minutes60.getFieldType();
        int int63 = minutes55.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes60);
        org.joda.time.Minutes minutes64 = minutes29.minus(minutes60);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT2M" + "'", str10, "PT2M");
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT2M" + "'", str21, "PT2M");
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "PT2M" + "'", str40, "PT2M");
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "PT2M" + "'", str51, "PT2M");
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod57);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-22139006) + "'", int61 == (-22139006));
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertNotNull(minutes64);
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = minutes0.negated();
        org.joda.time.DurationFieldType durationFieldType3 = minutes0.getFieldType();
        java.lang.String str4 = minutes0.toString();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = minutes5.get(durationFieldType6);
        org.joda.time.MutablePeriod mutablePeriod8 = minutes5.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType9 = minutes5.getFieldType();
        int int10 = minutes0.get(durationFieldType9);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MAX_VALUE;
        boolean boolean12 = minutes0.isLessThan(minutes11);
        org.joda.time.DurationFieldType durationFieldType13 = minutes0.getFieldType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT2147483647M" + "'", str4, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2147483647 + "'", int10 == 2147483647);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(durationFieldType13);
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod3 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = minutes4.plus(0);
        int int9 = minutes2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes4);
        org.joda.time.Minutes minutes11 = minutes4.plus((int) ' ');
        java.lang.String str12 = minutes4.toString();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = minutes13.get(durationFieldType14);
        org.joda.time.MutablePeriod mutablePeriod16 = minutes13.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType17 = minutes13.getFieldType();
        org.joda.time.Minutes minutes19 = minutes13.dividedBy((-1));
        org.joda.time.Minutes minutes21 = minutes13.dividedBy(2147483646);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.minutes((int) (byte) 10);
        boolean boolean24 = minutes13.isLessThan(minutes23);
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes27 = minutes25.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = minutes28.get(durationFieldType29);
        org.joda.time.MutablePeriod mutablePeriod31 = minutes28.toMutablePeriod();
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes28);
        boolean boolean33 = minutes27.isLessThan(minutes32);
        org.joda.time.Minutes minutes34 = minutes23.plus(minutes27);
        boolean boolean35 = minutes4.isGreaterThan(minutes23);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.minutes((int) (byte) -1);
        org.joda.time.Minutes minutes38 = minutes23.minus(minutes37);
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration40 = minutes39.toStandardDuration();
        org.joda.time.Duration duration41 = minutes39.toStandardDuration();
        org.joda.time.Minutes minutes43 = minutes39.minus(2);
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes46 = minutes44.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes47 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType48 = null;
        int int49 = minutes47.get(durationFieldType48);
        org.joda.time.MutablePeriod mutablePeriod50 = minutes47.toMutablePeriod();
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes47);
        boolean boolean52 = minutes46.isLessThan(minutes51);
        int int53 = minutes46.getMinutes();
        org.joda.time.Minutes minutes55 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean56 = minutes46.isLessThan(minutes55);
        org.joda.time.Minutes minutes57 = minutes43.minus(minutes55);
        org.joda.time.Minutes minutes58 = minutes38.minus(minutes57);
        org.joda.time.Minutes minutes59 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration60 = minutes59.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod61 = minutes59.toMutablePeriod();
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.MAX_VALUE;
        int int63 = minutes62.size();
        org.joda.time.Minutes minutes64 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes65 = minutes64.negated();
        org.joda.time.Minutes minutes67 = minutes65.dividedBy((int) (byte) -1);
        boolean boolean68 = minutes62.isLessThan(minutes65);
        boolean boolean69 = minutes59.isLessThan(minutes62);
        org.joda.time.Duration duration70 = minutes59.toStandardDuration();
        org.joda.time.Minutes minutes71 = minutes58.minus(minutes59);
        boolean boolean72 = minutes1.isGreaterThan(minutes71);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PT2M" + "'", str12, "PT2M");
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod50);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-2) + "'", int53 == (-2));
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertNotNull(mutablePeriod61);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes3 = minutes1.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        int int13 = minutes4.get(durationFieldType11);
        org.joda.time.PeriodType periodType14 = minutes4.getPeriodType();
        java.lang.Class<?> wildcardClass15 = periodType14.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2147483647 + "'", int13 == 2147483647);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        int int4 = minutes2.getMinutes();
        org.joda.time.PeriodType periodType5 = minutes2.getPeriodType();
        org.joda.time.Period period6 = minutes2.toPeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = minutes11.get(durationFieldType12);
        org.joda.time.DurationFieldType durationFieldType14 = minutes11.getFieldType();
        int int15 = minutes10.get(durationFieldType14);
        org.joda.time.Minutes minutes17 = minutes10.plus((-1));
        boolean boolean18 = minutes7.isGreaterThan(minutes10);
        org.joda.time.DurationFieldType durationFieldType19 = minutes10.getFieldType();
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType22 = minutes21.getPeriodType();
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes24 = minutes23.negated();
        org.joda.time.Minutes minutes25 = minutes23.negated();
        org.joda.time.DurationFieldType durationFieldType26 = minutes23.getFieldType();
        java.lang.String str27 = minutes23.toString();
        boolean boolean28 = minutes21.isGreaterThan(minutes23);
        boolean boolean29 = minutes20.equals((java.lang.Object) minutes21);
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes20);
        int int31 = minutes10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes20);
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes34 = minutes32.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType35 = minutes34.getFieldType();
        org.joda.time.Minutes minutes36 = minutes34.negated();
        org.joda.time.Minutes minutes38 = minutes34.dividedBy((int) '4');
        org.joda.time.Minutes minutes39 = minutes20.plus(minutes34);
        org.joda.time.Minutes minutes41 = minutes20.dividedBy((-12));
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.THREE;
        boolean boolean43 = minutes41.equals((java.lang.Object) minutes42);
        org.joda.time.Minutes minutes44 = minutes2.plus(minutes41);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-2) + "'", int15 == (-2));
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "PT2147483647M" + "'", str27, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(minutes44);
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        org.joda.time.Minutes minutes14 = minutes7.plus((-1));
        org.joda.time.Minutes minutes16 = minutes7.minus((int) (short) 10);
        org.joda.time.Minutes minutes18 = minutes16.dividedBy((-2147483648));
        org.joda.time.Minutes minutes19 = minutes4.plus(minutes18);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType21 = minutes20.getPeriodType();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes23 = minutes22.negated();
        org.joda.time.Minutes minutes24 = minutes22.negated();
        org.joda.time.DurationFieldType durationFieldType25 = minutes22.getFieldType();
        java.lang.String str26 = minutes22.toString();
        boolean boolean27 = minutes20.isGreaterThan(minutes22);
        boolean boolean28 = minutes4.isLessThan(minutes22);
        org.joda.time.PeriodType periodType29 = minutes22.getPeriodType();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes33 = minutes31.plus(0);
        org.joda.time.DurationFieldType durationFieldType34 = minutes33.getFieldType();
        boolean boolean35 = minutes22.isSupported(durationFieldType34);
        org.joda.time.Duration duration36 = minutes22.toStandardDuration();
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType38 = minutes37.getPeriodType();
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes40 = minutes39.negated();
        org.joda.time.Minutes minutes41 = minutes39.negated();
        org.joda.time.DurationFieldType durationFieldType42 = minutes39.getFieldType();
        java.lang.String str43 = minutes39.toString();
        boolean boolean44 = minutes37.isGreaterThan(minutes39);
        org.joda.time.Minutes minutes45 = minutes39.negated();
        boolean boolean46 = minutes22.isGreaterThan(minutes45);
        org.joda.time.Minutes minutes48 = minutes45.plus((int) (short) -1);
        java.lang.Class<?> wildcardClass49 = minutes48.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "PT2147483647M" + "'", str26, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "PT2147483647M" + "'", str43, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT-12M");
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration3 = minutes2.toStandardDuration();
        org.joda.time.Duration duration4 = minutes2.toStandardDuration();
        org.joda.time.Minutes minutes6 = minutes2.minus(2);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes9 = minutes7.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = minutes10.get(durationFieldType11);
        org.joda.time.MutablePeriod mutablePeriod13 = minutes10.toMutablePeriod();
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes10);
        boolean boolean15 = minutes9.isLessThan(minutes14);
        int int16 = minutes9.getMinutes();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean19 = minutes9.isLessThan(minutes18);
        org.joda.time.Minutes minutes20 = minutes6.minus(minutes18);
        int int21 = minutes18.getMinutes();
        org.joda.time.Minutes minutes22 = minutes1.minus(minutes18);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes25 = minutes23.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = minutes26.get(durationFieldType27);
        org.joda.time.DurationFieldType durationFieldType29 = minutes26.getFieldType();
        int int30 = minutes25.get(durationFieldType29);
        org.joda.time.Minutes minutes32 = minutes25.plus((-1));
        org.joda.time.Minutes minutes33 = minutes32.negated();
        org.joda.time.Duration duration34 = minutes33.toStandardDuration();
        boolean boolean35 = minutes22.isGreaterThan(minutes33);
        org.joda.time.PeriodType periodType36 = minutes33.getPeriodType();
        java.lang.Class<?> wildcardClass37 = minutes33.getClass();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-2147483645) + "'", int21 == (-2147483645));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-2) + "'", int30 == (-2));
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.PeriodType periodType2 = minutes1.getPeriodType();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = minutes7.get(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType10 = minutes7.getFieldType();
        int int11 = minutes6.get(durationFieldType10);
        org.joda.time.Minutes minutes13 = minutes6.plus((-1));
        boolean boolean14 = minutes3.isGreaterThan(minutes6);
        org.joda.time.Minutes minutes16 = minutes6.multipliedBy(2);
        int int17 = minutes6.size();
        org.joda.time.Period period18 = minutes6.toPeriod();
        org.joda.time.Minutes minutes20 = minutes6.minus(36);
        boolean boolean21 = minutes1.isGreaterThan(minutes6);
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MIN_VALUE;
        int int23 = minutes22.getMinutes();
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes25 = minutes24.negated();
        org.joda.time.Minutes minutes26 = minutes24.negated();
        org.joda.time.DurationFieldType durationFieldType27 = minutes24.getFieldType();
        int int28 = minutes22.get(durationFieldType27);
        org.joda.time.Minutes minutes30 = minutes22.dividedBy(34);
        int int31 = minutes1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes30);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-2) + "'", int11 == (-2));
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-2147483648) + "'", int23 == (-2147483648));
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-2147483648) + "'", int28 == (-2147483648));
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        org.joda.time.Period period4 = minutes3.toPeriod();
        int int5 = minutes3.getMinutes();
        java.lang.String str6 = minutes3.toString();
        org.joda.time.Minutes minutes8 = minutes3.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-2147483645) + "'", int5 == (-2147483645));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT-2147483645M" + "'", str6, "PT-2147483645M");
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes8 = minutes5.multipliedBy((int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType10 = minutes5.getFieldType((-41297760));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -41297760");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        org.joda.time.Period period4 = minutes3.toPeriod();
        org.joda.time.Duration duration5 = minutes3.toStandardDuration();
        org.joda.time.Duration duration6 = minutes3.toStandardDuration();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(duration6);
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = minutes0.negated();
        java.lang.String str3 = minutes0.toString();
        int int4 = minutes0.size();
        org.joda.time.Minutes minutes6 = minutes0.minus(0);
        org.joda.time.Minutes minutes8 = minutes0.plus((int) (short) 0);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes11 = minutes10.negated();
        org.joda.time.Minutes minutes12 = minutes10.negated();
        java.lang.String str13 = minutes10.toString();
        org.joda.time.Minutes minutes15 = minutes10.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes19 = minutes17.multipliedBy((int) (byte) 0);
        boolean boolean20 = minutes15.equals((java.lang.Object) minutes17);
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes22 = minutes21.negated();
        org.joda.time.DurationFieldType durationFieldType23 = minutes21.getFieldType();
        boolean boolean24 = minutes15.isSupported(durationFieldType23);
        boolean boolean25 = minutes9.isGreaterThan(minutes15);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes27 = minutes26.negated();
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes26);
        int int29 = minutes26.size();
        org.joda.time.Minutes minutes31 = minutes26.multipliedBy((int) (short) -1);
        boolean boolean32 = minutes15.equals((java.lang.Object) minutes31);
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod34 = minutes33.toMutablePeriod();
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod34);
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes38 = minutes36.dividedBy((int) 'a');
        org.joda.time.Minutes minutes40 = minutes36.plus((int) (short) 1);
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes42 = minutes41.negated();
        org.joda.time.PeriodType periodType43 = minutes42.getPeriodType();
        org.joda.time.Minutes minutes44 = minutes42.negated();
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes48 = minutes46.plus(0);
        org.joda.time.DurationFieldType durationFieldType49 = minutes48.getFieldType();
        int int50 = minutes44.get(durationFieldType49);
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes53 = minutes51.minus((int) (short) 1);
        org.joda.time.Minutes minutes55 = minutes53.multipliedBy(0);
        org.joda.time.Duration duration56 = minutes53.toStandardDuration();
        org.joda.time.Minutes minutes57 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes58 = minutes57.negated();
        org.joda.time.DurationFieldType durationFieldType59 = minutes57.getFieldType();
        int int60 = minutes53.get(durationFieldType59);
        boolean boolean61 = minutes44.isSupported(durationFieldType59);
        int int62 = minutes36.get(durationFieldType59);
        boolean boolean63 = minutes35.isSupported(durationFieldType59);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes64 = minutes31.plus(minutes35);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: -2147483647 + -2147483648");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2147483647M" + "'", str3, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PT2147483647M" + "'", str13, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2147483647 + "'", int50 == 2147483647);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2147483646 + "'", int60 == 2147483646);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-2147483648) + "'", int62 == (-2147483648));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        int int3 = minutes0.size();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes7 = minutes4.negated();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes10 = minutes4.minus(minutes9);
        int int11 = minutes4.size();
        int int12 = minutes4.size();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes4);
        org.joda.time.Minutes minutes14 = minutes0.minus(minutes13);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        java.lang.String str3 = minutes0.toString();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = minutes4.getFieldType();
        boolean boolean6 = minutes0.isSupported(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes0.getFieldType();
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = minutes11.get(durationFieldType12);
        org.joda.time.DurationFieldType durationFieldType14 = minutes11.getFieldType();
        int int15 = minutes10.get(durationFieldType14);
        org.joda.time.Minutes minutes17 = minutes10.plus((-1));
        org.joda.time.Minutes minutes19 = minutes10.minus((int) (short) 10);
        org.joda.time.Minutes minutes20 = minutes0.plus(minutes10);
        org.joda.time.Period period21 = minutes20.toPeriod();
        org.joda.time.Minutes minutes23 = minutes20.dividedBy(4);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod25 = minutes24.toMutablePeriod();
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes28 = minutes26.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes30 = minutes26.plus(0);
        int int31 = minutes24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes26);
        org.joda.time.Minutes minutes33 = minutes26.plus((int) ' ');
        java.lang.String str34 = minutes26.toString();
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod36 = minutes35.toMutablePeriod();
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes39 = minutes37.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes41 = minutes37.plus(0);
        int int42 = minutes35.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes37);
        org.joda.time.Minutes minutes44 = minutes37.plus((int) ' ');
        java.lang.String str45 = minutes37.toString();
        org.joda.time.Minutes minutes47 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean48 = minutes37.isLessThan(minutes47);
        org.joda.time.Minutes minutes49 = minutes26.minus(minutes37);
        int int50 = minutes49.size();
        org.joda.time.Minutes minutes52 = minutes49.multipliedBy(0);
        org.joda.time.PeriodType periodType53 = minutes49.getPeriodType();
        org.joda.time.Minutes minutes55 = org.joda.time.Minutes.minutes((int) (short) -1);
        int int56 = minutes55.size();
        int int57 = minutes55.getMinutes();
        org.joda.time.Minutes minutes58 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod59 = minutes58.toMutablePeriod();
        org.joda.time.Minutes minutes60 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes61 = minutes58.plus(minutes60);
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod63 = minutes62.toMutablePeriod();
        org.joda.time.Minutes minutes64 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes65 = minutes62.plus(minutes64);
        boolean boolean66 = minutes61.isLessThan(minutes62);
        java.lang.String str67 = minutes61.toString();
        boolean boolean68 = minutes55.equals((java.lang.Object) minutes61);
        org.joda.time.Duration duration69 = minutes55.toStandardDuration();
        boolean boolean70 = minutes49.isGreaterThan(minutes55);
        org.joda.time.Minutes minutes71 = minutes20.minus(minutes49);
        org.joda.time.Minutes minutes73 = minutes20.dividedBy((-3));
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2147483647M" + "'", str3, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-2) + "'", int15 == (-2));
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "PT2M" + "'", str34, "PT2M");
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "PT2M" + "'", str45, "PT2M");
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(mutablePeriod59);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(mutablePeriod63);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "PT-2147483645M" + "'", str67, "PT-2147483645M");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertNotNull(minutes73);
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType3 = minutes2.getFieldType();
        org.joda.time.Minutes minutes4 = minutes2.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes6 = minutes5.negated();
        org.joda.time.Minutes minutes7 = minutes5.negated();
        java.lang.String str8 = minutes5.toString();
        int int9 = minutes5.size();
        org.joda.time.Minutes minutes11 = minutes5.minus(0);
        org.joda.time.Minutes minutes13 = minutes5.plus((int) (short) 0);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes5);
        boolean boolean15 = minutes4.isLessThan(minutes5);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes18 = minutes16.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes20 = minutes16.plus(0);
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MIN_VALUE;
        boolean boolean22 = minutes16.isGreaterThan(minutes21);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes24 = minutes23.negated();
        org.joda.time.Minutes minutes26 = minutes24.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes26);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes30 = minutes28.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = minutes31.get(durationFieldType32);
        org.joda.time.DurationFieldType durationFieldType34 = minutes31.getFieldType();
        int int35 = minutes30.get(durationFieldType34);
        int int36 = minutes27.get(durationFieldType34);
        org.joda.time.PeriodType periodType37 = minutes27.getPeriodType();
        int int38 = minutes27.getMinutes();
        boolean boolean39 = minutes16.isLessThan(minutes27);
        int int40 = minutes27.getMinutes();
        org.joda.time.Period period41 = minutes27.toPeriod();
        boolean boolean42 = minutes4.equals((java.lang.Object) minutes27);
        int int43 = minutes27.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "PT2147483647M" + "'", str8, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-2) + "'", int35 == (-2));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2147483647 + "'", int36 == 2147483647);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2147483647 + "'", int38 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2147483647 + "'", int40 == 2147483647);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2147483647 + "'", int43 == 2147483647);
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod4 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes9 = minutes5.plus(0);
        int int10 = minutes3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes5);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes13 = minutes11.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = minutes11.plus(0);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes18 = minutes16.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = minutes19.get(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType22 = minutes19.getFieldType();
        int int23 = minutes18.get(durationFieldType22);
        org.joda.time.Minutes minutes25 = minutes18.plus((-1));
        org.joda.time.Minutes minutes27 = minutes18.minus((int) (short) 10);
        org.joda.time.Minutes minutes29 = minutes27.dividedBy((-2147483648));
        org.joda.time.Minutes minutes30 = minutes15.plus(minutes29);
        org.joda.time.Minutes minutes31 = minutes5.minus(minutes15);
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod33 = minutes32.toMutablePeriod();
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes35 = minutes32.plus(minutes34);
        org.joda.time.Minutes minutes36 = minutes31.plus(minutes34);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes39 = minutes37.multipliedBy((int) (short) -1);
        org.joda.time.MutablePeriod mutablePeriod40 = minutes37.toMutablePeriod();
        org.joda.time.Minutes minutes41 = minutes34.minus(minutes37);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes44 = minutes42.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType46 = null;
        int int47 = minutes45.get(durationFieldType46);
        org.joda.time.DurationFieldType durationFieldType48 = minutes45.getFieldType();
        int int49 = minutes44.get(durationFieldType48);
        org.joda.time.Minutes minutes51 = minutes44.plus((-1));
        org.joda.time.Minutes minutes53 = minutes44.minus((int) (short) 10);
        org.joda.time.Minutes minutes55 = minutes53.dividedBy((-2147483648));
        org.joda.time.Minutes minutes56 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes53);
        java.lang.Class<?> wildcardClass57 = minutes53.getClass();
        boolean boolean58 = minutes34.equals((java.lang.Object) minutes53);
        boolean boolean59 = minutes0.isLessThan(minutes34);
        org.joda.time.Minutes minutes61 = org.joda.time.Minutes.minutes((int) (byte) -1);
        boolean boolean62 = minutes0.isGreaterThan(minutes61);
        org.joda.time.Minutes minutes64 = minutes61.dividedBy(214748366);
        org.joda.time.Minutes minutes65 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType66 = null;
        int int67 = minutes65.get(durationFieldType66);
        org.joda.time.MutablePeriod mutablePeriod68 = minutes65.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType69 = minutes65.getFieldType();
        int int70 = minutes61.get(durationFieldType69);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-2) + "'", int23 == (-2));
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-2) + "'", int49 == (-2));
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod68);
        org.junit.Assert.assertNotNull(durationFieldType69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType2 = minutes1.getPeriodType();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes4 = minutes3.negated();
        org.joda.time.Minutes minutes5 = minutes3.negated();
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        java.lang.String str7 = minutes3.toString();
        boolean boolean8 = minutes1.isGreaterThan(minutes3);
        boolean boolean9 = minutes0.equals((java.lang.Object) minutes1);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes12 = minutes11.negated();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes11);
        org.joda.time.Minutes minutes14 = minutes10.minus(minutes13);
        org.joda.time.DurationFieldType durationFieldType15 = minutes10.getFieldType();
        int int16 = minutes10.size();
        int int17 = minutes10.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT2147483647M" + "'", str7, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2147483647 + "'", int17 == 2147483647);
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = minutes0.get(durationFieldType1);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes6 = minutes0.dividedBy((int) (byte) 1);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.dividedBy(2);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        int int1 = minutes0.getMinutes();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes9 = minutes7.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = minutes10.get(durationFieldType11);
        org.joda.time.DurationFieldType durationFieldType13 = minutes10.getFieldType();
        int int14 = minutes9.get(durationFieldType13);
        org.joda.time.Minutes minutes16 = minutes9.plus((-1));
        org.joda.time.Minutes minutes18 = minutes9.minus((int) (short) 10);
        org.joda.time.Minutes minutes20 = minutes18.dividedBy((-2147483648));
        org.joda.time.Minutes minutes21 = minutes6.plus(minutes20);
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes24 = minutes22.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = minutes25.get(durationFieldType26);
        org.joda.time.MutablePeriod mutablePeriod28 = minutes25.toMutablePeriod();
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes25);
        boolean boolean30 = minutes24.isLessThan(minutes29);
        org.joda.time.DurationFieldType durationFieldType31 = minutes29.getFieldType();
        boolean boolean32 = minutes21.isSupported(durationFieldType31);
        boolean boolean33 = minutes0.isLessThan(minutes21);
        org.joda.time.Minutes minutes35 = minutes21.plus((int) ' ');
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod37 = minutes36.toMutablePeriod();
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes40 = minutes38.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes42 = minutes38.plus(0);
        int int43 = minutes36.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes38);
        org.joda.time.Minutes minutes45 = minutes38.plus((int) ' ');
        org.joda.time.Period period46 = minutes38.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod47 = minutes38.toMutablePeriod();
        org.joda.time.Period period48 = minutes38.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod49 = minutes38.toMutablePeriod();
        org.joda.time.Minutes minutes51 = minutes38.multipliedBy(100);
        org.joda.time.Minutes minutes53 = minutes51.minus((int) (short) 0);
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.MAX_VALUE;
        int int55 = minutes54.size();
        org.joda.time.Minutes minutes56 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes57 = minutes56.negated();
        org.joda.time.Minutes minutes59 = minutes57.dividedBy((int) (byte) -1);
        boolean boolean60 = minutes54.isLessThan(minutes57);
        org.joda.time.Minutes minutes61 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes57);
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes57);
        boolean boolean63 = minutes53.isLessThan(minutes57);
        org.joda.time.Minutes minutes65 = minutes53.dividedBy((-2147483647));
        int int66 = minutes35.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes53);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-2147483648) + "'", int1 == (-2147483648));
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-2) + "'", int14 == (-2));
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(mutablePeriod47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(mutablePeriod49);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.minus((int) (short) 0);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = minutes7.get(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType10 = minutes7.getFieldType();
        int int11 = minutes6.get(durationFieldType10);
        org.joda.time.Minutes minutes13 = minutes6.plus((-1));
        boolean boolean14 = minutes3.isGreaterThan(minutes6);
        org.joda.time.DurationFieldType durationFieldType15 = minutes6.getFieldType();
        org.joda.time.PeriodType periodType16 = minutes6.getPeriodType();
        boolean boolean17 = minutes0.isLessThan(minutes6);
        org.joda.time.Minutes minutes18 = minutes6.negated();
        org.joda.time.Minutes minutes20 = minutes18.plus(0);
        org.joda.time.Minutes minutes22 = minutes20.dividedBy((-214748364));
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-2) + "'", int11 == (-2));
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        int int1 = minutes0.size();
        int int3 = minutes0.getValue(0);
        org.joda.time.Minutes minutes4 = minutes0.negated();
        org.joda.time.Minutes minutes6 = minutes4.plus(0);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.minutes(10);
        org.joda.time.Minutes minutes10 = minutes8.plus(3);
        boolean boolean11 = minutes4.isLessThan(minutes8);
        org.joda.time.Minutes minutes12 = minutes8.negated();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2147483647 + "'", int3 == 2147483647);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(minutes12);
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes9 = minutes2.plus((-1));
        org.joda.time.Minutes minutes11 = minutes2.minus((int) (short) 10);
        org.joda.time.Duration duration12 = minutes2.toStandardDuration();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes2);
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy(3);
        org.joda.time.MutablePeriod mutablePeriod16 = minutes15.toMutablePeriod();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = minutes21.plus(0);
        int int26 = minutes19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes21);
        org.joda.time.Minutes minutes28 = minutes21.plus((int) ' ');
        java.lang.String str29 = minutes21.toString();
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod31 = minutes30.toMutablePeriod();
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes34 = minutes32.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes36 = minutes32.plus(0);
        int int37 = minutes30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes32);
        org.joda.time.Minutes minutes39 = minutes32.plus((int) ' ');
        java.lang.String str40 = minutes32.toString();
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean43 = minutes32.isLessThan(minutes42);
        org.joda.time.Minutes minutes44 = minutes21.minus(minutes32);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes46 = minutes45.negated();
        org.joda.time.DurationFieldType durationFieldType47 = minutes45.getFieldType();
        org.joda.time.DurationFieldType durationFieldType48 = minutes45.getFieldType();
        boolean boolean49 = minutes21.isSupported(durationFieldType48);
        org.joda.time.Duration duration50 = minutes21.toStandardDuration();
        boolean boolean51 = minutes18.equals((java.lang.Object) minutes21);
        org.joda.time.Minutes minutes52 = minutes15.minus(minutes21);
        org.joda.time.Minutes minutes54 = minutes15.plus((-3));
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2M" + "'", str29, "PT2M");
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "PT2M" + "'", str40, "PT2M");
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes54);
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.THREE;
        int int1 = minutes0.size();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod3 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = minutes4.plus(0);
        int int9 = minutes2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes4);
        org.joda.time.Minutes minutes11 = minutes4.plus((int) ' ');
        int int12 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes11);
        org.joda.time.Period period13 = minutes0.toPeriod();
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes16 = minutes14.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType17 = minutes16.getFieldType();
        org.joda.time.Minutes minutes18 = minutes16.negated();
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes20 = minutes19.negated();
        org.joda.time.Minutes minutes21 = minutes19.negated();
        java.lang.String str22 = minutes19.toString();
        int int23 = minutes19.size();
        org.joda.time.Minutes minutes25 = minutes19.minus(0);
        org.joda.time.Minutes minutes27 = minutes19.plus((int) (short) 0);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes19);
        boolean boolean29 = minutes18.isLessThan(minutes19);
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes32 = minutes30.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes34 = minutes30.plus(0);
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.MIN_VALUE;
        boolean boolean36 = minutes30.isGreaterThan(minutes35);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes38 = minutes37.negated();
        org.joda.time.Minutes minutes40 = minutes38.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes40);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes44 = minutes42.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType46 = null;
        int int47 = minutes45.get(durationFieldType46);
        org.joda.time.DurationFieldType durationFieldType48 = minutes45.getFieldType();
        int int49 = minutes44.get(durationFieldType48);
        int int50 = minutes41.get(durationFieldType48);
        org.joda.time.PeriodType periodType51 = minutes41.getPeriodType();
        int int52 = minutes41.getMinutes();
        boolean boolean53 = minutes30.isLessThan(minutes41);
        int int54 = minutes41.getMinutes();
        org.joda.time.Period period55 = minutes41.toPeriod();
        boolean boolean56 = minutes18.equals((java.lang.Object) minutes41);
        org.joda.time.Minutes minutes57 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes58 = minutes57.negated();
        org.joda.time.Minutes minutes59 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes57);
        java.lang.String str60 = minutes57.toString();
        org.joda.time.Minutes minutes61 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType62 = minutes61.getFieldType();
        boolean boolean63 = minutes57.isSupported(durationFieldType62);
        org.joda.time.Minutes minutes64 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes57);
        org.joda.time.MutablePeriod mutablePeriod65 = minutes64.toMutablePeriod();
        boolean boolean66 = minutes41.isGreaterThan(minutes64);
        org.joda.time.Minutes minutes67 = minutes64.negated();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes68 = minutes0.minus(minutes67);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 3 + 2147483647");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PT2147483647M" + "'", str22, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-2) + "'", int49 == (-2));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2147483647 + "'", int50 == 2147483647);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2147483647 + "'", int52 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2147483647 + "'", int54 == 2147483647);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "PT2147483647M" + "'", str60, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(mutablePeriod65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(minutes67);
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT-2147483548M");
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration3 = minutes2.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod4 = minutes2.toMutablePeriod();
        java.lang.String str5 = minutes2.toString();
        int int6 = minutes2.size();
        org.joda.time.Minutes minutes7 = minutes2.negated();
        org.joda.time.Minutes minutes8 = minutes1.plus(minutes2);
        org.joda.time.MutablePeriod mutablePeriod9 = minutes1.toMutablePeriod();
        org.joda.time.Minutes minutes10 = null;
        org.joda.time.Minutes minutes11 = minutes1.plus(minutes10);
        java.lang.String str12 = minutes11.toString();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PT2M" + "'", str5, "PT2M");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PT-2147483548M" + "'", str12, "PT-2147483548M");
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = minutes8.plus(0);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = minutes16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = minutes16.getFieldType();
        int int20 = minutes15.get(durationFieldType19);
        org.joda.time.Minutes minutes22 = minutes15.plus((-1));
        org.joda.time.Minutes minutes24 = minutes15.minus((int) (short) 10);
        org.joda.time.Minutes minutes26 = minutes24.dividedBy((-2147483648));
        org.joda.time.Minutes minutes27 = minutes12.plus(minutes26);
        org.joda.time.Minutes minutes28 = minutes2.minus(minutes12);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod30 = minutes29.toMutablePeriod();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes33 = minutes31.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes35 = minutes31.plus(0);
        int int36 = minutes29.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes31);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes39 = minutes37.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes41 = minutes37.plus(0);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes44 = minutes42.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType46 = null;
        int int47 = minutes45.get(durationFieldType46);
        org.joda.time.DurationFieldType durationFieldType48 = minutes45.getFieldType();
        int int49 = minutes44.get(durationFieldType48);
        org.joda.time.Minutes minutes51 = minutes44.plus((-1));
        org.joda.time.Minutes minutes53 = minutes44.minus((int) (short) 10);
        org.joda.time.Minutes minutes55 = minutes53.dividedBy((-2147483648));
        org.joda.time.Minutes minutes56 = minutes41.plus(minutes55);
        org.joda.time.Minutes minutes57 = minutes31.minus(minutes41);
        org.joda.time.PeriodType periodType58 = minutes31.getPeriodType();
        boolean boolean59 = minutes12.isLessThan(minutes31);
        org.joda.time.Minutes minutes60 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType61 = minutes60.getPeriodType();
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes63 = minutes62.negated();
        org.joda.time.Minutes minutes64 = minutes62.negated();
        org.joda.time.DurationFieldType durationFieldType65 = minutes62.getFieldType();
        java.lang.String str66 = minutes62.toString();
        boolean boolean67 = minutes60.isGreaterThan(minutes62);
        boolean boolean68 = minutes31.isLessThan(minutes60);
        // The following exception was thrown during execution in test generation
        try {
            int int70 = minutes60.getValue(1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-2) + "'", int20 == (-2));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-2) + "'", int49 == (-2));
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "PT2147483647M" + "'", str66, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        boolean boolean6 = minutes0.isGreaterThan(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes8 = minutes7.negated();
        org.joda.time.Minutes minutes10 = minutes8.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes10);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = minutes15.get(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = minutes15.getFieldType();
        int int19 = minutes14.get(durationFieldType18);
        int int20 = minutes11.get(durationFieldType18);
        org.joda.time.PeriodType periodType21 = minutes11.getPeriodType();
        int int22 = minutes11.getMinutes();
        boolean boolean23 = minutes0.isLessThan(minutes11);
        int int24 = minutes11.size();
        int int25 = minutes11.size();
        org.joda.time.Period period26 = minutes11.toPeriod();
        java.lang.Class<?> wildcardClass27 = minutes11.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2) + "'", int19 == (-2));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2147483647 + "'", int20 == 2147483647);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2147483647 + "'", int22 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes9 = minutes2.plus((-1));
        org.joda.time.Minutes minutes11 = minutes2.minus((int) (short) 10);
        org.joda.time.Duration duration12 = minutes2.toStandardDuration();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes2);
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy(3);
        java.lang.Class<?> wildcardClass16 = minutes13.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType3 = minutes2.getFieldType();
        org.joda.time.Minutes minutes4 = minutes2.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes6 = minutes5.negated();
        org.joda.time.Minutes minutes7 = minutes5.negated();
        java.lang.String str8 = minutes5.toString();
        int int9 = minutes5.size();
        org.joda.time.Minutes minutes11 = minutes5.minus(0);
        org.joda.time.Minutes minutes13 = minutes5.plus((int) (short) 0);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes5);
        boolean boolean15 = minutes4.isLessThan(minutes5);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes18 = minutes16.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes20 = minutes16.plus(0);
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MIN_VALUE;
        boolean boolean22 = minutes16.isGreaterThan(minutes21);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes24 = minutes23.negated();
        org.joda.time.Minutes minutes26 = minutes24.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes26);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes30 = minutes28.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = minutes31.get(durationFieldType32);
        org.joda.time.DurationFieldType durationFieldType34 = minutes31.getFieldType();
        int int35 = minutes30.get(durationFieldType34);
        int int36 = minutes27.get(durationFieldType34);
        org.joda.time.PeriodType periodType37 = minutes27.getPeriodType();
        int int38 = minutes27.getMinutes();
        boolean boolean39 = minutes16.isLessThan(minutes27);
        int int40 = minutes27.getMinutes();
        org.joda.time.Period period41 = minutes27.toPeriod();
        boolean boolean42 = minutes4.equals((java.lang.Object) minutes27);
        org.joda.time.Period period43 = minutes4.toPeriod();
        org.joda.time.Period period44 = minutes4.toPeriod();
        org.joda.time.Minutes minutes46 = minutes4.plus(2);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "PT2147483647M" + "'", str8, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-2) + "'", int35 == (-2));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2147483647 + "'", int36 == 2147483647);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2147483647 + "'", int38 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2147483647 + "'", int40 == 2147483647);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(minutes46);
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = minutes15.get(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = minutes15.getFieldType();
        int int19 = minutes14.get(durationFieldType18);
        boolean boolean20 = minutes3.isSupported(durationFieldType18);
        org.joda.time.Minutes minutes22 = minutes3.dividedBy((-2));
        org.joda.time.Minutes minutes24 = minutes22.multipliedBy((-22139006));
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes26 = minutes25.negated();
        org.joda.time.Minutes minutes27 = minutes25.negated();
        java.lang.String str28 = minutes25.toString();
        int int29 = minutes25.size();
        org.joda.time.Minutes minutes31 = minutes25.minus(0);
        org.joda.time.Minutes minutes33 = minutes25.plus((int) (short) 0);
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes25);
        org.joda.time.Minutes minutes35 = minutes24.plus(minutes34);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2) + "'", int19 == (-2));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "PT2147483647M" + "'", str28, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.THREE;
        int int1 = minutes0.size();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod3 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = minutes4.plus(0);
        int int9 = minutes2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes4);
        org.joda.time.Minutes minutes11 = minutes4.plus((int) ' ');
        int int12 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes11);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes16 = minutes14.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = minutes17.get(durationFieldType18);
        org.joda.time.DurationFieldType durationFieldType20 = minutes17.getFieldType();
        int int21 = minutes16.get(durationFieldType20);
        org.joda.time.Minutes minutes23 = minutes16.plus((-1));
        boolean boolean24 = minutes13.isGreaterThan(minutes16);
        org.joda.time.DurationFieldType durationFieldType25 = minutes16.getFieldType();
        int int27 = minutes16.getValue((int) (short) 0);
        org.joda.time.Period period28 = minutes16.toPeriod();
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes30 = minutes29.negated();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod32 = minutes31.toMutablePeriod();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes34 = minutes31.plus(minutes33);
        int int35 = minutes30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes33);
        org.joda.time.Minutes minutes36 = minutes16.minus(minutes30);
        boolean boolean37 = minutes0.isGreaterThan(minutes30);
        org.joda.time.Minutes minutes39 = minutes30.plus(2147483647);
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes42 = minutes40.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType43 = minutes42.getFieldType();
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes45 = minutes44.negated();
        org.joda.time.Minutes minutes46 = minutes44.negated();
        java.lang.String str47 = minutes44.toString();
        int int48 = minutes44.size();
        org.joda.time.Minutes minutes50 = minutes44.minus(0);
        org.joda.time.Duration duration51 = minutes50.toStandardDuration();
        boolean boolean52 = minutes42.isGreaterThan(minutes50);
        int int53 = minutes50.getMinutes();
        boolean boolean54 = minutes30.isGreaterThan(minutes50);
        org.joda.time.Minutes minutes55 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType56 = null;
        int int57 = minutes55.get(durationFieldType56);
        org.joda.time.MutablePeriod mutablePeriod58 = minutes55.toMutablePeriod();
        org.joda.time.Minutes minutes59 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes55);
        org.joda.time.Minutes minutes60 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType61 = null;
        int int62 = minutes60.get(durationFieldType61);
        org.joda.time.DurationFieldType durationFieldType63 = minutes60.getFieldType();
        boolean boolean64 = minutes55.isLessThan(minutes60);
        org.joda.time.Minutes minutes65 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes66 = minutes65.negated();
        org.joda.time.Minutes minutes67 = minutes65.negated();
        int int68 = minutes67.getMinutes();
        org.joda.time.DurationFieldType durationFieldType69 = minutes67.getFieldType();
        org.joda.time.Minutes minutes70 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes71 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType72 = minutes71.getPeriodType();
        org.joda.time.Minutes minutes73 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes74 = minutes73.negated();
        org.joda.time.Minutes minutes75 = minutes73.negated();
        org.joda.time.DurationFieldType durationFieldType76 = minutes73.getFieldType();
        java.lang.String str77 = minutes73.toString();
        boolean boolean78 = minutes71.isGreaterThan(minutes73);
        boolean boolean79 = minutes70.equals((java.lang.Object) minutes71);
        org.joda.time.Minutes minutes80 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes70);
        org.joda.time.Minutes minutes81 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes82 = minutes81.negated();
        org.joda.time.Minutes minutes83 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes81);
        org.joda.time.Minutes minutes84 = minutes80.minus(minutes83);
        org.joda.time.DurationFieldType durationFieldType85 = minutes80.getFieldType();
        int int86 = minutes67.get(durationFieldType85);
        int int87 = minutes60.get(durationFieldType85);
        int int88 = minutes30.get(durationFieldType85);
        org.joda.time.Minutes minutes90 = minutes30.dividedBy((-2147483646));
        org.joda.time.Duration duration91 = minutes30.toStandardDuration();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-2) + "'", int21 == (-2));
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-2) + "'", int27 == (-2));
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "PT2147483647M" + "'", str47, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2147483647 + "'", int53 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-2147483647) + "'", int68 == (-2147483647));
        org.junit.Assert.assertNotNull(durationFieldType69);
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertNotNull(periodType72);
        org.junit.Assert.assertNotNull(minutes73);
        org.junit.Assert.assertNotNull(minutes74);
        org.junit.Assert.assertNotNull(minutes75);
        org.junit.Assert.assertNotNull(durationFieldType76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "PT2147483647M" + "'", str77, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(minutes80);
        org.junit.Assert.assertNotNull(minutes81);
        org.junit.Assert.assertNotNull(minutes82);
        org.junit.Assert.assertNotNull(minutes83);
        org.junit.Assert.assertNotNull(minutes84);
        org.junit.Assert.assertNotNull(durationFieldType85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-2147483647) + "'", int86 == (-2147483647));
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-2147483648) + "'", int87 == (-2147483648));
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-2147483647) + "'", int88 == (-2147483647));
        org.junit.Assert.assertNotNull(minutes90);
        org.junit.Assert.assertNotNull(duration91);
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes9 = minutes2.plus((-1));
        org.joda.time.Minutes minutes11 = minutes2.minus((int) (short) 10);
        org.joda.time.Duration duration12 = minutes2.toStandardDuration();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes2);
        java.lang.String str14 = minutes13.toString();
        org.joda.time.Duration duration15 = minutes13.toStandardDuration();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "PT-2M" + "'", str14, "PT-2M");
        org.junit.Assert.assertNotNull(duration15);
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        int int1 = minutes0.size();
        org.joda.time.Duration duration2 = minutes0.toStandardDuration();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(minutes3);
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod2 = minutes0.toMutablePeriod();
        java.lang.String str3 = minutes0.toString();
        int int4 = minutes0.size();
        org.joda.time.Minutes minutes6 = minutes0.multipliedBy(0);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes9 = minutes7.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = minutes10.get(durationFieldType11);
        org.joda.time.DurationFieldType durationFieldType13 = minutes10.getFieldType();
        int int14 = minutes9.get(durationFieldType13);
        int int15 = minutes9.size();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod17 = minutes16.toMutablePeriod();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes19 = minutes16.plus(minutes18);
        int int20 = minutes19.getMinutes();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = minutes24.get(durationFieldType25);
        org.joda.time.DurationFieldType durationFieldType27 = minutes24.getFieldType();
        int int28 = minutes23.get(durationFieldType27);
        org.joda.time.Minutes minutes30 = minutes23.plus((-1));
        org.joda.time.Minutes minutes32 = minutes23.minus((int) (short) 10);
        org.joda.time.Minutes minutes34 = minutes32.dividedBy((-2147483648));
        org.joda.time.Minutes minutes36 = minutes32.plus(100);
        org.joda.time.DurationFieldType durationFieldType37 = minutes36.getFieldType();
        boolean boolean38 = minutes19.isSupported(durationFieldType37);
        boolean boolean39 = minutes9.isSupported(durationFieldType37);
        boolean boolean40 = minutes0.isSupported(durationFieldType37);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2M" + "'", str3, "PT2M");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-2) + "'", int14 == (-2));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-2147483645) + "'", int20 == (-2147483645));
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-2) + "'", int28 == (-2));
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        org.joda.time.Period period10 = minutes2.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod11 = minutes2.toMutablePeriod();
        org.joda.time.Period period12 = minutes2.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod13 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes15 = minutes2.multipliedBy(100);
        org.joda.time.Minutes minutes17 = minutes15.minus((int) (short) 0);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MAX_VALUE;
        int int19 = minutes18.size();
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes21 = minutes20.negated();
        org.joda.time.Minutes minutes23 = minutes21.dividedBy((int) (byte) -1);
        boolean boolean24 = minutes18.isLessThan(minutes21);
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes21);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes21);
        boolean boolean27 = minutes17.isLessThan(minutes21);
        // The following exception was thrown during execution in test generation
        try {
            int int29 = minutes21.getValue((-2147483646));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -2147483646");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes9 = minutes2.plus((-1));
        org.joda.time.Minutes minutes11 = minutes2.minus((int) (short) 10);
        org.joda.time.Minutes minutes13 = minutes11.dividedBy((-2147483648));
        org.joda.time.Minutes minutes14 = minutes13.negated();
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes16 = minutes15.negated();
        org.joda.time.Minutes minutes17 = minutes15.negated();
        org.joda.time.Minutes minutes18 = minutes13.minus(minutes17);
        org.joda.time.Minutes minutes20 = minutes17.plus((int) 'a');
        org.joda.time.Minutes minutes22 = minutes17.minus((int) (short) 0);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType3 = minutes2.getFieldType();
        org.joda.time.Period period4 = minutes2.toPeriod();
        org.joda.time.PeriodType periodType5 = minutes2.getPeriodType();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes8 = minutes6.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes9 = minutes6.negated();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes12 = minutes6.minus(minutes11);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod14 = minutes13.toMutablePeriod();
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod14);
        boolean boolean16 = minutes6.isLessThan(minutes15);
        org.joda.time.Period period17 = minutes15.toPeriod();
        int int18 = minutes15.getMinutes();
        int int19 = minutes15.getMinutes();
        boolean boolean20 = minutes2.isLessThan(minutes15);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-2147483648) + "'", int18 == (-2147483648));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2147483648) + "'", int19 == (-2147483648));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod2 = minutes0.toMutablePeriod();
        java.lang.String str3 = minutes0.toString();
        org.joda.time.PeriodType periodType4 = minutes0.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType6 = minutes0.getFieldType((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2M" + "'", str3, "PT2M");
        org.junit.Assert.assertNotNull(periodType4);
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod3 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = minutes4.plus(0);
        int int9 = minutes2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes4);
        org.joda.time.Minutes minutes11 = minutes4.plus((int) ' ');
        java.lang.String str12 = minutes4.toString();
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean15 = minutes4.isLessThan(minutes14);
        org.joda.time.MutablePeriod mutablePeriod16 = minutes4.toMutablePeriod();
        boolean boolean17 = minutes0.isLessThan(minutes4);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MIN_VALUE;
        int int19 = minutes18.getMinutes();
        boolean boolean20 = minutes4.equals((java.lang.Object) minutes18);
        org.joda.time.Minutes minutes22 = minutes4.dividedBy((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod23 = minutes4.toMutablePeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PT2M" + "'", str12, "PT2M");
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2147483648) + "'", int19 == (-2147483648));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType2 = minutes1.getPeriodType();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes4 = minutes3.negated();
        org.joda.time.Minutes minutes5 = minutes3.negated();
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        java.lang.String str7 = minutes3.toString();
        boolean boolean8 = minutes1.isGreaterThan(minutes3);
        boolean boolean9 = minutes0.equals((java.lang.Object) minutes1);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes11 = minutes0.negated();
        int int12 = minutes11.size();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT2147483647M" + "'", str7, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod2 = minutes0.toMutablePeriod();
        java.lang.String str3 = minutes0.toString();
        int int4 = minutes0.size();
        org.joda.time.Minutes minutes5 = minutes0.negated();
        org.joda.time.Minutes minutes6 = null;
        org.joda.time.Minutes minutes7 = minutes0.minus(minutes6);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes9 = minutes8.negated();
        org.joda.time.DurationFieldType durationFieldType10 = minutes8.getFieldType();
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes13 = minutes12.negated();
        org.joda.time.Minutes minutes14 = minutes12.negated();
        java.lang.String str15 = minutes12.toString();
        int int16 = minutes12.size();
        org.joda.time.Minutes minutes18 = minutes12.minus(0);
        org.joda.time.Minutes minutes20 = minutes12.plus((int) (short) 0);
        boolean boolean21 = minutes8.isLessThan(minutes12);
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes23 = minutes22.negated();
        org.joda.time.Minutes minutes24 = minutes22.negated();
        boolean boolean25 = minutes12.isGreaterThan(minutes22);
        org.joda.time.Minutes minutes26 = minutes7.minus(minutes22);
        org.joda.time.Duration duration27 = minutes22.toStandardDuration();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2M" + "'", str3, "PT2M");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PT2147483647M" + "'", str15, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(duration27);
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod8 = minutes7.toMutablePeriod();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod8);
        boolean boolean10 = minutes0.isLessThan(minutes9);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = minutes15.get(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = minutes15.getFieldType();
        int int19 = minutes14.get(durationFieldType18);
        org.joda.time.Minutes minutes21 = minutes14.plus((-1));
        boolean boolean22 = minutes11.isGreaterThan(minutes14);
        org.joda.time.Minutes minutes24 = minutes14.multipliedBy(2);
        org.joda.time.Minutes minutes25 = minutes24.negated();
        org.joda.time.Minutes minutes26 = minutes25.negated();
        boolean boolean27 = minutes0.isLessThan(minutes25);
        org.joda.time.Period period28 = minutes0.toPeriod();
        org.joda.time.Minutes minutes29 = minutes0.negated();
        java.lang.String str30 = minutes0.toString();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2) + "'", int19 == (-2));
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "PT2M" + "'", str30, "PT2M");
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        int int1 = minutes0.size();
        int int3 = minutes0.getValue(0);
        org.joda.time.Minutes minutes4 = minutes0.negated();
        org.joda.time.Minutes minutes6 = minutes4.plus(0);
        org.joda.time.Minutes minutes8 = minutes4.dividedBy((int) (byte) 10);
        int int9 = minutes8.size();
        java.lang.String str10 = minutes8.toString();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2147483647 + "'", int3 == 2147483647);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT-214748364M" + "'", str10, "PT-214748364M");
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes8 = minutes5.multipliedBy((int) (short) 1);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.dividedBy(2);
        int int12 = minutes9.size();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod14 = minutes13.toMutablePeriod();
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes17 = minutes15.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes19 = minutes15.plus(0);
        int int20 = minutes13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes15);
        org.joda.time.Minutes minutes22 = minutes15.plus((int) ' ');
        int int23 = minutes22.size();
        org.joda.time.Minutes minutes25 = minutes22.minus(0);
        org.joda.time.Minutes minutes26 = minutes9.plus(minutes22);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod28 = minutes27.toMutablePeriod();
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes30 = minutes27.plus(minutes29);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod32 = minutes31.toMutablePeriod();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes34 = minutes31.plus(minutes33);
        boolean boolean35 = minutes30.isLessThan(minutes31);
        org.joda.time.PeriodType periodType36 = minutes30.getPeriodType();
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes39 = minutes37.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes41 = minutes37.plus(0);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes44 = minutes42.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType46 = null;
        int int47 = minutes45.get(durationFieldType46);
        org.joda.time.DurationFieldType durationFieldType48 = minutes45.getFieldType();
        int int49 = minutes44.get(durationFieldType48);
        org.joda.time.Minutes minutes51 = minutes44.plus((-1));
        org.joda.time.Minutes minutes53 = minutes44.minus((int) (short) 10);
        org.joda.time.Minutes minutes55 = minutes53.dividedBy((-2147483648));
        org.joda.time.Minutes minutes56 = minutes41.plus(minutes55);
        org.joda.time.Minutes minutes57 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType58 = minutes57.getPeriodType();
        org.joda.time.Minutes minutes59 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes60 = minutes59.negated();
        org.joda.time.Minutes minutes61 = minutes59.negated();
        org.joda.time.DurationFieldType durationFieldType62 = minutes59.getFieldType();
        java.lang.String str63 = minutes59.toString();
        boolean boolean64 = minutes57.isGreaterThan(minutes59);
        boolean boolean65 = minutes41.isLessThan(minutes59);
        org.joda.time.PeriodType periodType66 = minutes59.getPeriodType();
        org.joda.time.Minutes minutes68 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes70 = minutes68.plus(0);
        org.joda.time.DurationFieldType durationFieldType71 = minutes70.getFieldType();
        boolean boolean72 = minutes59.isSupported(durationFieldType71);
        boolean boolean73 = minutes30.isSupported(durationFieldType71);
        boolean boolean74 = minutes26.isSupported(durationFieldType71);
        boolean boolean75 = minutes8.isGreaterThan(minutes26);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-2) + "'", int49 == (-2));
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "PT2147483647M" + "'", str63, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertNotNull(durationFieldType71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1473");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((int) (byte) 10);
        org.joda.time.DurationFieldType durationFieldType2 = null;
        int int3 = minutes1.get(durationFieldType2);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes5 = minutes4.negated();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes4);
        org.joda.time.MutablePeriod mutablePeriod7 = minutes6.toMutablePeriod();
        org.joda.time.PeriodType periodType8 = minutes6.getPeriodType();
        org.joda.time.Minutes minutes9 = minutes1.minus(minutes6);
        org.joda.time.Duration duration10 = minutes6.toStandardDuration();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(duration10);
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1474");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.minus((int) (short) 0);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes4 = minutes3.negated();
        org.joda.time.Minutes minutes5 = minutes3.negated();
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        boolean boolean7 = minutes0.isSupported(durationFieldType6);
        java.lang.String str8 = minutes0.toString();
        int int9 = minutes0.getMinutes();
        int int10 = minutes0.size();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "PT-2147483648M" + "'", str8, "PT-2147483648M");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-2147483648) + "'", int9 == (-2147483648));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1475");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.Minutes minutes13 = minutes3.multipliedBy(2);
        org.joda.time.Minutes minutes14 = minutes13.negated();
        org.joda.time.Minutes minutes16 = minutes13.plus(2147483647);
        int int17 = minutes13.getMinutes();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType19 = minutes13.getFieldType((-3));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -3");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-4) + "'", int17 == (-4));
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1476");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.PeriodType periodType2 = minutes1.getPeriodType();
        org.joda.time.Minutes minutes3 = minutes1.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes7 = minutes5.plus(0);
        org.joda.time.DurationFieldType durationFieldType8 = minutes7.getFieldType();
        int int9 = minutes3.get(durationFieldType8);
        org.joda.time.Minutes minutes11 = minutes3.dividedBy((int) ' ');
        java.lang.String str12 = minutes3.toString();
        org.joda.time.Duration duration13 = minutes3.toStandardDuration();
        org.joda.time.Minutes minutes14 = minutes3.negated();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2147483647 + "'", int9 == 2147483647);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PT2147483647M" + "'", str12, "PT2147483647M");
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(minutes14);
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1477");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = minutes0.negated();
        java.lang.String str3 = minutes0.toString();
        org.joda.time.Minutes minutes5 = minutes0.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes8 = minutes6.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes11 = minutes9.minus((int) (short) 1);
        org.joda.time.Minutes minutes13 = minutes11.multipliedBy(0);
        org.joda.time.Minutes minutes15 = minutes13.plus((-2147483648));
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes17 = minutes16.negated();
        org.joda.time.Minutes minutes18 = minutes16.negated();
        boolean boolean19 = minutes15.isGreaterThan(minutes18);
        int int20 = minutes6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes15);
        org.joda.time.MutablePeriod mutablePeriod21 = minutes15.toMutablePeriod();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration23 = minutes22.toStandardDuration();
        org.joda.time.Duration duration24 = minutes22.toStandardDuration();
        org.joda.time.Minutes minutes26 = minutes22.minus(2);
        boolean boolean27 = minutes15.isGreaterThan(minutes26);
        int int28 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes26);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes30 = minutes29.negated();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes29);
        java.lang.String str32 = minutes29.toString();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType34 = minutes33.getFieldType();
        boolean boolean35 = minutes29.isSupported(durationFieldType34);
        org.joda.time.DurationFieldType durationFieldType36 = minutes29.getFieldType();
        boolean boolean37 = minutes0.isSupported(durationFieldType36);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds38 = minutes0.toStandardSeconds();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 2147483647 * 60");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2147483647M" + "'", str3, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "PT2147483647M" + "'", str32, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1478");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        java.lang.String str10 = minutes2.toString();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod12 = minutes11.toMutablePeriod();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes17 = minutes13.plus(0);
        int int18 = minutes11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes13);
        org.joda.time.Minutes minutes20 = minutes13.plus((int) ' ');
        java.lang.String str21 = minutes13.toString();
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean24 = minutes13.isLessThan(minutes23);
        org.joda.time.Minutes minutes25 = minutes2.minus(minutes13);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes27 = minutes26.negated();
        org.joda.time.DurationFieldType durationFieldType28 = minutes26.getFieldType();
        org.joda.time.DurationFieldType durationFieldType29 = minutes26.getFieldType();
        boolean boolean30 = minutes2.isSupported(durationFieldType29);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = minutes31.get(durationFieldType32);
        org.joda.time.MutablePeriod mutablePeriod34 = minutes31.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType35 = minutes31.getFieldType();
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration37 = minutes36.toStandardDuration();
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes36);
        boolean boolean39 = minutes31.isGreaterThan(minutes36);
        org.joda.time.Minutes minutes40 = minutes2.plus(minutes36);
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes43 = minutes41.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes46 = minutes44.minus((int) (short) 1);
        org.joda.time.Minutes minutes48 = minutes46.multipliedBy(0);
        org.joda.time.Minutes minutes50 = minutes48.plus((-2147483648));
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes52 = minutes51.negated();
        org.joda.time.Minutes minutes53 = minutes51.negated();
        boolean boolean54 = minutes50.isGreaterThan(minutes53);
        int int55 = minutes41.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes50);
        org.joda.time.Minutes minutes56 = minutes41.negated();
        org.joda.time.Minutes minutes57 = minutes40.plus(minutes56);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT2M" + "'", str10, "PT2M");
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT2M" + "'", str21, "PT2M");
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes57);
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1479");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.PeriodType periodType2 = minutes1.getPeriodType();
        org.joda.time.Minutes minutes4 = minutes1.minus(0);
        org.joda.time.Minutes minutes6 = minutes1.minus((-1));
        org.joda.time.Minutes minutes7 = minutes1.negated();
        org.joda.time.Minutes minutes9 = minutes7.multipliedBy(1);
        org.joda.time.Minutes minutes11 = minutes9.plus((int) (byte) -1);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1480");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = minutes0.negated();
        java.lang.String str3 = minutes0.toString();
        org.joda.time.Minutes minutes5 = minutes0.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes8 = minutes6.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes11 = minutes9.minus((int) (short) 1);
        org.joda.time.Minutes minutes13 = minutes11.multipliedBy(0);
        org.joda.time.Minutes minutes15 = minutes13.plus((-2147483648));
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes17 = minutes16.negated();
        org.joda.time.Minutes minutes18 = minutes16.negated();
        boolean boolean19 = minutes15.isGreaterThan(minutes18);
        int int20 = minutes6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes15);
        org.joda.time.MutablePeriod mutablePeriod21 = minutes15.toMutablePeriod();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration23 = minutes22.toStandardDuration();
        org.joda.time.Duration duration24 = minutes22.toStandardDuration();
        org.joda.time.Minutes minutes26 = minutes22.minus(2);
        boolean boolean27 = minutes15.isGreaterThan(minutes26);
        int int28 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes26);
        org.joda.time.PeriodType periodType29 = minutes0.getPeriodType();
        org.joda.time.PeriodType periodType30 = minutes0.getPeriodType();
        org.joda.time.PeriodType periodType31 = minutes0.getPeriodType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2147483647M" + "'", str3, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(periodType31);
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1481");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = minutes5.get(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType8 = minutes5.getFieldType();
        int int9 = minutes4.get(durationFieldType8);
        org.joda.time.Minutes minutes11 = minutes4.plus((-1));
        org.joda.time.Minutes minutes13 = minutes4.minus((int) (short) 10);
        org.joda.time.Duration duration14 = minutes4.toStandardDuration();
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes16 = minutes15.negated();
        org.joda.time.Minutes minutes17 = minutes15.negated();
        java.lang.String str18 = minutes15.toString();
        org.joda.time.Minutes minutes20 = minutes15.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes24 = minutes22.multipliedBy((int) (byte) 0);
        boolean boolean25 = minutes20.equals((java.lang.Object) minutes22);
        boolean boolean26 = minutes4.isGreaterThan(minutes22);
        org.joda.time.Minutes minutes27 = minutes0.plus(minutes4);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes31 = minutes29.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = minutes32.get(durationFieldType33);
        org.joda.time.DurationFieldType durationFieldType35 = minutes32.getFieldType();
        int int36 = minutes31.get(durationFieldType35);
        org.joda.time.Minutes minutes38 = minutes31.plus((-1));
        boolean boolean39 = minutes28.isGreaterThan(minutes31);
        org.joda.time.DurationFieldType durationFieldType40 = minutes31.getFieldType();
        int int42 = minutes31.getValue((int) (short) 0);
        org.joda.time.Period period43 = minutes31.toPeriod();
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes45 = minutes44.negated();
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod47 = minutes46.toMutablePeriod();
        org.joda.time.Minutes minutes48 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes49 = minutes46.plus(minutes48);
        int int50 = minutes45.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes48);
        org.joda.time.Minutes minutes51 = minutes31.minus(minutes45);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes52 = minutes27.minus(minutes45);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 2147483645 + 2147483647");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-2) + "'", int9 == (-2));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "PT2147483647M" + "'", str18, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-2) + "'", int36 == (-2));
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-2) + "'", int42 == (-2));
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(mutablePeriod47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(minutes51);
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1482");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = minutes0.negated();
        org.joda.time.DurationFieldType durationFieldType3 = minutes0.getFieldType();
        java.lang.String str4 = minutes0.toString();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes6 = minutes5.negated();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes5);
        int int8 = minutes5.size();
        org.joda.time.MutablePeriod mutablePeriod9 = minutes5.toMutablePeriod();
        boolean boolean10 = minutes0.equals((java.lang.Object) minutes5);
        org.joda.time.DurationFieldType durationFieldType12 = minutes5.getFieldType((int) (short) 0);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod14 = minutes13.toMutablePeriod();
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes17 = minutes15.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes19 = minutes15.plus(0);
        int int20 = minutes13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes15);
        org.joda.time.Minutes minutes22 = minutes15.plus((int) ' ');
        java.lang.String str23 = minutes15.toString();
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean26 = minutes15.isLessThan(minutes25);
        org.joda.time.Period period27 = minutes25.toPeriod();
        boolean boolean28 = minutes5.isGreaterThan(minutes25);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration30 = minutes29.toStandardDuration();
        org.joda.time.Duration duration31 = minutes29.toStandardDuration();
        org.joda.time.Minutes minutes33 = minutes29.minus(2);
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.MIN_VALUE;
        int int35 = minutes34.getMinutes();
        org.joda.time.PeriodType periodType36 = minutes34.getPeriodType();
        org.joda.time.Minutes minutes37 = null;
        org.joda.time.Minutes minutes38 = minutes34.plus(minutes37);
        boolean boolean39 = minutes29.isLessThan(minutes38);
        int int40 = minutes38.getMinutes();
        boolean boolean41 = minutes5.equals((java.lang.Object) minutes38);
        org.joda.time.Minutes minutes43 = minutes38.dividedBy(2147483647);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT2147483647M" + "'", str4, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT2M" + "'", str23, "PT2M");
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-2147483648) + "'", int35 == (-2147483648));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-2147483648) + "'", int40 == (-2147483648));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(minutes43);
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1483");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType3 = minutes2.getFieldType();
        org.joda.time.Minutes minutes4 = minutes2.negated();
        org.joda.time.Minutes minutes6 = minutes2.plus((int) (short) 1);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes9 = minutes7.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = minutes10.get(durationFieldType11);
        org.joda.time.MutablePeriod mutablePeriod13 = minutes10.toMutablePeriod();
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes10);
        boolean boolean15 = minutes9.isLessThan(minutes14);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes18 = minutes16.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = minutes19.get(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType22 = minutes19.getFieldType();
        int int23 = minutes18.get(durationFieldType22);
        org.joda.time.Minutes minutes25 = minutes18.plus((-1));
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod27 = minutes26.toMutablePeriod();
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes30 = minutes28.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes32 = minutes28.plus(0);
        int int33 = minutes26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes28);
        org.joda.time.Minutes minutes35 = minutes28.plus((int) ' ');
        java.lang.String str36 = minutes28.toString();
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean39 = minutes28.isLessThan(minutes38);
        boolean boolean40 = minutes25.isLessThan(minutes28);
        org.joda.time.Minutes minutes41 = minutes9.minus(minutes25);
        org.joda.time.MutablePeriod mutablePeriod42 = minutes9.toMutablePeriod();
        org.joda.time.Minutes minutes44 = minutes9.dividedBy(2);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes47 = minutes45.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes48 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = minutes48.get(durationFieldType49);
        org.joda.time.DurationFieldType durationFieldType51 = minutes48.getFieldType();
        int int52 = minutes47.get(durationFieldType51);
        org.joda.time.Minutes minutes54 = minutes47.plus((-1));
        org.joda.time.Minutes minutes55 = minutes54.negated();
        org.joda.time.Minutes minutes56 = minutes44.plus(minutes55);
        org.joda.time.Minutes minutes58 = minutes44.minus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType59 = minutes58.getFieldType();
        boolean boolean60 = minutes2.isLessThan(minutes58);
        org.joda.time.Minutes minutes62 = minutes58.plus(100);
        org.joda.time.Period period63 = minutes58.toPeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-2) + "'", int23 == (-2));
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "PT2M" + "'", str36, "PT2M");
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-2) + "'", int52 == (-2));
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(period63);
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1484");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (byte) 0);
        org.joda.time.Minutes minutes4 = minutes1.negated();
        org.joda.time.DurationFieldType durationFieldType5 = minutes1.getFieldType();
        org.joda.time.DurationFieldType durationFieldType6 = minutes1.getFieldType();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(durationFieldType6);
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1485");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = minutes0.get(durationFieldType1);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType4 = minutes0.getFieldType();
        org.joda.time.Minutes minutes6 = minutes0.dividedBy((-1));
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MAX_VALUE;
        int int8 = minutes7.size();
        org.joda.time.Minutes minutes9 = minutes0.plus(minutes7);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = minutes13.get(durationFieldType14);
        org.joda.time.DurationFieldType durationFieldType16 = minutes13.getFieldType();
        int int17 = minutes12.get(durationFieldType16);
        int int18 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes12);
        org.joda.time.PeriodType periodType19 = minutes0.getPeriodType();
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes22 = minutes20.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType23 = minutes22.getFieldType();
        int int24 = minutes0.get(durationFieldType23);
        // The following exception was thrown during execution in test generation
        try {
            int int26 = minutes0.getValue((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-2) + "'", int17 == (-2));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-2147483648) + "'", int24 == (-2147483648));
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1486");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        int int7 = minutes0.size();
        int int8 = minutes0.size();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.DurationFieldType durationFieldType10 = minutes9.getFieldType();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes13 = minutes11.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = minutes11.plus(0);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes18 = minutes16.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = minutes19.get(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType22 = minutes19.getFieldType();
        int int23 = minutes18.get(durationFieldType22);
        org.joda.time.Minutes minutes25 = minutes18.plus((-1));
        org.joda.time.Minutes minutes27 = minutes18.minus((int) (short) 10);
        org.joda.time.Minutes minutes29 = minutes27.dividedBy((-2147483648));
        org.joda.time.Minutes minutes30 = minutes15.plus(minutes29);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType32 = minutes31.getPeriodType();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes34 = minutes33.negated();
        org.joda.time.Minutes minutes35 = minutes33.negated();
        org.joda.time.DurationFieldType durationFieldType36 = minutes33.getFieldType();
        java.lang.String str37 = minutes33.toString();
        boolean boolean38 = minutes31.isGreaterThan(minutes33);
        boolean boolean39 = minutes15.isLessThan(minutes33);
        org.joda.time.PeriodType periodType40 = minutes33.getPeriodType();
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes44 = minutes42.plus(0);
        org.joda.time.DurationFieldType durationFieldType45 = minutes44.getFieldType();
        boolean boolean46 = minutes33.isSupported(durationFieldType45);
        org.joda.time.Duration duration47 = minutes33.toStandardDuration();
        org.joda.time.Minutes minutes48 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType49 = minutes48.getPeriodType();
        org.joda.time.Minutes minutes50 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes51 = minutes50.negated();
        org.joda.time.Minutes minutes52 = minutes50.negated();
        org.joda.time.DurationFieldType durationFieldType53 = minutes50.getFieldType();
        java.lang.String str54 = minutes50.toString();
        boolean boolean55 = minutes48.isGreaterThan(minutes50);
        org.joda.time.Minutes minutes56 = minutes50.negated();
        boolean boolean57 = minutes33.isGreaterThan(minutes56);
        org.joda.time.Minutes minutes59 = minutes56.plus((int) (short) -1);
        int int60 = minutes9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes56);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-2) + "'", int23 == (-2));
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "PT2147483647M" + "'", str37, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "PT2147483647M" + "'", str54, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1487");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((int) (short) 100);
        org.joda.time.MutablePeriod mutablePeriod2 = minutes1.toMutablePeriod();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1488");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = minutes0.get(durationFieldType1);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes6 = minutes4.dividedBy(10);
        org.joda.time.Period period7 = minutes4.toPeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(period7);
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1489");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        boolean boolean6 = minutes0.isGreaterThan(minutes5);
        org.joda.time.PeriodType periodType7 = minutes0.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType8 = minutes0.getFieldType();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes11 = minutes9.dividedBy((int) 'a');
        org.joda.time.Minutes minutes13 = minutes11.multipliedBy((-12));
        org.joda.time.Minutes minutes14 = minutes0.minus(minutes11);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.minutes(2147483647);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes20 = minutes18.plus(0);
        org.joda.time.PeriodType periodType21 = minutes18.getPeriodType();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes23 = minutes22.negated();
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod25 = minutes24.toMutablePeriod();
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes27 = minutes24.plus(minutes26);
        int int28 = minutes23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes26);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MAX_VALUE;
        int int30 = minutes23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes29);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes33 = minutes31.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = minutes34.get(durationFieldType35);
        org.joda.time.MutablePeriod mutablePeriod37 = minutes34.toMutablePeriod();
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes34);
        boolean boolean39 = minutes33.isLessThan(minutes38);
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes42 = minutes40.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes43 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType44 = null;
        int int45 = minutes43.get(durationFieldType44);
        org.joda.time.DurationFieldType durationFieldType46 = minutes43.getFieldType();
        int int47 = minutes42.get(durationFieldType46);
        org.joda.time.Minutes minutes49 = minutes42.plus((-1));
        org.joda.time.Minutes minutes50 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod51 = minutes50.toMutablePeriod();
        org.joda.time.Minutes minutes52 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes54 = minutes52.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes56 = minutes52.plus(0);
        int int57 = minutes50.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes52);
        org.joda.time.Minutes minutes59 = minutes52.plus((int) ' ');
        java.lang.String str60 = minutes52.toString();
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean63 = minutes52.isLessThan(minutes62);
        boolean boolean64 = minutes49.isLessThan(minutes52);
        org.joda.time.Minutes minutes65 = minutes33.minus(minutes49);
        org.joda.time.MutablePeriod mutablePeriod66 = minutes33.toMutablePeriod();
        org.joda.time.Minutes minutes68 = minutes33.dividedBy(2);
        org.joda.time.Minutes minutes69 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes71 = minutes69.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes72 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType73 = null;
        int int74 = minutes72.get(durationFieldType73);
        org.joda.time.DurationFieldType durationFieldType75 = minutes72.getFieldType();
        int int76 = minutes71.get(durationFieldType75);
        org.joda.time.Minutes minutes78 = minutes71.plus((-1));
        org.joda.time.Minutes minutes79 = minutes78.negated();
        org.joda.time.Minutes minutes80 = minutes68.plus(minutes79);
        org.joda.time.Minutes minutes82 = minutes68.minus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType83 = minutes82.getFieldType();
        int int84 = minutes29.get(durationFieldType83);
        int int85 = minutes18.get(durationFieldType83);
        int int86 = minutes16.get(durationFieldType83);
        int int87 = minutes11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes16);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-2) + "'", int47 == (-2));
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "PT2M" + "'", str60, "PT2M");
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(mutablePeriod66);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(durationFieldType75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-2) + "'", int76 == (-2));
        org.junit.Assert.assertNotNull(minutes78);
        org.junit.Assert.assertNotNull(minutes79);
        org.junit.Assert.assertNotNull(minutes80);
        org.junit.Assert.assertNotNull(minutes82);
        org.junit.Assert.assertNotNull(durationFieldType83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 2147483647 + "'", int84 == 2147483647);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 2147483647 + "'", int86 == 2147483647);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1490");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes9 = minutes2.plus((-1));
        org.joda.time.Minutes minutes11 = minutes2.minus((int) (short) 10);
        org.joda.time.Minutes minutes13 = minutes11.dividedBy((-2147483648));
        org.joda.time.Minutes minutes14 = minutes13.negated();
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes16 = minutes15.negated();
        org.joda.time.Minutes minutes17 = minutes15.negated();
        org.joda.time.Minutes minutes18 = minutes13.minus(minutes17);
        org.joda.time.Minutes minutes20 = minutes17.plus((int) 'a');
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes20);
        org.joda.time.Minutes minutes23 = minutes20.dividedBy((int) (byte) 1);
        java.lang.String str24 = minutes20.toString();
        org.joda.time.Period period25 = minutes20.toPeriod();
        org.joda.time.Duration duration26 = minutes20.toStandardDuration();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "PT-2147483550M" + "'", str24, "PT-2147483550M");
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration26);
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1491");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.minus((int) (short) 1);
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy(0);
        org.joda.time.Minutes minutes6 = minutes4.plus((-2147483648));
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.TWO;
        boolean boolean8 = minutes4.isGreaterThan(minutes7);
        org.joda.time.DurationFieldType durationFieldType9 = minutes7.getFieldType();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.minutes((int) 'a');
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType15 = minutes14.getFieldType();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes17 = minutes16.negated();
        org.joda.time.Minutes minutes18 = minutes16.negated();
        java.lang.String str19 = minutes16.toString();
        int int20 = minutes16.size();
        org.joda.time.Minutes minutes22 = minutes16.minus(0);
        org.joda.time.Duration duration23 = minutes22.toStandardDuration();
        boolean boolean24 = minutes14.isGreaterThan(minutes22);
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes14);
        org.joda.time.DurationFieldType durationFieldType26 = minutes14.getFieldType();
        boolean boolean27 = minutes11.isSupported(durationFieldType26);
        org.joda.time.Minutes minutes28 = minutes7.minus(minutes11);
        org.joda.time.Minutes minutes30 = minutes11.plus((int) (byte) 10);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "PT2147483647M" + "'", str19, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1492");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        org.joda.time.Minutes minutes14 = minutes7.plus((-1));
        org.joda.time.Minutes minutes16 = minutes7.minus((int) (short) 10);
        org.joda.time.Minutes minutes18 = minutes16.dividedBy((-2147483648));
        org.joda.time.Minutes minutes19 = minutes4.plus(minutes18);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes22 = minutes20.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = minutes23.get(durationFieldType24);
        org.joda.time.MutablePeriod mutablePeriod26 = minutes23.toMutablePeriod();
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes23);
        boolean boolean28 = minutes22.isLessThan(minutes27);
        org.joda.time.DurationFieldType durationFieldType29 = minutes27.getFieldType();
        boolean boolean30 = minutes19.isSupported(durationFieldType29);
        org.joda.time.Minutes minutes32 = minutes19.plus((int) (short) -1);
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes35 = minutes33.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes36 = minutes33.negated();
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes39 = minutes33.minus(minutes38);
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod41 = minutes40.toMutablePeriod();
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod41);
        boolean boolean43 = minutes33.isLessThan(minutes42);
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes42);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes47 = minutes45.minus((int) (short) 0);
        boolean boolean48 = minutes42.isLessThan(minutes47);
        org.joda.time.Minutes minutes50 = minutes47.multipliedBy((int) (short) 0);
        boolean boolean51 = minutes19.isGreaterThan(minutes50);
        int int52 = minutes19.getMinutes();
        int int53 = minutes19.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1493");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT-2M");
        int int2 = minutes1.size();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType7 = minutes3.getFieldType();
        org.joda.time.Minutes minutes9 = minutes3.dividedBy((-1));
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        int int11 = minutes10.size();
        org.joda.time.Minutes minutes12 = minutes3.plus(minutes10);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = minutes16.get(durationFieldType17);
        org.joda.time.MutablePeriod mutablePeriod19 = minutes16.toMutablePeriod();
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes16);
        boolean boolean21 = minutes15.isLessThan(minutes20);
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes24 = minutes22.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = minutes25.get(durationFieldType26);
        org.joda.time.DurationFieldType durationFieldType28 = minutes25.getFieldType();
        int int29 = minutes24.get(durationFieldType28);
        org.joda.time.Minutes minutes31 = minutes24.plus((-1));
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod33 = minutes32.toMutablePeriod();
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes36 = minutes34.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes38 = minutes34.plus(0);
        int int39 = minutes32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes34);
        org.joda.time.Minutes minutes41 = minutes34.plus((int) ' ');
        java.lang.String str42 = minutes34.toString();
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean45 = minutes34.isLessThan(minutes44);
        boolean boolean46 = minutes31.isLessThan(minutes34);
        org.joda.time.Minutes minutes47 = minutes15.minus(minutes31);
        org.joda.time.MutablePeriod mutablePeriod48 = minutes15.toMutablePeriod();
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod50 = minutes49.toMutablePeriod();
        boolean boolean51 = minutes15.isLessThan(minutes49);
        org.joda.time.Minutes minutes53 = minutes15.plus((int) ' ');
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes56 = minutes54.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes57 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType58 = null;
        int int59 = minutes57.get(durationFieldType58);
        org.joda.time.DurationFieldType durationFieldType60 = minutes57.getFieldType();
        int int61 = minutes56.get(durationFieldType60);
        boolean boolean62 = minutes15.isSupported(durationFieldType60);
        int int63 = minutes12.get(durationFieldType60);
        boolean boolean64 = minutes1.isGreaterThan(minutes12);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-2) + "'", int29 == (-2));
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT2M" + "'", str42, "PT2M");
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(mutablePeriod50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(durationFieldType60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-2) + "'", int61 == (-2));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1494");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        int int1 = minutes0.getMinutes();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes3 = minutes2.negated();
        org.joda.time.Minutes minutes4 = minutes2.negated();
        org.joda.time.DurationFieldType durationFieldType5 = minutes2.getFieldType();
        int int6 = minutes0.get(durationFieldType5);
        org.joda.time.Minutes minutes8 = minutes0.dividedBy(34);
        org.joda.time.Minutes minutes9 = minutes8.negated();
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes9);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-2147483648) + "'", int1 == (-2147483648));
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-2147483648) + "'", int6 == (-2147483648));
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1495");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT-2147483648M");
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = minutes5.get(durationFieldType6);
        org.joda.time.MutablePeriod mutablePeriod8 = minutes5.toMutablePeriod();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes5);
        boolean boolean10 = minutes4.isLessThan(minutes9);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes13 = minutes11.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType15 = null;
        int int16 = minutes14.get(durationFieldType15);
        org.joda.time.DurationFieldType durationFieldType17 = minutes14.getFieldType();
        int int18 = minutes13.get(durationFieldType17);
        org.joda.time.Minutes minutes20 = minutes13.plus((-1));
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod22 = minutes21.toMutablePeriod();
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes25 = minutes23.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes27 = minutes23.plus(0);
        int int28 = minutes21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes23);
        org.joda.time.Minutes minutes30 = minutes23.plus((int) ' ');
        java.lang.String str31 = minutes23.toString();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean34 = minutes23.isLessThan(minutes33);
        boolean boolean35 = minutes20.isLessThan(minutes23);
        org.joda.time.Minutes minutes36 = minutes4.minus(minutes20);
        org.joda.time.MutablePeriod mutablePeriod37 = minutes4.toMutablePeriod();
        org.joda.time.Minutes minutes39 = minutes4.dividedBy(2);
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes42 = minutes40.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes43 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType44 = null;
        int int45 = minutes43.get(durationFieldType44);
        org.joda.time.DurationFieldType durationFieldType46 = minutes43.getFieldType();
        int int47 = minutes42.get(durationFieldType46);
        org.joda.time.Minutes minutes49 = minutes42.plus((-1));
        org.joda.time.Minutes minutes50 = minutes49.negated();
        org.joda.time.Minutes minutes51 = minutes39.plus(minutes50);
        org.joda.time.Minutes minutes53 = minutes39.minus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType54 = minutes53.getFieldType();
        org.joda.time.Minutes minutes55 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes57 = minutes55.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes59 = minutes55.plus(0);
        org.joda.time.Minutes minutes60 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes62 = minutes60.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes63 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType64 = null;
        int int65 = minutes63.get(durationFieldType64);
        org.joda.time.DurationFieldType durationFieldType66 = minutes63.getFieldType();
        int int67 = minutes62.get(durationFieldType66);
        org.joda.time.Minutes minutes69 = minutes62.plus((-1));
        org.joda.time.Minutes minutes71 = minutes62.minus((int) (short) 10);
        org.joda.time.Minutes minutes73 = minutes71.dividedBy((-2147483648));
        org.joda.time.Minutes minutes74 = minutes59.plus(minutes73);
        org.joda.time.Minutes minutes75 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes77 = minutes75.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes78 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType79 = null;
        int int80 = minutes78.get(durationFieldType79);
        org.joda.time.MutablePeriod mutablePeriod81 = minutes78.toMutablePeriod();
        org.joda.time.Minutes minutes82 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes78);
        boolean boolean83 = minutes77.isLessThan(minutes82);
        org.joda.time.DurationFieldType durationFieldType84 = minutes82.getFieldType();
        boolean boolean85 = minutes74.isSupported(durationFieldType84);
        org.joda.time.Minutes minutes86 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes88 = minutes86.multipliedBy((int) (short) -1);
        org.joda.time.Period period89 = minutes88.toPeriod();
        org.joda.time.Minutes minutes90 = minutes74.plus(minutes88);
        boolean boolean91 = minutes53.equals((java.lang.Object) minutes74);
        boolean boolean92 = minutes1.equals((java.lang.Object) minutes53);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes94 = minutes1.multipliedBy(34);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: -2147483648 * 34");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-2) + "'", int18 == (-2));
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "PT2M" + "'", str31, "PT2M");
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-2) + "'", int47 == (-2));
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(durationFieldType66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-2) + "'", int67 == (-2));
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertNotNull(minutes73);
        org.junit.Assert.assertNotNull(minutes74);
        org.junit.Assert.assertNotNull(minutes75);
        org.junit.Assert.assertNotNull(minutes77);
        org.junit.Assert.assertNotNull(minutes78);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod81);
        org.junit.Assert.assertNotNull(minutes82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(durationFieldType84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(minutes86);
        org.junit.Assert.assertNotNull(minutes88);
        org.junit.Assert.assertNotNull(period89);
        org.junit.Assert.assertNotNull(minutes90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1496");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod8 = minutes7.toMutablePeriod();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod8);
        boolean boolean10 = minutes0.isLessThan(minutes9);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes9);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes14 = minutes12.minus((int) (short) 0);
        boolean boolean15 = minutes9.isLessThan(minutes14);
        org.joda.time.MutablePeriod mutablePeriod16 = minutes14.toMutablePeriod();
        org.joda.time.Minutes minutes18 = minutes14.dividedBy((int) 'a');
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(minutes18);
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1497");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod3 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = minutes4.plus(0);
        int int9 = minutes2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes4);
        org.joda.time.Minutes minutes11 = minutes4.plus((int) ' ');
        java.lang.String str12 = minutes4.toString();
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean15 = minutes4.isLessThan(minutes14);
        org.joda.time.MutablePeriod mutablePeriod16 = minutes4.toMutablePeriod();
        boolean boolean17 = minutes0.isLessThan(minutes4);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MIN_VALUE;
        int int19 = minutes18.getMinutes();
        boolean boolean20 = minutes4.equals((java.lang.Object) minutes18);
        org.joda.time.Minutes minutes22 = minutes4.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes25 = minutes23.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes26 = minutes23.negated();
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes29 = minutes23.minus(minutes28);
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod31 = minutes30.toMutablePeriod();
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod31);
        boolean boolean33 = minutes23.isLessThan(minutes32);
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod35 = minutes34.toMutablePeriod();
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes37 = minutes34.plus(minutes36);
        org.joda.time.Period period38 = minutes37.toPeriod();
        int int39 = minutes32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes37);
        boolean boolean40 = minutes4.isLessThan(minutes32);
        org.joda.time.Minutes minutes42 = minutes4.plus((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = minutes42.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PT2M" + "'", str12, "PT2M");
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2147483648) + "'", int19 == (-2147483648));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1498");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = minutes12.getFieldType();
        int int16 = minutes11.get(durationFieldType15);
        org.joda.time.Minutes minutes18 = minutes11.plus((-1));
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = minutes21.plus(0);
        int int26 = minutes19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes21);
        org.joda.time.Minutes minutes28 = minutes21.plus((int) ' ');
        java.lang.String str29 = minutes21.toString();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean32 = minutes21.isLessThan(minutes31);
        boolean boolean33 = minutes18.isLessThan(minutes21);
        org.joda.time.Minutes minutes34 = minutes2.minus(minutes18);
        org.joda.time.MutablePeriod mutablePeriod35 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod37 = minutes36.toMutablePeriod();
        boolean boolean38 = minutes2.isLessThan(minutes36);
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType41 = minutes40.getPeriodType();
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes43 = minutes42.negated();
        org.joda.time.Minutes minutes44 = minutes42.negated();
        org.joda.time.DurationFieldType durationFieldType45 = minutes42.getFieldType();
        java.lang.String str46 = minutes42.toString();
        boolean boolean47 = minutes40.isGreaterThan(minutes42);
        boolean boolean48 = minutes39.equals((java.lang.Object) minutes40);
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes39);
        org.joda.time.Minutes minutes50 = minutes39.negated();
        boolean boolean51 = minutes2.isGreaterThan(minutes50);
        org.joda.time.Minutes minutes52 = org.joda.time.Minutes.MAX_VALUE;
        int int53 = minutes52.size();
        int int55 = minutes52.getValue(0);
        org.joda.time.Minutes minutes56 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes52);
        org.joda.time.Minutes minutes57 = minutes50.plus(minutes56);
        org.joda.time.PeriodType periodType58 = minutes57.getPeriodType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2M" + "'", str29, "PT2M");
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "PT2147483647M" + "'", str46, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2147483647 + "'", int55 == 2147483647);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(periodType58);
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1499");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.minus((int) (short) 1);
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy(0);
        org.joda.time.Minutes minutes6 = minutes4.plus((-2147483648));
        org.joda.time.Minutes minutes8 = minutes6.minus((int) (byte) 0);
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy(1);
        int int11 = minutes10.getMinutes();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes13 = minutes10.dividedBy((int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-2147483648) + "'", int11 == (-2147483648));
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1500");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        int int1 = minutes0.size();
        int int3 = minutes0.getValue(0);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        org.joda.time.Minutes minutes14 = minutes7.plus((-1));
        org.joda.time.Minutes minutes16 = minutes7.minus((int) (short) 10);
        org.joda.time.Duration duration17 = minutes7.toStandardDuration();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes19 = minutes18.negated();
        org.joda.time.Minutes minutes20 = minutes18.negated();
        java.lang.String str21 = minutes18.toString();
        org.joda.time.Minutes minutes23 = minutes18.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes27 = minutes25.multipliedBy((int) (byte) 0);
        boolean boolean28 = minutes23.equals((java.lang.Object) minutes25);
        boolean boolean29 = minutes7.isGreaterThan(minutes25);
        boolean boolean30 = minutes4.equals((java.lang.Object) boolean29);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod32 = minutes31.toMutablePeriod();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes35 = minutes33.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes37 = minutes33.plus(0);
        int int38 = minutes31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes33);
        org.joda.time.Minutes minutes40 = minutes33.plus((int) ' ');
        int int41 = minutes40.size();
        org.joda.time.Minutes minutes43 = minutes40.minus(0);
        org.joda.time.Minutes minutes44 = minutes43.negated();
        boolean boolean45 = minutes4.isLessThan(minutes44);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2147483647 + "'", int3 == 2147483647);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT2147483647M" + "'", str21, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }
}

