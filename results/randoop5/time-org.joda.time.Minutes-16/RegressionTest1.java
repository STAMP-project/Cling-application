import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest1 {

    public static boolean debug = false;

    @Test
    public void test0501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0501");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = minutes0.get(durationFieldType1);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType4 = minutes0.getFieldType();
        org.joda.time.Minutes minutes6 = minutes0.dividedBy((-1));
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MAX_VALUE;
        int int8 = minutes7.size();
        org.joda.time.Minutes minutes9 = minutes0.plus(minutes7);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes11 = minutes10.negated();
        org.joda.time.Minutes minutes12 = minutes10.negated();
        java.lang.String str13 = minutes10.toString();
        org.joda.time.Minutes minutes15 = minutes10.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes19 = minutes17.multipliedBy((int) (byte) 0);
        boolean boolean20 = minutes15.equals((java.lang.Object) minutes17);
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = minutes21.plus(0);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes28 = minutes26.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = minutes29.get(durationFieldType30);
        org.joda.time.DurationFieldType durationFieldType32 = minutes29.getFieldType();
        int int33 = minutes28.get(durationFieldType32);
        org.joda.time.Minutes minutes35 = minutes28.plus((-1));
        org.joda.time.Minutes minutes37 = minutes28.minus((int) (short) 10);
        org.joda.time.Minutes minutes39 = minutes37.dividedBy((-2147483648));
        org.joda.time.Minutes minutes40 = minutes25.plus(minutes39);
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes43 = minutes41.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = minutes44.get(durationFieldType45);
        org.joda.time.MutablePeriod mutablePeriod47 = minutes44.toMutablePeriod();
        org.joda.time.Minutes minutes48 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes44);
        boolean boolean49 = minutes43.isLessThan(minutes48);
        org.joda.time.DurationFieldType durationFieldType50 = minutes48.getFieldType();
        boolean boolean51 = minutes40.isSupported(durationFieldType50);
        org.joda.time.Minutes minutes53 = minutes40.plus((int) (short) -1);
        org.joda.time.Minutes minutes54 = minutes15.plus(minutes40);
        int int55 = minutes9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes15);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PT2147483647M" + "'", str13, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-2) + "'", int33 == (-2));
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
    }

    @Test
    public void test0502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0502");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes6 = minutes4.dividedBy((int) 'a');
        org.joda.time.Minutes minutes8 = minutes4.plus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType9 = minutes8.getFieldType();
        int int10 = minutes3.get(durationFieldType9);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-2) + "'", int10 == (-2));
    }

    @Test
    public void test0503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0503");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        org.joda.time.Minutes minutes10 = minutes9.negated();
        org.joda.time.Period period11 = minutes9.toPeriod();
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MAX_VALUE;
        int int13 = minutes12.size();
        int int15 = minutes12.getValue(0);
        org.joda.time.Minutes minutes16 = minutes12.negated();
        org.joda.time.Minutes minutes18 = minutes16.plus(0);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes19 = minutes9.minus(minutes18);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 34 + 2147483647");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
    }

    @Test
    public void test0504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0504");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes9 = minutes2.plus((-1));
        org.joda.time.Minutes minutes10 = minutes9.negated();
        org.joda.time.PeriodType periodType11 = minutes9.getPeriodType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(periodType11);
    }

    @Test
    public void test0505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0505");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = minutes0.negated();
        org.joda.time.DurationFieldType durationFieldType3 = minutes0.getFieldType();
        java.lang.String str4 = minutes0.toString();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes6 = minutes5.negated();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes5);
        int int8 = minutes5.size();
        org.joda.time.MutablePeriod mutablePeriod9 = minutes5.toMutablePeriod();
        boolean boolean10 = minutes0.equals((java.lang.Object) minutes5);
        org.joda.time.DurationFieldType durationFieldType12 = minutes5.getFieldType((int) (short) 0);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod14 = minutes13.toMutablePeriod();
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes17 = minutes15.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes19 = minutes15.plus(0);
        int int20 = minutes13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes15);
        org.joda.time.Minutes minutes22 = minutes15.plus((int) ' ');
        java.lang.String str23 = minutes15.toString();
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean26 = minutes15.isLessThan(minutes25);
        org.joda.time.Period period27 = minutes25.toPeriod();
        boolean boolean28 = minutes5.isGreaterThan(minutes25);
        org.joda.time.Period period29 = minutes5.toPeriod();
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) period29);
        org.joda.time.Minutes minutes31 = minutes30.negated();
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes34 = minutes32.minus((int) (short) 1);
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes37 = minutes35.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType38 = minutes37.getFieldType();
        org.joda.time.Minutes minutes39 = minutes37.negated();
        boolean boolean40 = minutes32.isLessThan(minutes37);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes41 = minutes31.plus(minutes37);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: -2147483647 + -2");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT2147483647M" + "'", str4, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT2M" + "'", str23, "PT2M");
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test0506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0506");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.THREE;
        int int1 = minutes0.size();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod3 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = minutes4.plus(0);
        int int9 = minutes2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes4);
        org.joda.time.Minutes minutes11 = minutes4.plus((int) ' ');
        int int12 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes11);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType14 = minutes11.getFieldType((-22139006));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -22139006");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test0507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0507");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.THREE;
        int int1 = minutes0.size();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod3 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = minutes4.plus(0);
        int int9 = minutes2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes4);
        org.joda.time.Minutes minutes11 = minutes4.plus((int) ' ');
        int int12 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes11);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes16 = minutes14.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = minutes17.get(durationFieldType18);
        org.joda.time.DurationFieldType durationFieldType20 = minutes17.getFieldType();
        int int21 = minutes16.get(durationFieldType20);
        org.joda.time.Minutes minutes23 = minutes16.plus((-1));
        boolean boolean24 = minutes13.isGreaterThan(minutes16);
        org.joda.time.DurationFieldType durationFieldType25 = minutes16.getFieldType();
        int int27 = minutes16.getValue((int) (short) 0);
        org.joda.time.Period period28 = minutes16.toPeriod();
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes30 = minutes29.negated();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod32 = minutes31.toMutablePeriod();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes34 = minutes31.plus(minutes33);
        int int35 = minutes30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes33);
        org.joda.time.Minutes minutes36 = minutes16.minus(minutes30);
        boolean boolean37 = minutes0.isGreaterThan(minutes30);
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod39 = minutes38.toMutablePeriod();
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes41 = minutes38.plus(minutes40);
        org.joda.time.Minutes minutes43 = minutes41.plus((int) 'a');
        org.joda.time.Duration duration44 = minutes41.toStandardDuration();
        int int45 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes41);
        org.joda.time.Minutes minutes46 = minutes0.negated();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-2) + "'", int21 == (-2));
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-2) + "'", int27 == (-2));
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(minutes46);
    }

    @Test
    public void test0508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0508");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = minutes5.get(durationFieldType6);
        org.joda.time.MutablePeriod mutablePeriod8 = minutes5.toMutablePeriod();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes5);
        boolean boolean10 = minutes4.isLessThan(minutes9);
        int int11 = minutes4.getMinutes();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean14 = minutes4.isLessThan(minutes13);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration16 = minutes15.toStandardDuration();
        org.joda.time.Duration duration17 = minutes15.toStandardDuration();
        org.joda.time.Minutes minutes19 = minutes15.minus(2);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes22 = minutes20.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes23 = minutes20.negated();
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes25 = minutes24.negated();
        org.joda.time.Minutes minutes26 = minutes24.negated();
        boolean boolean27 = minutes20.equals((java.lang.Object) minutes26);
        boolean boolean28 = minutes19.isLessThan(minutes20);
        org.joda.time.Minutes minutes29 = minutes13.minus(minutes20);
        int int30 = minutes20.getMinutes();
        int int31 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes20);
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes34 = minutes32.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType36 = null;
        int int37 = minutes35.get(durationFieldType36);
        org.joda.time.DurationFieldType durationFieldType38 = minutes35.getFieldType();
        int int39 = minutes34.get(durationFieldType38);
        org.joda.time.Minutes minutes41 = minutes34.plus((-1));
        org.joda.time.Minutes minutes43 = minutes34.minus((int) (short) 10);
        org.joda.time.Duration duration44 = minutes34.toStandardDuration();
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes34);
        org.joda.time.Minutes minutes47 = minutes45.multipliedBy(3);
        org.joda.time.DurationFieldType durationFieldType48 = minutes47.getFieldType();
        boolean boolean49 = minutes20.isSupported(durationFieldType48);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-2) + "'", int11 == (-2));
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-2) + "'", int39 == (-2));
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test0509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0509");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT-2147483648M");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes3 = minutes1.multipliedBy(2147483646);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: -2147483648 * 2147483646");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes1);
    }

    @Test
    public void test0510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0510");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.Minutes minutes13 = minutes3.multipliedBy(2);
        org.joda.time.Minutes minutes14 = minutes13.negated();
        org.joda.time.Minutes minutes16 = minutes13.dividedBy(4);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
    }

    @Test
    public void test0511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0511");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = minutes0.get(durationFieldType1);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType4 = minutes0.getFieldType();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration6 = minutes5.toStandardDuration();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes5);
        boolean boolean8 = minutes0.isGreaterThan(minutes5);
        // The following exception was thrown during execution in test generation
        try {
            int int10 = minutes5.getValue(2147483647);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 2147483647");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0512");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = minutes12.getFieldType();
        int int16 = minutes11.get(durationFieldType15);
        org.joda.time.Minutes minutes18 = minutes11.plus((-1));
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = minutes21.plus(0);
        int int26 = minutes19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes21);
        org.joda.time.Minutes minutes28 = minutes21.plus((int) ' ');
        java.lang.String str29 = minutes21.toString();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean32 = minutes21.isLessThan(minutes31);
        boolean boolean33 = minutes18.isLessThan(minutes21);
        org.joda.time.Minutes minutes34 = minutes2.minus(minutes18);
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes37 = minutes35.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType38 = minutes37.getFieldType();
        org.joda.time.Minutes minutes39 = minutes37.negated();
        org.joda.time.Minutes minutes40 = minutes34.minus(minutes39);
        java.lang.String str41 = minutes40.toString();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2M" + "'", str29, "PT2M");
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "PT-1M" + "'", str41, "PT-1M");
    }

    @Test
    public void test0513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0513");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        int int7 = minutes0.size();
        int int8 = minutes0.size();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes14 = minutes10.plus(0);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes17 = minutes15.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = minutes18.get(durationFieldType19);
        org.joda.time.DurationFieldType durationFieldType21 = minutes18.getFieldType();
        int int22 = minutes17.get(durationFieldType21);
        org.joda.time.Minutes minutes24 = minutes17.plus((-1));
        org.joda.time.Minutes minutes26 = minutes17.minus((int) (short) 10);
        org.joda.time.Minutes minutes28 = minutes26.dividedBy((-2147483648));
        org.joda.time.Minutes minutes29 = minutes14.plus(minutes28);
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes32 = minutes30.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = minutes33.get(durationFieldType34);
        org.joda.time.MutablePeriod mutablePeriod36 = minutes33.toMutablePeriod();
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes33);
        boolean boolean38 = minutes32.isLessThan(minutes37);
        org.joda.time.DurationFieldType durationFieldType39 = minutes37.getFieldType();
        boolean boolean40 = minutes29.isSupported(durationFieldType39);
        boolean boolean41 = minutes0.equals((java.lang.Object) boolean40);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-2) + "'", int22 == (-2));
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test0514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0514");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        int int9 = minutes2.getMinutes();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean12 = minutes2.isLessThan(minutes11);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration14 = minutes13.toStandardDuration();
        org.joda.time.Duration duration15 = minutes13.toStandardDuration();
        org.joda.time.Minutes minutes17 = minutes13.minus(2);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes20 = minutes18.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes21 = minutes18.negated();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes23 = minutes22.negated();
        org.joda.time.Minutes minutes24 = minutes22.negated();
        boolean boolean25 = minutes18.equals((java.lang.Object) minutes24);
        boolean boolean26 = minutes17.isLessThan(minutes18);
        org.joda.time.Minutes minutes27 = minutes11.minus(minutes18);
        org.joda.time.Minutes minutes29 = minutes11.dividedBy((-12));
        int int30 = minutes29.size();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds31 = minutes29.toStandardSeconds();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 178956970 * 60");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-2) + "'", int9 == (-2));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
    }

    @Test
    public void test0515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0515");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes11 = minutes10.negated();
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes10);
        java.lang.String str13 = minutes10.toString();
        org.joda.time.PeriodType periodType14 = minutes10.getPeriodType();
        org.joda.time.Minutes minutes15 = null;
        org.joda.time.Minutes minutes16 = minutes10.minus(minutes15);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes19 = minutes17.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = minutes20.get(durationFieldType21);
        org.joda.time.DurationFieldType durationFieldType23 = minutes20.getFieldType();
        int int24 = minutes19.get(durationFieldType23);
        org.joda.time.Minutes minutes26 = minutes19.plus((-1));
        org.joda.time.Minutes minutes28 = minutes19.minus((int) (short) 10);
        org.joda.time.Minutes minutes30 = minutes28.dividedBy((-2147483648));
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod32 = minutes31.toMutablePeriod();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes34 = minutes31.plus(minutes33);
        org.joda.time.Minutes minutes35 = minutes28.minus(minutes33);
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes38 = minutes36.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes40 = minutes36.plus(0);
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes43 = minutes41.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = minutes44.get(durationFieldType45);
        org.joda.time.DurationFieldType durationFieldType47 = minutes44.getFieldType();
        int int48 = minutes43.get(durationFieldType47);
        org.joda.time.Minutes minutes50 = minutes43.plus((-1));
        org.joda.time.Minutes minutes52 = minutes43.minus((int) (short) 10);
        org.joda.time.Minutes minutes54 = minutes52.dividedBy((-2147483648));
        org.joda.time.Minutes minutes55 = minutes40.plus(minutes54);
        org.joda.time.Minutes minutes56 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes58 = minutes56.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes59 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType60 = null;
        int int61 = minutes59.get(durationFieldType60);
        org.joda.time.MutablePeriod mutablePeriod62 = minutes59.toMutablePeriod();
        org.joda.time.Minutes minutes63 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes59);
        boolean boolean64 = minutes58.isLessThan(minutes63);
        org.joda.time.DurationFieldType durationFieldType65 = minutes63.getFieldType();
        boolean boolean66 = minutes55.isSupported(durationFieldType65);
        int int67 = minutes28.get(durationFieldType65);
        int int68 = minutes16.get(durationFieldType65);
        boolean boolean69 = minutes2.isSupported(durationFieldType65);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PT2147483647M" + "'", str13, "PT2147483647M");
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-2) + "'", int24 == (-2));
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-2) + "'", int48 == (-2));
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod62);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-12) + "'", int67 == (-12));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2147483647 + "'", int68 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
    }

    @Test
    public void test0516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0516");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        int int4 = minutes2.getMinutes();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType6 = minutes2.getFieldType((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
    }

    @Test
    public void test0517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0517");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((int) (short) -1);
        int int2 = minutes1.size();
        int int3 = minutes1.getMinutes();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod5 = minutes4.toMutablePeriod();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes7 = minutes4.plus(minutes6);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod9 = minutes8.toMutablePeriod();
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes11 = minutes8.plus(minutes10);
        boolean boolean12 = minutes7.isLessThan(minutes8);
        java.lang.String str13 = minutes7.toString();
        boolean boolean14 = minutes1.equals((java.lang.Object) minutes7);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MAX_VALUE;
        int int16 = minutes15.size();
        int int18 = minutes15.getValue(0);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes15);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes22 = minutes20.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = minutes23.get(durationFieldType24);
        org.joda.time.DurationFieldType durationFieldType26 = minutes23.getFieldType();
        int int27 = minutes22.get(durationFieldType26);
        org.joda.time.Minutes minutes29 = minutes22.plus((-1));
        org.joda.time.Minutes minutes31 = minutes22.minus((int) (short) 10);
        org.joda.time.Duration duration32 = minutes22.toStandardDuration();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes34 = minutes33.negated();
        org.joda.time.Minutes minutes35 = minutes33.negated();
        java.lang.String str36 = minutes33.toString();
        org.joda.time.Minutes minutes38 = minutes33.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes42 = minutes40.multipliedBy((int) (byte) 0);
        boolean boolean43 = minutes38.equals((java.lang.Object) minutes40);
        boolean boolean44 = minutes22.isGreaterThan(minutes40);
        boolean boolean45 = minutes19.equals((java.lang.Object) boolean44);
        org.joda.time.Minutes minutes46 = minutes19.negated();
        boolean boolean47 = minutes7.equals((java.lang.Object) minutes19);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType49 = minutes7.getFieldType((-12));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -12");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PT-2147483645M" + "'", str13, "PT-2147483645M");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483647 + "'", int18 == 2147483647);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-2) + "'", int27 == (-2));
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "PT2147483647M" + "'", str36, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test0518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0518");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = minutes0.negated();
        java.lang.String str3 = minutes0.toString();
        org.joda.time.Minutes minutes5 = minutes0.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes8 = minutes6.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes11 = minutes9.minus((int) (short) 1);
        org.joda.time.Minutes minutes13 = minutes11.multipliedBy(0);
        org.joda.time.Minutes minutes15 = minutes13.plus((-2147483648));
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes17 = minutes16.negated();
        org.joda.time.Minutes minutes18 = minutes16.negated();
        boolean boolean19 = minutes15.isGreaterThan(minutes18);
        int int20 = minutes6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes15);
        org.joda.time.MutablePeriod mutablePeriod21 = minutes15.toMutablePeriod();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration23 = minutes22.toStandardDuration();
        org.joda.time.Duration duration24 = minutes22.toStandardDuration();
        org.joda.time.Minutes minutes26 = minutes22.minus(2);
        boolean boolean27 = minutes15.isGreaterThan(minutes26);
        int int28 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes26);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType30 = minutes0.getFieldType(2147483646);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 2147483646");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2147483647M" + "'", str3, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
    }

    @Test
    public void test0519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0519");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.minus((int) (short) 1);
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy(0);
        org.joda.time.Minutes minutes6 = minutes4.plus((-2147483648));
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes8 = minutes7.negated();
        org.joda.time.Minutes minutes9 = minutes7.negated();
        boolean boolean10 = minutes6.isGreaterThan(minutes9);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod12 = minutes11.toMutablePeriod();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes17 = minutes13.plus(0);
        int int18 = minutes11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes13);
        boolean boolean19 = minutes6.equals((java.lang.Object) minutes13);
        org.joda.time.MutablePeriod mutablePeriod20 = minutes6.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod21 = minutes6.toMutablePeriod();
        java.lang.String str22 = minutes6.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes24 = minutes6.multipliedBy(36);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: -2147483648 * 36");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PT-2147483648M" + "'", str22, "PT-2147483648M");
    }

    @Test
    public void test0520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0520");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = minutes0.get(durationFieldType1);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType4 = minutes0.getFieldType();
        org.joda.time.Minutes minutes6 = minutes0.dividedBy((-1));
        org.joda.time.Minutes minutes8 = minutes0.dividedBy(2147483646);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.minutes((int) (byte) 10);
        boolean boolean11 = minutes0.isLessThan(minutes10);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = minutes15.get(durationFieldType16);
        org.joda.time.MutablePeriod mutablePeriod18 = minutes15.toMutablePeriod();
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes15);
        boolean boolean20 = minutes14.isLessThan(minutes19);
        org.joda.time.Minutes minutes21 = minutes10.plus(minutes14);
        org.joda.time.DurationFieldType durationFieldType22 = null;
        boolean boolean23 = minutes10.isSupported(durationFieldType22);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0521");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod8 = minutes7.toMutablePeriod();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod8);
        boolean boolean10 = minutes0.isLessThan(minutes9);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes9);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes14 = minutes12.minus((int) (short) 0);
        boolean boolean15 = minutes9.isLessThan(minutes14);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType17 = minutes14.getFieldType((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0522");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.Duration duration2 = minutes0.toStandardDuration();
        org.joda.time.Minutes minutes4 = minutes0.minus(2);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.MutablePeriod mutablePeriod11 = minutes8.toMutablePeriod();
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes8);
        boolean boolean13 = minutes7.isLessThan(minutes12);
        int int14 = minutes7.getMinutes();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean17 = minutes7.isLessThan(minutes16);
        org.joda.time.Minutes minutes18 = minutes4.minus(minutes16);
        org.joda.time.Minutes minutes20 = minutes4.dividedBy((-2147483645));
        org.joda.time.Minutes minutes22 = minutes20.minus(34);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-2) + "'", int14 == (-2));
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
    }

    @Test
    public void test0523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0523");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod3 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes5 = minutes2.plus(minutes4);
        int int6 = minutes1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes4);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MAX_VALUE;
        int int8 = minutes1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes7);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.MutablePeriod mutablePeriod15 = minutes12.toMutablePeriod();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes12);
        boolean boolean17 = minutes11.isLessThan(minutes16);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes20 = minutes18.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = minutes21.get(durationFieldType22);
        org.joda.time.DurationFieldType durationFieldType24 = minutes21.getFieldType();
        int int25 = minutes20.get(durationFieldType24);
        org.joda.time.Minutes minutes27 = minutes20.plus((-1));
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod29 = minutes28.toMutablePeriod();
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes32 = minutes30.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes34 = minutes30.plus(0);
        int int35 = minutes28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes30);
        org.joda.time.Minutes minutes37 = minutes30.plus((int) ' ');
        java.lang.String str38 = minutes30.toString();
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean41 = minutes30.isLessThan(minutes40);
        boolean boolean42 = minutes27.isLessThan(minutes30);
        org.joda.time.Minutes minutes43 = minutes11.minus(minutes27);
        org.joda.time.MutablePeriod mutablePeriod44 = minutes11.toMutablePeriod();
        org.joda.time.Minutes minutes46 = minutes11.dividedBy(2);
        org.joda.time.Minutes minutes47 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes49 = minutes47.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes50 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType51 = null;
        int int52 = minutes50.get(durationFieldType51);
        org.joda.time.DurationFieldType durationFieldType53 = minutes50.getFieldType();
        int int54 = minutes49.get(durationFieldType53);
        org.joda.time.Minutes minutes56 = minutes49.plus((-1));
        org.joda.time.Minutes minutes57 = minutes56.negated();
        org.joda.time.Minutes minutes58 = minutes46.plus(minutes57);
        org.joda.time.Minutes minutes60 = minutes46.minus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType61 = minutes60.getFieldType();
        int int62 = minutes7.get(durationFieldType61);
        int int63 = minutes7.getMinutes();
        org.joda.time.Minutes minutes65 = minutes7.multipliedBy((-1));
        // The following exception was thrown during execution in test generation
        try {
            int int67 = minutes65.getValue((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-2) + "'", int25 == (-2));
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "PT2M" + "'", str38, "PT2M");
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(mutablePeriod44);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-2) + "'", int54 == (-2));
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2147483647 + "'", int62 == 2147483647);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2147483647 + "'", int63 == 2147483647);
        org.junit.Assert.assertNotNull(minutes65);
    }

    @Test
    public void test0524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0524");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod5 = minutes4.toMutablePeriod();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes7 = minutes4.plus(minutes6);
        boolean boolean8 = minutes3.isLessThan(minutes4);
        org.joda.time.PeriodType periodType9 = minutes3.getPeriodType();
        org.joda.time.Minutes minutes11 = minutes3.dividedBy(3);
        org.joda.time.Minutes minutes13 = minutes11.dividedBy(10);
        org.joda.time.Minutes minutes15 = minutes13.minus((-22139006));
        org.joda.time.Minutes minutes17 = minutes15.plus((-22139006));
        int int18 = minutes17.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-71582788) + "'", int18 == (-71582788));
    }

    @Test
    public void test0525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0525");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        boolean boolean6 = minutes0.isGreaterThan(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod9 = minutes8.toMutablePeriod();
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes14 = minutes10.plus(0);
        int int15 = minutes8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes10);
        org.joda.time.Minutes minutes17 = minutes10.plus((int) ' ');
        java.lang.String str18 = minutes10.toString();
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = minutes21.plus(0);
        int int26 = minutes19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes21);
        org.joda.time.Minutes minutes28 = minutes21.plus((int) ' ');
        java.lang.String str29 = minutes21.toString();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean32 = minutes21.isLessThan(minutes31);
        org.joda.time.Minutes minutes33 = minutes10.minus(minutes21);
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes35 = minutes34.negated();
        org.joda.time.DurationFieldType durationFieldType36 = minutes34.getFieldType();
        org.joda.time.DurationFieldType durationFieldType37 = minutes34.getFieldType();
        boolean boolean38 = minutes10.isSupported(durationFieldType37);
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType40 = null;
        int int41 = minutes39.get(durationFieldType40);
        org.joda.time.MutablePeriod mutablePeriod42 = minutes39.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType43 = minutes39.getFieldType();
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration45 = minutes44.toStandardDuration();
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes44);
        boolean boolean47 = minutes39.isGreaterThan(minutes44);
        org.joda.time.Minutes minutes48 = minutes10.plus(minutes44);
        org.joda.time.Minutes minutes49 = minutes44.negated();
        org.joda.time.Minutes minutes50 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType52 = minutes51.getPeriodType();
        org.joda.time.Minutes minutes53 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes54 = minutes53.negated();
        org.joda.time.Minutes minutes55 = minutes53.negated();
        org.joda.time.DurationFieldType durationFieldType56 = minutes53.getFieldType();
        java.lang.String str57 = minutes53.toString();
        boolean boolean58 = minutes51.isGreaterThan(minutes53);
        boolean boolean59 = minutes50.equals((java.lang.Object) minutes51);
        org.joda.time.Minutes minutes61 = minutes51.minus(1);
        org.joda.time.PeriodType periodType62 = minutes61.getPeriodType();
        org.joda.time.Minutes minutes63 = minutes49.plus(minutes61);
        int int64 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes63);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "PT2M" + "'", str18, "PT2M");
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2M" + "'", str29, "PT2M");
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "PT2147483647M" + "'", str57, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
    }

    @Test
    public void test0526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0526");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        java.lang.String str3 = minutes0.toString();
        org.joda.time.PeriodType periodType4 = minutes0.getPeriodType();
        org.joda.time.Minutes minutes5 = null;
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes9 = minutes7.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = minutes10.get(durationFieldType11);
        org.joda.time.DurationFieldType durationFieldType13 = minutes10.getFieldType();
        int int14 = minutes9.get(durationFieldType13);
        org.joda.time.Minutes minutes16 = minutes9.plus((-1));
        org.joda.time.Minutes minutes18 = minutes9.minus((int) (short) 10);
        org.joda.time.Minutes minutes20 = minutes18.dividedBy((-2147483648));
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod22 = minutes21.toMutablePeriod();
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes24 = minutes21.plus(minutes23);
        org.joda.time.Minutes minutes25 = minutes18.minus(minutes23);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes28 = minutes26.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes30 = minutes26.plus(0);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes33 = minutes31.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = minutes34.get(durationFieldType35);
        org.joda.time.DurationFieldType durationFieldType37 = minutes34.getFieldType();
        int int38 = minutes33.get(durationFieldType37);
        org.joda.time.Minutes minutes40 = minutes33.plus((-1));
        org.joda.time.Minutes minutes42 = minutes33.minus((int) (short) 10);
        org.joda.time.Minutes minutes44 = minutes42.dividedBy((-2147483648));
        org.joda.time.Minutes minutes45 = minutes30.plus(minutes44);
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes48 = minutes46.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = minutes49.get(durationFieldType50);
        org.joda.time.MutablePeriod mutablePeriod52 = minutes49.toMutablePeriod();
        org.joda.time.Minutes minutes53 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes49);
        boolean boolean54 = minutes48.isLessThan(minutes53);
        org.joda.time.DurationFieldType durationFieldType55 = minutes53.getFieldType();
        boolean boolean56 = minutes45.isSupported(durationFieldType55);
        int int57 = minutes18.get(durationFieldType55);
        int int58 = minutes6.get(durationFieldType55);
        // The following exception was thrown during execution in test generation
        try {
            int int60 = minutes6.getValue((-2147483645));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -2147483645");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2147483647M" + "'", str3, "PT2147483647M");
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-2) + "'", int14 == (-2));
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-2) + "'", int38 == (-2));
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-12) + "'", int57 == (-12));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2147483647 + "'", int58 == 2147483647);
    }

    @Test
    public void test0527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0527");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.dividedBy((int) 'a');
        org.joda.time.Minutes minutes4 = minutes0.dividedBy((int) (short) 100);
        org.joda.time.Minutes minutes6 = minutes4.plus((-12));
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
    }

    @Test
    public void test0528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0528");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        int int10 = minutes9.size();
        org.joda.time.Minutes minutes12 = minutes9.minus(0);
        org.joda.time.Minutes minutes13 = minutes12.negated();
        int int14 = minutes12.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 34 + "'", int14 == 34);
    }

    @Test
    public void test0529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0529");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
    }

    @Test
    public void test0530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0530");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes9 = minutes2.plus((-1));
        org.joda.time.Minutes minutes11 = minutes2.minus((int) (short) 10);
        org.joda.time.Minutes minutes13 = minutes11.dividedBy((-2147483648));
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod15 = minutes14.toMutablePeriod();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes17 = minutes14.plus(minutes16);
        org.joda.time.Minutes minutes18 = minutes11.minus(minutes16);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes21 = minutes19.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes23 = minutes19.plus(0);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes26 = minutes24.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = minutes27.get(durationFieldType28);
        org.joda.time.DurationFieldType durationFieldType30 = minutes27.getFieldType();
        int int31 = minutes26.get(durationFieldType30);
        org.joda.time.Minutes minutes33 = minutes26.plus((-1));
        org.joda.time.Minutes minutes35 = minutes26.minus((int) (short) 10);
        org.joda.time.Minutes minutes37 = minutes35.dividedBy((-2147483648));
        org.joda.time.Minutes minutes38 = minutes23.plus(minutes37);
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes41 = minutes39.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = minutes42.get(durationFieldType43);
        org.joda.time.MutablePeriod mutablePeriod45 = minutes42.toMutablePeriod();
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes42);
        boolean boolean47 = minutes41.isLessThan(minutes46);
        org.joda.time.DurationFieldType durationFieldType48 = minutes46.getFieldType();
        boolean boolean49 = minutes38.isSupported(durationFieldType48);
        int int50 = minutes11.get(durationFieldType48);
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes11);
        int int52 = minutes51.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-2) + "'", int31 == (-2));
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-12) + "'", int50 == (-12));
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-12) + "'", int52 == (-12));
    }

    @Test
    public void test0531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0531");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        int int9 = minutes2.getMinutes();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean12 = minutes2.isLessThan(minutes11);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes2);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes16 = minutes14.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes17 = minutes14.negated();
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes20 = minutes14.minus(minutes19);
        boolean boolean21 = minutes2.isLessThan(minutes14);
        int int22 = minutes14.size();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-2) + "'", int9 == (-2));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
    }

    @Test
    public void test0532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0532");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType3 = minutes2.getFieldType();
        org.joda.time.Minutes minutes4 = minutes2.negated();
        org.joda.time.Minutes minutes5 = null;
        org.joda.time.Minutes minutes6 = minutes4.plus(minutes5);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
    }

    @Test
    public void test0533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0533");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT-12M");
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration3 = minutes2.toStandardDuration();
        org.joda.time.Duration duration4 = minutes2.toStandardDuration();
        org.joda.time.Minutes minutes6 = minutes2.minus(2);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes9 = minutes7.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = minutes10.get(durationFieldType11);
        org.joda.time.MutablePeriod mutablePeriod13 = minutes10.toMutablePeriod();
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes10);
        boolean boolean15 = minutes9.isLessThan(minutes14);
        int int16 = minutes9.getMinutes();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean19 = minutes9.isLessThan(minutes18);
        org.joda.time.Minutes minutes20 = minutes6.minus(minutes18);
        int int21 = minutes18.getMinutes();
        org.joda.time.Minutes minutes22 = minutes1.minus(minutes18);
        java.lang.String str23 = minutes22.toString();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-2147483645) + "'", int21 == (-2147483645));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT2147483633M" + "'", str23, "PT2147483633M");
    }

    @Test
    public void test0534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0534");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        java.lang.String str3 = minutes0.toString();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = minutes4.getFieldType();
        boolean boolean6 = minutes0.isSupported(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes0.getFieldType();
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = minutes11.get(durationFieldType12);
        org.joda.time.DurationFieldType durationFieldType14 = minutes11.getFieldType();
        int int15 = minutes10.get(durationFieldType14);
        org.joda.time.Minutes minutes17 = minutes10.plus((-1));
        org.joda.time.Minutes minutes19 = minutes10.minus((int) (short) 10);
        org.joda.time.Minutes minutes20 = minutes0.plus(minutes10);
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes22 = minutes21.negated();
        org.joda.time.Minutes minutes24 = minutes22.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes24);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes28 = minutes26.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = minutes29.get(durationFieldType30);
        org.joda.time.DurationFieldType durationFieldType32 = minutes29.getFieldType();
        int int33 = minutes28.get(durationFieldType32);
        int int34 = minutes25.get(durationFieldType32);
        int int35 = minutes25.getMinutes();
        boolean boolean36 = minutes0.isLessThan(minutes25);
        int int37 = minutes25.size();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2147483647M" + "'", str3, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-2) + "'", int15 == (-2));
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-2) + "'", int33 == (-2));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2147483647 + "'", int34 == 2147483647);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2147483647 + "'", int35 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
    }

    @Test
    public void test0535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0535");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod5 = minutes4.toMutablePeriod();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes7 = minutes4.plus(minutes6);
        boolean boolean8 = minutes3.isLessThan(minutes4);
        java.lang.String str9 = minutes3.toString();
        org.joda.time.MutablePeriod mutablePeriod10 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes11 = null;
        org.joda.time.Minutes minutes12 = minutes3.plus(minutes11);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MAX_VALUE;
        int int14 = minutes13.size();
        int int16 = minutes13.getValue(0);
        org.joda.time.Minutes minutes17 = minutes13.negated();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes18 = minutes3.minus(minutes13);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: -2147483645 + -2147483647");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT-2147483645M" + "'", str9, "PT-2147483645M");
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2147483647 + "'", int16 == 2147483647);
        org.junit.Assert.assertNotNull(minutes17);
    }

    @Test
    public void test0536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0536");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        java.lang.String str3 = minutes0.toString();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = minutes4.getFieldType();
        boolean boolean6 = minutes0.isSupported(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes0.getFieldType();
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = minutes11.get(durationFieldType12);
        org.joda.time.DurationFieldType durationFieldType14 = minutes11.getFieldType();
        int int15 = minutes10.get(durationFieldType14);
        org.joda.time.Minutes minutes17 = minutes10.plus((-1));
        org.joda.time.Minutes minutes19 = minutes10.minus((int) (short) 10);
        org.joda.time.Minutes minutes20 = minutes0.plus(minutes10);
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes22 = minutes21.negated();
        org.joda.time.Minutes minutes24 = minutes22.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes24);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes28 = minutes26.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = minutes29.get(durationFieldType30);
        org.joda.time.DurationFieldType durationFieldType32 = minutes29.getFieldType();
        int int33 = minutes28.get(durationFieldType32);
        int int34 = minutes25.get(durationFieldType32);
        int int35 = minutes25.getMinutes();
        boolean boolean36 = minutes0.isLessThan(minutes25);
        org.joda.time.Period period37 = minutes25.toPeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2147483647M" + "'", str3, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-2) + "'", int15 == (-2));
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-2) + "'", int33 == (-2));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2147483647 + "'", int34 == 2147483647);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2147483647 + "'", int35 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(period37);
    }

    @Test
    public void test0537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0537");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod5 = minutes4.toMutablePeriod();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes7 = minutes4.plus(minutes6);
        boolean boolean8 = minutes3.isLessThan(minutes4);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        java.lang.Class<?> wildcardClass11 = minutes10.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0538");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes9 = minutes2.plus((-1));
        org.joda.time.Minutes minutes11 = minutes2.minus((int) (short) 10);
        org.joda.time.Minutes minutes13 = minutes11.dividedBy((-2147483648));
        org.joda.time.Minutes minutes15 = minutes11.plus(100);
        java.lang.String str16 = minutes11.toString();
        java.lang.Object obj17 = null;
        boolean boolean18 = minutes11.equals(obj17);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT-12M" + "'", str16, "PT-12M");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0539");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = minutes5.get(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType8 = minutes5.getFieldType();
        int int9 = minutes4.get(durationFieldType8);
        org.joda.time.Minutes minutes11 = minutes4.plus((-1));
        org.joda.time.Minutes minutes13 = minutes4.minus((int) (short) 10);
        org.joda.time.Duration duration14 = minutes4.toStandardDuration();
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes16 = minutes15.negated();
        org.joda.time.Minutes minutes17 = minutes15.negated();
        java.lang.String str18 = minutes15.toString();
        org.joda.time.Minutes minutes20 = minutes15.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes24 = minutes22.multipliedBy((int) (byte) 0);
        boolean boolean25 = minutes20.equals((java.lang.Object) minutes22);
        boolean boolean26 = minutes4.isGreaterThan(minutes22);
        org.joda.time.Minutes minutes27 = minutes0.plus(minutes4);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes29 = minutes27.multipliedBy((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 2147483645 * 10");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-2) + "'", int9 == (-2));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "PT2147483647M" + "'", str18, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(minutes27);
    }

    @Test
    public void test0540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0540");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.minus((int) (short) 1);
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy(0);
        org.joda.time.Duration duration5 = minutes2.toStandardDuration();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.MAX_VALUE;
        int int7 = minutes6.size();
        int int9 = minutes6.getValue(0);
        org.joda.time.Minutes minutes10 = minutes6.negated();
        org.joda.time.DurationFieldType durationFieldType12 = minutes6.getFieldType(0);
        boolean boolean13 = minutes2.equals((java.lang.Object) 0);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes16 = minutes14.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = minutes17.get(durationFieldType18);
        org.joda.time.MutablePeriod mutablePeriod20 = minutes17.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes17);
        boolean boolean22 = minutes16.isLessThan(minutes21);
        int int23 = minutes16.getMinutes();
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean26 = minutes16.isLessThan(minutes25);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes16);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes30 = minutes28.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes31 = minutes28.negated();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes34 = minutes28.minus(minutes33);
        boolean boolean35 = minutes16.isLessThan(minutes28);
        boolean boolean36 = minutes2.isLessThan(minutes16);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes2);
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes41 = minutes39.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = minutes42.get(durationFieldType43);
        org.joda.time.DurationFieldType durationFieldType45 = minutes42.getFieldType();
        int int46 = minutes41.get(durationFieldType45);
        org.joda.time.Minutes minutes48 = minutes41.plus((-1));
        boolean boolean49 = minutes38.isGreaterThan(minutes41);
        org.joda.time.DurationFieldType durationFieldType50 = minutes41.getFieldType();
        int int52 = minutes41.getValue((int) (short) 0);
        org.joda.time.Period period53 = minutes41.toPeriod();
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes55 = minutes54.negated();
        org.joda.time.Minutes minutes56 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod57 = minutes56.toMutablePeriod();
        org.joda.time.Minutes minutes58 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes59 = minutes56.plus(minutes58);
        int int60 = minutes55.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes58);
        org.joda.time.Minutes minutes61 = minutes41.minus(minutes55);
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes64 = minutes62.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes65 = minutes62.negated();
        org.joda.time.Minutes minutes67 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes68 = minutes62.minus(minutes67);
        org.joda.time.Minutes minutes69 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod70 = minutes69.toMutablePeriod();
        org.joda.time.Minutes minutes71 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod70);
        boolean boolean72 = minutes62.isLessThan(minutes71);
        org.joda.time.Minutes minutes73 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes71);
        org.joda.time.DurationFieldType durationFieldType74 = minutes71.getFieldType();
        boolean boolean75 = minutes41.isSupported(durationFieldType74);
        int int76 = minutes2.get(durationFieldType74);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType78 = minutes2.getFieldType((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2147483647 + "'", int9 == 2147483647);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-2) + "'", int23 == (-2));
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-2) + "'", int46 == (-2));
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-2) + "'", int52 == (-2));
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(mutablePeriod57);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(mutablePeriod70);
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(minutes73);
        org.junit.Assert.assertNotNull(durationFieldType74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2147483646 + "'", int76 == 2147483646);
    }

    @Test
    public void test0541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0541");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        int int1 = minutes0.size();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes3 = minutes2.negated();
        org.joda.time.Minutes minutes5 = minutes3.dividedBy((int) (byte) -1);
        boolean boolean6 = minutes0.isLessThan(minutes3);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        java.lang.Class<?> wildcardClass9 = minutes8.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0542");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes8 = minutes2.negated();
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy(2);
        // The following exception was thrown during execution in test generation
        try {
            int int12 = minutes8.getValue((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 32");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
    }

    @Test
    public void test0543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0543");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        org.joda.time.Period period10 = minutes2.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod11 = minutes2.toMutablePeriod();
        org.joda.time.Period period12 = minutes2.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod13 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes15 = minutes2.plus((int) '4');
        org.joda.time.Period period16 = minutes15.toPeriod();
        org.joda.time.DurationFieldType durationFieldType17 = minutes15.getFieldType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(durationFieldType17);
    }

    @Test
    public void test0544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0544");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType2 = minutes1.getPeriodType();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes4 = minutes3.negated();
        org.joda.time.Minutes minutes5 = minutes3.negated();
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        java.lang.String str7 = minutes3.toString();
        boolean boolean8 = minutes1.isGreaterThan(minutes3);
        boolean boolean9 = minutes0.equals((java.lang.Object) minutes1);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes12 = minutes10.minus((int) (short) 1);
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy(0);
        boolean boolean15 = minutes0.isGreaterThan(minutes14);
        org.joda.time.Minutes minutes17 = minutes0.multipliedBy((-1));
        org.joda.time.Minutes minutes19 = minutes17.plus((int) (byte) 10);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT2147483647M" + "'", str7, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
    }

    @Test
    public void test0545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0545");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.dividedBy(2);
        int int3 = minutes0.size();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod5 = minutes4.toMutablePeriod();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes8 = minutes6.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes10 = minutes6.plus(0);
        int int11 = minutes4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes6);
        org.joda.time.Minutes minutes13 = minutes6.plus((int) ' ');
        int int14 = minutes13.size();
        org.joda.time.Minutes minutes16 = minutes13.minus(0);
        org.joda.time.Minutes minutes17 = minutes0.plus(minutes13);
        org.joda.time.MutablePeriod mutablePeriod18 = minutes13.toMutablePeriod();
        org.joda.time.Duration duration19 = minutes13.toStandardDuration();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(duration19);
    }

    @Test
    public void test0546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0546");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        int int1 = minutes0.size();
        int int3 = minutes0.getValue(0);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes6 = minutes4.dividedBy((-1));
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod8 = minutes7.toMutablePeriod();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes13 = minutes9.plus(0);
        int int14 = minutes7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes9);
        org.joda.time.Minutes minutes16 = minutes9.plus((int) ' ');
        java.lang.String str17 = minutes9.toString();
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean20 = minutes9.isLessThan(minutes19);
        boolean boolean21 = minutes4.equals((java.lang.Object) minutes9);
        java.lang.String str22 = minutes9.toString();
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.MIN_VALUE;
        int int24 = minutes23.getMinutes();
        org.joda.time.PeriodType periodType25 = minutes23.getPeriodType();
        org.joda.time.Minutes minutes27 = minutes23.multipliedBy(1);
        org.joda.time.DurationFieldType durationFieldType28 = minutes27.getFieldType();
        boolean boolean29 = minutes9.isGreaterThan(minutes27);
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes9);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2147483647 + "'", int3 == 2147483647);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "PT2M" + "'", str17, "PT2M");
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PT2M" + "'", str22, "PT2M");
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-2147483648) + "'", int24 == (-2147483648));
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(minutes30);
    }

    @Test
    public void test0547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0547");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType3 = minutes2.getFieldType();
        org.joda.time.Minutes minutes4 = minutes2.negated();
        org.joda.time.Minutes minutes6 = minutes2.plus((-2147483646));
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
    }

    @Test
    public void test0548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0548");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.PeriodType periodType2 = minutes0.getPeriodType();
        int int3 = minutes0.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-2147483648) + "'", int3 == (-2147483648));
    }

    @Test
    public void test0549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0549");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes9 = minutes2.plus((-1));
        org.joda.time.Minutes minutes11 = minutes2.minus((int) (short) 10);
        org.joda.time.Minutes minutes13 = minutes11.dividedBy((-2147483648));
        org.joda.time.Minutes minutes14 = minutes13.negated();
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes16 = minutes15.negated();
        org.joda.time.Minutes minutes17 = minutes15.negated();
        org.joda.time.Minutes minutes18 = minutes13.minus(minutes17);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes21 = minutes19.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType22 = minutes21.getFieldType();
        int int23 = minutes18.get(durationFieldType22);
        java.lang.Class<?> wildcardClass24 = durationFieldType22.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2147483647 + "'", int23 == 2147483647);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0550");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        int int9 = minutes2.getMinutes();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean12 = minutes2.isLessThan(minutes11);
        org.joda.time.DurationFieldType durationFieldType13 = minutes2.getFieldType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-2) + "'", int9 == (-2));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(durationFieldType13);
    }

    @Test
    public void test0551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0551");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        boolean boolean6 = minutes0.isGreaterThan(minutes5);
        org.joda.time.PeriodType periodType7 = minutes0.getPeriodType();
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType10 = minutes9.getPeriodType();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes12 = minutes11.negated();
        org.joda.time.Minutes minutes13 = minutes11.negated();
        org.joda.time.DurationFieldType durationFieldType14 = minutes11.getFieldType();
        java.lang.String str15 = minutes11.toString();
        boolean boolean16 = minutes9.isGreaterThan(minutes11);
        boolean boolean17 = minutes8.equals((java.lang.Object) minutes9);
        org.joda.time.Minutes minutes19 = minutes9.minus(1);
        org.joda.time.Minutes minutes20 = minutes0.minus(minutes19);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        boolean boolean22 = minutes0.isSupported(durationFieldType21);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PT2147483647M" + "'", str15, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test0552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0552");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes3 = minutes1.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        int int13 = minutes4.get(durationFieldType11);
        int int14 = minutes4.getMinutes();
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes4);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2147483647 + "'", int13 == 2147483647);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2147483647 + "'", int14 == 2147483647);
        org.junit.Assert.assertNotNull(minutes15);
    }

    @Test
    public void test0553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0553");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes3 = minutes1.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        int int13 = minutes4.get(durationFieldType11);
        int int14 = minutes4.getMinutes();
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes17 = minutes15.minus((int) (short) 1);
        org.joda.time.Minutes minutes19 = minutes17.multipliedBy(0);
        org.joda.time.Duration duration20 = minutes17.toStandardDuration();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MAX_VALUE;
        int int22 = minutes21.size();
        int int24 = minutes21.getValue(0);
        org.joda.time.Minutes minutes25 = minutes21.negated();
        org.joda.time.DurationFieldType durationFieldType27 = minutes21.getFieldType(0);
        boolean boolean28 = minutes17.equals((java.lang.Object) 0);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes31 = minutes29.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = minutes32.get(durationFieldType33);
        org.joda.time.MutablePeriod mutablePeriod35 = minutes32.toMutablePeriod();
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes32);
        boolean boolean37 = minutes31.isLessThan(minutes36);
        int int38 = minutes31.getMinutes();
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean41 = minutes31.isLessThan(minutes40);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes31);
        org.joda.time.Minutes minutes43 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes45 = minutes43.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes46 = minutes43.negated();
        org.joda.time.Minutes minutes48 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes49 = minutes43.minus(minutes48);
        boolean boolean50 = minutes31.isLessThan(minutes43);
        boolean boolean51 = minutes17.isLessThan(minutes31);
        org.joda.time.Minutes minutes52 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes17);
        boolean boolean53 = minutes4.isGreaterThan(minutes17);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2147483647 + "'", int13 == 2147483647);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2147483647 + "'", int14 == 2147483647);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2147483647 + "'", int24 == 2147483647);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-2) + "'", int38 == (-2));
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    }

    @Test
    public void test0554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0554");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        org.joda.time.Period period10 = minutes2.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod11 = minutes2.toMutablePeriod();
        org.joda.time.Period period12 = minutes2.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod13 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes15 = minutes2.plus((int) '4');
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes18 = minutes16.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = minutes19.get(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType22 = minutes19.getFieldType();
        int int23 = minutes18.get(durationFieldType22);
        org.joda.time.Minutes minutes25 = minutes18.plus((-1));
        org.joda.time.Minutes minutes27 = minutes18.minus((int) (short) 10);
        org.joda.time.Minutes minutes29 = minutes27.dividedBy((-2147483648));
        org.joda.time.Minutes minutes30 = minutes29.negated();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes32 = minutes31.negated();
        org.joda.time.Minutes minutes33 = minutes31.negated();
        org.joda.time.Minutes minutes34 = minutes29.minus(minutes33);
        org.joda.time.Minutes minutes36 = minutes33.plus((int) 'a');
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes36);
        org.joda.time.Minutes minutes39 = minutes36.dividedBy((int) (byte) 1);
        java.lang.String str40 = minutes36.toString();
        boolean boolean41 = minutes15.isLessThan(minutes36);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes43 = minutes42.negated();
        org.joda.time.DurationFieldType durationFieldType44 = minutes42.getFieldType();
        org.joda.time.DurationFieldType durationFieldType45 = minutes42.getFieldType();
        int int46 = minutes36.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes42);
        org.joda.time.MutablePeriod mutablePeriod47 = minutes36.toMutablePeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-2) + "'", int23 == (-2));
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "PT-2147483550M" + "'", str40, "PT-2147483550M");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod47);
    }

    @Test
    public void test0555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0555");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.Minutes minutes13 = minutes3.multipliedBy(2);
        org.joda.time.PeriodType periodType14 = minutes3.getPeriodType();
        java.lang.String str15 = minutes3.toString();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PT-2M" + "'", str15, "PT-2M");
    }

    @Test
    public void test0556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0556");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes3 = minutes1.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        int int13 = minutes4.get(durationFieldType11);
        org.joda.time.PeriodType periodType14 = minutes4.getPeriodType();
        int int15 = minutes4.getMinutes();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds16 = minutes4.toStandardSeconds();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 2147483647 * 60");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2147483647 + "'", int13 == 2147483647);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
    }

    @Test
    public void test0557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0557");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        org.joda.time.Minutes minutes14 = minutes7.plus((-1));
        org.joda.time.Minutes minutes16 = minutes7.minus((int) (short) 10);
        org.joda.time.Minutes minutes18 = minutes16.dividedBy((-2147483648));
        org.joda.time.Minutes minutes19 = minutes4.plus(minutes18);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes22 = minutes20.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = minutes23.get(durationFieldType24);
        org.joda.time.MutablePeriod mutablePeriod26 = minutes23.toMutablePeriod();
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes23);
        boolean boolean28 = minutes22.isLessThan(minutes27);
        org.joda.time.DurationFieldType durationFieldType29 = minutes27.getFieldType();
        boolean boolean30 = minutes19.isSupported(durationFieldType29);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes33 = minutes31.multipliedBy((int) (short) -1);
        org.joda.time.Period period34 = minutes33.toPeriod();
        org.joda.time.Minutes minutes35 = minutes19.plus(minutes33);
        org.joda.time.PeriodType periodType36 = minutes19.getPeriodType();
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = minutes37.get(durationFieldType38);
        org.joda.time.MutablePeriod mutablePeriod40 = minutes37.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType41 = minutes37.getFieldType();
        org.joda.time.Minutes minutes43 = minutes37.dividedBy((-1));
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.MAX_VALUE;
        int int45 = minutes44.size();
        org.joda.time.Minutes minutes46 = minutes37.plus(minutes44);
        org.joda.time.DurationFieldType durationFieldType47 = minutes37.getFieldType();
        boolean boolean48 = minutes19.isLessThan(minutes37);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test0558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0558");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = minutes12.getFieldType();
        int int16 = minutes11.get(durationFieldType15);
        org.joda.time.Minutes minutes18 = minutes11.plus((-1));
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = minutes21.plus(0);
        int int26 = minutes19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes21);
        org.joda.time.Minutes minutes28 = minutes21.plus((int) ' ');
        java.lang.String str29 = minutes21.toString();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean32 = minutes21.isLessThan(minutes31);
        boolean boolean33 = minutes18.isLessThan(minutes21);
        org.joda.time.Minutes minutes34 = minutes2.minus(minutes18);
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes37 = minutes35.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType38 = minutes37.getFieldType();
        org.joda.time.Minutes minutes39 = minutes37.negated();
        org.joda.time.Minutes minutes40 = minutes34.minus(minutes39);
        int int41 = minutes34.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2M" + "'", str29, "PT2M");
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
    }

    @Test
    public void test0559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0559");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        org.joda.time.Minutes minutes5 = minutes3.plus((int) 'a');
        java.lang.String str6 = minutes5.toString();
        java.lang.String str7 = minutes5.toString();
        org.joda.time.Period period8 = minutes5.toPeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT-2147483548M" + "'", str6, "PT-2147483548M");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT-2147483548M" + "'", str7, "PT-2147483548M");
        org.junit.Assert.assertNotNull(period8);
    }

    @Test
    public void test0560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0560");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.DurationFieldType durationFieldType2 = minutes0.getFieldType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes4 = minutes0.multipliedBy(100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 2147483647 * 100");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(durationFieldType2);
    }

    @Test
    public void test0561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0561");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        boolean boolean6 = minutes0.isGreaterThan(minutes5);
        // The following exception was thrown during execution in test generation
        try {
            int int8 = minutes5.getValue((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test0562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0562");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.dividedBy(2);
        int int3 = minutes0.size();
        org.joda.time.Minutes minutes5 = minutes0.minus((-12));
        org.joda.time.Minutes minutes7 = minutes5.dividedBy((int) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes9 = minutes7.dividedBy((int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
    }

    @Test
    public void test0563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0563");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod2 = minutes0.toMutablePeriod();
        java.lang.String str3 = minutes0.toString();
        java.lang.String str4 = minutes0.toString();
        org.joda.time.DurationFieldType durationFieldType5 = minutes0.getFieldType();
        java.lang.Class<?> wildcardClass6 = minutes0.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2M" + "'", str3, "PT2M");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT2M" + "'", str4, "PT2M");
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0564");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes4 = minutes2.dividedBy((int) (short) 10);
        org.joda.time.Minutes minutes6 = minutes2.plus((int) '4');
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes8 = minutes6.multipliedBy((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: -2147483596 * 32");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
    }

    @Test
    public void test0565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0565");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        org.joda.time.Minutes minutes5 = minutes3.plus((int) 'a');
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod7 = minutes6.toMutablePeriod();
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = minutes8.plus(0);
        int int13 = minutes6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes8);
        org.joda.time.Minutes minutes15 = minutes8.plus((int) ' ');
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = minutes16.getFieldType();
        int int18 = minutes8.get(durationFieldType17);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes21 = minutes19.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes22 = minutes19.negated();
        org.joda.time.Minutes minutes23 = minutes8.plus(minutes19);
        org.joda.time.DurationFieldType durationFieldType24 = minutes8.getFieldType();
        int int25 = minutes3.get(durationFieldType24);
        org.joda.time.MutablePeriod mutablePeriod26 = minutes3.toMutablePeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-2147483645) + "'", int25 == (-2147483645));
        org.junit.Assert.assertNotNull(mutablePeriod26);
    }

    @Test
    public void test0566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0566");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes8 = minutes5.multipliedBy((int) (short) 1);
        org.joda.time.Period period9 = minutes5.toPeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(period9);
    }

    @Test
    public void test0567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0567");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.Minutes minutes13 = minutes3.multipliedBy(2);
        java.lang.String str14 = minutes13.toString();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "PT-4M" + "'", str14, "PT-4M");
    }

    @Test
    public void test0568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0568");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod2 = minutes0.toMutablePeriod();
        java.lang.String str3 = minutes0.toString();
        int int4 = minutes0.size();
        org.joda.time.Minutes minutes5 = minutes0.negated();
        org.joda.time.Minutes minutes6 = null;
        org.joda.time.Minutes minutes7 = minutes0.minus(minutes6);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod9 = minutes8.toMutablePeriod();
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes14 = minutes10.plus(0);
        int int15 = minutes8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes10);
        org.joda.time.Minutes minutes17 = minutes10.plus((int) ' ');
        org.joda.time.Period period18 = minutes10.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod19 = minutes10.toMutablePeriod();
        org.joda.time.Period period20 = minutes10.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod21 = minutes10.toMutablePeriod();
        org.joda.time.Minutes minutes23 = minutes10.multipliedBy(100);
        org.joda.time.Minutes minutes25 = minutes23.minus((int) (short) 0);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes27 = minutes26.negated();
        org.joda.time.Minutes minutes28 = minutes26.negated();
        org.joda.time.DurationFieldType durationFieldType29 = minutes26.getFieldType();
        java.lang.String str30 = minutes26.toString();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes32 = minutes31.negated();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes31);
        int int34 = minutes31.size();
        org.joda.time.MutablePeriod mutablePeriod35 = minutes31.toMutablePeriod();
        boolean boolean36 = minutes26.equals((java.lang.Object) minutes31);
        org.joda.time.DurationFieldType durationFieldType38 = minutes31.getFieldType((int) (short) 0);
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod40 = minutes39.toMutablePeriod();
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes43 = minutes41.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes45 = minutes41.plus(0);
        int int46 = minutes39.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes41);
        org.joda.time.Minutes minutes48 = minutes41.plus((int) ' ');
        java.lang.String str49 = minutes41.toString();
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean52 = minutes41.isLessThan(minutes51);
        org.joda.time.Period period53 = minutes51.toPeriod();
        boolean boolean54 = minutes31.isGreaterThan(minutes51);
        boolean boolean55 = minutes25.equals((java.lang.Object) minutes31);
        boolean boolean56 = minutes7.isLessThan(minutes31);
        org.joda.time.Period period57 = minutes7.toPeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2M" + "'", str3, "PT2M");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "PT2147483647M" + "'", str30, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "PT2M" + "'", str49, "PT2M");
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(period57);
    }

    @Test
    public void test0569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0569");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = minutes12.getFieldType();
        int int16 = minutes11.get(durationFieldType15);
        org.joda.time.Minutes minutes18 = minutes11.plus((-1));
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = minutes21.plus(0);
        int int26 = minutes19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes21);
        org.joda.time.Minutes minutes28 = minutes21.plus((int) ' ');
        java.lang.String str29 = minutes21.toString();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean32 = minutes21.isLessThan(minutes31);
        boolean boolean33 = minutes18.isLessThan(minutes21);
        org.joda.time.Minutes minutes34 = minutes2.minus(minutes18);
        org.joda.time.MutablePeriod mutablePeriod35 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes37 = minutes2.dividedBy(2);
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes40 = minutes38.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType42 = null;
        int int43 = minutes41.get(durationFieldType42);
        org.joda.time.DurationFieldType durationFieldType44 = minutes41.getFieldType();
        int int45 = minutes40.get(durationFieldType44);
        org.joda.time.Minutes minutes47 = minutes40.plus((-1));
        org.joda.time.Minutes minutes48 = minutes47.negated();
        org.joda.time.Minutes minutes49 = minutes37.plus(minutes48);
        org.joda.time.Minutes minutes51 = minutes37.minus((int) (short) 1);
        org.joda.time.PeriodType periodType52 = minutes37.getPeriodType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2M" + "'", str29, "PT2M");
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-2) + "'", int45 == (-2));
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(periodType52);
    }

    @Test
    public void test0570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0570");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        int int1 = minutes0.getMinutes();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = minutes5.get(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType8 = minutes5.getFieldType();
        int int9 = minutes4.get(durationFieldType8);
        org.joda.time.Minutes minutes11 = minutes4.plus((-1));
        org.joda.time.Minutes minutes13 = minutes4.minus((int) (short) 10);
        org.joda.time.Minutes minutes15 = minutes13.dividedBy((-2147483648));
        org.joda.time.Minutes minutes16 = minutes15.negated();
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes18 = minutes17.negated();
        org.joda.time.Minutes minutes19 = minutes17.negated();
        org.joda.time.Minutes minutes20 = minutes15.minus(minutes19);
        org.joda.time.Minutes minutes22 = minutes19.plus((int) 'a');
        boolean boolean23 = minutes0.isLessThan(minutes22);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes26 = minutes24.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = minutes27.get(durationFieldType28);
        org.joda.time.MutablePeriod mutablePeriod30 = minutes27.toMutablePeriod();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes27);
        boolean boolean32 = minutes26.isLessThan(minutes31);
        int int33 = minutes26.getMinutes();
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean36 = minutes26.isLessThan(minutes35);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration38 = minutes37.toStandardDuration();
        org.joda.time.Duration duration39 = minutes37.toStandardDuration();
        org.joda.time.Minutes minutes41 = minutes37.minus(2);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes44 = minutes42.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes45 = minutes42.negated();
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes47 = minutes46.negated();
        org.joda.time.Minutes minutes48 = minutes46.negated();
        boolean boolean49 = minutes42.equals((java.lang.Object) minutes48);
        boolean boolean50 = minutes41.isLessThan(minutes42);
        org.joda.time.Minutes minutes51 = minutes35.minus(minutes42);
        org.joda.time.Minutes minutes52 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes53 = minutes52.negated();
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes52);
        java.lang.String str55 = minutes52.toString();
        org.joda.time.Minutes minutes56 = minutes51.plus(minutes52);
        org.joda.time.Minutes minutes58 = org.joda.time.Minutes.minutes((int) (short) -1);
        int int59 = minutes58.size();
        boolean boolean60 = minutes56.isGreaterThan(minutes58);
        int int61 = minutes22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes58);
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes58);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-2147483648) + "'", int1 == (-2147483648));
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-2) + "'", int9 == (-2));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-2) + "'", int33 == (-2));
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "PT2147483647M" + "'", str55, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(minutes62);
    }

    @Test
    public void test0571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0571");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType3 = minutes2.getFieldType();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes5 = minutes4.negated();
        org.joda.time.Minutes minutes6 = minutes4.negated();
        java.lang.String str7 = minutes4.toString();
        int int8 = minutes4.size();
        org.joda.time.Minutes minutes10 = minutes4.minus(0);
        org.joda.time.Duration duration11 = minutes10.toStandardDuration();
        boolean boolean12 = minutes2.isGreaterThan(minutes10);
        java.lang.String str13 = minutes2.toString();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT2147483647M" + "'", str7, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PT-2M" + "'", str13, "PT-2M");
    }

    @Test
    public void test0572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0572");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.Duration duration2 = minutes0.toStandardDuration();
        org.joda.time.Minutes minutes4 = minutes0.minus(2);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        int int6 = minutes5.getMinutes();
        org.joda.time.PeriodType periodType7 = minutes5.getPeriodType();
        org.joda.time.Minutes minutes8 = null;
        org.joda.time.Minutes minutes9 = minutes5.plus(minutes8);
        boolean boolean10 = minutes0.isLessThan(minutes9);
        int int11 = minutes9.getMinutes();
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod13 = minutes12.toMutablePeriod();
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes16 = minutes14.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes18 = minutes14.plus(0);
        int int19 = minutes12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes14);
        org.joda.time.Minutes minutes21 = minutes14.plus((int) ' ');
        org.joda.time.Period period22 = minutes14.toPeriod();
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes14);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes24 = minutes9.minus(minutes14);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: -2147483648 + -2");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-2147483648) + "'", int6 == (-2147483648));
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-2147483648) + "'", int11 == (-2147483648));
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(minutes23);
    }

    @Test
    public void test0573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0573");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        int int1 = minutes0.size();
        int int3 = minutes0.getValue(0);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        org.joda.time.Minutes minutes14 = minutes7.plus((-1));
        org.joda.time.Minutes minutes16 = minutes7.minus((int) (short) 10);
        org.joda.time.Duration duration17 = minutes7.toStandardDuration();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes19 = minutes18.negated();
        org.joda.time.Minutes minutes20 = minutes18.negated();
        java.lang.String str21 = minutes18.toString();
        org.joda.time.Minutes minutes23 = minutes18.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes27 = minutes25.multipliedBy((int) (byte) 0);
        boolean boolean28 = minutes23.equals((java.lang.Object) minutes25);
        boolean boolean29 = minutes7.isGreaterThan(minutes25);
        boolean boolean30 = minutes4.equals((java.lang.Object) boolean29);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes32 = minutes4.multipliedBy((-214748364));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 2147483647 * -214748364");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2147483647 + "'", int3 == 2147483647);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT2147483647M" + "'", str21, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0574");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        int int4 = minutes2.getMinutes();
        org.joda.time.PeriodType periodType5 = minutes2.getPeriodType();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType8 = minutes7.getPeriodType();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes10 = minutes9.negated();
        org.joda.time.Minutes minutes11 = minutes9.negated();
        org.joda.time.DurationFieldType durationFieldType12 = minutes9.getFieldType();
        java.lang.String str13 = minutes9.toString();
        boolean boolean14 = minutes7.isGreaterThan(minutes9);
        boolean boolean15 = minutes6.equals((java.lang.Object) minutes7);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes6);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes18 = minutes17.negated();
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes17);
        org.joda.time.Minutes minutes20 = minutes16.minus(minutes19);
        org.joda.time.DurationFieldType durationFieldType21 = minutes16.getFieldType();
        boolean boolean22 = minutes2.isSupported(durationFieldType21);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes24 = minutes2.multipliedBy((-2147483645));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 3 * -2147483645");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PT2147483647M" + "'", str13, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test0575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0575");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod8 = minutes7.toMutablePeriod();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod8);
        boolean boolean10 = minutes0.isLessThan(minutes9);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes9);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes13 = minutes12.negated();
        org.joda.time.PeriodType periodType14 = minutes13.getPeriodType();
        org.joda.time.Minutes minutes16 = minutes13.minus(0);
        boolean boolean17 = minutes9.equals((java.lang.Object) 0);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.THREE;
        int int19 = minutes18.size();
        org.joda.time.Minutes minutes20 = minutes9.plus(minutes18);
        org.joda.time.Minutes minutes22 = minutes20.dividedBy((int) '#');
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
    }

    @Test
    public void test0576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0576");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = minutes0.negated();
        org.joda.time.DurationFieldType durationFieldType3 = minutes0.getFieldType();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.dividedBy(2);
        int int7 = minutes4.size();
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod9 = minutes8.toMutablePeriod();
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes14 = minutes10.plus(0);
        int int15 = minutes8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes10);
        org.joda.time.Minutes minutes17 = minutes10.plus((int) ' ');
        int int18 = minutes17.size();
        org.joda.time.Minutes minutes20 = minutes17.minus(0);
        org.joda.time.Minutes minutes21 = minutes4.plus(minutes17);
        org.joda.time.Minutes minutes23 = minutes21.dividedBy((-2147483648));
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes25 = minutes24.negated();
        org.joda.time.Minutes minutes26 = minutes24.negated();
        java.lang.String str27 = minutes24.toString();
        org.joda.time.Minutes minutes29 = minutes24.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes33 = minutes31.multipliedBy((int) (byte) 0);
        boolean boolean34 = minutes29.equals((java.lang.Object) minutes31);
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes36 = minutes35.negated();
        org.joda.time.DurationFieldType durationFieldType37 = minutes35.getFieldType();
        boolean boolean38 = minutes29.isSupported(durationFieldType37);
        int int39 = minutes21.get(durationFieldType37);
        int int40 = minutes0.get(durationFieldType37);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "PT2147483647M" + "'", str27, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 36 + "'", int39 == 36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2147483647 + "'", int40 == 2147483647);
    }

    @Test
    public void test0577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0577");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((-4));
        org.joda.time.Period period2 = minutes1.toPeriod();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes4 = minutes3.negated();
        org.joda.time.Minutes minutes6 = minutes4.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes6);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = minutes11.get(durationFieldType12);
        org.joda.time.DurationFieldType durationFieldType14 = minutes11.getFieldType();
        int int15 = minutes10.get(durationFieldType14);
        int int16 = minutes7.get(durationFieldType14);
        org.joda.time.PeriodType periodType17 = minutes7.getPeriodType();
        int int18 = minutes7.getMinutes();
        boolean boolean19 = minutes1.isGreaterThan(minutes7);
        org.joda.time.Minutes minutes21 = minutes7.dividedBy(32);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-2) + "'", int15 == (-2));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2147483647 + "'", int16 == 2147483647);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483647 + "'", int18 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(minutes21);
    }

    @Test
    public void test0578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0578");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.THREE;
        int int1 = minutes0.size();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod3 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = minutes4.plus(0);
        int int9 = minutes2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes4);
        org.joda.time.Minutes minutes11 = minutes4.plus((int) ' ');
        int int12 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes11);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes16 = minutes14.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = minutes17.get(durationFieldType18);
        org.joda.time.DurationFieldType durationFieldType20 = minutes17.getFieldType();
        int int21 = minutes16.get(durationFieldType20);
        org.joda.time.Minutes minutes23 = minutes16.plus((-1));
        boolean boolean24 = minutes13.isGreaterThan(minutes16);
        org.joda.time.DurationFieldType durationFieldType25 = minutes16.getFieldType();
        int int27 = minutes16.getValue((int) (short) 0);
        org.joda.time.Period period28 = minutes16.toPeriod();
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes30 = minutes29.negated();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod32 = minutes31.toMutablePeriod();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes34 = minutes31.plus(minutes33);
        int int35 = minutes30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes33);
        org.joda.time.Minutes minutes36 = minutes16.minus(minutes30);
        boolean boolean37 = minutes0.isGreaterThan(minutes30);
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod39 = minutes38.toMutablePeriod();
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes41 = minutes38.plus(minutes40);
        org.joda.time.Minutes minutes43 = minutes41.plus((int) 'a');
        org.joda.time.Duration duration44 = minutes41.toStandardDuration();
        int int45 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes41);
        org.joda.time.DurationFieldType durationFieldType46 = minutes0.getFieldType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-2) + "'", int21 == (-2));
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-2) + "'", int27 == (-2));
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(durationFieldType46);
    }

    @Test
    public void test0579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0579");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = minutes8.plus(0);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = minutes16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = minutes16.getFieldType();
        int int20 = minutes15.get(durationFieldType19);
        org.joda.time.Minutes minutes22 = minutes15.plus((-1));
        org.joda.time.Minutes minutes24 = minutes15.minus((int) (short) 10);
        org.joda.time.Minutes minutes26 = minutes24.dividedBy((-2147483648));
        org.joda.time.Minutes minutes27 = minutes12.plus(minutes26);
        org.joda.time.Minutes minutes28 = minutes2.minus(minutes12);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod30 = minutes29.toMutablePeriod();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes33 = minutes31.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes35 = minutes31.plus(0);
        int int36 = minutes29.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes31);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes39 = minutes37.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes41 = minutes37.plus(0);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes44 = minutes42.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType46 = null;
        int int47 = minutes45.get(durationFieldType46);
        org.joda.time.DurationFieldType durationFieldType48 = minutes45.getFieldType();
        int int49 = minutes44.get(durationFieldType48);
        org.joda.time.Minutes minutes51 = minutes44.plus((-1));
        org.joda.time.Minutes minutes53 = minutes44.minus((int) (short) 10);
        org.joda.time.Minutes minutes55 = minutes53.dividedBy((-2147483648));
        org.joda.time.Minutes minutes56 = minutes41.plus(minutes55);
        org.joda.time.Minutes minutes57 = minutes31.minus(minutes41);
        org.joda.time.PeriodType periodType58 = minutes31.getPeriodType();
        boolean boolean59 = minutes12.isLessThan(minutes31);
        org.joda.time.Minutes minutes60 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType61 = minutes60.getPeriodType();
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes63 = minutes62.negated();
        org.joda.time.Minutes minutes64 = minutes62.negated();
        org.joda.time.DurationFieldType durationFieldType65 = minutes62.getFieldType();
        java.lang.String str66 = minutes62.toString();
        boolean boolean67 = minutes60.isGreaterThan(minutes62);
        boolean boolean68 = minutes31.isLessThan(minutes60);
        org.joda.time.Minutes minutes69 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes60);
        org.joda.time.PeriodType periodType70 = minutes60.getPeriodType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-2) + "'", int20 == (-2));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-2) + "'", int49 == (-2));
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "PT2147483647M" + "'", str66, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(periodType70);
    }

    @Test
    public void test0580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0580");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        int int1 = minutes0.size();
        int int3 = minutes0.getValue(0);
        org.joda.time.Minutes minutes4 = minutes0.negated();
        org.joda.time.Minutes minutes6 = minutes4.plus(0);
        org.joda.time.Minutes minutes8 = minutes4.dividedBy((int) (byte) 10);
        org.joda.time.Duration duration9 = minutes8.toStandardDuration();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds10 = minutes8.toStandardSeconds();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: -214748364 * 60");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2147483647 + "'", int3 == 2147483647);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration9);
    }

    @Test
    public void test0581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0581");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        org.joda.time.DurationFieldType durationFieldType9 = minutes7.getFieldType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes11 = minutes7.plus((-24));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: -2147483648 + -24");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(durationFieldType9);
    }

    @Test
    public void test0582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0582");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.THREE;
        int int1 = minutes0.size();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod3 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = minutes4.plus(0);
        int int9 = minutes2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes4);
        org.joda.time.Minutes minutes11 = minutes4.plus((int) ' ');
        int int12 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes11);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType14 = minutes11.getFieldType((-2147483646));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -2147483646");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test0583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0583");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = minutes12.getFieldType();
        int int16 = minutes11.get(durationFieldType15);
        org.joda.time.Minutes minutes18 = minutes11.plus((-1));
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = minutes21.plus(0);
        int int26 = minutes19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes21);
        org.joda.time.Minutes minutes28 = minutes21.plus((int) ' ');
        java.lang.String str29 = minutes21.toString();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean32 = minutes21.isLessThan(minutes31);
        boolean boolean33 = minutes18.isLessThan(minutes21);
        org.joda.time.Minutes minutes34 = minutes2.minus(minutes18);
        org.joda.time.Duration duration35 = minutes18.toStandardDuration();
        int int36 = minutes18.getMinutes();
        int int37 = minutes18.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2M" + "'", str29, "PT2M");
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-3) + "'", int36 == (-3));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-3) + "'", int37 == (-3));
    }

    @Test
    public void test0584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0584");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType1 = minutes0.getPeriodType();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes3 = minutes2.negated();
        org.joda.time.Minutes minutes4 = minutes2.negated();
        org.joda.time.DurationFieldType durationFieldType5 = minutes2.getFieldType();
        java.lang.String str6 = minutes2.toString();
        boolean boolean7 = minutes0.isGreaterThan(minutes2);
        org.joda.time.Minutes minutes9 = minutes0.multipliedBy((int) (byte) 0);
        org.joda.time.PeriodType periodType10 = minutes9.getPeriodType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT2147483647M" + "'", str6, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(periodType10);
    }

    @Test
    public void test0585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0585");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod2 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        int int4 = minutes3.size();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes6 = minutes5.negated();
        org.joda.time.Minutes minutes8 = minutes6.dividedBy((int) (byte) -1);
        boolean boolean9 = minutes3.isLessThan(minutes6);
        boolean boolean10 = minutes0.isLessThan(minutes3);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType12 = minutes3.getFieldType(4);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test0586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0586");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes5 = minutes3.minus((int) (short) 1);
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy(0);
        org.joda.time.Minutes minutes9 = minutes7.plus((-2147483648));
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes11 = minutes10.negated();
        org.joda.time.Minutes minutes12 = minutes10.negated();
        boolean boolean13 = minutes9.isGreaterThan(minutes12);
        int int14 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes9);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.DurationFieldType durationFieldType16 = minutes0.getFieldType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(durationFieldType16);
    }

    @Test
    public void test0587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0587");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod3 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = minutes4.plus(0);
        int int9 = minutes2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes4);
        org.joda.time.Minutes minutes11 = minutes4.plus((int) ' ');
        java.lang.String str12 = minutes4.toString();
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean15 = minutes4.isLessThan(minutes14);
        org.joda.time.MutablePeriod mutablePeriod16 = minutes4.toMutablePeriod();
        boolean boolean17 = minutes0.isLessThan(minutes4);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MIN_VALUE;
        int int19 = minutes18.getMinutes();
        boolean boolean20 = minutes4.equals((java.lang.Object) minutes18);
        org.joda.time.Minutes minutes22 = minutes4.dividedBy((int) (byte) 10);
        org.joda.time.Period period23 = minutes4.toPeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PT2M" + "'", str12, "PT2M");
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2147483648) + "'", int19 == (-2147483648));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(period23);
    }

    @Test
    public void test0588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0588");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = minutes12.getFieldType();
        int int16 = minutes11.get(durationFieldType15);
        org.joda.time.Minutes minutes18 = minutes11.plus((-1));
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = minutes21.plus(0);
        int int26 = minutes19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes21);
        org.joda.time.Minutes minutes28 = minutes21.plus((int) ' ');
        java.lang.String str29 = minutes21.toString();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean32 = minutes21.isLessThan(minutes31);
        boolean boolean33 = minutes18.isLessThan(minutes21);
        org.joda.time.Minutes minutes34 = minutes2.minus(minutes18);
        org.joda.time.MutablePeriod mutablePeriod35 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes37 = minutes2.dividedBy(2);
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes40 = minutes38.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType42 = null;
        int int43 = minutes41.get(durationFieldType42);
        org.joda.time.DurationFieldType durationFieldType44 = minutes41.getFieldType();
        int int45 = minutes40.get(durationFieldType44);
        org.joda.time.Minutes minutes47 = minutes40.plus((-1));
        org.joda.time.Minutes minutes48 = minutes47.negated();
        org.joda.time.Minutes minutes49 = minutes37.plus(minutes48);
        org.joda.time.Minutes minutes51 = minutes49.multipliedBy((-12));
        org.joda.time.PeriodType periodType52 = minutes51.getPeriodType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2M" + "'", str29, "PT2M");
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-2) + "'", int45 == (-2));
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(periodType52);
    }

    @Test
    public void test0589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0589");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = minutes0.get(durationFieldType1);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType4 = minutes0.getFieldType();
        org.joda.time.Minutes minutes6 = minutes0.dividedBy((-1));
        org.joda.time.Minutes minutes8 = minutes0.dividedBy(2147483646);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.minutes((int) (byte) 10);
        boolean boolean11 = minutes0.isLessThan(minutes10);
        org.joda.time.PeriodType periodType12 = minutes10.getPeriodType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(periodType12);
    }

    @Test
    public void test0590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0590");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        java.lang.String str3 = minutes0.toString();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = minutes4.getFieldType();
        boolean boolean6 = minutes0.isSupported(durationFieldType5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MAX_VALUE;
        int int9 = minutes8.size();
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes11 = minutes10.negated();
        org.joda.time.Minutes minutes13 = minutes11.dividedBy((int) (byte) -1);
        boolean boolean14 = minutes8.isLessThan(minutes11);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes11);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes18 = minutes16.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = minutes19.get(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType22 = minutes19.getFieldType();
        int int23 = minutes18.get(durationFieldType22);
        org.joda.time.Minutes minutes25 = minutes18.plus((-1));
        org.joda.time.Minutes minutes27 = minutes18.minus((int) (short) 10);
        org.joda.time.DurationFieldType durationFieldType29 = minutes18.getFieldType((int) (short) 0);
        boolean boolean30 = minutes15.isSupported(durationFieldType29);
        boolean boolean31 = minutes7.isSupported(durationFieldType29);
        int int32 = minutes7.size();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds33 = minutes7.toStandardSeconds();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 2147483647 * 60");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2147483647M" + "'", str3, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-2) + "'", int23 == (-2));
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
    }

    @Test
    public void test0591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0591");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = minutes0.negated();
        org.joda.time.DurationFieldType durationFieldType3 = minutes0.getFieldType();
        java.lang.String str4 = minutes0.toString();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes6 = minutes5.negated();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes5);
        int int8 = minutes5.size();
        org.joda.time.MutablePeriod mutablePeriod9 = minutes5.toMutablePeriod();
        boolean boolean10 = minutes0.equals((java.lang.Object) minutes5);
        org.joda.time.DurationFieldType durationFieldType12 = minutes5.getFieldType((int) (short) 0);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod14 = minutes13.toMutablePeriod();
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes17 = minutes15.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes19 = minutes15.plus(0);
        int int20 = minutes13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes15);
        org.joda.time.Minutes minutes22 = minutes15.plus((int) ' ');
        java.lang.String str23 = minutes15.toString();
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean26 = minutes15.isLessThan(minutes25);
        org.joda.time.Period period27 = minutes25.toPeriod();
        boolean boolean28 = minutes5.isGreaterThan(minutes25);
        org.joda.time.Period period29 = minutes5.toPeriod();
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) period29);
        org.joda.time.Minutes minutes31 = minutes30.negated();
        org.joda.time.Period period32 = minutes30.toPeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT2147483647M" + "'", str4, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT2M" + "'", str23, "PT2M");
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(period32);
    }

    @Test
    public void test0592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0592");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = minutes8.plus(0);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = minutes16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = minutes16.getFieldType();
        int int20 = minutes15.get(durationFieldType19);
        org.joda.time.Minutes minutes22 = minutes15.plus((-1));
        org.joda.time.Minutes minutes24 = minutes15.minus((int) (short) 10);
        org.joda.time.Minutes minutes26 = minutes24.dividedBy((-2147483648));
        org.joda.time.Minutes minutes27 = minutes12.plus(minutes26);
        org.joda.time.Minutes minutes28 = minutes2.minus(minutes12);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes31 = minutes29.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes33 = minutes29.plus(0);
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes36 = minutes34.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = minutes37.get(durationFieldType38);
        org.joda.time.DurationFieldType durationFieldType40 = minutes37.getFieldType();
        int int41 = minutes36.get(durationFieldType40);
        org.joda.time.Minutes minutes43 = minutes36.plus((-1));
        org.joda.time.Minutes minutes45 = minutes36.minus((int) (short) 10);
        org.joda.time.Minutes minutes47 = minutes45.dividedBy((-2147483648));
        org.joda.time.Minutes minutes48 = minutes33.plus(minutes47);
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType50 = minutes49.getPeriodType();
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes52 = minutes51.negated();
        org.joda.time.Minutes minutes53 = minutes51.negated();
        org.joda.time.DurationFieldType durationFieldType54 = minutes51.getFieldType();
        java.lang.String str55 = minutes51.toString();
        boolean boolean56 = minutes49.isGreaterThan(minutes51);
        boolean boolean57 = minutes33.isLessThan(minutes51);
        int int58 = minutes12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes51);
        org.joda.time.Minutes minutes60 = minutes51.dividedBy((-2147483647));
        org.joda.time.Minutes minutes61 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes63 = minutes61.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes64 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType65 = null;
        int int66 = minutes64.get(durationFieldType65);
        org.joda.time.MutablePeriod mutablePeriod67 = minutes64.toMutablePeriod();
        org.joda.time.Minutes minutes68 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes64);
        boolean boolean69 = minutes63.isLessThan(minutes68);
        int int70 = minutes63.getMinutes();
        org.joda.time.Minutes minutes72 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean73 = minutes63.isLessThan(minutes72);
        org.joda.time.Minutes minutes74 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration75 = minutes74.toStandardDuration();
        org.joda.time.Duration duration76 = minutes74.toStandardDuration();
        org.joda.time.Minutes minutes78 = minutes74.minus(2);
        org.joda.time.Minutes minutes79 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes81 = minutes79.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes82 = minutes79.negated();
        org.joda.time.Minutes minutes83 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes84 = minutes83.negated();
        org.joda.time.Minutes minutes85 = minutes83.negated();
        boolean boolean86 = minutes79.equals((java.lang.Object) minutes85);
        boolean boolean87 = minutes78.isLessThan(minutes79);
        org.joda.time.Minutes minutes88 = minutes72.minus(minutes79);
        org.joda.time.Minutes minutes90 = minutes72.dividedBy((-12));
        int int91 = minutes90.size();
        int int92 = minutes60.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes90);
        int int93 = minutes60.size();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-2) + "'", int20 == (-2));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-2) + "'", int41 == (-2));
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "PT2147483647M" + "'", str55, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod67);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-2) + "'", int70 == (-2));
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(minutes74);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertNotNull(minutes78);
        org.junit.Assert.assertNotNull(minutes79);
        org.junit.Assert.assertNotNull(minutes81);
        org.junit.Assert.assertNotNull(minutes82);
        org.junit.Assert.assertNotNull(minutes83);
        org.junit.Assert.assertNotNull(minutes84);
        org.junit.Assert.assertNotNull(minutes85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(minutes88);
        org.junit.Assert.assertNotNull(minutes90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 1 + "'", int91 == 1);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 1 + "'", int93 == 1);
    }

    @Test
    public void test0593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0593");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.Minutes minutes13 = minutes3.multipliedBy(2);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = minutes3.get(durationFieldType14);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test0594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0594");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        org.joda.time.Period period4 = minutes3.toPeriod();
        int int5 = minutes3.getMinutes();
        int int6 = minutes3.getMinutes();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes9 = minutes7.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes10 = minutes7.negated();
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes13 = minutes7.minus(minutes12);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod15 = minutes14.toMutablePeriod();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod15);
        boolean boolean17 = minutes7.isLessThan(minutes16);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes16);
        org.joda.time.DurationFieldType durationFieldType19 = minutes16.getFieldType();
        boolean boolean20 = minutes3.isSupported(durationFieldType19);
        // The following exception was thrown during execution in test generation
        try {
            int int22 = minutes3.getValue((-71582788));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -71582788");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-2147483645) + "'", int5 == (-2147483645));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-2147483645) + "'", int6 == (-2147483645));
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test0595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0595");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.minus((int) (short) 0);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes4 = minutes3.negated();
        org.joda.time.Minutes minutes5 = minutes3.negated();
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        boolean boolean7 = minutes0.isSupported(durationFieldType6);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = minutes8.plus(0);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = minutes16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = minutes16.getFieldType();
        int int20 = minutes15.get(durationFieldType19);
        org.joda.time.Minutes minutes22 = minutes15.plus((-1));
        org.joda.time.Minutes minutes24 = minutes15.minus((int) (short) 10);
        org.joda.time.Minutes minutes26 = minutes24.dividedBy((-2147483648));
        org.joda.time.Minutes minutes27 = minutes12.plus(minutes26);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes30 = minutes28.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = minutes31.get(durationFieldType32);
        org.joda.time.MutablePeriod mutablePeriod34 = minutes31.toMutablePeriod();
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes31);
        boolean boolean36 = minutes30.isLessThan(minutes35);
        org.joda.time.DurationFieldType durationFieldType37 = minutes35.getFieldType();
        boolean boolean38 = minutes27.isSupported(durationFieldType37);
        boolean boolean39 = minutes0.isSupported(durationFieldType37);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds40 = minutes0.toStandardSeconds();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: -2147483648 * 60");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-2) + "'", int20 == (-2));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test0596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0596");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod8 = minutes7.toMutablePeriod();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod8);
        boolean boolean10 = minutes0.isLessThan(minutes9);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes9);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes14 = minutes12.minus((int) (short) 0);
        boolean boolean15 = minutes9.isLessThan(minutes14);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes18 = minutes16.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = minutes19.get(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType22 = minutes19.getFieldType();
        int int23 = minutes18.get(durationFieldType22);
        org.joda.time.Minutes minutes25 = minutes18.plus((-1));
        org.joda.time.Minutes minutes27 = minutes18.minus((int) (short) 10);
        org.joda.time.DurationFieldType durationFieldType29 = minutes18.getFieldType((int) (short) 0);
        int int30 = minutes14.get(durationFieldType29);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-2) + "'", int23 == (-2));
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-2147483648) + "'", int30 == (-2147483648));
    }

    @Test
    public void test0597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0597");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        boolean boolean6 = minutes0.isGreaterThan(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes8 = minutes7.negated();
        org.joda.time.Minutes minutes10 = minutes8.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes10);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = minutes15.get(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = minutes15.getFieldType();
        int int19 = minutes14.get(durationFieldType18);
        int int20 = minutes11.get(durationFieldType18);
        org.joda.time.PeriodType periodType21 = minutes11.getPeriodType();
        int int22 = minutes11.getMinutes();
        boolean boolean23 = minutes0.isLessThan(minutes11);
        int int24 = minutes11.size();
        int int25 = minutes11.size();
        int int26 = minutes11.getMinutes();
        org.joda.time.Minutes minutes27 = minutes11.negated();
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes27);
        java.lang.String str29 = minutes27.toString();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2) + "'", int19 == (-2));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2147483647 + "'", int20 == 2147483647);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2147483647 + "'", int22 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2147483647 + "'", int26 == 2147483647);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT-2147483647M" + "'", str29, "PT-2147483647M");
    }

    @Test
    public void test0598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0598");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType2 = minutes1.getPeriodType();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes4 = minutes3.negated();
        org.joda.time.Minutes minutes5 = minutes3.negated();
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        java.lang.String str7 = minutes3.toString();
        boolean boolean8 = minutes1.isGreaterThan(minutes3);
        boolean boolean9 = minutes0.equals((java.lang.Object) minutes1);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        int int11 = minutes10.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT2147483647M" + "'", str7, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2147483647 + "'", int11 == 2147483647);
    }

    @Test
    public void test0599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0599");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        boolean boolean6 = minutes0.isGreaterThan(minutes5);
        org.joda.time.Minutes minutes7 = minutes0.negated();
        java.lang.Class<?> wildcardClass8 = minutes7.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0600");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        int int1 = minutes0.getMinutes();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = minutes5.get(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType8 = minutes5.getFieldType();
        int int9 = minutes4.get(durationFieldType8);
        org.joda.time.Minutes minutes11 = minutes4.plus((-1));
        org.joda.time.Minutes minutes13 = minutes4.minus((int) (short) 10);
        org.joda.time.Minutes minutes15 = minutes13.dividedBy((-2147483648));
        org.joda.time.Minutes minutes16 = minutes15.negated();
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes18 = minutes17.negated();
        org.joda.time.Minutes minutes19 = minutes17.negated();
        org.joda.time.Minutes minutes20 = minutes15.minus(minutes19);
        org.joda.time.Minutes minutes22 = minutes19.plus((int) 'a');
        boolean boolean23 = minutes0.isLessThan(minutes22);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes26 = minutes24.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = minutes27.get(durationFieldType28);
        org.joda.time.MutablePeriod mutablePeriod30 = minutes27.toMutablePeriod();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes27);
        boolean boolean32 = minutes26.isLessThan(minutes31);
        int int33 = minutes26.getMinutes();
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean36 = minutes26.isLessThan(minutes35);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration38 = minutes37.toStandardDuration();
        org.joda.time.Duration duration39 = minutes37.toStandardDuration();
        org.joda.time.Minutes minutes41 = minutes37.minus(2);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes44 = minutes42.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes45 = minutes42.negated();
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes47 = minutes46.negated();
        org.joda.time.Minutes minutes48 = minutes46.negated();
        boolean boolean49 = minutes42.equals((java.lang.Object) minutes48);
        boolean boolean50 = minutes41.isLessThan(minutes42);
        org.joda.time.Minutes minutes51 = minutes35.minus(minutes42);
        org.joda.time.Minutes minutes52 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes53 = minutes52.negated();
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes52);
        java.lang.String str55 = minutes52.toString();
        org.joda.time.Minutes minutes56 = minutes51.plus(minutes52);
        org.joda.time.Minutes minutes58 = org.joda.time.Minutes.minutes((int) (short) -1);
        int int59 = minutes58.size();
        boolean boolean60 = minutes56.isGreaterThan(minutes58);
        int int61 = minutes22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes58);
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes22);
        org.joda.time.Minutes minutes64 = minutes62.plus(2);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-2147483648) + "'", int1 == (-2147483648));
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-2) + "'", int9 == (-2));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-2) + "'", int33 == (-2));
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "PT2147483647M" + "'", str55, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(minutes64);
    }

    @Test
    public void test0601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0601");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes9 = minutes2.plus((-1));
        org.joda.time.Minutes minutes10 = minutes9.negated();
        java.lang.Class<?> wildcardClass11 = minutes10.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0602");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod5 = minutes4.toMutablePeriod();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes7 = minutes4.plus(minutes6);
        boolean boolean8 = minutes3.isLessThan(minutes4);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        org.joda.time.Minutes minutes12 = minutes10.plus(0);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.parseMinutes("PT2M");
        org.joda.time.Minutes minutes16 = minutes14.minus(0);
        java.lang.String str17 = minutes16.toString();
        org.joda.time.Minutes minutes18 = minutes10.plus(minutes16);
        org.joda.time.Minutes minutes19 = minutes10.negated();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "PT2M" + "'", str17, "PT2M");
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
    }

    @Test
    public void test0603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0603");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT-2M");
        int int2 = minutes1.size();
        int int3 = minutes1.getMinutes();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-2) + "'", int3 == (-2));
    }

    @Test
    public void test0604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0604");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((int) (byte) 10);
        java.lang.Class<?> wildcardClass2 = minutes1.getClass();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0605");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = minutes10.getFieldType();
        int int12 = minutes2.get(durationFieldType11);
        org.joda.time.Minutes minutes13 = minutes2.negated();
        org.joda.time.Minutes minutes14 = null;
        boolean boolean15 = minutes13.isLessThan(minutes14);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test0606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0606");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType3 = minutes2.getFieldType();
        org.joda.time.Minutes minutes4 = minutes2.negated();
        org.joda.time.Minutes minutes6 = minutes2.plus((int) (short) 1);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes9 = minutes7.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = minutes10.get(durationFieldType11);
        org.joda.time.MutablePeriod mutablePeriod13 = minutes10.toMutablePeriod();
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes10);
        boolean boolean15 = minutes9.isLessThan(minutes14);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes18 = minutes16.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = minutes19.get(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType22 = minutes19.getFieldType();
        int int23 = minutes18.get(durationFieldType22);
        org.joda.time.Minutes minutes25 = minutes18.plus((-1));
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod27 = minutes26.toMutablePeriod();
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes30 = minutes28.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes32 = minutes28.plus(0);
        int int33 = minutes26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes28);
        org.joda.time.Minutes minutes35 = minutes28.plus((int) ' ');
        java.lang.String str36 = minutes28.toString();
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean39 = minutes28.isLessThan(minutes38);
        boolean boolean40 = minutes25.isLessThan(minutes28);
        org.joda.time.Minutes minutes41 = minutes9.minus(minutes25);
        org.joda.time.MutablePeriod mutablePeriod42 = minutes9.toMutablePeriod();
        org.joda.time.Minutes minutes44 = minutes9.dividedBy(2);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes47 = minutes45.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes48 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = minutes48.get(durationFieldType49);
        org.joda.time.DurationFieldType durationFieldType51 = minutes48.getFieldType();
        int int52 = minutes47.get(durationFieldType51);
        org.joda.time.Minutes minutes54 = minutes47.plus((-1));
        org.joda.time.Minutes minutes55 = minutes54.negated();
        org.joda.time.Minutes minutes56 = minutes44.plus(minutes55);
        org.joda.time.Minutes minutes58 = minutes44.minus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType59 = minutes58.getFieldType();
        boolean boolean60 = minutes2.isLessThan(minutes58);
        org.joda.time.Minutes minutes61 = minutes2.negated();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-2) + "'", int23 == (-2));
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "PT2M" + "'", str36, "PT2M");
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-2) + "'", int52 == (-2));
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(minutes61);
    }

    @Test
    public void test0607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0607");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes9 = minutes2.plus((-1));
        org.joda.time.Minutes minutes11 = minutes2.minus((int) (short) 10);
        org.joda.time.Duration duration12 = minutes2.toStandardDuration();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes2);
        java.lang.String str14 = minutes13.toString();
        org.joda.time.Minutes minutes16 = minutes13.minus((-22139006));
        org.joda.time.PeriodType periodType17 = minutes16.getPeriodType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "PT-2M" + "'", str14, "PT-2M");
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(periodType17);
    }

    @Test
    public void test0608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0608");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((-24));
        org.junit.Assert.assertNotNull(minutes1);
    }

    @Test
    public void test0609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0609");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.minus((int) (short) 0);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = minutes7.get(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType10 = minutes7.getFieldType();
        int int11 = minutes6.get(durationFieldType10);
        org.joda.time.Minutes minutes13 = minutes6.plus((-1));
        boolean boolean14 = minutes3.isGreaterThan(minutes6);
        org.joda.time.DurationFieldType durationFieldType15 = minutes6.getFieldType();
        org.joda.time.PeriodType periodType16 = minutes6.getPeriodType();
        boolean boolean17 = minutes0.isLessThan(minutes6);
        org.joda.time.Minutes minutes19 = minutes6.dividedBy((int) 'a');
        org.joda.time.Minutes minutes20 = minutes6.negated();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-2) + "'", int11 == (-2));
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
    }

    @Test
    public void test0610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0610");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((-3));
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes3 = minutes1.dividedBy(0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes1);
    }

    @Test
    public void test0611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0611");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes9 = minutes2.plus((-1));
        org.joda.time.Minutes minutes11 = minutes2.minus((int) (short) 10);
        org.joda.time.Minutes minutes13 = minutes11.dividedBy((-2147483648));
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod15 = minutes14.toMutablePeriod();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes17 = minutes14.plus(minutes16);
        org.joda.time.Minutes minutes18 = minutes11.minus(minutes16);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes21 = minutes19.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes23 = minutes19.plus(0);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes26 = minutes24.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = minutes27.get(durationFieldType28);
        org.joda.time.DurationFieldType durationFieldType30 = minutes27.getFieldType();
        int int31 = minutes26.get(durationFieldType30);
        org.joda.time.Minutes minutes33 = minutes26.plus((-1));
        org.joda.time.Minutes minutes35 = minutes26.minus((int) (short) 10);
        org.joda.time.Minutes minutes37 = minutes35.dividedBy((-2147483648));
        org.joda.time.Minutes minutes38 = minutes23.plus(minutes37);
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes41 = minutes39.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = minutes42.get(durationFieldType43);
        org.joda.time.MutablePeriod mutablePeriod45 = minutes42.toMutablePeriod();
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes42);
        boolean boolean47 = minutes41.isLessThan(minutes46);
        org.joda.time.DurationFieldType durationFieldType48 = minutes46.getFieldType();
        boolean boolean49 = minutes38.isSupported(durationFieldType48);
        int int50 = minutes11.get(durationFieldType48);
        org.joda.time.Duration duration51 = minutes11.toStandardDuration();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-2) + "'", int31 == (-2));
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-12) + "'", int50 == (-12));
        org.junit.Assert.assertNotNull(duration51);
    }

    @Test
    public void test0612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0612");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.Duration duration2 = minutes0.toStandardDuration();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes(1);
        int int6 = minutes5.size();
        org.joda.time.Period period7 = minutes5.toPeriod();
        org.joda.time.Minutes minutes8 = minutes3.plus(minutes5);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(minutes8);
    }

    @Test
    public void test0613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0613");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes9 = minutes2.plus((-1));
        org.joda.time.Minutes minutes11 = minutes2.minus((int) (short) 10);
        org.joda.time.Minutes minutes13 = minutes11.dividedBy((-2147483648));
        org.joda.time.Minutes minutes14 = minutes13.negated();
        org.joda.time.DurationFieldType durationFieldType15 = minutes13.getFieldType();
        org.joda.time.PeriodType periodType16 = minutes13.getPeriodType();
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes19 = minutes17.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = minutes20.get(durationFieldType21);
        org.joda.time.MutablePeriod mutablePeriod23 = minutes20.toMutablePeriod();
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes20);
        boolean boolean25 = minutes19.isLessThan(minutes24);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes28 = minutes26.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = minutes29.get(durationFieldType30);
        org.joda.time.DurationFieldType durationFieldType32 = minutes29.getFieldType();
        int int33 = minutes28.get(durationFieldType32);
        org.joda.time.Minutes minutes35 = minutes28.plus((-1));
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod37 = minutes36.toMutablePeriod();
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes40 = minutes38.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes42 = minutes38.plus(0);
        int int43 = minutes36.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes38);
        org.joda.time.Minutes minutes45 = minutes38.plus((int) ' ');
        java.lang.String str46 = minutes38.toString();
        org.joda.time.Minutes minutes48 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean49 = minutes38.isLessThan(minutes48);
        boolean boolean50 = minutes35.isLessThan(minutes38);
        org.joda.time.Minutes minutes51 = minutes19.minus(minutes35);
        org.joda.time.MutablePeriod mutablePeriod52 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes54 = minutes19.dividedBy(2);
        int int55 = minutes54.size();
        boolean boolean56 = minutes13.isGreaterThan(minutes54);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-2) + "'", int33 == (-2));
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "PT2M" + "'", str46, "PT2M");
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(mutablePeriod52);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test0614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0614");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = minutes12.getFieldType();
        int int16 = minutes11.get(durationFieldType15);
        org.joda.time.Minutes minutes18 = minutes11.plus((-1));
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = minutes21.plus(0);
        int int26 = minutes19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes21);
        org.joda.time.Minutes minutes28 = minutes21.plus((int) ' ');
        java.lang.String str29 = minutes21.toString();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean32 = minutes21.isLessThan(minutes31);
        boolean boolean33 = minutes18.isLessThan(minutes21);
        org.joda.time.Minutes minutes34 = minutes2.minus(minutes18);
        org.joda.time.MutablePeriod mutablePeriod35 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod37 = minutes36.toMutablePeriod();
        boolean boolean38 = minutes2.isLessThan(minutes36);
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType41 = minutes40.getPeriodType();
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes43 = minutes42.negated();
        org.joda.time.Minutes minutes44 = minutes42.negated();
        org.joda.time.DurationFieldType durationFieldType45 = minutes42.getFieldType();
        java.lang.String str46 = minutes42.toString();
        boolean boolean47 = minutes40.isGreaterThan(minutes42);
        boolean boolean48 = minutes39.equals((java.lang.Object) minutes40);
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes39);
        org.joda.time.Minutes minutes50 = minutes39.negated();
        boolean boolean51 = minutes2.isGreaterThan(minutes50);
        org.joda.time.Minutes minutes52 = org.joda.time.Minutes.MAX_VALUE;
        int int53 = minutes52.size();
        int int55 = minutes52.getValue(0);
        org.joda.time.Minutes minutes56 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes52);
        org.joda.time.Minutes minutes57 = minutes50.plus(minutes56);
        org.joda.time.Minutes minutes59 = minutes50.dividedBy((-2147483646));
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2M" + "'", str29, "PT2M");
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "PT2147483647M" + "'", str46, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2147483647 + "'", int55 == 2147483647);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes59);
    }

    @Test
    public void test0615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0615");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.DurationFieldType durationFieldType12 = minutes3.getFieldType();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType15 = minutes14.getPeriodType();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes17 = minutes16.negated();
        org.joda.time.Minutes minutes18 = minutes16.negated();
        org.joda.time.DurationFieldType durationFieldType19 = minutes16.getFieldType();
        java.lang.String str20 = minutes16.toString();
        boolean boolean21 = minutes14.isGreaterThan(minutes16);
        boolean boolean22 = minutes13.equals((java.lang.Object) minutes14);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes13);
        int int24 = minutes3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes13);
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes27 = minutes25.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType28 = minutes27.getFieldType();
        org.joda.time.Minutes minutes29 = minutes27.negated();
        org.joda.time.Minutes minutes31 = minutes27.dividedBy((int) '4');
        org.joda.time.Minutes minutes32 = minutes13.plus(minutes27);
        org.joda.time.Minutes minutes34 = minutes13.dividedBy((-12));
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.THREE;
        boolean boolean36 = minutes34.equals((java.lang.Object) minutes35);
        // The following exception was thrown during execution in test generation
        try {
            int int38 = minutes34.getValue((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "PT2147483647M" + "'", str20, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test0616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0616");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.PeriodType periodType2 = minutes1.getPeriodType();
        org.joda.time.Minutes minutes4 = minutes1.minus(0);
        org.joda.time.DurationFieldType durationFieldType5 = minutes4.getFieldType();
        // The following exception was thrown during execution in test generation
        try {
            int int7 = minutes4.getValue((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 32");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(durationFieldType5);
    }

    @Test
    public void test0617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0617");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        int int1 = minutes0.getMinutes();
        org.joda.time.PeriodType periodType2 = minutes0.getPeriodType();
        java.lang.String str3 = minutes0.toString();
        int int4 = minutes0.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-2147483648) + "'", int1 == (-2147483648));
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT-2147483648M" + "'", str3, "PT-2147483648M");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-2147483648) + "'", int4 == (-2147483648));
    }

    @Test
    public void test0618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0618");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        boolean boolean6 = minutes0.isGreaterThan(minutes5);
        org.joda.time.PeriodType periodType7 = minutes0.getPeriodType();
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType10 = minutes9.getPeriodType();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes12 = minutes11.negated();
        org.joda.time.Minutes minutes13 = minutes11.negated();
        org.joda.time.DurationFieldType durationFieldType14 = minutes11.getFieldType();
        java.lang.String str15 = minutes11.toString();
        boolean boolean16 = minutes9.isGreaterThan(minutes11);
        boolean boolean17 = minutes8.equals((java.lang.Object) minutes9);
        org.joda.time.Minutes minutes19 = minutes9.minus(1);
        org.joda.time.Minutes minutes20 = minutes0.minus(minutes19);
        org.joda.time.PeriodType periodType21 = minutes20.getPeriodType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PT2147483647M" + "'", str15, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(periodType21);
    }

    @Test
    public void test0619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0619");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.THREE;
        int int1 = minutes0.size();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod3 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = minutes4.plus(0);
        int int9 = minutes2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes4);
        org.joda.time.Minutes minutes11 = minutes4.plus((int) ' ');
        int int12 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes11);
        org.joda.time.MutablePeriod mutablePeriod13 = minutes11.toMutablePeriod();
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod13);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(minutes14);
    }

    @Test
    public void test0620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0620");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        java.lang.String str10 = minutes2.toString();
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean13 = minutes2.isLessThan(minutes12);
        org.joda.time.Duration duration14 = minutes2.toStandardDuration();
        int int15 = minutes2.size();
        org.joda.time.DurationFieldType durationFieldType16 = minutes2.getFieldType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT2M" + "'", str10, "PT2M");
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(durationFieldType16);
    }

    @Test
    public void test0621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0621");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = minutes0.get(durationFieldType1);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType4 = minutes0.getFieldType();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration6 = minutes5.toStandardDuration();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes5);
        boolean boolean8 = minutes0.isGreaterThan(minutes5);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes10 = minutes0.multipliedBy(32);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: -2147483648 * 32");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0622");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        org.joda.time.Minutes minutes11 = minutes2.multipliedBy((int) 'a');
        org.joda.time.PeriodType periodType12 = minutes11.getPeriodType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(periodType12);
    }

    @Test
    public void test0623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0623");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.PeriodType periodType2 = minutes1.getPeriodType();
        org.joda.time.Minutes minutes3 = minutes1.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes7 = minutes5.plus(0);
        org.joda.time.DurationFieldType durationFieldType8 = minutes7.getFieldType();
        int int9 = minutes3.get(durationFieldType8);
        org.joda.time.Minutes minutes11 = minutes3.dividedBy((int) ' ');
        java.lang.String str12 = minutes3.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes14 = minutes3.multipliedBy((-2147483648));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 2147483647 * -2147483648");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2147483647 + "'", int9 == 2147483647);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PT2147483647M" + "'", str12, "PT2147483647M");
    }

    @Test
    public void test0624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0624");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.Minutes minutes13 = minutes3.multipliedBy(2);
        org.joda.time.Minutes minutes14 = minutes13.negated();
        org.joda.time.Minutes minutes15 = minutes14.negated();
        org.joda.time.Duration duration16 = minutes14.toStandardDuration();
        org.joda.time.Minutes minutes17 = minutes14.negated();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(minutes17);
    }

    @Test
    public void test0625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0625");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = minutes0.get(durationFieldType1);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = minutes5.get(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType8 = minutes5.getFieldType();
        boolean boolean9 = minutes0.isLessThan(minutes5);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = minutes13.get(durationFieldType14);
        org.joda.time.MutablePeriod mutablePeriod16 = minutes13.toMutablePeriod();
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes13);
        boolean boolean18 = minutes12.isLessThan(minutes17);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes21 = minutes19.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType23 = null;
        int int24 = minutes22.get(durationFieldType23);
        org.joda.time.DurationFieldType durationFieldType25 = minutes22.getFieldType();
        int int26 = minutes21.get(durationFieldType25);
        org.joda.time.Minutes minutes28 = minutes21.plus((-1));
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod30 = minutes29.toMutablePeriod();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes33 = minutes31.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes35 = minutes31.plus(0);
        int int36 = minutes29.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes31);
        org.joda.time.Minutes minutes38 = minutes31.plus((int) ' ');
        java.lang.String str39 = minutes31.toString();
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean42 = minutes31.isLessThan(minutes41);
        boolean boolean43 = minutes28.isLessThan(minutes31);
        org.joda.time.Minutes minutes44 = minutes12.minus(minutes28);
        org.joda.time.MutablePeriod mutablePeriod45 = minutes12.toMutablePeriod();
        org.joda.time.Minutes minutes47 = minutes12.dividedBy(2);
        org.joda.time.Minutes minutes48 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes50 = minutes48.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType52 = null;
        int int53 = minutes51.get(durationFieldType52);
        org.joda.time.DurationFieldType durationFieldType54 = minutes51.getFieldType();
        int int55 = minutes50.get(durationFieldType54);
        org.joda.time.Minutes minutes57 = minutes50.plus((-1));
        org.joda.time.Minutes minutes58 = minutes57.negated();
        org.joda.time.Minutes minutes59 = minutes47.plus(minutes58);
        org.joda.time.Minutes minutes61 = minutes59.multipliedBy((-12));
        boolean boolean62 = minutes5.isLessThan(minutes59);
        org.joda.time.Minutes minutes63 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes65 = minutes63.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes66 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType67 = null;
        int int68 = minutes66.get(durationFieldType67);
        org.joda.time.DurationFieldType durationFieldType69 = minutes66.getFieldType();
        int int70 = minutes65.get(durationFieldType69);
        org.joda.time.Minutes minutes72 = minutes65.plus((-1));
        org.joda.time.Minutes minutes74 = minutes65.minus((int) (short) 10);
        org.joda.time.Minutes minutes76 = minutes74.dividedBy((-2147483648));
        org.joda.time.Minutes minutes77 = minutes76.negated();
        org.joda.time.Minutes minutes78 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes79 = minutes78.negated();
        org.joda.time.Minutes minutes80 = minutes78.negated();
        org.joda.time.Minutes minutes81 = minutes76.minus(minutes80);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes82 = minutes59.plus(minutes81);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 2 + 2147483647");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-2) + "'", int26 == (-2));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "PT2M" + "'", str39, "PT2M");
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(mutablePeriod45);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-2) + "'", int55 == (-2));
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(durationFieldType69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-2) + "'", int70 == (-2));
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertNotNull(minutes74);
        org.junit.Assert.assertNotNull(minutes76);
        org.junit.Assert.assertNotNull(minutes77);
        org.junit.Assert.assertNotNull(minutes78);
        org.junit.Assert.assertNotNull(minutes79);
        org.junit.Assert.assertNotNull(minutes80);
        org.junit.Assert.assertNotNull(minutes81);
    }

    @Test
    public void test0626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0626");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        org.joda.time.Minutes minutes5 = minutes3.plus((int) 'a');
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes7 = minutes6.negated();
        org.joda.time.Minutes minutes8 = minutes6.negated();
        org.joda.time.DurationFieldType durationFieldType9 = minutes6.getFieldType();
        java.lang.String str10 = minutes6.toString();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes12 = minutes11.negated();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes11);
        int int14 = minutes11.size();
        org.joda.time.MutablePeriod mutablePeriod15 = minutes11.toMutablePeriod();
        boolean boolean16 = minutes6.equals((java.lang.Object) minutes11);
        org.joda.time.DurationFieldType durationFieldType18 = minutes11.getFieldType((int) (short) 0);
        int int19 = minutes5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes11);
        org.joda.time.MutablePeriod mutablePeriod20 = minutes5.toMutablePeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT2147483647M" + "'", str10, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod20);
    }

    @Test
    public void test0627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0627");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        org.joda.time.Minutes minutes5 = minutes3.plus((int) 'a');
        org.joda.time.Period period6 = minutes3.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds7 = minutes3.toStandardSeconds();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: -2147483645 * 60");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(period6);
    }

    @Test
    public void test0628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0628");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = minutes15.get(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = minutes15.getFieldType();
        int int19 = minutes14.get(durationFieldType18);
        boolean boolean20 = minutes3.isSupported(durationFieldType18);
        org.joda.time.Period period21 = minutes3.toPeriod();
        org.joda.time.Minutes minutes23 = minutes3.plus((int) 'a');
        org.joda.time.Minutes minutes24 = minutes3.negated();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2) + "'", int19 == (-2));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
    }

    @Test
    public void test0629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0629");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = minutes0.negated();
        org.joda.time.DurationFieldType durationFieldType3 = minutes0.getFieldType();
        java.lang.String str4 = minutes0.toString();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes6 = minutes5.negated();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes5);
        int int8 = minutes5.size();
        org.joda.time.MutablePeriod mutablePeriod9 = minutes5.toMutablePeriod();
        boolean boolean10 = minutes0.equals((java.lang.Object) minutes5);
        org.joda.time.DurationFieldType durationFieldType12 = minutes5.getFieldType((int) (short) 0);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod14 = minutes13.toMutablePeriod();
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes17 = minutes15.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes19 = minutes15.plus(0);
        int int20 = minutes13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes15);
        org.joda.time.Minutes minutes22 = minutes15.plus((int) ' ');
        java.lang.String str23 = minutes15.toString();
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean26 = minutes15.isLessThan(minutes25);
        org.joda.time.Period period27 = minutes25.toPeriod();
        boolean boolean28 = minutes5.isGreaterThan(minutes25);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds29 = minutes5.toStandardSeconds();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 2147483647 * 60");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT2147483647M" + "'", str4, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT2M" + "'", str23, "PT2M");
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test0630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0630");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        int int1 = minutes0.getMinutes();
        org.joda.time.PeriodType periodType2 = minutes0.getPeriodType();
        org.joda.time.Minutes minutes3 = null;
        org.joda.time.Minutes minutes4 = minutes0.plus(minutes3);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes6 = minutes0.minus(2147483646);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: -2147483648 + -2147483646");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-2147483648) + "'", int1 == (-2147483648));
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(minutes4);
    }

    @Test
    public void test0631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0631");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes3 = minutes1.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        int int13 = minutes4.get(durationFieldType11);
        org.joda.time.PeriodType periodType14 = minutes4.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod15 = minutes4.toMutablePeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2147483647 + "'", int13 == 2147483647);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
    }

    @Test
    public void test0632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0632");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.Minutes minutes13 = minutes3.multipliedBy(2);
        int int14 = minutes3.size();
        org.joda.time.Period period15 = minutes3.toPeriod();
        org.joda.time.Duration duration16 = minutes3.toStandardDuration();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(duration16);
    }

    @Test
    public void test0633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0633");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        boolean boolean6 = minutes0.isGreaterThan(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes8 = minutes7.negated();
        org.joda.time.Minutes minutes10 = minutes8.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes10);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = minutes15.get(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = minutes15.getFieldType();
        int int19 = minutes14.get(durationFieldType18);
        int int20 = minutes11.get(durationFieldType18);
        org.joda.time.PeriodType periodType21 = minutes11.getPeriodType();
        int int22 = minutes11.getMinutes();
        boolean boolean23 = minutes0.isLessThan(minutes11);
        int int24 = minutes11.size();
        int int25 = minutes11.size();
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes28 = minutes26.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = minutes29.get(durationFieldType30);
        org.joda.time.DurationFieldType durationFieldType32 = minutes29.getFieldType();
        int int33 = minutes28.get(durationFieldType32);
        org.joda.time.Minutes minutes35 = minutes28.plus((-1));
        org.joda.time.Minutes minutes37 = minutes28.minus((int) (short) 10);
        org.joda.time.Duration duration38 = minutes28.toStandardDuration();
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes28);
        org.joda.time.Minutes minutes40 = minutes11.plus(minutes28);
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes42 = minutes41.negated();
        org.joda.time.Minutes minutes44 = minutes42.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes47 = minutes45.dividedBy((int) 'a');
        org.joda.time.Minutes minutes49 = minutes45.plus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType50 = minutes49.getFieldType();
        boolean boolean51 = minutes42.isSupported(durationFieldType50);
        org.joda.time.Period period52 = minutes42.toPeriod();
        org.joda.time.Minutes minutes54 = minutes42.minus(0);
        boolean boolean55 = minutes40.equals((java.lang.Object) 0);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2) + "'", int19 == (-2));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2147483647 + "'", int20 == 2147483647);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2147483647 + "'", int22 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-2) + "'", int33 == (-2));
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test0634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0634");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = minutes7.get(durationFieldType8);
        org.joda.time.MutablePeriod mutablePeriod10 = minutes7.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType11 = minutes7.getFieldType();
        org.joda.time.Minutes minutes13 = minutes7.dividedBy((-1));
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MAX_VALUE;
        int int15 = minutes14.size();
        org.joda.time.Minutes minutes16 = minutes7.plus(minutes14);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes19 = minutes17.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = minutes20.get(durationFieldType21);
        org.joda.time.DurationFieldType durationFieldType23 = minutes20.getFieldType();
        int int24 = minutes19.get(durationFieldType23);
        int int25 = minutes7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes19);
        int int26 = minutes6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes7);
        org.joda.time.PeriodType periodType27 = minutes6.getPeriodType();
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.minutes((-2147483645));
        org.joda.time.Minutes minutes30 = minutes6.plus(minutes29);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration32 = minutes31.toStandardDuration();
        org.joda.time.Duration duration33 = minutes31.toStandardDuration();
        org.joda.time.Minutes minutes35 = minutes31.minus(2);
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.MIN_VALUE;
        int int37 = minutes36.getMinutes();
        org.joda.time.PeriodType periodType38 = minutes36.getPeriodType();
        org.joda.time.Minutes minutes39 = null;
        org.joda.time.Minutes minutes40 = minutes36.plus(minutes39);
        boolean boolean41 = minutes31.isLessThan(minutes40);
        org.joda.time.Minutes minutes43 = minutes40.multipliedBy((int) (short) 0);
        org.joda.time.Period period44 = minutes40.toPeriod();
        boolean boolean45 = minutes29.equals((java.lang.Object) minutes40);
        java.lang.Object obj46 = null;
        boolean boolean47 = minutes29.equals(obj46);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-2) + "'", int24 == (-2));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-2147483648) + "'", int37 == (-2147483648));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test0635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0635");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod8 = minutes7.toMutablePeriod();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod8);
        boolean boolean10 = minutes0.isLessThan(minutes9);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod12 = minutes11.toMutablePeriod();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes14 = minutes11.plus(minutes13);
        org.joda.time.Period period15 = minutes14.toPeriod();
        int int16 = minutes9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes14);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = minutes17.get(durationFieldType18);
        org.joda.time.MutablePeriod mutablePeriod20 = minutes17.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType21 = minutes17.getFieldType();
        org.joda.time.Minutes minutes23 = minutes17.dividedBy((-1));
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.MAX_VALUE;
        int int25 = minutes24.size();
        org.joda.time.Minutes minutes26 = minutes17.plus(minutes24);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes29 = minutes27.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = minutes30.get(durationFieldType31);
        org.joda.time.MutablePeriod mutablePeriod33 = minutes30.toMutablePeriod();
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes30);
        boolean boolean35 = minutes29.isLessThan(minutes34);
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes38 = minutes36.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType40 = null;
        int int41 = minutes39.get(durationFieldType40);
        org.joda.time.DurationFieldType durationFieldType42 = minutes39.getFieldType();
        int int43 = minutes38.get(durationFieldType42);
        org.joda.time.Minutes minutes45 = minutes38.plus((-1));
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod47 = minutes46.toMutablePeriod();
        org.joda.time.Minutes minutes48 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes50 = minutes48.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes52 = minutes48.plus(0);
        int int53 = minutes46.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes48);
        org.joda.time.Minutes minutes55 = minutes48.plus((int) ' ');
        java.lang.String str56 = minutes48.toString();
        org.joda.time.Minutes minutes58 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean59 = minutes48.isLessThan(minutes58);
        boolean boolean60 = minutes45.isLessThan(minutes48);
        org.joda.time.Minutes minutes61 = minutes29.minus(minutes45);
        org.joda.time.MutablePeriod mutablePeriod62 = minutes29.toMutablePeriod();
        org.joda.time.Minutes minutes63 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod64 = minutes63.toMutablePeriod();
        boolean boolean65 = minutes29.isLessThan(minutes63);
        org.joda.time.Minutes minutes67 = minutes29.plus((int) ' ');
        org.joda.time.Minutes minutes68 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes70 = minutes68.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes71 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType72 = null;
        int int73 = minutes71.get(durationFieldType72);
        org.joda.time.DurationFieldType durationFieldType74 = minutes71.getFieldType();
        int int75 = minutes70.get(durationFieldType74);
        boolean boolean76 = minutes29.isSupported(durationFieldType74);
        int int77 = minutes26.get(durationFieldType74);
        int int78 = minutes14.get(durationFieldType74);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-2) + "'", int43 == (-2));
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(mutablePeriod47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "PT2M" + "'", str56, "PT2M");
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(mutablePeriod62);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(mutablePeriod64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(durationFieldType74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-2) + "'", int75 == (-2));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-2147483645) + "'", int78 == (-2147483645));
    }

    @Test
    public void test0636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0636");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        int int9 = minutes2.getMinutes();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean12 = minutes2.isLessThan(minutes11);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration14 = minutes13.toStandardDuration();
        org.joda.time.Duration duration15 = minutes13.toStandardDuration();
        org.joda.time.Minutes minutes17 = minutes13.minus(2);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes20 = minutes18.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes21 = minutes18.negated();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes23 = minutes22.negated();
        org.joda.time.Minutes minutes24 = minutes22.negated();
        boolean boolean25 = minutes18.equals((java.lang.Object) minutes24);
        boolean boolean26 = minutes17.isLessThan(minutes18);
        org.joda.time.Minutes minutes27 = minutes11.minus(minutes18);
        org.joda.time.Duration duration28 = minutes11.toStandardDuration();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes30 = minutes11.minus(10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: -2147483645 + -10");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-2) + "'", int9 == (-2));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(duration28);
    }

    @Test
    public void test0637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0637");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = minutes0.negated();
        org.joda.time.DurationFieldType durationFieldType3 = minutes0.getFieldType();
        java.lang.String str4 = minutes0.toString();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes6 = minutes5.negated();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes5);
        int int8 = minutes5.size();
        org.joda.time.MutablePeriod mutablePeriod9 = minutes5.toMutablePeriod();
        boolean boolean10 = minutes0.equals((java.lang.Object) minutes5);
        org.joda.time.DurationFieldType durationFieldType12 = minutes5.getFieldType((int) (short) 0);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod14 = minutes13.toMutablePeriod();
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes17 = minutes15.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes19 = minutes15.plus(0);
        int int20 = minutes13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes15);
        org.joda.time.Minutes minutes22 = minutes15.plus((int) ' ');
        java.lang.String str23 = minutes15.toString();
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean26 = minutes15.isLessThan(minutes25);
        org.joda.time.Period period27 = minutes25.toPeriod();
        boolean boolean28 = minutes5.isGreaterThan(minutes25);
        org.joda.time.Period period29 = minutes5.toPeriod();
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) period29);
        org.joda.time.Minutes minutes31 = minutes30.negated();
        org.joda.time.Minutes minutes32 = minutes30.negated();
        java.lang.Class<?> wildcardClass33 = minutes32.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT2147483647M" + "'", str4, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT2M" + "'", str23, "PT2M");
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0638");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod2 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        int int4 = minutes3.size();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes6 = minutes5.negated();
        org.joda.time.Minutes minutes8 = minutes6.dividedBy((int) (byte) -1);
        boolean boolean9 = minutes3.isLessThan(minutes6);
        boolean boolean10 = minutes0.isLessThan(minutes3);
        org.joda.time.Minutes minutes12 = minutes0.multipliedBy((int) (short) -1);
        int int13 = minutes0.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
    }

    @Test
    public void test0639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0639");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes9 = minutes8.negated();
        org.joda.time.PeriodType periodType10 = minutes9.getPeriodType();
        org.joda.time.Minutes minutes11 = minutes9.negated();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes15 = minutes13.plus(0);
        org.joda.time.DurationFieldType durationFieldType16 = minutes15.getFieldType();
        int int17 = minutes11.get(durationFieldType16);
        boolean boolean18 = minutes0.isSupported(durationFieldType16);
        org.joda.time.PeriodType periodType19 = minutes0.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType21 = minutes0.getFieldType((-2147483647));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -2147483647");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2147483647 + "'", int17 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(periodType19);
    }

    @Test
    public void test0640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0640");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((-2));
        org.junit.Assert.assertNotNull(minutes1);
    }

    @Test
    public void test0641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0641");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.DurationFieldType durationFieldType2 = minutes0.getFieldType();
        org.joda.time.DurationFieldType durationFieldType3 = minutes0.getFieldType();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes5 = minutes4.negated();
        org.joda.time.Minutes minutes6 = minutes4.negated();
        java.lang.String str7 = minutes4.toString();
        int int8 = minutes4.size();
        org.joda.time.Minutes minutes10 = minutes4.minus(0);
        org.joda.time.Minutes minutes12 = minutes4.plus((int) (short) 0);
        boolean boolean13 = minutes0.isLessThan(minutes4);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes15 = minutes14.negated();
        org.joda.time.Minutes minutes16 = minutes14.negated();
        boolean boolean17 = minutes4.isGreaterThan(minutes14);
        org.joda.time.Minutes minutes19 = minutes14.dividedBy((int) (short) 1);
        org.joda.time.PeriodType periodType20 = minutes14.getPeriodType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT2147483647M" + "'", str7, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(periodType20);
    }

    @Test
    public void test0642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0642");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.PeriodType periodType2 = minutes1.getPeriodType();
        org.joda.time.Minutes minutes4 = minutes1.minus(0);
        org.joda.time.Minutes minutes6 = minutes1.minus((-1));
        org.joda.time.Minutes minutes7 = minutes1.negated();
        // The following exception was thrown during execution in test generation
        try {
            int int9 = minutes7.getValue((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
    }

    @Test
    public void test0643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0643");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.DurationFieldType durationFieldType12 = minutes3.getFieldType();
        int int14 = minutes3.getValue((int) (short) 0);
        org.joda.time.Period period15 = minutes3.toPeriod();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes17 = minutes16.negated();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod19 = minutes18.toMutablePeriod();
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes21 = minutes18.plus(minutes20);
        int int22 = minutes17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes20);
        org.joda.time.Minutes minutes23 = minutes3.minus(minutes17);
        org.joda.time.Minutes minutes24 = null;
        boolean boolean25 = minutes3.isLessThan(minutes24);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes28 = minutes26.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = minutes29.get(durationFieldType30);
        org.joda.time.MutablePeriod mutablePeriod32 = minutes29.toMutablePeriod();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes29);
        boolean boolean34 = minutes28.isLessThan(minutes33);
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes37 = minutes35.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType39 = null;
        int int40 = minutes38.get(durationFieldType39);
        org.joda.time.DurationFieldType durationFieldType41 = minutes38.getFieldType();
        int int42 = minutes37.get(durationFieldType41);
        org.joda.time.Minutes minutes44 = minutes37.plus((-1));
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod46 = minutes45.toMutablePeriod();
        org.joda.time.Minutes minutes47 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes49 = minutes47.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes51 = minutes47.plus(0);
        int int52 = minutes45.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes47);
        org.joda.time.Minutes minutes54 = minutes47.plus((int) ' ');
        java.lang.String str55 = minutes47.toString();
        org.joda.time.Minutes minutes57 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean58 = minutes47.isLessThan(minutes57);
        boolean boolean59 = minutes44.isLessThan(minutes47);
        org.joda.time.Minutes minutes60 = minutes28.minus(minutes44);
        org.joda.time.MutablePeriod mutablePeriod61 = minutes28.toMutablePeriod();
        org.joda.time.Minutes minutes62 = minutes3.plus(minutes28);
        org.joda.time.PeriodType periodType63 = minutes28.getPeriodType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-2) + "'", int14 == (-2));
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-2) + "'", int42 == (-2));
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(mutablePeriod46);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "PT2M" + "'", str55, "PT2M");
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(mutablePeriod61);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(periodType63);
    }

    @Test
    public void test0644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0644");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = minutes0.negated();
        org.joda.time.DurationFieldType durationFieldType3 = minutes0.getFieldType();
        java.lang.String str4 = minutes0.toString();
        org.joda.time.MutablePeriod mutablePeriod5 = minutes0.toMutablePeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT2147483647M" + "'", str4, "PT2147483647M");
        org.junit.Assert.assertNotNull(mutablePeriod5);
    }

    @Test
    public void test0645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0645");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        org.joda.time.Minutes minutes14 = minutes7.plus((-1));
        org.joda.time.Minutes minutes16 = minutes7.minus((int) (short) 10);
        org.joda.time.Minutes minutes18 = minutes16.dividedBy((-2147483648));
        org.joda.time.Minutes minutes19 = minutes4.plus(minutes18);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes22 = minutes20.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = minutes23.get(durationFieldType24);
        org.joda.time.MutablePeriod mutablePeriod26 = minutes23.toMutablePeriod();
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes23);
        boolean boolean28 = minutes22.isLessThan(minutes27);
        org.joda.time.DurationFieldType durationFieldType29 = minutes27.getFieldType();
        boolean boolean30 = minutes19.isSupported(durationFieldType29);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes33 = minutes31.multipliedBy((int) (short) -1);
        org.joda.time.Period period34 = minutes33.toPeriod();
        org.joda.time.Minutes minutes35 = minutes19.plus(minutes33);
        org.joda.time.Minutes minutes37 = minutes35.dividedBy(2147483646);
        int int38 = minutes35.size();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
    }

    @Test
    public void test0646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0646");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes9 = minutes2.plus((-1));
        org.joda.time.Minutes minutes11 = minutes2.minus((int) (short) 10);
        org.joda.time.Duration duration12 = minutes2.toStandardDuration();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes2);
        java.lang.String str14 = minutes13.toString();
        org.joda.time.Minutes minutes16 = minutes13.minus((-22139006));
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes18 = minutes13.dividedBy(0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "PT-2M" + "'", str14, "PT-2M");
        org.junit.Assert.assertNotNull(minutes16);
    }

    @Test
    public void test0647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0647");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Period period1 = minutes0.toPeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType4 = minutes2.getFieldType((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(minutes2);
    }

    @Test
    public void test0648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0648");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        int int4 = minutes2.getMinutes();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes8 = minutes6.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = minutes9.get(durationFieldType10);
        org.joda.time.DurationFieldType durationFieldType12 = minutes9.getFieldType();
        int int13 = minutes8.get(durationFieldType12);
        org.joda.time.Minutes minutes15 = minutes8.plus((-1));
        boolean boolean16 = minutes5.isGreaterThan(minutes8);
        org.joda.time.DurationFieldType durationFieldType17 = minutes8.getFieldType();
        org.joda.time.PeriodType periodType18 = minutes8.getPeriodType();
        boolean boolean19 = minutes2.equals((java.lang.Object) minutes8);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.MAX_VALUE;
        int int21 = minutes20.size();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes23 = minutes22.negated();
        org.joda.time.Minutes minutes25 = minutes23.dividedBy((int) (byte) -1);
        boolean boolean26 = minutes20.isLessThan(minutes23);
        boolean boolean27 = minutes8.isGreaterThan(minutes23);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType29 = minutes28.getFieldType();
        org.joda.time.MutablePeriod mutablePeriod30 = minutes28.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType31 = minutes28.getFieldType();
        int int32 = minutes8.get(durationFieldType31);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-2) + "'", int13 == (-2));
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-2) + "'", int32 == (-2));
    }

    @Test
    public void test0649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0649");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        java.lang.String str10 = minutes2.toString();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod12 = minutes11.toMutablePeriod();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes17 = minutes13.plus(0);
        int int18 = minutes11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes13);
        org.joda.time.Minutes minutes20 = minutes13.plus((int) ' ');
        java.lang.String str21 = minutes13.toString();
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean24 = minutes13.isLessThan(minutes23);
        org.joda.time.Minutes minutes25 = minutes2.minus(minutes13);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes28 = minutes26.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes31 = minutes29.minus((int) (short) 1);
        org.joda.time.Minutes minutes33 = minutes31.multipliedBy(0);
        org.joda.time.Minutes minutes35 = minutes33.plus((-2147483648));
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes37 = minutes36.negated();
        org.joda.time.Minutes minutes38 = minutes36.negated();
        boolean boolean39 = minutes35.isGreaterThan(minutes38);
        int int40 = minutes26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes35);
        org.joda.time.MutablePeriod mutablePeriod41 = minutes35.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType42 = minutes35.getFieldType();
        boolean boolean43 = minutes13.isSupported(durationFieldType42);
        java.lang.String str44 = minutes13.toString();
        org.joda.time.Period period45 = minutes13.toPeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT2M" + "'", str10, "PT2M");
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT2M" + "'", str21, "PT2M");
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "PT2M" + "'", str44, "PT2M");
        org.junit.Assert.assertNotNull(period45);
    }

    @Test
    public void test0650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0650");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = minutes0.negated();
        org.joda.time.DurationFieldType durationFieldType3 = minutes0.getFieldType();
        java.lang.String str4 = minutes0.toString();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = minutes5.get(durationFieldType6);
        org.joda.time.MutablePeriod mutablePeriod8 = minutes5.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType9 = minutes5.getFieldType();
        int int10 = minutes0.get(durationFieldType9);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MAX_VALUE;
        boolean boolean12 = minutes0.isLessThan(minutes11);
        org.joda.time.Minutes minutes13 = null;
        org.joda.time.Minutes minutes14 = minutes11.plus(minutes13);
        org.joda.time.Minutes minutes15 = minutes14.negated();
        int int16 = minutes14.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT2147483647M" + "'", str4, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2147483647 + "'", int10 == 2147483647);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2147483647 + "'", int16 == 2147483647);
    }

    @Test
    public void test0651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0651");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.minus((int) (short) 0);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = minutes7.get(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType10 = minutes7.getFieldType();
        int int11 = minutes6.get(durationFieldType10);
        org.joda.time.Minutes minutes13 = minutes6.plus((-1));
        boolean boolean14 = minutes3.isGreaterThan(minutes6);
        org.joda.time.DurationFieldType durationFieldType15 = minutes6.getFieldType();
        org.joda.time.PeriodType periodType16 = minutes6.getPeriodType();
        boolean boolean17 = minutes0.isLessThan(minutes6);
        org.joda.time.Minutes minutes18 = minutes6.negated();
        org.joda.time.Minutes minutes20 = minutes18.plus(0);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes22 = minutes18.multipliedBy((-2147483646));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 2 * -2147483646");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-2) + "'", int11 == (-2));
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
    }

    @Test
    public void test0652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0652");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod8 = minutes7.toMutablePeriod();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod8);
        boolean boolean10 = minutes0.isLessThan(minutes9);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes9);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes14 = minutes12.minus((int) (short) 0);
        boolean boolean15 = minutes9.isLessThan(minutes14);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.minutes(2147483647);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes21 = minutes19.plus(0);
        org.joda.time.PeriodType periodType22 = minutes19.getPeriodType();
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes24 = minutes23.negated();
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod26 = minutes25.toMutablePeriod();
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes28 = minutes25.plus(minutes27);
        int int29 = minutes24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes27);
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.MAX_VALUE;
        int int31 = minutes24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes30);
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes34 = minutes32.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType36 = null;
        int int37 = minutes35.get(durationFieldType36);
        org.joda.time.MutablePeriod mutablePeriod38 = minutes35.toMutablePeriod();
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes35);
        boolean boolean40 = minutes34.isLessThan(minutes39);
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes43 = minutes41.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = minutes44.get(durationFieldType45);
        org.joda.time.DurationFieldType durationFieldType47 = minutes44.getFieldType();
        int int48 = minutes43.get(durationFieldType47);
        org.joda.time.Minutes minutes50 = minutes43.plus((-1));
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod52 = minutes51.toMutablePeriod();
        org.joda.time.Minutes minutes53 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes55 = minutes53.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes57 = minutes53.plus(0);
        int int58 = minutes51.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes53);
        org.joda.time.Minutes minutes60 = minutes53.plus((int) ' ');
        java.lang.String str61 = minutes53.toString();
        org.joda.time.Minutes minutes63 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean64 = minutes53.isLessThan(minutes63);
        boolean boolean65 = minutes50.isLessThan(minutes53);
        org.joda.time.Minutes minutes66 = minutes34.minus(minutes50);
        org.joda.time.MutablePeriod mutablePeriod67 = minutes34.toMutablePeriod();
        org.joda.time.Minutes minutes69 = minutes34.dividedBy(2);
        org.joda.time.Minutes minutes70 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes72 = minutes70.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes73 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType74 = null;
        int int75 = minutes73.get(durationFieldType74);
        org.joda.time.DurationFieldType durationFieldType76 = minutes73.getFieldType();
        int int77 = minutes72.get(durationFieldType76);
        org.joda.time.Minutes minutes79 = minutes72.plus((-1));
        org.joda.time.Minutes minutes80 = minutes79.negated();
        org.joda.time.Minutes minutes81 = minutes69.plus(minutes80);
        org.joda.time.Minutes minutes83 = minutes69.minus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType84 = minutes83.getFieldType();
        int int85 = minutes30.get(durationFieldType84);
        int int86 = minutes19.get(durationFieldType84);
        int int87 = minutes17.get(durationFieldType84);
        int int88 = minutes9.get(durationFieldType84);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes89 = minutes9.negated();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Integer.MIN_VALUE cannot be negated");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-2) + "'", int48 == (-2));
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(mutablePeriod52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "PT2M" + "'", str61, "PT2M");
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(mutablePeriod67);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertNotNull(minutes73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(durationFieldType76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-2) + "'", int77 == (-2));
        org.junit.Assert.assertNotNull(minutes79);
        org.junit.Assert.assertNotNull(minutes80);
        org.junit.Assert.assertNotNull(minutes81);
        org.junit.Assert.assertNotNull(minutes83);
        org.junit.Assert.assertNotNull(durationFieldType84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 2147483647 + "'", int85 == 2147483647);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 2147483647 + "'", int87 == 2147483647);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-2147483648) + "'", int88 == (-2147483648));
    }

    @Test
    public void test0653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0653");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT-2M");
        int int2 = minutes1.size();
        org.joda.time.Seconds seconds3 = minutes1.toStandardSeconds();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(seconds3);
    }

    @Test
    public void test0654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0654");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = minutes0.get(durationFieldType1);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = minutes4.plus(0);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = minutes12.getFieldType();
        int int16 = minutes11.get(durationFieldType15);
        org.joda.time.Minutes minutes18 = minutes11.plus((-1));
        org.joda.time.Minutes minutes20 = minutes11.minus((int) (short) 10);
        org.joda.time.Minutes minutes22 = minutes20.dividedBy((-2147483648));
        org.joda.time.Minutes minutes23 = minutes8.plus(minutes22);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes25 = minutes24.negated();
        org.joda.time.Minutes minutes26 = minutes24.negated();
        java.lang.String str27 = minutes24.toString();
        org.joda.time.Minutes minutes29 = minutes24.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes30 = minutes8.minus(minutes24);
        org.joda.time.Minutes minutes31 = minutes0.minus(minutes30);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "PT2147483647M" + "'", str27, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
    }

    @Test
    public void test0655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0655");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        org.joda.time.Minutes minutes14 = minutes7.plus((-1));
        org.joda.time.Minutes minutes16 = minutes7.minus((int) (short) 10);
        org.joda.time.Minutes minutes18 = minutes16.dividedBy((-2147483648));
        org.joda.time.Minutes minutes19 = minutes4.plus(minutes18);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType21 = minutes20.getPeriodType();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes23 = minutes22.negated();
        org.joda.time.Minutes minutes24 = minutes22.negated();
        org.joda.time.DurationFieldType durationFieldType25 = minutes22.getFieldType();
        java.lang.String str26 = minutes22.toString();
        boolean boolean27 = minutes20.isGreaterThan(minutes22);
        boolean boolean28 = minutes4.isLessThan(minutes22);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes22);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "PT2147483647M" + "'", str26, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(minutes29);
    }

    @Test
    public void test0656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0656");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = minutes12.getFieldType();
        int int16 = minutes11.get(durationFieldType15);
        org.joda.time.Minutes minutes18 = minutes11.plus((-1));
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = minutes21.plus(0);
        int int26 = minutes19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes21);
        org.joda.time.Minutes minutes28 = minutes21.plus((int) ' ');
        java.lang.String str29 = minutes21.toString();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean32 = minutes21.isLessThan(minutes31);
        boolean boolean33 = minutes18.isLessThan(minutes21);
        org.joda.time.Minutes minutes34 = minutes2.minus(minutes18);
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.ZERO;
        int int36 = minutes34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes35);
        org.joda.time.Minutes minutes38 = minutes34.minus(2147483647);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType40 = minutes34.getFieldType((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2M" + "'", str29, "PT2M");
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(minutes38);
    }

    @Test
    public void test0657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0657");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes9 = minutes2.plus((-1));
        org.joda.time.Minutes minutes11 = minutes2.minus((int) (short) 10);
        org.joda.time.Minutes minutes13 = minutes11.dividedBy((-2147483648));
        org.joda.time.Minutes minutes14 = minutes13.negated();
        org.joda.time.DurationFieldType durationFieldType15 = minutes13.getFieldType();
        org.joda.time.PeriodType periodType16 = minutes13.getPeriodType();
        org.joda.time.Minutes minutes17 = minutes13.negated();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes21 = minutes19.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType23 = null;
        int int24 = minutes22.get(durationFieldType23);
        org.joda.time.DurationFieldType durationFieldType25 = minutes22.getFieldType();
        int int26 = minutes21.get(durationFieldType25);
        org.joda.time.Minutes minutes28 = minutes21.plus((-1));
        boolean boolean29 = minutes18.isGreaterThan(minutes21);
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes32 = minutes30.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = minutes33.get(durationFieldType34);
        org.joda.time.DurationFieldType durationFieldType36 = minutes33.getFieldType();
        int int37 = minutes32.get(durationFieldType36);
        boolean boolean38 = minutes21.isSupported(durationFieldType36);
        int int39 = minutes13.get(durationFieldType36);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-2) + "'", int26 == (-2));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-2) + "'", int37 == (-2));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
    }

    @Test
    public void test0658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0658");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        boolean boolean6 = minutes0.isGreaterThan(minutes5);
        org.joda.time.PeriodType periodType7 = minutes0.getPeriodType();
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType10 = minutes9.getPeriodType();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes12 = minutes11.negated();
        org.joda.time.Minutes minutes13 = minutes11.negated();
        org.joda.time.DurationFieldType durationFieldType14 = minutes11.getFieldType();
        java.lang.String str15 = minutes11.toString();
        boolean boolean16 = minutes9.isGreaterThan(minutes11);
        boolean boolean17 = minutes8.equals((java.lang.Object) minutes9);
        org.joda.time.Minutes minutes19 = minutes9.minus(1);
        org.joda.time.Minutes minutes20 = minutes0.minus(minutes19);
        org.joda.time.Duration duration21 = minutes19.toStandardDuration();
        java.lang.String str22 = minutes19.toString();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PT2147483647M" + "'", str15, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PT2M" + "'", str22, "PT2M");
    }

    @Test
    public void test0659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0659");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        org.joda.time.Minutes minutes14 = minutes7.plus((-1));
        org.joda.time.Minutes minutes16 = minutes7.minus((int) (short) 10);
        org.joda.time.Minutes minutes18 = minutes16.dividedBy((-2147483648));
        org.joda.time.Minutes minutes19 = minutes4.plus(minutes18);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes22 = minutes20.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = minutes23.get(durationFieldType24);
        org.joda.time.MutablePeriod mutablePeriod26 = minutes23.toMutablePeriod();
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes23);
        boolean boolean28 = minutes22.isLessThan(minutes27);
        org.joda.time.DurationFieldType durationFieldType29 = minutes27.getFieldType();
        boolean boolean30 = minutes19.isSupported(durationFieldType29);
        org.joda.time.Minutes minutes32 = minutes19.plus((int) (short) -1);
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes35 = minutes33.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes36 = minutes33.negated();
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes39 = minutes33.minus(minutes38);
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod41 = minutes40.toMutablePeriod();
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod41);
        boolean boolean43 = minutes33.isLessThan(minutes42);
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes42);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes47 = minutes45.minus((int) (short) 0);
        boolean boolean48 = minutes42.isLessThan(minutes47);
        org.joda.time.Minutes minutes50 = minutes47.multipliedBy((int) (short) 0);
        boolean boolean51 = minutes19.isGreaterThan(minutes50);
        org.joda.time.Minutes minutes52 = minutes19.negated();
        org.joda.time.Duration duration53 = minutes19.toStandardDuration();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(duration53);
    }

    @Test
    public void test0660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0660");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = minutes0.get(durationFieldType1);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType4 = minutes0.getFieldType();
        org.joda.time.Minutes minutes6 = minutes0.dividedBy((-1));
        org.joda.time.Minutes minutes8 = minutes0.dividedBy(2147483646);
        org.joda.time.Minutes minutes10 = minutes0.dividedBy((-3));
        // The following exception was thrown during execution in test generation
        try {
            int int12 = minutes10.getValue(2147483647);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 2147483647");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
    }

    @Test
    public void test0661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0661");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT-2147483548M");
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration3 = minutes2.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod4 = minutes2.toMutablePeriod();
        java.lang.String str5 = minutes2.toString();
        int int6 = minutes2.size();
        org.joda.time.Minutes minutes7 = minutes2.negated();
        org.joda.time.Minutes minutes8 = minutes1.plus(minutes2);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes13 = minutes9.plus(0);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MIN_VALUE;
        boolean boolean15 = minutes9.isGreaterThan(minutes14);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes9);
        org.joda.time.Minutes minutes17 = minutes8.plus(minutes16);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PT2M" + "'", str5, "PT2M");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
    }

    @Test
    public void test0662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0662");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.minus((int) (short) 1);
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy(0);
        org.joda.time.Minutes minutes6 = minutes4.plus((-2147483648));
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes8 = minutes7.negated();
        org.joda.time.Minutes minutes9 = minutes7.negated();
        boolean boolean10 = minutes6.isGreaterThan(minutes9);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes13 = minutes11.minus((int) (short) 1);
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy(0);
        int int16 = minutes9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes13);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes19 = minutes17.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = minutes20.get(durationFieldType21);
        org.joda.time.MutablePeriod mutablePeriod23 = minutes20.toMutablePeriod();
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes20);
        boolean boolean25 = minutes19.isLessThan(minutes24);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes28 = minutes26.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType30 = null;
        int int31 = minutes29.get(durationFieldType30);
        org.joda.time.DurationFieldType durationFieldType32 = minutes29.getFieldType();
        int int33 = minutes28.get(durationFieldType32);
        org.joda.time.Minutes minutes35 = minutes28.plus((-1));
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod37 = minutes36.toMutablePeriod();
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes40 = minutes38.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes42 = minutes38.plus(0);
        int int43 = minutes36.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes38);
        org.joda.time.Minutes minutes45 = minutes38.plus((int) ' ');
        java.lang.String str46 = minutes38.toString();
        org.joda.time.Minutes minutes48 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean49 = minutes38.isLessThan(minutes48);
        boolean boolean50 = minutes35.isLessThan(minutes38);
        org.joda.time.Minutes minutes51 = minutes19.minus(minutes35);
        org.joda.time.Minutes minutes52 = org.joda.time.Minutes.ZERO;
        int int53 = minutes51.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes52);
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes55 = minutes54.negated();
        org.joda.time.Minutes minutes56 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod57 = minutes56.toMutablePeriod();
        org.joda.time.Minutes minutes58 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes59 = minutes56.plus(minutes58);
        int int60 = minutes55.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes58);
        org.joda.time.Minutes minutes61 = org.joda.time.Minutes.MAX_VALUE;
        int int62 = minutes55.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes61);
        boolean boolean63 = minutes51.isLessThan(minutes55);
        org.joda.time.Minutes minutes65 = minutes51.multipliedBy(100);
        org.joda.time.PeriodType periodType66 = minutes51.getPeriodType();
        org.joda.time.Minutes minutes67 = minutes9.plus(minutes51);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-2) + "'", int33 == (-2));
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "PT2M" + "'", str46, "PT2M");
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(mutablePeriod57);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(minutes67);
    }

    @Test
    public void test0663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0663");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT214748364M");
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod3 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = minutes4.plus(0);
        int int9 = minutes2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes4);
        org.joda.time.Minutes minutes11 = minutes4.plus((int) ' ');
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = minutes12.getFieldType();
        int int14 = minutes4.get(durationFieldType13);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes17 = minutes15.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes18 = minutes15.negated();
        org.joda.time.Minutes minutes19 = minutes4.plus(minutes15);
        boolean boolean20 = minutes1.isGreaterThan(minutes15);
        org.joda.time.MutablePeriod mutablePeriod21 = minutes15.toMutablePeriod();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(mutablePeriod21);
    }

    @Test
    public void test0664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0664");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.DurationFieldType durationFieldType12 = minutes3.getFieldType();
        int int14 = minutes3.getValue((int) (short) 0);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType17 = minutes16.getPeriodType();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes19 = minutes18.negated();
        org.joda.time.Minutes minutes20 = minutes18.negated();
        org.joda.time.DurationFieldType durationFieldType21 = minutes18.getFieldType();
        java.lang.String str22 = minutes18.toString();
        boolean boolean23 = minutes16.isGreaterThan(minutes18);
        boolean boolean24 = minutes15.equals((java.lang.Object) minutes16);
        org.joda.time.Minutes minutes26 = minutes16.minus(1);
        boolean boolean27 = minutes3.isLessThan(minutes26);
        int int28 = minutes3.getMinutes();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType30 = minutes3.getFieldType((-71582788));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -71582788");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-2) + "'", int14 == (-2));
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PT2147483647M" + "'", str22, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-2) + "'", int28 == (-2));
    }

    @Test
    public void test0665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0665");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = minutes12.getFieldType();
        int int16 = minutes11.get(durationFieldType15);
        org.joda.time.Minutes minutes18 = minutes11.plus((-1));
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = minutes21.plus(0);
        int int26 = minutes19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes21);
        org.joda.time.Minutes minutes28 = minutes21.plus((int) ' ');
        java.lang.String str29 = minutes21.toString();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean32 = minutes21.isLessThan(minutes31);
        boolean boolean33 = minutes18.isLessThan(minutes21);
        org.joda.time.Minutes minutes34 = minutes2.minus(minutes18);
        org.joda.time.Minutes minutes36 = minutes18.dividedBy(1);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2M" + "'", str29, "PT2M");
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes36);
    }

    @Test
    public void test0666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0666");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT-2M");
        org.joda.time.Weeks weeks2 = minutes1.toStandardWeeks();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(weeks2);
    }

    @Test
    public void test0667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0667");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.Duration duration2 = minutes0.toStandardDuration();
        org.joda.time.Minutes minutes4 = minutes0.minus(2);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.MutablePeriod mutablePeriod11 = minutes8.toMutablePeriod();
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes8);
        boolean boolean13 = minutes7.isLessThan(minutes12);
        int int14 = minutes7.getMinutes();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean17 = minutes7.isLessThan(minutes16);
        org.joda.time.Minutes minutes18 = minutes4.minus(minutes16);
        int int19 = minutes16.getMinutes();
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes22 = minutes20.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes24 = minutes20.plus(0);
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes27 = minutes25.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = minutes28.get(durationFieldType29);
        org.joda.time.DurationFieldType durationFieldType31 = minutes28.getFieldType();
        int int32 = minutes27.get(durationFieldType31);
        org.joda.time.Minutes minutes34 = minutes27.plus((-1));
        org.joda.time.Minutes minutes36 = minutes27.minus((int) (short) 10);
        org.joda.time.Minutes minutes38 = minutes36.dividedBy((-2147483648));
        org.joda.time.Minutes minutes39 = minutes24.plus(minutes38);
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes42 = minutes40.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes43 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType44 = null;
        int int45 = minutes43.get(durationFieldType44);
        org.joda.time.MutablePeriod mutablePeriod46 = minutes43.toMutablePeriod();
        org.joda.time.Minutes minutes47 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes43);
        boolean boolean48 = minutes42.isLessThan(minutes47);
        org.joda.time.DurationFieldType durationFieldType49 = minutes47.getFieldType();
        boolean boolean50 = minutes39.isSupported(durationFieldType49);
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes53 = minutes51.multipliedBy((int) (short) -1);
        org.joda.time.Period period54 = minutes53.toPeriod();
        org.joda.time.Minutes minutes55 = minutes39.plus(minutes53);
        boolean boolean56 = minutes16.isGreaterThan(minutes53);
        org.joda.time.Minutes minutes58 = minutes53.dividedBy(2);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-2) + "'", int14 == (-2));
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2147483645) + "'", int19 == (-2147483645));
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-2) + "'", int32 == (-2));
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod46);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(minutes58);
    }

    @Test
    public void test0668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0668");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        int int1 = minutes0.size();
        int int3 = minutes0.getValue(0);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        org.joda.time.Minutes minutes14 = minutes7.plus((-1));
        org.joda.time.Minutes minutes16 = minutes7.minus((int) (short) 10);
        org.joda.time.Duration duration17 = minutes7.toStandardDuration();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes19 = minutes18.negated();
        org.joda.time.Minutes minutes20 = minutes18.negated();
        java.lang.String str21 = minutes18.toString();
        org.joda.time.Minutes minutes23 = minutes18.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes27 = minutes25.multipliedBy((int) (byte) 0);
        boolean boolean28 = minutes23.equals((java.lang.Object) minutes25);
        boolean boolean29 = minutes7.isGreaterThan(minutes25);
        boolean boolean30 = minutes4.equals((java.lang.Object) boolean29);
        org.joda.time.Minutes minutes31 = minutes4.negated();
        org.joda.time.Duration duration32 = minutes4.toStandardDuration();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType34 = minutes4.getFieldType((-2147483548));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -2147483548");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2147483647 + "'", int3 == 2147483647);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT2147483647M" + "'", str21, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(duration32);
    }

    @Test
    public void test0669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0669");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod3 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes5 = minutes2.plus(minutes4);
        int int6 = minutes1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes4);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MAX_VALUE;
        int int8 = minutes1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes7);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.MutablePeriod mutablePeriod15 = minutes12.toMutablePeriod();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes12);
        boolean boolean17 = minutes11.isLessThan(minutes16);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes20 = minutes18.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType22 = null;
        int int23 = minutes21.get(durationFieldType22);
        org.joda.time.DurationFieldType durationFieldType24 = minutes21.getFieldType();
        int int25 = minutes20.get(durationFieldType24);
        org.joda.time.Minutes minutes27 = minutes20.plus((-1));
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod29 = minutes28.toMutablePeriod();
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes32 = minutes30.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes34 = minutes30.plus(0);
        int int35 = minutes28.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes30);
        org.joda.time.Minutes minutes37 = minutes30.plus((int) ' ');
        java.lang.String str38 = minutes30.toString();
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean41 = minutes30.isLessThan(minutes40);
        boolean boolean42 = minutes27.isLessThan(minutes30);
        org.joda.time.Minutes minutes43 = minutes11.minus(minutes27);
        org.joda.time.MutablePeriod mutablePeriod44 = minutes11.toMutablePeriod();
        org.joda.time.Minutes minutes46 = minutes11.dividedBy(2);
        org.joda.time.Minutes minutes47 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes49 = minutes47.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes50 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType51 = null;
        int int52 = minutes50.get(durationFieldType51);
        org.joda.time.DurationFieldType durationFieldType53 = minutes50.getFieldType();
        int int54 = minutes49.get(durationFieldType53);
        org.joda.time.Minutes minutes56 = minutes49.plus((-1));
        org.joda.time.Minutes minutes57 = minutes56.negated();
        org.joda.time.Minutes minutes58 = minutes46.plus(minutes57);
        org.joda.time.Minutes minutes60 = minutes46.minus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType61 = minutes60.getFieldType();
        int int62 = minutes7.get(durationFieldType61);
        int int63 = minutes7.getMinutes();
        org.joda.time.Minutes minutes65 = minutes7.multipliedBy((-1));
        org.joda.time.Minutes minutes66 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes67 = minutes66.negated();
        org.joda.time.Minutes minutes68 = minutes66.negated();
        java.lang.String str69 = minutes66.toString();
        int int70 = minutes66.size();
        org.joda.time.Period period71 = minutes66.toPeriod();
        org.joda.time.PeriodType periodType72 = minutes66.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes73 = minutes7.plus(minutes66);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 2147483647 + 2147483647");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-2) + "'", int25 == (-2));
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "PT2M" + "'", str38, "PT2M");
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(mutablePeriod44);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-2) + "'", int54 == (-2));
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2147483647 + "'", int62 == 2147483647);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2147483647 + "'", int63 == 2147483647);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "PT2147483647M" + "'", str69, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertNotNull(periodType72);
    }

    @Test
    public void test0670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0670");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        int int1 = minutes0.size();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes3 = minutes2.negated();
        org.joda.time.Minutes minutes5 = minutes3.dividedBy((int) (byte) -1);
        boolean boolean6 = minutes0.isLessThan(minutes3);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        org.joda.time.Duration duration9 = minutes3.toStandardDuration();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration9);
    }

    @Test
    public void test0671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0671");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        int int1 = minutes0.size();
        int int2 = minutes0.getMinutes();
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2147483647 + "'", int2 == 2147483647);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
    }

    @Test
    public void test0672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0672");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((-12));
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes4 = minutes2.minus((int) (short) 1);
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy(0);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes9 = minutes7.dividedBy((int) 'a');
        org.joda.time.Minutes minutes11 = minutes7.plus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType12 = minutes11.getFieldType();
        boolean boolean13 = minutes4.isSupported(durationFieldType12);
        boolean boolean14 = minutes1.isSupported(durationFieldType12);
        // The following exception was thrown during execution in test generation
        try {
            int int16 = minutes1.getValue((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test0673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0673");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes9 = minutes2.plus((-1));
        org.joda.time.Minutes minutes11 = minutes2.minus((int) (short) 10);
        org.joda.time.Minutes minutes13 = minutes11.dividedBy((-2147483648));
        org.joda.time.Minutes minutes14 = minutes13.negated();
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes16 = minutes15.negated();
        org.joda.time.Minutes minutes17 = minutes15.negated();
        org.joda.time.Minutes minutes18 = minutes13.minus(minutes17);
        org.joda.time.Minutes minutes20 = minutes17.plus((int) 'a');
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes20);
        org.joda.time.Minutes minutes23 = minutes20.dividedBy((int) (byte) 1);
        java.lang.String str24 = minutes20.toString();
        org.joda.time.Minutes minutes26 = minutes20.dividedBy(2);
        java.lang.String str27 = minutes26.toString();
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes30 = minutes28.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = minutes31.get(durationFieldType32);
        org.joda.time.DurationFieldType durationFieldType34 = minutes31.getFieldType();
        int int35 = minutes30.get(durationFieldType34);
        org.joda.time.Minutes minutes37 = minutes30.plus((-1));
        org.joda.time.Minutes minutes39 = minutes30.minus((int) (short) 10);
        org.joda.time.Minutes minutes41 = minutes39.dividedBy((-2147483648));
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod43 = minutes42.toMutablePeriod();
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes45 = minutes42.plus(minutes44);
        org.joda.time.Minutes minutes46 = minutes39.minus(minutes44);
        org.joda.time.Minutes minutes47 = org.joda.time.Minutes.MAX_VALUE;
        int int48 = minutes47.size();
        int int50 = minutes47.getValue(0);
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes47);
        org.joda.time.Minutes minutes52 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes53 = minutes52.negated();
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes52);
        java.lang.String str55 = minutes52.toString();
        org.joda.time.Minutes minutes56 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType57 = minutes56.getFieldType();
        boolean boolean58 = minutes52.isSupported(durationFieldType57);
        int int59 = minutes51.get(durationFieldType57);
        boolean boolean60 = minutes44.isSupported(durationFieldType57);
        boolean boolean61 = minutes26.equals((java.lang.Object) boolean60);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "PT-2147483550M" + "'", str24, "PT-2147483550M");
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "PT-1073741775M" + "'", str27, "PT-1073741775M");
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-2) + "'", int35 == (-2));
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2147483647 + "'", int50 == 2147483647);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "PT2147483647M" + "'", str55, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2147483647 + "'", int59 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test0674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0674");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = minutes0.getFieldType();
        org.joda.time.Period period2 = minutes0.toPeriod();
        org.joda.time.Duration duration3 = minutes0.toStandardDuration();
        org.joda.time.DurationFieldType durationFieldType4 = minutes0.getFieldType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(durationFieldType4);
    }

    @Test
    public void test0675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0675");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.minus((int) (short) 0);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = minutes7.get(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType10 = minutes7.getFieldType();
        int int11 = minutes6.get(durationFieldType10);
        org.joda.time.Minutes minutes13 = minutes6.plus((-1));
        boolean boolean14 = minutes3.isGreaterThan(minutes6);
        org.joda.time.DurationFieldType durationFieldType15 = minutes6.getFieldType();
        org.joda.time.PeriodType periodType16 = minutes6.getPeriodType();
        boolean boolean17 = minutes0.isLessThan(minutes6);
        org.joda.time.Minutes minutes19 = minutes0.plus((int) '4');
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-2) + "'", int11 == (-2));
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(minutes19);
    }

    @Test
    public void test0676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0676");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        int int1 = minutes0.size();
        org.joda.time.Minutes minutes3 = minutes0.dividedBy((-24));
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(minutes3);
    }

    @Test
    public void test0677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0677");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = minutes8.plus(0);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = minutes16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = minutes16.getFieldType();
        int int20 = minutes15.get(durationFieldType19);
        org.joda.time.Minutes minutes22 = minutes15.plus((-1));
        org.joda.time.Minutes minutes24 = minutes15.minus((int) (short) 10);
        org.joda.time.Minutes minutes26 = minutes24.dividedBy((-2147483648));
        org.joda.time.Minutes minutes27 = minutes12.plus(minutes26);
        org.joda.time.Minutes minutes28 = minutes2.minus(minutes12);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod30 = minutes29.toMutablePeriod();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes32 = minutes29.plus(minutes31);
        org.joda.time.Minutes minutes33 = minutes28.plus(minutes31);
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes36 = minutes34.multipliedBy((int) (short) -1);
        org.joda.time.MutablePeriod mutablePeriod37 = minutes34.toMutablePeriod();
        org.joda.time.Minutes minutes38 = minutes31.minus(minutes34);
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes40 = minutes39.negated();
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes39);
        java.lang.String str42 = minutes39.toString();
        org.joda.time.Minutes minutes43 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType44 = minutes43.getFieldType();
        boolean boolean45 = minutes39.isSupported(durationFieldType44);
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes39);
        org.joda.time.MutablePeriod mutablePeriod47 = minutes46.toMutablePeriod();
        boolean boolean48 = minutes34.isGreaterThan(minutes46);
        org.joda.time.Duration duration49 = minutes34.toStandardDuration();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-2) + "'", int20 == (-2));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT2147483647M" + "'", str42, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(mutablePeriod47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(duration49);
    }

    @Test
    public void test0678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0678");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod8 = minutes7.toMutablePeriod();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod8);
        boolean boolean10 = minutes0.isLessThan(minutes9);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = minutes15.get(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = minutes15.getFieldType();
        int int19 = minutes14.get(durationFieldType18);
        org.joda.time.Minutes minutes21 = minutes14.plus((-1));
        boolean boolean22 = minutes11.isGreaterThan(minutes14);
        org.joda.time.Minutes minutes24 = minutes14.multipliedBy(2);
        org.joda.time.Minutes minutes25 = minutes24.negated();
        org.joda.time.Minutes minutes26 = minutes25.negated();
        boolean boolean27 = minutes0.isLessThan(minutes25);
        org.joda.time.Minutes minutes29 = minutes25.dividedBy((int) (short) 1);
        org.joda.time.Duration duration30 = minutes25.toStandardDuration();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod32 = minutes31.toMutablePeriod();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes35 = minutes33.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes37 = minutes33.plus(0);
        int int38 = minutes31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes33);
        org.joda.time.Minutes minutes40 = minutes33.plus((int) ' ');
        java.lang.String str41 = minutes33.toString();
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod43 = minutes42.toMutablePeriod();
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes46 = minutes44.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes48 = minutes44.plus(0);
        int int49 = minutes42.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes44);
        org.joda.time.Minutes minutes51 = minutes44.plus((int) ' ');
        java.lang.String str52 = minutes44.toString();
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean55 = minutes44.isLessThan(minutes54);
        org.joda.time.Minutes minutes56 = minutes33.minus(minutes44);
        java.lang.String str57 = minutes44.toString();
        org.joda.time.Minutes minutes58 = minutes25.plus(minutes44);
        org.joda.time.Minutes minutes60 = minutes58.dividedBy((-2147483548));
        org.joda.time.Minutes minutes62 = minutes60.minus((-2147483548));
        // The following exception was thrown during execution in test generation
        try {
            int int64 = minutes62.getValue(1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2) + "'", int19 == (-2));
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "PT2M" + "'", str41, "PT2M");
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "PT2M" + "'", str52, "PT2M");
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "PT2M" + "'", str57, "PT2M");
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(minutes62);
    }

    @Test
    public void test0679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0679");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes8 = minutes2.negated();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType10 = minutes2.getFieldType((-2147483645));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -2147483645");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes8);
    }

    @Test
    public void test0680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0680");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = minutes12.getFieldType();
        int int16 = minutes11.get(durationFieldType15);
        org.joda.time.Minutes minutes18 = minutes11.plus((-1));
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = minutes21.plus(0);
        int int26 = minutes19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes21);
        org.joda.time.Minutes minutes28 = minutes21.plus((int) ' ');
        java.lang.String str29 = minutes21.toString();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean32 = minutes21.isLessThan(minutes31);
        boolean boolean33 = minutes18.isLessThan(minutes21);
        org.joda.time.Minutes minutes34 = minutes2.minus(minutes18);
        org.joda.time.MutablePeriod mutablePeriod35 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod37 = minutes36.toMutablePeriod();
        boolean boolean38 = minutes2.isLessThan(minutes36);
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType41 = minutes40.getPeriodType();
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes43 = minutes42.negated();
        org.joda.time.Minutes minutes44 = minutes42.negated();
        org.joda.time.DurationFieldType durationFieldType45 = minutes42.getFieldType();
        java.lang.String str46 = minutes42.toString();
        boolean boolean47 = minutes40.isGreaterThan(minutes42);
        boolean boolean48 = minutes39.equals((java.lang.Object) minutes40);
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes39);
        org.joda.time.Minutes minutes50 = minutes39.negated();
        boolean boolean51 = minutes2.isGreaterThan(minutes50);
        org.joda.time.Minutes minutes52 = org.joda.time.Minutes.MAX_VALUE;
        int int53 = minutes52.size();
        int int55 = minutes52.getValue(0);
        org.joda.time.Minutes minutes56 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes52);
        org.joda.time.Minutes minutes57 = minutes50.plus(minutes56);
        org.joda.time.Period period58 = minutes57.toPeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2M" + "'", str29, "PT2M");
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "PT2147483647M" + "'", str46, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2147483647 + "'", int55 == 2147483647);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(period58);
    }

    @Test
    public void test0681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0681");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.DurationFieldType durationFieldType12 = minutes3.getFieldType();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType15 = minutes14.getPeriodType();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes17 = minutes16.negated();
        org.joda.time.Minutes minutes18 = minutes16.negated();
        org.joda.time.DurationFieldType durationFieldType19 = minutes16.getFieldType();
        java.lang.String str20 = minutes16.toString();
        boolean boolean21 = minutes14.isGreaterThan(minutes16);
        boolean boolean22 = minutes13.equals((java.lang.Object) minutes14);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes13);
        int int24 = minutes3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes13);
        org.joda.time.Period period25 = minutes13.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            int int27 = minutes13.getValue((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "PT2147483647M" + "'", str20, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(period25);
    }

    @Test
    public void test0682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0682");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes5 = minutes3.dividedBy((int) 'a');
        org.joda.time.Minutes minutes7 = minutes3.plus((int) (short) 1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes9 = minutes8.negated();
        org.joda.time.PeriodType periodType10 = minutes9.getPeriodType();
        org.joda.time.Minutes minutes11 = minutes9.negated();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes15 = minutes13.plus(0);
        org.joda.time.DurationFieldType durationFieldType16 = minutes15.getFieldType();
        int int17 = minutes11.get(durationFieldType16);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes20 = minutes18.minus((int) (short) 1);
        org.joda.time.Minutes minutes22 = minutes20.multipliedBy(0);
        org.joda.time.Duration duration23 = minutes20.toStandardDuration();
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes25 = minutes24.negated();
        org.joda.time.DurationFieldType durationFieldType26 = minutes24.getFieldType();
        int int27 = minutes20.get(durationFieldType26);
        boolean boolean28 = minutes11.isSupported(durationFieldType26);
        int int29 = minutes3.get(durationFieldType26);
        boolean boolean30 = minutes2.isSupported(durationFieldType26);
        java.lang.String str31 = minutes2.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds32 = minutes2.toStandardSeconds();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: -2147483648 * 60");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2147483647 + "'", int17 == 2147483647);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2147483646 + "'", int27 == 2147483646);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-2147483648) + "'", int29 == (-2147483648));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "PT-2147483648M" + "'", str31, "PT-2147483648M");
    }

    @Test
    public void test0683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0683");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Duration duration8 = minutes2.toStandardDuration();
        org.joda.time.Minutes minutes10 = minutes2.dividedBy((-22139006));
        java.lang.Class<?> wildcardClass11 = minutes2.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0684");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        int int9 = minutes2.getMinutes();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean12 = minutes2.isLessThan(minutes11);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes2);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes16 = minutes14.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes17 = minutes14.negated();
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes20 = minutes14.minus(minutes19);
        boolean boolean21 = minutes2.isLessThan(minutes14);
        org.joda.time.Minutes minutes23 = minutes14.plus((int) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes25 = minutes23.multipliedBy((-2147483548));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 12 * -2147483548");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-2) + "'", int9 == (-2));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(minutes23);
    }

    @Test
    public void test0685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0685");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        int int1 = minutes0.getMinutes();
        org.joda.time.PeriodType periodType2 = minutes0.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds3 = minutes0.toStandardSeconds();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: -2147483648 * 60");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-2147483648) + "'", int1 == (-2147483648));
        org.junit.Assert.assertNotNull(periodType2);
    }

    @Test
    public void test0686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0686");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType3 = minutes2.getFieldType();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes5 = minutes4.negated();
        org.joda.time.Minutes minutes6 = minutes4.negated();
        java.lang.String str7 = minutes4.toString();
        int int8 = minutes4.size();
        org.joda.time.Minutes minutes10 = minutes4.minus(0);
        org.joda.time.Duration duration11 = minutes10.toStandardDuration();
        boolean boolean12 = minutes2.isGreaterThan(minutes10);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType14 = minutes10.getFieldType(3);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT2147483647M" + "'", str7, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0687");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        int int1 = minutes0.size();
        int int3 = minutes0.getValue(0);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes6 = minutes4.dividedBy((-1));
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod8 = minutes7.toMutablePeriod();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes13 = minutes9.plus(0);
        int int14 = minutes7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes9);
        org.joda.time.Minutes minutes16 = minutes9.plus((int) ' ');
        java.lang.String str17 = minutes9.toString();
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean20 = minutes9.isLessThan(minutes19);
        boolean boolean21 = minutes4.equals((java.lang.Object) minutes9);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType23 = minutes4.getFieldType((-2147483646));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -2147483646");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2147483647 + "'", int3 == 2147483647);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "PT2M" + "'", str17, "PT2M");
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0688");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = minutes0.negated();
        org.joda.time.DurationFieldType durationFieldType3 = minutes0.getFieldType();
        java.lang.String str4 = minutes0.toString();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = minutes5.get(durationFieldType6);
        org.joda.time.MutablePeriod mutablePeriod8 = minutes5.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType9 = minutes5.getFieldType();
        int int10 = minutes0.get(durationFieldType9);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MAX_VALUE;
        boolean boolean12 = minutes0.isLessThan(minutes11);
        org.joda.time.Minutes minutes14 = minutes0.plus((-12));
        org.joda.time.Period period15 = minutes0.toPeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT2147483647M" + "'", str4, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2147483647 + "'", int10 == 2147483647);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(period15);
    }

    @Test
    public void test0689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0689");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((-1));
        org.joda.time.Duration duration2 = minutes1.toStandardDuration();
        java.lang.Class<?> wildcardClass3 = duration2.getClass();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0690");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes9 = minutes2.plus((-1));
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod11 = minutes10.toMutablePeriod();
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes16 = minutes12.plus(0);
        int int17 = minutes10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes12);
        org.joda.time.Minutes minutes19 = minutes12.plus((int) ' ');
        java.lang.String str20 = minutes12.toString();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean23 = minutes12.isLessThan(minutes22);
        boolean boolean24 = minutes9.isLessThan(minutes12);
        int int25 = minutes9.getMinutes();
        org.joda.time.MutablePeriod mutablePeriod26 = minutes9.toMutablePeriod();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType28 = minutes9.getFieldType(2147483646);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 2147483646");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "PT2M" + "'", str20, "PT2M");
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertNotNull(mutablePeriod26);
    }

    @Test
    public void test0691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0691");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes3 = minutes1.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        int int13 = minutes4.get(durationFieldType11);
        org.joda.time.PeriodType periodType14 = minutes4.getPeriodType();
        org.joda.time.Minutes minutes16 = minutes4.minus(3);
        // The following exception was thrown during execution in test generation
        try {
            int int18 = minutes16.getValue((-22139006));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -22139006");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2147483647 + "'", int13 == 2147483647);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(minutes16);
    }

    @Test
    public void test0692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0692");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes3 = minutes1.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        int int13 = minutes4.get(durationFieldType11);
        org.joda.time.PeriodType periodType14 = minutes4.getPeriodType();
        org.joda.time.Minutes minutes16 = minutes4.minus(3);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes19 = minutes17.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes20 = minutes17.negated();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes23 = minutes17.minus(minutes22);
        org.joda.time.Minutes minutes25 = minutes22.multipliedBy((int) (short) 1);
        int int26 = minutes25.getMinutes();
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes28 = minutes27.negated();
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes27);
        java.lang.String str30 = minutes27.toString();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = minutes31.getFieldType();
        boolean boolean33 = minutes27.isSupported(durationFieldType32);
        boolean boolean34 = minutes25.isGreaterThan(minutes27);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes35 = minutes4.plus(minutes27);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 2147483647 + 2147483647");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2147483647 + "'", int13 == 2147483647);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "PT2147483647M" + "'", str30, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test0693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0693");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType2 = minutes1.getPeriodType();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes4 = minutes3.negated();
        org.joda.time.Minutes minutes5 = minutes3.negated();
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        java.lang.String str7 = minutes3.toString();
        boolean boolean8 = minutes1.isGreaterThan(minutes3);
        boolean boolean9 = minutes0.equals((java.lang.Object) minutes1);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes12 = minutes11.negated();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes11);
        org.joda.time.Minutes minutes14 = minutes10.minus(minutes13);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes17 = minutes15.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = minutes18.get(durationFieldType19);
        org.joda.time.DurationFieldType durationFieldType21 = minutes18.getFieldType();
        int int22 = minutes17.get(durationFieldType21);
        org.joda.time.Minutes minutes24 = minutes17.plus((-1));
        org.joda.time.Minutes minutes26 = minutes17.minus((int) (short) 10);
        org.joda.time.Duration duration27 = minutes17.toStandardDuration();
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes17);
        int int29 = minutes14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes28);
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes31 = minutes30.negated();
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes30);
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes35 = minutes33.minus((int) (short) 1);
        org.joda.time.Minutes minutes37 = minutes35.multipliedBy(0);
        org.joda.time.Minutes minutes39 = minutes37.plus((-2147483648));
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.TWO;
        boolean boolean41 = minutes37.isGreaterThan(minutes40);
        int int42 = minutes32.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes40);
        boolean boolean43 = minutes28.isLessThan(minutes40);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT2147483647M" + "'", str7, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-2) + "'", int22 == (-2));
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    }

    @Test
    public void test0694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0694");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = minutes0.get(durationFieldType1);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType4 = minutes0.getFieldType();
        org.joda.time.Minutes minutes6 = minutes0.dividedBy((-1));
        org.joda.time.Minutes minutes8 = minutes0.dividedBy(2147483646);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.minutes((int) (byte) 10);
        boolean boolean11 = minutes0.isLessThan(minutes10);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes10);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(minutes12);
    }

    @Test
    public void test0695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0695");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        org.joda.time.Minutes minutes14 = minutes7.plus((-1));
        org.joda.time.Minutes minutes16 = minutes7.minus((int) (short) 10);
        org.joda.time.Minutes minutes18 = minutes16.dividedBy((-2147483648));
        org.joda.time.Minutes minutes19 = minutes4.plus(minutes18);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes22 = minutes20.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = minutes23.get(durationFieldType24);
        org.joda.time.MutablePeriod mutablePeriod26 = minutes23.toMutablePeriod();
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes23);
        boolean boolean28 = minutes22.isLessThan(minutes27);
        org.joda.time.DurationFieldType durationFieldType29 = minutes27.getFieldType();
        boolean boolean30 = minutes19.isSupported(durationFieldType29);
        org.joda.time.Minutes minutes32 = minutes19.plus((int) (short) -1);
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes35 = minutes33.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes36 = minutes33.negated();
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes39 = minutes33.minus(minutes38);
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod41 = minutes40.toMutablePeriod();
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod41);
        boolean boolean43 = minutes33.isLessThan(minutes42);
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes42);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes47 = minutes45.minus((int) (short) 0);
        boolean boolean48 = minutes42.isLessThan(minutes47);
        org.joda.time.Minutes minutes50 = minutes47.multipliedBy((int) (short) 0);
        boolean boolean51 = minutes19.isGreaterThan(minutes50);
        org.joda.time.Minutes minutes52 = minutes19.negated();
        org.joda.time.Minutes minutes53 = minutes52.negated();
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod55 = minutes54.toMutablePeriod();
        org.joda.time.Minutes minutes56 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes58 = minutes56.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes60 = minutes56.plus(0);
        int int61 = minutes54.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes56);
        org.joda.time.Minutes minutes63 = minutes56.plus((int) ' ');
        java.lang.String str64 = minutes56.toString();
        org.joda.time.Minutes minutes65 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod66 = minutes65.toMutablePeriod();
        org.joda.time.Minutes minutes67 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes69 = minutes67.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes71 = minutes67.plus(0);
        int int72 = minutes65.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes67);
        org.joda.time.Minutes minutes74 = minutes67.plus((int) ' ');
        java.lang.String str75 = minutes67.toString();
        org.joda.time.Minutes minutes77 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean78 = minutes67.isLessThan(minutes77);
        org.joda.time.Minutes minutes79 = minutes56.minus(minutes67);
        org.joda.time.Minutes minutes80 = minutes53.plus(minutes79);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(mutablePeriod55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "PT2M" + "'", str64, "PT2M");
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(mutablePeriod66);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(minutes74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "PT2M" + "'", str75, "PT2M");
        org.junit.Assert.assertNotNull(minutes77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(minutes79);
        org.junit.Assert.assertNotNull(minutes80);
    }

    @Test
    public void test0696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0696");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        int int4 = minutes2.getMinutes();
        org.joda.time.PeriodType periodType5 = minutes2.getPeriodType();
        org.joda.time.Period period6 = minutes2.toPeriod();
        java.lang.Class<?> wildcardClass7 = period6.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0697");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes5 = minutes3.minus((int) (short) 1);
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy(0);
        org.joda.time.Minutes minutes9 = minutes7.plus((-2147483648));
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes11 = minutes10.negated();
        org.joda.time.Minutes minutes12 = minutes10.negated();
        boolean boolean13 = minutes9.isGreaterThan(minutes12);
        int int14 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes9);
        org.joda.time.MutablePeriod mutablePeriod15 = minutes9.toMutablePeriod();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration17 = minutes16.toStandardDuration();
        org.joda.time.Duration duration18 = minutes16.toStandardDuration();
        org.joda.time.Minutes minutes20 = minutes16.minus(2);
        boolean boolean21 = minutes9.isGreaterThan(minutes20);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes23 = minutes9.minus((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: -2147483648 + -52");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0698");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes9 = minutes2.plus((-1));
        org.joda.time.Minutes minutes11 = minutes2.minus((int) (short) 10);
        org.joda.time.Duration duration12 = minutes2.toStandardDuration();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes2);
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy(3);
        org.joda.time.Minutes minutes17 = minutes15.minus(0);
        org.joda.time.Minutes minutes18 = minutes17.negated();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
    }

    @Test
    public void test0699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0699");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((int) (byte) 0);
        org.joda.time.Days days2 = minutes1.toStandardDays();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType4 = minutes1.getFieldType((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(days2);
    }

    @Test
    public void test0700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0700");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((int) (byte) 1);
        org.joda.time.Hours hours2 = minutes1.toStandardHours();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType4 = hours2.getFieldType(2147483647);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 2147483647");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(hours2);
    }

    @Test
    public void test0701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0701");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT-2147483548M");
        org.joda.time.Minutes minutes3 = minutes1.plus((int) ' ');
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds4 = minutes1.toStandardSeconds();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: -2147483548 * 60");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
    }

    @Test
    public void test0702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0702");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        java.lang.String str3 = minutes0.toString();
        org.joda.time.PeriodType periodType4 = minutes0.getPeriodType();
        org.joda.time.Minutes minutes5 = null;
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes8 = minutes7.negated();
        org.joda.time.Minutes minutes10 = minutes8.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes13 = minutes11.dividedBy((int) 'a');
        org.joda.time.Minutes minutes15 = minutes11.plus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType16 = minutes15.getFieldType();
        boolean boolean17 = minutes8.isSupported(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = minutes8.getFieldType();
        int int19 = minutes0.get(durationFieldType18);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2147483647M" + "'", str3, "PT2147483647M");
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2147483647 + "'", int19 == 2147483647);
    }

    @Test
    public void test0703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0703");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes(34);
        org.junit.Assert.assertNotNull(minutes1);
    }

    @Test
    public void test0704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0704");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.dividedBy(2);
        int int3 = minutes0.size();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod5 = minutes4.toMutablePeriod();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes8 = minutes6.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes10 = minutes6.plus(0);
        int int11 = minutes4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes6);
        org.joda.time.Minutes minutes13 = minutes6.plus((int) ' ');
        int int14 = minutes13.size();
        org.joda.time.Minutes minutes16 = minutes13.minus(0);
        org.joda.time.Minutes minutes17 = minutes0.plus(minutes13);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes19 = minutes18.negated();
        org.joda.time.Minutes minutes21 = minutes19.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes24 = minutes22.dividedBy((int) 'a');
        org.joda.time.Minutes minutes26 = minutes22.plus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType27 = minutes26.getFieldType();
        boolean boolean28 = minutes19.isSupported(durationFieldType27);
        org.joda.time.DurationFieldType durationFieldType29 = minutes19.getFieldType();
        boolean boolean30 = minutes13.equals((java.lang.Object) minutes19);
        // The following exception was thrown during execution in test generation
        try {
            int int32 = minutes13.getValue(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0705");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes9 = minutes2.plus((-1));
        org.joda.time.Minutes minutes11 = minutes2.minus((int) (short) 10);
        org.joda.time.Minutes minutes13 = minutes11.dividedBy((-2147483648));
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod15 = minutes14.toMutablePeriod();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes17 = minutes14.plus(minutes16);
        org.joda.time.Minutes minutes18 = minutes11.minus(minutes16);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType20 = minutes19.getPeriodType();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes22 = minutes21.negated();
        org.joda.time.Minutes minutes23 = minutes21.negated();
        org.joda.time.DurationFieldType durationFieldType24 = minutes21.getFieldType();
        java.lang.String str25 = minutes21.toString();
        boolean boolean26 = minutes19.isGreaterThan(minutes21);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes28 = minutes27.negated();
        org.joda.time.Minutes minutes29 = minutes27.negated();
        java.lang.String str30 = minutes27.toString();
        int int31 = minutes27.size();
        org.joda.time.Period period32 = minutes27.toPeriod();
        org.joda.time.Minutes minutes33 = minutes21.minus(minutes27);
        int int34 = minutes18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes21);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "PT2147483647M" + "'", str25, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "PT2147483647M" + "'", str30, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
    }

    @Test
    public void test0706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0706");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        java.lang.String str10 = minutes2.toString();
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean13 = minutes2.isLessThan(minutes12);
        org.joda.time.Duration duration14 = minutes2.toStandardDuration();
        // The following exception was thrown during execution in test generation
        try {
            int int16 = minutes2.getValue((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT2M" + "'", str10, "PT2M");
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(duration14);
    }

    @Test
    public void test0707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0707");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes(100);
        org.joda.time.PeriodType periodType2 = minutes1.getPeriodType();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes4 = minutes3.negated();
        org.joda.time.Minutes minutes5 = minutes3.negated();
        java.lang.String str6 = minutes3.toString();
        org.joda.time.Minutes minutes8 = minutes3.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy((int) (byte) 0);
        boolean boolean13 = minutes8.equals((java.lang.Object) minutes10);
        java.lang.String str14 = minutes10.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes15 = minutes1.plus(minutes10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 100 + 2147483647");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT2147483647M" + "'", str6, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "PT2147483647M" + "'", str14, "PT2147483647M");
    }

    @Test
    public void test0708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0708");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes5 = minutes3.minus((int) (short) 1);
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy(0);
        org.joda.time.Minutes minutes9 = minutes7.plus((-2147483648));
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes11 = minutes10.negated();
        org.joda.time.Minutes minutes12 = minutes10.negated();
        boolean boolean13 = minutes9.isGreaterThan(minutes12);
        int int14 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes9);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.THREE;
        int int17 = minutes16.size();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod19 = minutes18.toMutablePeriod();
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes22 = minutes20.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes24 = minutes20.plus(0);
        int int25 = minutes18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes20);
        org.joda.time.Minutes minutes27 = minutes20.plus((int) ' ');
        int int28 = minutes16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes27);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes32 = minutes30.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = minutes33.get(durationFieldType34);
        org.joda.time.DurationFieldType durationFieldType36 = minutes33.getFieldType();
        int int37 = minutes32.get(durationFieldType36);
        org.joda.time.Minutes minutes39 = minutes32.plus((-1));
        boolean boolean40 = minutes29.isGreaterThan(minutes32);
        org.joda.time.DurationFieldType durationFieldType41 = minutes32.getFieldType();
        int int43 = minutes32.getValue((int) (short) 0);
        org.joda.time.Period period44 = minutes32.toPeriod();
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes46 = minutes45.negated();
        org.joda.time.Minutes minutes47 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod48 = minutes47.toMutablePeriod();
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes50 = minutes47.plus(minutes49);
        int int51 = minutes46.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes49);
        org.joda.time.Minutes minutes52 = minutes32.minus(minutes46);
        boolean boolean53 = minutes16.isGreaterThan(minutes46);
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod55 = minutes54.toMutablePeriod();
        org.joda.time.Minutes minutes56 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes57 = minutes54.plus(minutes56);
        org.joda.time.Minutes minutes59 = minutes57.plus((int) 'a');
        org.joda.time.Duration duration60 = minutes57.toStandardDuration();
        int int61 = minutes16.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes57);
        boolean boolean62 = minutes15.isLessThan(minutes16);
        org.joda.time.Duration duration63 = minutes15.toStandardDuration();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-2) + "'", int37 == (-2));
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-2) + "'", int43 == (-2));
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(mutablePeriod55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(duration63);
    }

    @Test
    public void test0709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0709");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        int int4 = minutes3.size();
        int int5 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes3);
        org.joda.time.Minutes minutes7 = minutes3.dividedBy(2147483646);
        org.joda.time.MutablePeriod mutablePeriod8 = minutes7.toMutablePeriod();
        java.lang.Class<?> wildcardClass9 = minutes7.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0710");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        int int9 = minutes2.getMinutes();
        org.joda.time.Minutes minutes11 = minutes2.multipliedBy(2);
        int int12 = minutes11.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-2) + "'", int9 == (-2));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-4) + "'", int12 == (-4));
    }

    @Test
    public void test0711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0711");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes5 = minutes3.minus((int) (short) 1);
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy(0);
        org.joda.time.Minutes minutes9 = minutes7.plus((-2147483648));
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes11 = minutes10.negated();
        org.joda.time.Minutes minutes12 = minutes10.negated();
        boolean boolean13 = minutes9.isGreaterThan(minutes12);
        int int14 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes9);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes20 = minutes18.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes21 = minutes18.negated();
        boolean boolean22 = minutes17.equals((java.lang.Object) minutes21);
        java.lang.String str23 = minutes21.toString();
        org.joda.time.DurationFieldType durationFieldType24 = minutes21.getFieldType();
        boolean boolean25 = minutes0.isSupported(durationFieldType24);
        org.joda.time.MutablePeriod mutablePeriod26 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes28 = minutes0.minus((-24));
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT-2M" + "'", str23, "PT-2M");
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(minutes28);
    }

    @Test
    public void test0712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0712");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType1 = minutes0.getPeriodType();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes3 = minutes2.negated();
        org.joda.time.Minutes minutes4 = minutes2.negated();
        org.joda.time.DurationFieldType durationFieldType5 = minutes2.getFieldType();
        java.lang.String str6 = minutes2.toString();
        boolean boolean7 = minutes0.isGreaterThan(minutes2);
        org.joda.time.Minutes minutes8 = minutes2.negated();
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (byte) 1);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT2147483647M" + "'", str6, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
    }

    @Test
    public void test0713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0713");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        java.lang.String str3 = minutes0.toString();
        org.joda.time.PeriodType periodType4 = minutes0.getPeriodType();
        org.joda.time.Minutes minutes5 = null;
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes8 = minutes0.dividedBy((int) ' ');
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2147483647M" + "'", str3, "PT2147483647M");
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
    }

    @Test
    public void test0714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0714");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        int int1 = minutes0.size();
        int int3 = minutes0.getValue(0);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.MutablePeriod mutablePeriod5 = minutes4.toMutablePeriod();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes7 = minutes6.negated();
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes6);
        java.lang.String str9 = minutes6.toString();
        org.joda.time.PeriodType periodType10 = minutes6.getPeriodType();
        org.joda.time.Minutes minutes11 = null;
        org.joda.time.Minutes minutes12 = minutes6.minus(minutes11);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = minutes16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = minutes16.getFieldType();
        int int20 = minutes15.get(durationFieldType19);
        org.joda.time.Minutes minutes22 = minutes15.plus((-1));
        org.joda.time.Minutes minutes24 = minutes15.minus((int) (short) 10);
        org.joda.time.Minutes minutes26 = minutes24.dividedBy((-2147483648));
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod28 = minutes27.toMutablePeriod();
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes30 = minutes27.plus(minutes29);
        org.joda.time.Minutes minutes31 = minutes24.minus(minutes29);
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes34 = minutes32.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes36 = minutes32.plus(0);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes39 = minutes37.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType41 = null;
        int int42 = minutes40.get(durationFieldType41);
        org.joda.time.DurationFieldType durationFieldType43 = minutes40.getFieldType();
        int int44 = minutes39.get(durationFieldType43);
        org.joda.time.Minutes minutes46 = minutes39.plus((-1));
        org.joda.time.Minutes minutes48 = minutes39.minus((int) (short) 10);
        org.joda.time.Minutes minutes50 = minutes48.dividedBy((-2147483648));
        org.joda.time.Minutes minutes51 = minutes36.plus(minutes50);
        org.joda.time.Minutes minutes52 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes54 = minutes52.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes55 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType56 = null;
        int int57 = minutes55.get(durationFieldType56);
        org.joda.time.MutablePeriod mutablePeriod58 = minutes55.toMutablePeriod();
        org.joda.time.Minutes minutes59 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes55);
        boolean boolean60 = minutes54.isLessThan(minutes59);
        org.joda.time.DurationFieldType durationFieldType61 = minutes59.getFieldType();
        boolean boolean62 = minutes51.isSupported(durationFieldType61);
        int int63 = minutes24.get(durationFieldType61);
        int int64 = minutes12.get(durationFieldType61);
        boolean boolean65 = minutes4.equals((java.lang.Object) int64);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2147483647 + "'", int3 == 2147483647);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT2147483647M" + "'", str9, "PT2147483647M");
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-2) + "'", int20 == (-2));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-2) + "'", int44 == (-2));
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-12) + "'", int63 == (-12));
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2147483647 + "'", int64 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test0715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0715");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.DurationFieldType durationFieldType3 = minutes0.getFieldType();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(minutes4);
    }

    @Test
    public void test0716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0716");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        org.joda.time.Minutes minutes5 = minutes3.plus((int) 'a');
        java.lang.String str6 = minutes5.toString();
        org.joda.time.Minutes minutes8 = minutes5.dividedBy((-12));
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT-2147483548M" + "'", str6, "PT-2147483548M");
        org.junit.Assert.assertNotNull(minutes8);
    }

    @Test
    public void test0717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0717");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = minutes0.negated();
        org.joda.time.DurationFieldType durationFieldType3 = minutes0.getFieldType();
        java.lang.String str4 = minutes0.toString();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = minutes5.get(durationFieldType6);
        org.joda.time.MutablePeriod mutablePeriod8 = minutes5.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType9 = minutes5.getFieldType();
        int int10 = minutes0.get(durationFieldType9);
        org.joda.time.Period period11 = minutes0.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            int int13 = minutes0.getValue((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT2147483647M" + "'", str4, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2147483647 + "'", int10 == 2147483647);
        org.junit.Assert.assertNotNull(period11);
    }

    @Test
    public void test0718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0718");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.DurationFieldType durationFieldType12 = minutes3.getFieldType();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType15 = minutes14.getPeriodType();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes17 = minutes16.negated();
        org.joda.time.Minutes minutes18 = minutes16.negated();
        org.joda.time.DurationFieldType durationFieldType19 = minutes16.getFieldType();
        java.lang.String str20 = minutes16.toString();
        boolean boolean21 = minutes14.isGreaterThan(minutes16);
        boolean boolean22 = minutes13.equals((java.lang.Object) minutes14);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes13);
        int int24 = minutes3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes13);
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes27 = minutes25.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType28 = minutes27.getFieldType();
        org.joda.time.Minutes minutes29 = minutes27.negated();
        org.joda.time.Minutes minutes31 = minutes27.dividedBy((int) '4');
        org.joda.time.Minutes minutes32 = minutes13.plus(minutes27);
        org.joda.time.Minutes minutes34 = minutes13.dividedBy((-12));
        org.joda.time.Duration duration35 = minutes13.toStandardDuration();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "PT2147483647M" + "'", str20, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(duration35);
    }

    @Test
    public void test0719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0719");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        java.lang.String str10 = minutes2.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int12 = minutes2.getValue(2);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT2M" + "'", str10, "PT2M");
    }

    @Test
    public void test0720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0720");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = minutes12.getFieldType();
        int int16 = minutes11.get(durationFieldType15);
        org.joda.time.Minutes minutes18 = minutes11.plus((-1));
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = minutes21.plus(0);
        int int26 = minutes19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes21);
        org.joda.time.Minutes minutes28 = minutes21.plus((int) ' ');
        java.lang.String str29 = minutes21.toString();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean32 = minutes21.isLessThan(minutes31);
        boolean boolean33 = minutes18.isLessThan(minutes21);
        org.joda.time.Minutes minutes34 = minutes2.minus(minutes18);
        int int35 = minutes18.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2M" + "'", str29, "PT2M");
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-3) + "'", int35 == (-3));
    }

    @Test
    public void test0721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0721");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes9 = minutes2.plus((-1));
        org.joda.time.Minutes minutes11 = minutes2.minus((int) (short) 10);
        org.joda.time.Minutes minutes13 = minutes11.dividedBy((-2147483648));
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod15 = minutes14.toMutablePeriod();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes17 = minutes14.plus(minutes16);
        org.joda.time.Minutes minutes18 = minutes11.minus(minutes16);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MAX_VALUE;
        int int20 = minutes19.size();
        int int22 = minutes19.getValue(0);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes19);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes25 = minutes24.negated();
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes24);
        java.lang.String str27 = minutes24.toString();
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType29 = minutes28.getFieldType();
        boolean boolean30 = minutes24.isSupported(durationFieldType29);
        int int31 = minutes23.get(durationFieldType29);
        boolean boolean32 = minutes16.isSupported(durationFieldType29);
        // The following exception was thrown during execution in test generation
        try {
            int int34 = minutes16.getValue(2147483645);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 2147483645");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2147483647 + "'", int22 == 2147483647);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "PT2147483647M" + "'", str27, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2147483647 + "'", int31 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test0722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0722");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = minutes0.negated();
        java.lang.String str3 = minutes0.toString();
        org.joda.time.Minutes minutes5 = minutes0.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes9 = minutes7.multipliedBy((int) (byte) 0);
        boolean boolean10 = minutes5.equals((java.lang.Object) minutes7);
        java.lang.String str11 = minutes5.toString();
        org.joda.time.Minutes minutes12 = null;
        org.joda.time.Minutes minutes13 = minutes5.minus(minutes12);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2147483647M" + "'", str3, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "PT214748364M" + "'", str11, "PT214748364M");
        org.junit.Assert.assertNotNull(minutes13);
    }

    @Test
    public void test0723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0723");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod8 = minutes7.toMutablePeriod();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod8);
        boolean boolean10 = minutes0.isLessThan(minutes9);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = minutes15.get(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = minutes15.getFieldType();
        int int19 = minutes14.get(durationFieldType18);
        org.joda.time.Minutes minutes21 = minutes14.plus((-1));
        boolean boolean22 = minutes11.isGreaterThan(minutes14);
        org.joda.time.Minutes minutes24 = minutes14.multipliedBy(2);
        org.joda.time.Minutes minutes25 = minutes24.negated();
        org.joda.time.Minutes minutes26 = minutes25.negated();
        boolean boolean27 = minutes0.isLessThan(minutes25);
        org.joda.time.Minutes minutes29 = minutes25.dividedBy((int) (short) 1);
        org.joda.time.Duration duration30 = minutes25.toStandardDuration();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod32 = minutes31.toMutablePeriod();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes35 = minutes33.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes37 = minutes33.plus(0);
        int int38 = minutes31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes33);
        org.joda.time.Minutes minutes40 = minutes33.plus((int) ' ');
        java.lang.String str41 = minutes33.toString();
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod43 = minutes42.toMutablePeriod();
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes46 = minutes44.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes48 = minutes44.plus(0);
        int int49 = minutes42.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes44);
        org.joda.time.Minutes minutes51 = minutes44.plus((int) ' ');
        java.lang.String str52 = minutes44.toString();
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean55 = minutes44.isLessThan(minutes54);
        org.joda.time.Minutes minutes56 = minutes33.minus(minutes44);
        java.lang.String str57 = minutes44.toString();
        org.joda.time.Minutes minutes58 = minutes25.plus(minutes44);
        // The following exception was thrown during execution in test generation
        try {
            int int60 = minutes25.getValue((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 97");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2) + "'", int19 == (-2));
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "PT2M" + "'", str41, "PT2M");
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "PT2M" + "'", str52, "PT2M");
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "PT2M" + "'", str57, "PT2M");
        org.junit.Assert.assertNotNull(minutes58);
    }

    @Test
    public void test0724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0724");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        org.joda.time.Period period4 = minutes3.toPeriod();
        int int5 = minutes3.getMinutes();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes7 = minutes3.minus(36);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: -2147483645 + -36");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-2147483645) + "'", int5 == (-2147483645));
    }

    @Test
    public void test0725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0725");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.PeriodType periodType2 = minutes0.getPeriodType();
        java.lang.String str3 = minutes0.toString();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT-2147483648M" + "'", str3, "PT-2147483648M");
    }

    @Test
    public void test0726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0726");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = minutes0.negated();
        java.lang.String str3 = minutes0.toString();
        org.joda.time.Minutes minutes5 = minutes0.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes9 = minutes7.multipliedBy((int) (byte) 0);
        boolean boolean10 = minutes5.equals((java.lang.Object) minutes7);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes13 = minutes11.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = minutes11.plus(0);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes18 = minutes16.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = minutes19.get(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType22 = minutes19.getFieldType();
        int int23 = minutes18.get(durationFieldType22);
        org.joda.time.Minutes minutes25 = minutes18.plus((-1));
        org.joda.time.Minutes minutes27 = minutes18.minus((int) (short) 10);
        org.joda.time.Minutes minutes29 = minutes27.dividedBy((-2147483648));
        org.joda.time.Minutes minutes30 = minutes15.plus(minutes29);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes33 = minutes31.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = minutes34.get(durationFieldType35);
        org.joda.time.MutablePeriod mutablePeriod37 = minutes34.toMutablePeriod();
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes34);
        boolean boolean39 = minutes33.isLessThan(minutes38);
        org.joda.time.DurationFieldType durationFieldType40 = minutes38.getFieldType();
        boolean boolean41 = minutes30.isSupported(durationFieldType40);
        org.joda.time.Minutes minutes43 = minutes30.plus((int) (short) -1);
        org.joda.time.Minutes minutes44 = minutes5.plus(minutes30);
        int int45 = minutes44.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2147483647M" + "'", str3, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-2) + "'", int23 == (-2));
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 214748366 + "'", int45 == 214748366);
    }

    @Test
    public void test0727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0727");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        org.joda.time.Minutes minutes5 = minutes3.plus((int) 'a');
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes7 = minutes6.negated();
        org.joda.time.Minutes minutes8 = minutes6.negated();
        org.joda.time.DurationFieldType durationFieldType9 = minutes6.getFieldType();
        java.lang.String str10 = minutes6.toString();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes12 = minutes11.negated();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes11);
        int int14 = minutes11.size();
        org.joda.time.MutablePeriod mutablePeriod15 = minutes11.toMutablePeriod();
        boolean boolean16 = minutes6.equals((java.lang.Object) minutes11);
        org.joda.time.DurationFieldType durationFieldType18 = minutes11.getFieldType((int) (short) 0);
        int int19 = minutes5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes11);
        org.joda.time.Period period20 = minutes5.toPeriod();
        org.joda.time.PeriodType periodType21 = minutes5.getPeriodType();
        java.lang.Class<?> wildcardClass22 = periodType21.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT2147483647M" + "'", str10, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0728");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        boolean boolean6 = minutes0.isGreaterThan(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes8 = minutes7.negated();
        org.joda.time.Minutes minutes10 = minutes8.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes10);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = minutes15.get(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = minutes15.getFieldType();
        int int19 = minutes14.get(durationFieldType18);
        int int20 = minutes11.get(durationFieldType18);
        org.joda.time.PeriodType periodType21 = minutes11.getPeriodType();
        int int22 = minutes11.getMinutes();
        boolean boolean23 = minutes0.isLessThan(minutes11);
        int int24 = minutes11.size();
        int int25 = minutes11.size();
        int int26 = minutes11.getMinutes();
        int int27 = minutes11.size();
        org.joda.time.Period period28 = minutes11.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType30 = minutes11.getFieldType((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2) + "'", int19 == (-2));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2147483647 + "'", int20 == 2147483647);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2147483647 + "'", int22 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2147483647 + "'", int26 == 2147483647);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(period28);
    }

    @Test
    public void test0729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0729");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        int int9 = minutes2.getMinutes();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean12 = minutes2.isLessThan(minutes11);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration14 = minutes13.toStandardDuration();
        org.joda.time.Duration duration15 = minutes13.toStandardDuration();
        org.joda.time.Minutes minutes17 = minutes13.minus(2);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes20 = minutes18.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes21 = minutes18.negated();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes23 = minutes22.negated();
        org.joda.time.Minutes minutes24 = minutes22.negated();
        boolean boolean25 = minutes18.equals((java.lang.Object) minutes24);
        boolean boolean26 = minutes17.isLessThan(minutes18);
        org.joda.time.Minutes minutes27 = minutes11.minus(minutes18);
        org.joda.time.Minutes minutes29 = minutes11.dividedBy((-12));
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod31 = minutes30.toMutablePeriod();
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes34 = minutes32.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes36 = minutes32.plus(0);
        int int37 = minutes30.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes32);
        org.joda.time.Minutes minutes39 = minutes32.plus((int) ' ');
        int int40 = minutes39.size();
        org.joda.time.Minutes minutes42 = minutes39.minus(0);
        org.joda.time.Minutes minutes43 = minutes42.negated();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes44 = minutes11.plus(minutes43);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: -2147483645 + -34");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-2) + "'", int9 == (-2));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes43);
    }

    @Test
    public void test0730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0730");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes9 = minutes2.plus((-1));
        org.joda.time.Minutes minutes11 = minutes2.minus((int) (short) 10);
        org.joda.time.Duration duration12 = minutes2.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod13 = minutes2.toMutablePeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
    }

    @Test
    public void test0731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0731");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.PeriodType periodType2 = minutes1.getPeriodType();
        org.joda.time.Minutes minutes3 = minutes1.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes7 = minutes5.plus(0);
        org.joda.time.DurationFieldType durationFieldType8 = minutes7.getFieldType();
        int int9 = minutes3.get(durationFieldType8);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes12 = minutes10.minus((int) (short) 1);
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy(0);
        org.joda.time.Duration duration15 = minutes12.toStandardDuration();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes17 = minutes16.negated();
        org.joda.time.DurationFieldType durationFieldType18 = minutes16.getFieldType();
        int int19 = minutes12.get(durationFieldType18);
        boolean boolean20 = minutes3.isSupported(durationFieldType18);
        java.lang.Class<?> wildcardClass21 = minutes3.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2147483647 + "'", int9 == 2147483647);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2147483646 + "'", int19 == 2147483646);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0732");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        boolean boolean6 = minutes0.isGreaterThan(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes8 = minutes7.negated();
        org.joda.time.Minutes minutes10 = minutes8.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes10);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = minutes15.get(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = minutes15.getFieldType();
        int int19 = minutes14.get(durationFieldType18);
        int int20 = minutes11.get(durationFieldType18);
        org.joda.time.PeriodType periodType21 = minutes11.getPeriodType();
        int int22 = minutes11.getMinutes();
        boolean boolean23 = minutes0.isLessThan(minutes11);
        int int24 = minutes11.getMinutes();
        org.joda.time.Period period25 = minutes11.toPeriod();
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes11);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes30 = minutes28.plus(0);
        org.joda.time.DurationFieldType durationFieldType31 = minutes30.getFieldType();
        int int32 = minutes11.get(durationFieldType31);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2) + "'", int19 == (-2));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2147483647 + "'", int20 == 2147483647);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2147483647 + "'", int22 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2147483647 + "'", int24 == 2147483647);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2147483647 + "'", int32 == 2147483647);
    }

    @Test
    public void test0733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0733");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType3 = minutes2.getFieldType();
        org.joda.time.Minutes minutes4 = minutes2.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes6 = minutes5.negated();
        org.joda.time.Minutes minutes7 = minutes5.negated();
        java.lang.String str8 = minutes5.toString();
        int int9 = minutes5.size();
        org.joda.time.Minutes minutes11 = minutes5.minus(0);
        org.joda.time.Minutes minutes13 = minutes5.plus((int) (short) 0);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes5);
        boolean boolean15 = minutes4.isLessThan(minutes5);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes18 = minutes16.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes20 = minutes16.plus(0);
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MIN_VALUE;
        boolean boolean22 = minutes16.isGreaterThan(minutes21);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes24 = minutes23.negated();
        org.joda.time.Minutes minutes26 = minutes24.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes26);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes30 = minutes28.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = minutes31.get(durationFieldType32);
        org.joda.time.DurationFieldType durationFieldType34 = minutes31.getFieldType();
        int int35 = minutes30.get(durationFieldType34);
        int int36 = minutes27.get(durationFieldType34);
        org.joda.time.PeriodType periodType37 = minutes27.getPeriodType();
        int int38 = minutes27.getMinutes();
        boolean boolean39 = minutes16.isLessThan(minutes27);
        int int40 = minutes27.getMinutes();
        org.joda.time.Period period41 = minutes27.toPeriod();
        boolean boolean42 = minutes4.equals((java.lang.Object) minutes27);
        org.joda.time.Minutes minutes43 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes44 = minutes43.negated();
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes43);
        java.lang.String str46 = minutes43.toString();
        org.joda.time.Minutes minutes47 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType48 = minutes47.getFieldType();
        boolean boolean49 = minutes43.isSupported(durationFieldType48);
        org.joda.time.Minutes minutes50 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes43);
        org.joda.time.MutablePeriod mutablePeriod51 = minutes50.toMutablePeriod();
        boolean boolean52 = minutes27.isGreaterThan(minutes50);
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.parseMinutes("PT2M");
        org.joda.time.Minutes minutes56 = minutes54.minus(0);
        java.lang.String str57 = minutes56.toString();
        boolean boolean58 = minutes27.equals((java.lang.Object) minutes56);
        org.joda.time.Period period59 = minutes56.toPeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "PT2147483647M" + "'", str8, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-2) + "'", int35 == (-2));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2147483647 + "'", int36 == 2147483647);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2147483647 + "'", int38 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2147483647 + "'", int40 == 2147483647);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "PT2147483647M" + "'", str46, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "PT2M" + "'", str57, "PT2M");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(period59);
    }

    @Test
    public void test0734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0734");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod3 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes5 = minutes2.plus(minutes4);
        int int6 = minutes1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes4);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MAX_VALUE;
        int int8 = minutes1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes7);
        org.joda.time.Period period9 = minutes1.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes11 = minutes1.plus((-41297760));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: -2147483647 + -41297760");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(period9);
    }

    @Test
    public void test0735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0735");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = minutes0.negated();
        org.joda.time.DurationFieldType durationFieldType3 = minutes0.getFieldType();
        java.lang.String str4 = minutes0.toString();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes6 = minutes5.negated();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes5);
        int int8 = minutes5.size();
        org.joda.time.MutablePeriod mutablePeriod9 = minutes5.toMutablePeriod();
        boolean boolean10 = minutes0.equals((java.lang.Object) minutes5);
        org.joda.time.DurationFieldType durationFieldType12 = minutes5.getFieldType((int) (short) 0);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod14 = minutes13.toMutablePeriod();
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes17 = minutes15.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes19 = minutes15.plus(0);
        int int20 = minutes13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes15);
        org.joda.time.Minutes minutes22 = minutes15.plus((int) ' ');
        java.lang.String str23 = minutes15.toString();
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean26 = minutes15.isLessThan(minutes25);
        org.joda.time.Period period27 = minutes25.toPeriod();
        boolean boolean28 = minutes5.isGreaterThan(minutes25);
        org.joda.time.Period period29 = minutes5.toPeriod();
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) period29);
        org.joda.time.Minutes minutes31 = minutes30.negated();
        org.joda.time.DurationFieldType durationFieldType32 = minutes31.getFieldType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT2147483647M" + "'", str4, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT2M" + "'", str23, "PT2M");
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(durationFieldType32);
    }

    @Test
    public void test0736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0736");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        int int1 = minutes0.size();
        int int3 = minutes0.getValue(0);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        org.joda.time.Minutes minutes14 = minutes7.plus((-1));
        org.joda.time.Minutes minutes16 = minutes7.minus((int) (short) 10);
        org.joda.time.Duration duration17 = minutes7.toStandardDuration();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes19 = minutes18.negated();
        org.joda.time.Minutes minutes20 = minutes18.negated();
        java.lang.String str21 = minutes18.toString();
        org.joda.time.Minutes minutes23 = minutes18.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes27 = minutes25.multipliedBy((int) (byte) 0);
        boolean boolean28 = minutes23.equals((java.lang.Object) minutes25);
        boolean boolean29 = minutes7.isGreaterThan(minutes25);
        boolean boolean30 = minutes4.equals((java.lang.Object) boolean29);
        org.joda.time.Minutes minutes31 = minutes4.negated();
        org.joda.time.Minutes minutes32 = minutes4.negated();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes35 = minutes33.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType37 = null;
        int int38 = minutes36.get(durationFieldType37);
        org.joda.time.DurationFieldType durationFieldType39 = minutes36.getFieldType();
        int int40 = minutes35.get(durationFieldType39);
        org.joda.time.Minutes minutes42 = minutes35.plus((-1));
        org.joda.time.Minutes minutes44 = minutes35.minus((int) (short) 10);
        org.joda.time.Minutes minutes46 = minutes44.dividedBy((-2147483648));
        boolean boolean47 = minutes32.equals((java.lang.Object) (-2147483648));
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2147483647 + "'", int3 == 2147483647);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT2147483647M" + "'", str21, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-2) + "'", int40 == (-2));
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test0737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0737");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod5 = minutes4.toMutablePeriod();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes7 = minutes4.plus(minutes6);
        boolean boolean8 = minutes3.isLessThan(minutes4);
        org.joda.time.PeriodType periodType9 = minutes3.getPeriodType();
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = minutes13.get(durationFieldType14);
        org.joda.time.MutablePeriod mutablePeriod16 = minutes13.toMutablePeriod();
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes13);
        boolean boolean18 = minutes12.isLessThan(minutes17);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes21 = minutes19.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType23 = null;
        int int24 = minutes22.get(durationFieldType23);
        org.joda.time.DurationFieldType durationFieldType25 = minutes22.getFieldType();
        int int26 = minutes21.get(durationFieldType25);
        org.joda.time.Minutes minutes28 = minutes21.plus((-1));
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod30 = minutes29.toMutablePeriod();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes33 = minutes31.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes35 = minutes31.plus(0);
        int int36 = minutes29.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes31);
        org.joda.time.Minutes minutes38 = minutes31.plus((int) ' ');
        java.lang.String str39 = minutes31.toString();
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean42 = minutes31.isLessThan(minutes41);
        boolean boolean43 = minutes28.isLessThan(minutes31);
        org.joda.time.Minutes minutes44 = minutes12.minus(minutes28);
        org.joda.time.MutablePeriod mutablePeriod45 = minutes12.toMutablePeriod();
        org.joda.time.Minutes minutes47 = minutes12.dividedBy(2);
        org.joda.time.Minutes minutes48 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes50 = minutes48.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType52 = null;
        int int53 = minutes51.get(durationFieldType52);
        org.joda.time.DurationFieldType durationFieldType54 = minutes51.getFieldType();
        int int55 = minutes50.get(durationFieldType54);
        org.joda.time.Minutes minutes57 = minutes50.plus((-1));
        org.joda.time.Minutes minutes58 = minutes57.negated();
        org.joda.time.Minutes minutes59 = minutes47.plus(minutes58);
        org.joda.time.Minutes minutes61 = minutes47.minus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType62 = minutes61.getFieldType();
        org.joda.time.Minutes minutes63 = minutes3.plus(minutes61);
        org.joda.time.Minutes minutes64 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod65 = minutes64.toMutablePeriod();
        org.joda.time.Minutes minutes66 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes67 = minutes64.plus(minutes66);
        org.joda.time.Minutes minutes68 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod69 = minutes68.toMutablePeriod();
        org.joda.time.Minutes minutes70 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes71 = minutes68.plus(minutes70);
        boolean boolean72 = minutes67.isLessThan(minutes68);
        java.lang.String str73 = minutes67.toString();
        boolean boolean74 = minutes3.isLessThan(minutes67);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-2) + "'", int26 == (-2));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "PT2M" + "'", str39, "PT2M");
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(mutablePeriod45);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-2) + "'", int55 == (-2));
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(mutablePeriod65);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(mutablePeriod69);
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "PT-2147483645M" + "'", str73, "PT-2147483645M");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test0738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0738");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType1 = minutes0.getPeriodType();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes3 = minutes2.negated();
        org.joda.time.Minutes minutes4 = minutes2.negated();
        org.joda.time.DurationFieldType durationFieldType5 = minutes2.getFieldType();
        java.lang.String str6 = minutes2.toString();
        boolean boolean7 = minutes0.isGreaterThan(minutes2);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes9 = minutes8.negated();
        org.joda.time.Minutes minutes10 = minutes8.negated();
        java.lang.String str11 = minutes8.toString();
        int int12 = minutes8.size();
        org.joda.time.Period period13 = minutes8.toPeriod();
        org.joda.time.Minutes minutes14 = minutes2.minus(minutes8);
        // The following exception was thrown during execution in test generation
        try {
            int int16 = minutes2.getValue((-2147483645));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -2147483645");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT2147483647M" + "'", str6, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "PT2147483647M" + "'", str11, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(minutes14);
    }

    @Test
    public void test0739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0739");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod5 = minutes4.toMutablePeriod();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes7 = minutes4.plus(minutes6);
        boolean boolean8 = minutes3.isLessThan(minutes4);
        org.joda.time.PeriodType periodType9 = minutes3.getPeriodType();
        org.joda.time.Minutes minutes11 = minutes3.dividedBy(3);
        org.joda.time.Minutes minutes13 = minutes11.dividedBy(10);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod15 = minutes14.toMutablePeriod();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes18 = minutes16.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes20 = minutes16.plus(0);
        int int21 = minutes14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes16);
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes24 = minutes22.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes26 = minutes22.plus(0);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes29 = minutes27.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = minutes30.get(durationFieldType31);
        org.joda.time.DurationFieldType durationFieldType33 = minutes30.getFieldType();
        int int34 = minutes29.get(durationFieldType33);
        org.joda.time.Minutes minutes36 = minutes29.plus((-1));
        org.joda.time.Minutes minutes38 = minutes29.minus((int) (short) 10);
        org.joda.time.Minutes minutes40 = minutes38.dividedBy((-2147483648));
        org.joda.time.Minutes minutes41 = minutes26.plus(minutes40);
        org.joda.time.Minutes minutes42 = minutes16.minus(minutes26);
        org.joda.time.Minutes minutes43 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod44 = minutes43.toMutablePeriod();
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes46 = minutes43.plus(minutes45);
        org.joda.time.Minutes minutes47 = minutes42.plus(minutes45);
        org.joda.time.Minutes minutes48 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes50 = minutes48.multipliedBy((int) (short) -1);
        org.joda.time.MutablePeriod mutablePeriod51 = minutes48.toMutablePeriod();
        org.joda.time.Minutes minutes52 = minutes45.minus(minutes48);
        org.joda.time.Minutes minutes53 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes55 = minutes53.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes56 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType57 = null;
        int int58 = minutes56.get(durationFieldType57);
        org.joda.time.DurationFieldType durationFieldType59 = minutes56.getFieldType();
        int int60 = minutes55.get(durationFieldType59);
        org.joda.time.Minutes minutes62 = minutes55.plus((-1));
        org.joda.time.Minutes minutes64 = minutes55.minus((int) (short) 10);
        org.joda.time.Minutes minutes66 = minutes64.dividedBy((-2147483648));
        org.joda.time.Minutes minutes67 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes64);
        java.lang.Class<?> wildcardClass68 = minutes64.getClass();
        boolean boolean69 = minutes45.equals((java.lang.Object) minutes64);
        boolean boolean70 = minutes13.equals((java.lang.Object) minutes45);
        org.joda.time.Minutes minutes71 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType72 = null;
        int int73 = minutes71.get(durationFieldType72);
        org.joda.time.DurationFieldType durationFieldType74 = minutes71.getFieldType();
        boolean boolean75 = minutes13.isSupported(durationFieldType74);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds76 = minutes13.toStandardSeconds();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: -71582788 * 60");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-2) + "'", int34 == (-2));
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(mutablePeriod44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-2) + "'", int60 == (-2));
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(durationFieldType74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test0740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0740");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT2M");
        org.joda.time.Minutes minutes3 = minutes1.minus(0);
        java.lang.String str4 = minutes1.toString();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT2M" + "'", str4, "PT2M");
    }

    @Test
    public void test0741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0741");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes8 = minutes2.negated();
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy(2);
        java.lang.Class<?> wildcardClass11 = minutes8.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0742");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.THREE;
        int int1 = minutes0.size();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod3 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = minutes4.plus(0);
        int int9 = minutes2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes4);
        org.joda.time.Minutes minutes11 = minutes4.plus((int) ' ');
        int int12 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes11);
        org.joda.time.Minutes minutes14 = minutes11.minus((int) (byte) 0);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes17 = minutes15.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType19 = null;
        int int20 = minutes18.get(durationFieldType19);
        org.joda.time.MutablePeriod mutablePeriod21 = minutes18.toMutablePeriod();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes18);
        boolean boolean23 = minutes17.isLessThan(minutes22);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes24 = minutes14.minus(minutes22);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Integer.MIN_VALUE cannot be negated");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0743");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.ZERO;
        org.joda.time.PeriodType periodType1 = minutes0.getPeriodType();
        org.joda.time.Weeks weeks2 = minutes0.toStandardWeeks();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(weeks2);
    }

    @Test
    public void test0744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0744");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.dividedBy(2);
        int int3 = minutes0.size();
        org.joda.time.Minutes minutes5 = minutes0.minus((-12));
        org.joda.time.Minutes minutes7 = minutes5.dividedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = minutes8.plus(0);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = minutes16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = minutes16.getFieldType();
        int int20 = minutes15.get(durationFieldType19);
        org.joda.time.Minutes minutes22 = minutes15.plus((-1));
        org.joda.time.Minutes minutes24 = minutes15.minus((int) (short) 10);
        org.joda.time.Minutes minutes26 = minutes24.dividedBy((-2147483648));
        org.joda.time.Minutes minutes27 = minutes12.plus(minutes26);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType29 = minutes28.getPeriodType();
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes31 = minutes30.negated();
        org.joda.time.Minutes minutes32 = minutes30.negated();
        org.joda.time.DurationFieldType durationFieldType33 = minutes30.getFieldType();
        java.lang.String str34 = minutes30.toString();
        boolean boolean35 = minutes28.isGreaterThan(minutes30);
        boolean boolean36 = minutes12.isLessThan(minutes30);
        org.joda.time.PeriodType periodType37 = minutes30.getPeriodType();
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes41 = minutes39.plus(0);
        org.joda.time.DurationFieldType durationFieldType42 = minutes41.getFieldType();
        boolean boolean43 = minutes30.isSupported(durationFieldType42);
        org.joda.time.Duration duration44 = minutes30.toStandardDuration();
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType46 = minutes45.getPeriodType();
        org.joda.time.Minutes minutes47 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes48 = minutes47.negated();
        org.joda.time.Minutes minutes49 = minutes47.negated();
        org.joda.time.DurationFieldType durationFieldType50 = minutes47.getFieldType();
        java.lang.String str51 = minutes47.toString();
        boolean boolean52 = minutes45.isGreaterThan(minutes47);
        org.joda.time.Minutes minutes53 = minutes47.negated();
        boolean boolean54 = minutes30.isGreaterThan(minutes53);
        org.joda.time.Minutes minutes56 = minutes53.plus((int) (short) -1);
        int int57 = minutes7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes56);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-2) + "'", int20 == (-2));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "PT2147483647M" + "'", str34, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "PT2147483647M" + "'", str51, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
    }

    @Test
    public void test0745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0745");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.Duration duration2 = minutes0.toStandardDuration();
        org.joda.time.Minutes minutes4 = minutes0.minus(2);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = minutes5.negated();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes10 = minutes9.negated();
        org.joda.time.Minutes minutes11 = minutes9.negated();
        boolean boolean12 = minutes5.equals((java.lang.Object) minutes11);
        boolean boolean13 = minutes4.isLessThan(minutes5);
        int int14 = minutes5.size();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
    }

    @Test
    public void test0746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0746");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        java.lang.String str10 = minutes2.toString();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod12 = minutes11.toMutablePeriod();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes17 = minutes13.plus(0);
        int int18 = minutes11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes13);
        org.joda.time.Minutes minutes20 = minutes13.plus((int) ' ');
        java.lang.String str21 = minutes13.toString();
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean24 = minutes13.isLessThan(minutes23);
        org.joda.time.Minutes minutes25 = minutes2.minus(minutes13);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes28 = minutes26.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes31 = minutes29.minus((int) (short) 1);
        org.joda.time.Minutes minutes33 = minutes31.multipliedBy(0);
        org.joda.time.Minutes minutes35 = minutes33.plus((-2147483648));
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes37 = minutes36.negated();
        org.joda.time.Minutes minutes38 = minutes36.negated();
        boolean boolean39 = minutes35.isGreaterThan(minutes38);
        int int40 = minutes26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes35);
        org.joda.time.MutablePeriod mutablePeriod41 = minutes35.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType42 = minutes35.getFieldType();
        boolean boolean43 = minutes13.isSupported(durationFieldType42);
        java.lang.String str44 = minutes13.toString();
        int int45 = minutes13.getMinutes();
        org.joda.time.Minutes minutes47 = minutes13.plus((-214748364));
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT2M" + "'", str10, "PT2M");
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT2M" + "'", str21, "PT2M");
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "PT2M" + "'", str44, "PT2M");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertNotNull(minutes47);
    }

    @Test
    public void test0747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0747");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        java.lang.String str3 = minutes0.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType5 = minutes0.getFieldType((-4));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -4");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2147483647M" + "'", str3, "PT2147483647M");
    }

    @Test
    public void test0748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0748");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes3 = minutes1.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        int int13 = minutes4.get(durationFieldType11);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds14 = minutes4.toStandardSeconds();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 2147483647 * 60");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2147483647 + "'", int13 == 2147483647);
    }

    @Test
    public void test0749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0749");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = minutes0.get(durationFieldType1);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType4 = minutes0.getFieldType();
        org.joda.time.Minutes minutes6 = minutes0.dividedBy((-1));
        org.joda.time.Minutes minutes8 = minutes0.dividedBy(2147483646);
        org.joda.time.Period period9 = minutes8.toPeriod();
        java.lang.Class<?> wildcardClass10 = minutes8.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0750");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = minutes8.plus(0);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = minutes16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = minutes16.getFieldType();
        int int20 = minutes15.get(durationFieldType19);
        org.joda.time.Minutes minutes22 = minutes15.plus((-1));
        org.joda.time.Minutes minutes24 = minutes15.minus((int) (short) 10);
        org.joda.time.Minutes minutes26 = minutes24.dividedBy((-2147483648));
        org.joda.time.Minutes minutes27 = minutes12.plus(minutes26);
        org.joda.time.Minutes minutes28 = minutes2.minus(minutes12);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod30 = minutes29.toMutablePeriod();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes32 = minutes29.plus(minutes31);
        org.joda.time.Minutes minutes33 = minutes28.plus(minutes31);
        org.joda.time.Duration duration34 = minutes28.toStandardDuration();
        // The following exception was thrown during execution in test generation
        try {
            int int36 = minutes28.getValue((-2));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-2) + "'", int20 == (-2));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(duration34);
    }

    @Test
    public void test0751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0751");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.minus((int) (short) 1);
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy(0);
        org.joda.time.Period period5 = minutes2.toPeriod();
        org.joda.time.PeriodType periodType6 = minutes2.getPeriodType();
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod10 = minutes9.toMutablePeriod();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes13 = minutes11.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = minutes11.plus(0);
        int int16 = minutes9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes11);
        org.joda.time.Minutes minutes18 = minutes11.plus((int) ' ');
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType20 = minutes19.getFieldType();
        int int21 = minutes11.get(durationFieldType20);
        boolean boolean22 = minutes8.isSupported(durationFieldType20);
        boolean boolean23 = minutes2.isSupported(durationFieldType20);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes26 = minutes24.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = minutes27.get(durationFieldType28);
        org.joda.time.MutablePeriod mutablePeriod30 = minutes27.toMutablePeriod();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes27);
        boolean boolean32 = minutes26.isLessThan(minutes31);
        int int33 = minutes26.getMinutes();
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean36 = minutes26.isLessThan(minutes35);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes26);
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes40 = minutes38.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes41 = minutes38.negated();
        org.joda.time.Minutes minutes43 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes44 = minutes38.minus(minutes43);
        boolean boolean45 = minutes26.isLessThan(minutes38);
        org.joda.time.Minutes minutes47 = minutes38.plus((int) (short) 10);
        org.joda.time.Minutes minutes48 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes50 = minutes48.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType52 = null;
        int int53 = minutes51.get(durationFieldType52);
        org.joda.time.MutablePeriod mutablePeriod54 = minutes51.toMutablePeriod();
        org.joda.time.Minutes minutes55 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes51);
        boolean boolean56 = minutes50.isLessThan(minutes55);
        org.joda.time.Minutes minutes57 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes59 = minutes57.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes60 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType61 = null;
        int int62 = minutes60.get(durationFieldType61);
        org.joda.time.DurationFieldType durationFieldType63 = minutes60.getFieldType();
        int int64 = minutes59.get(durationFieldType63);
        org.joda.time.Minutes minutes66 = minutes59.plus((-1));
        org.joda.time.Minutes minutes67 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod68 = minutes67.toMutablePeriod();
        org.joda.time.Minutes minutes69 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes71 = minutes69.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes73 = minutes69.plus(0);
        int int74 = minutes67.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes69);
        org.joda.time.Minutes minutes76 = minutes69.plus((int) ' ');
        java.lang.String str77 = minutes69.toString();
        org.joda.time.Minutes minutes79 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean80 = minutes69.isLessThan(minutes79);
        boolean boolean81 = minutes66.isLessThan(minutes69);
        org.joda.time.Minutes minutes82 = minutes50.minus(minutes66);
        org.joda.time.Minutes minutes83 = minutes47.plus(minutes82);
        boolean boolean84 = minutes2.isGreaterThan(minutes47);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-2) + "'", int33 == (-2));
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-2) + "'", int64 == (-2));
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(mutablePeriod68);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertNotNull(minutes73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(minutes76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "PT2M" + "'", str77, "PT2M");
        org.junit.Assert.assertNotNull(minutes79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(minutes82);
        org.junit.Assert.assertNotNull(minutes83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test0752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0752");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = minutes0.get(durationFieldType1);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType4 = minutes0.getFieldType();
        org.joda.time.Minutes minutes6 = minutes0.dividedBy((-1));
        org.joda.time.Minutes minutes8 = minutes0.dividedBy(2147483646);
        org.joda.time.Minutes minutes10 = minutes0.dividedBy((-3));
        org.joda.time.Minutes minutes12 = minutes10.dividedBy(2147483647);
        int int14 = minutes12.getValue(0);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test0753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0753");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.minus((int) (short) 1);
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy(0);
        org.joda.time.Duration duration5 = minutes2.toStandardDuration();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.MAX_VALUE;
        int int7 = minutes6.size();
        int int9 = minutes6.getValue(0);
        org.joda.time.Minutes minutes10 = minutes6.negated();
        org.joda.time.DurationFieldType durationFieldType12 = minutes6.getFieldType(0);
        boolean boolean13 = minutes2.equals((java.lang.Object) 0);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes16 = minutes14.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = minutes17.get(durationFieldType18);
        org.joda.time.MutablePeriod mutablePeriod20 = minutes17.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes17);
        boolean boolean22 = minutes16.isLessThan(minutes21);
        int int23 = minutes16.getMinutes();
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean26 = minutes16.isLessThan(minutes25);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes16);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes30 = minutes28.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes31 = minutes28.negated();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes34 = minutes28.minus(minutes33);
        boolean boolean35 = minutes16.isLessThan(minutes28);
        boolean boolean36 = minutes2.isLessThan(minutes16);
        org.joda.time.DurationFieldType durationFieldType37 = minutes2.getFieldType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2147483647 + "'", int9 == 2147483647);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-2) + "'", int23 == (-2));
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(durationFieldType37);
    }

    @Test
    public void test0754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0754");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = minutes12.getFieldType();
        int int16 = minutes11.get(durationFieldType15);
        org.joda.time.Minutes minutes18 = minutes11.plus((-1));
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = minutes21.plus(0);
        int int26 = minutes19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes21);
        org.joda.time.Minutes minutes28 = minutes21.plus((int) ' ');
        java.lang.String str29 = minutes21.toString();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean32 = minutes21.isLessThan(minutes31);
        boolean boolean33 = minutes18.isLessThan(minutes21);
        org.joda.time.Minutes minutes34 = minutes2.minus(minutes18);
        org.joda.time.MutablePeriod mutablePeriod35 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod37 = minutes36.toMutablePeriod();
        boolean boolean38 = minutes2.isLessThan(minutes36);
        java.lang.Class<?> wildcardClass39 = minutes36.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2M" + "'", str29, "PT2M");
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0755");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod8 = minutes7.toMutablePeriod();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod8);
        boolean boolean10 = minutes0.isLessThan(minutes9);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes11 = minutes9.negated();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Integer.MIN_VALUE cannot be negated");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0756");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = minutes7.get(durationFieldType8);
        org.joda.time.MutablePeriod mutablePeriod10 = minutes7.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType11 = minutes7.getFieldType();
        org.joda.time.Minutes minutes13 = minutes7.dividedBy((-1));
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MAX_VALUE;
        int int15 = minutes14.size();
        org.joda.time.Minutes minutes16 = minutes7.plus(minutes14);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes19 = minutes17.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = minutes20.get(durationFieldType21);
        org.joda.time.DurationFieldType durationFieldType23 = minutes20.getFieldType();
        int int24 = minutes19.get(durationFieldType23);
        int int25 = minutes7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes19);
        int int26 = minutes6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes7);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes30 = minutes28.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = minutes31.get(durationFieldType32);
        org.joda.time.DurationFieldType durationFieldType34 = minutes31.getFieldType();
        int int35 = minutes30.get(durationFieldType34);
        org.joda.time.Minutes minutes37 = minutes30.plus((-1));
        boolean boolean38 = minutes27.isGreaterThan(minutes30);
        org.joda.time.Minutes minutes40 = minutes30.multipliedBy(2);
        org.joda.time.Minutes minutes41 = minutes40.negated();
        int int42 = minutes40.getMinutes();
        boolean boolean43 = minutes6.equals((java.lang.Object) int42);
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes6);
        org.joda.time.Minutes minutes45 = minutes6.negated();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-2) + "'", int24 == (-2));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-2) + "'", int35 == (-2));
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-4) + "'", int42 == (-4));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
    }

    @Test
    public void test0757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0757");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        java.lang.String str10 = minutes2.toString();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod12 = minutes11.toMutablePeriod();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes17 = minutes13.plus(0);
        int int18 = minutes11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes13);
        org.joda.time.Minutes minutes20 = minutes13.plus((int) ' ');
        java.lang.String str21 = minutes13.toString();
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean24 = minutes13.isLessThan(minutes23);
        org.joda.time.Minutes minutes25 = minutes2.minus(minutes13);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes27 = minutes26.negated();
        org.joda.time.DurationFieldType durationFieldType28 = minutes26.getFieldType();
        org.joda.time.DurationFieldType durationFieldType29 = minutes26.getFieldType();
        boolean boolean30 = minutes2.isSupported(durationFieldType29);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = minutes31.get(durationFieldType32);
        org.joda.time.MutablePeriod mutablePeriod34 = minutes31.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType35 = minutes31.getFieldType();
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration37 = minutes36.toStandardDuration();
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes36);
        boolean boolean39 = minutes31.isGreaterThan(minutes36);
        org.joda.time.Minutes minutes40 = minutes2.plus(minutes36);
        org.joda.time.Minutes minutes42 = minutes2.plus(100);
        org.joda.time.Minutes minutes43 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes45 = minutes43.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = minutes46.get(durationFieldType47);
        org.joda.time.MutablePeriod mutablePeriod49 = minutes46.toMutablePeriod();
        org.joda.time.Minutes minutes50 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes46);
        boolean boolean51 = minutes45.isLessThan(minutes50);
        int int52 = minutes45.getMinutes();
        org.joda.time.Minutes minutes53 = minutes2.minus(minutes45);
        org.joda.time.Minutes minutes55 = minutes53.dividedBy((int) (byte) -1);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT2M" + "'", str10, "PT2M");
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT2M" + "'", str21, "PT2M");
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod49);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-2) + "'", int52 == (-2));
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes55);
    }

    @Test
    public void test0758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0758");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        int int8 = minutes2.getMinutes();
        int int9 = minutes2.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-2) + "'", int9 == (-2));
    }

    @Test
    public void test0759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0759");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.minus((int) (short) 1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod4 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes9 = minutes5.plus(0);
        int int10 = minutes3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes5);
        org.joda.time.Minutes minutes12 = minutes5.plus((int) ' ');
        org.joda.time.Period period13 = minutes5.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod14 = minutes5.toMutablePeriod();
        int int15 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes5);
        int int16 = minutes5.getMinutes();
        org.joda.time.Minutes minutes17 = null;
        org.joda.time.Minutes minutes18 = minutes5.minus(minutes17);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes20 = minutes19.negated();
        org.joda.time.Minutes minutes21 = minutes19.negated();
        org.joda.time.DurationFieldType durationFieldType22 = minutes19.getFieldType();
        java.lang.String str23 = minutes19.toString();
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = minutes24.get(durationFieldType25);
        org.joda.time.MutablePeriod mutablePeriod27 = minutes24.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType28 = minutes24.getFieldType();
        int int29 = minutes19.get(durationFieldType28);
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.MAX_VALUE;
        boolean boolean31 = minutes19.isLessThan(minutes30);
        org.joda.time.Minutes minutes32 = null;
        org.joda.time.Minutes minutes33 = minutes30.plus(minutes32);
        org.joda.time.Minutes minutes35 = minutes33.dividedBy((int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes36 = minutes18.plus(minutes33);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 2 + 2147483647");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT2147483647M" + "'", str23, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2147483647 + "'", int29 == 2147483647);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
    }

    @Test
    public void test0760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0760");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType3 = minutes2.getFieldType();
        org.joda.time.Period period4 = minutes2.toPeriod();
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes6);
    }

    @Test
    public void test0761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0761");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.minus((int) (short) 0);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = minutes7.get(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType10 = minutes7.getFieldType();
        int int11 = minutes6.get(durationFieldType10);
        org.joda.time.Minutes minutes13 = minutes6.plus((-1));
        boolean boolean14 = minutes3.isGreaterThan(minutes6);
        org.joda.time.DurationFieldType durationFieldType15 = minutes6.getFieldType();
        org.joda.time.PeriodType periodType16 = minutes6.getPeriodType();
        boolean boolean17 = minutes0.isLessThan(minutes6);
        org.joda.time.Minutes minutes19 = minutes6.dividedBy((int) 'a');
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes21 = minutes20.negated();
        org.joda.time.Minutes minutes22 = minutes20.negated();
        org.joda.time.DurationFieldType durationFieldType23 = minutes20.getFieldType();
        java.lang.String str24 = minutes20.toString();
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes26 = minutes25.negated();
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes25);
        int int28 = minutes25.size();
        org.joda.time.MutablePeriod mutablePeriod29 = minutes25.toMutablePeriod();
        boolean boolean30 = minutes20.equals((java.lang.Object) minutes25);
        org.joda.time.DurationFieldType durationFieldType32 = minutes25.getFieldType((int) (short) 0);
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod34 = minutes33.toMutablePeriod();
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes37 = minutes35.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes39 = minutes35.plus(0);
        int int40 = minutes33.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes35);
        org.joda.time.Minutes minutes42 = minutes35.plus((int) ' ');
        java.lang.String str43 = minutes35.toString();
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean46 = minutes35.isLessThan(minutes45);
        org.joda.time.Period period47 = minutes45.toPeriod();
        boolean boolean48 = minutes25.isGreaterThan(minutes45);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes49 = minutes6.minus(minutes25);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: -2 + -2147483647");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-2) + "'", int11 == (-2));
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "PT2147483647M" + "'", str24, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "PT2M" + "'", str43, "PT2M");
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test0762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0762");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType2 = minutes1.getPeriodType();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes4 = minutes3.negated();
        org.joda.time.Minutes minutes5 = minutes3.negated();
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        java.lang.String str7 = minutes3.toString();
        boolean boolean8 = minutes1.isGreaterThan(minutes3);
        boolean boolean9 = minutes0.equals((java.lang.Object) minutes1);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes12 = minutes10.minus((int) (short) 1);
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy(0);
        boolean boolean15 = minutes0.isGreaterThan(minutes14);
        org.joda.time.DurationFieldType durationFieldType16 = minutes0.getFieldType();
        org.joda.time.Minutes minutes17 = minutes0.negated();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT2147483647M" + "'", str7, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(minutes17);
    }

    @Test
    public void test0763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0763");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType3 = minutes2.getFieldType();
        org.joda.time.Minutes minutes4 = minutes2.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes6 = minutes5.negated();
        org.joda.time.Minutes minutes7 = minutes5.negated();
        java.lang.String str8 = minutes5.toString();
        int int9 = minutes5.size();
        org.joda.time.Minutes minutes11 = minutes5.minus(0);
        org.joda.time.Minutes minutes13 = minutes5.plus((int) (short) 0);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes5);
        boolean boolean15 = minutes4.isLessThan(minutes5);
        org.joda.time.PeriodType periodType16 = minutes4.getPeriodType();
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod18 = minutes17.toMutablePeriod();
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes21 = minutes19.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes23 = minutes19.plus(0);
        int int24 = minutes17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes19);
        org.joda.time.Minutes minutes26 = minutes19.plus((int) ' ');
        java.lang.String str27 = minutes19.toString();
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean30 = minutes19.isLessThan(minutes29);
        org.joda.time.Duration duration31 = minutes19.toStandardDuration();
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes34 = minutes32.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType36 = null;
        int int37 = minutes35.get(durationFieldType36);
        org.joda.time.MutablePeriod mutablePeriod38 = minutes35.toMutablePeriod();
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes35);
        boolean boolean40 = minutes34.isLessThan(minutes39);
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes43 = minutes41.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = minutes44.get(durationFieldType45);
        org.joda.time.DurationFieldType durationFieldType47 = minutes44.getFieldType();
        int int48 = minutes43.get(durationFieldType47);
        org.joda.time.Minutes minutes50 = minutes43.plus((-1));
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod52 = minutes51.toMutablePeriod();
        org.joda.time.Minutes minutes53 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes55 = minutes53.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes57 = minutes53.plus(0);
        int int58 = minutes51.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes53);
        org.joda.time.Minutes minutes60 = minutes53.plus((int) ' ');
        java.lang.String str61 = minutes53.toString();
        org.joda.time.Minutes minutes63 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean64 = minutes53.isLessThan(minutes63);
        boolean boolean65 = minutes50.isLessThan(minutes53);
        org.joda.time.Minutes minutes66 = minutes34.minus(minutes50);
        org.joda.time.MutablePeriod mutablePeriod67 = minutes34.toMutablePeriod();
        org.joda.time.Minutes minutes68 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod69 = minutes68.toMutablePeriod();
        boolean boolean70 = minutes34.isLessThan(minutes68);
        org.joda.time.Minutes minutes72 = minutes34.plus((int) ' ');
        org.joda.time.DurationFieldType durationFieldType73 = minutes72.getFieldType();
        org.joda.time.Minutes minutes74 = minutes19.plus(minutes72);
        boolean boolean75 = minutes4.isGreaterThan(minutes74);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "PT2147483647M" + "'", str8, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "PT2M" + "'", str27, "PT2M");
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-2) + "'", int48 == (-2));
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(mutablePeriod52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "PT2M" + "'", str61, "PT2M");
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(mutablePeriod67);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(mutablePeriod69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertNotNull(durationFieldType73);
        org.junit.Assert.assertNotNull(minutes74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test0764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0764");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = minutes15.get(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = minutes15.getFieldType();
        int int19 = minutes14.get(durationFieldType18);
        boolean boolean20 = minutes3.isSupported(durationFieldType18);
        org.joda.time.Minutes minutes22 = minutes3.dividedBy((-2));
        org.joda.time.Minutes minutes24 = minutes22.multipliedBy((-22139006));
        org.joda.time.MutablePeriod mutablePeriod25 = minutes24.toMutablePeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2) + "'", int19 == (-2));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
    }

    @Test
    public void test0765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0765");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes5 = minutes3.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes3.negated();
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes9 = minutes3.minus(minutes8);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod11 = minutes10.toMutablePeriod();
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod11);
        boolean boolean13 = minutes3.isLessThan(minutes12);
        org.joda.time.Period period14 = minutes12.toPeriod();
        int int15 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes12);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes12);
        org.joda.time.Minutes minutes18 = minutes16.dividedBy((int) ' ');
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
    }

    @Test
    public void test0766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0766");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        java.lang.String str3 = minutes0.toString();
        org.joda.time.PeriodType periodType4 = minutes0.getPeriodType();
        org.joda.time.Minutes minutes5 = null;
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Duration duration7 = minutes0.toStandardDuration();
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod9 = minutes8.toMutablePeriod();
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes14 = minutes10.plus(0);
        int int15 = minutes8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes10);
        org.joda.time.Minutes minutes17 = minutes10.plus((int) ' ');
        org.joda.time.Minutes minutes19 = minutes10.multipliedBy((int) 'a');
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes10);
        boolean boolean21 = minutes0.isLessThan(minutes10);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2147483647M" + "'", str3, "PT2147483647M");
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0767");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = minutes15.get(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = minutes15.getFieldType();
        int int19 = minutes14.get(durationFieldType18);
        boolean boolean20 = minutes3.isSupported(durationFieldType18);
        org.joda.time.Period period21 = minutes3.toPeriod();
        org.joda.time.Minutes minutes23 = minutes3.plus((int) 'a');
        int int25 = minutes3.getValue(0);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes26);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2) + "'", int19 == (-2));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-2) + "'", int25 == (-2));
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
    }

    @Test
    public void test0768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0768");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = minutes0.get(durationFieldType1);
        org.joda.time.DurationFieldType durationFieldType3 = minutes0.getFieldType();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = minutes7.get(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType10 = minutes7.getFieldType();
        int int11 = minutes6.get(durationFieldType10);
        org.joda.time.Minutes minutes13 = minutes6.plus((-1));
        org.joda.time.Minutes minutes15 = minutes6.minus((int) (short) 10);
        org.joda.time.Minutes minutes17 = minutes15.dividedBy((-2147483648));
        org.joda.time.Minutes minutes18 = minutes17.negated();
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes20 = minutes19.negated();
        org.joda.time.Minutes minutes21 = minutes19.negated();
        org.joda.time.Minutes minutes22 = minutes17.minus(minutes21);
        org.joda.time.Minutes minutes24 = minutes21.plus((int) 'a');
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes24);
        org.joda.time.Minutes minutes27 = minutes24.dividedBy((int) (byte) 1);
        java.lang.String str28 = minutes24.toString();
        org.joda.time.Minutes minutes30 = minutes24.dividedBy(2);
        boolean boolean31 = minutes0.isLessThan(minutes24);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes33 = minutes0.minus(2147483646);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: -2147483648 + -2147483646");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-2) + "'", int11 == (-2));
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "PT-2147483550M" + "'", str28, "PT-2147483550M");
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test0769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0769");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.DurationFieldType durationFieldType12 = minutes3.getFieldType();
        int int14 = minutes3.getValue((int) (short) 0);
        org.joda.time.Period period15 = minutes3.toPeriod();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes17 = minutes16.negated();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod19 = minutes18.toMutablePeriod();
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes21 = minutes18.plus(minutes20);
        int int22 = minutes17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes20);
        org.joda.time.Minutes minutes23 = minutes3.minus(minutes17);
        org.joda.time.Minutes minutes25 = minutes17.plus(2147483647);
        int int26 = minutes25.size();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-2) + "'", int14 == (-2));
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
    }

    @Test
    public void test0770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0770");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        int int9 = minutes2.getMinutes();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean12 = minutes2.isLessThan(minutes11);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes2);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes16 = minutes14.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes18 = minutes14.plus(0);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        boolean boolean20 = minutes14.isGreaterThan(minutes19);
        org.joda.time.PeriodType periodType21 = minutes14.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType22 = minutes14.getFieldType();
        org.joda.time.Minutes minutes24 = minutes14.minus((int) (byte) -1);
        org.joda.time.Minutes minutes25 = minutes2.plus(minutes24);
        org.joda.time.Minutes minutes26 = minutes25.negated();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-2) + "'", int9 == (-2));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
    }

    @Test
    public void test0771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0771");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes9 = minutes2.plus((-1));
        org.joda.time.Minutes minutes11 = minutes2.minus((int) (short) 10);
        org.joda.time.Minutes minutes13 = minutes11.dividedBy((-2147483648));
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod15 = minutes14.toMutablePeriod();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes17 = minutes14.plus(minutes16);
        org.joda.time.Minutes minutes18 = minutes11.minus(minutes16);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MAX_VALUE;
        int int20 = minutes19.size();
        int int22 = minutes19.getValue(0);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes19);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes25 = minutes24.negated();
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes24);
        java.lang.String str27 = minutes24.toString();
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType29 = minutes28.getFieldType();
        boolean boolean30 = minutes24.isSupported(durationFieldType29);
        int int31 = minutes23.get(durationFieldType29);
        boolean boolean32 = minutes16.isSupported(durationFieldType29);
        org.joda.time.Minutes minutes34 = minutes16.plus((-2147483648));
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType36 = minutes16.getFieldType((-2147483548));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -2147483548");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2147483647 + "'", int22 == 2147483647);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "PT2147483647M" + "'", str27, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2147483647 + "'", int31 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(minutes34);
    }

    @Test
    public void test0772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0772");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = minutes0.negated();
        org.joda.time.DurationFieldType durationFieldType3 = minutes0.getFieldType();
        java.lang.String str4 = minutes0.toString();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = minutes5.get(durationFieldType6);
        org.joda.time.MutablePeriod mutablePeriod8 = minutes5.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType9 = minutes5.getFieldType();
        int int10 = minutes0.get(durationFieldType9);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MAX_VALUE;
        boolean boolean12 = minutes0.isLessThan(minutes11);
        org.joda.time.Minutes minutes13 = null;
        org.joda.time.Minutes minutes14 = minutes11.plus(minutes13);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MAX_VALUE;
        int int16 = minutes15.size();
        int int18 = minutes15.getValue(0);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes15);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes21 = minutes20.negated();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes20);
        java.lang.String str23 = minutes20.toString();
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = minutes24.getFieldType();
        boolean boolean26 = minutes20.isSupported(durationFieldType25);
        int int27 = minutes19.get(durationFieldType25);
        boolean boolean28 = minutes14.isGreaterThan(minutes19);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes30 = minutes29.negated();
        org.joda.time.PeriodType periodType31 = minutes30.getPeriodType();
        org.joda.time.Minutes minutes32 = minutes30.negated();
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes36 = minutes34.plus(0);
        org.joda.time.DurationFieldType durationFieldType37 = minutes36.getFieldType();
        int int38 = minutes32.get(durationFieldType37);
        org.joda.time.Minutes minutes40 = minutes32.dividedBy((int) ' ');
        java.lang.String str41 = minutes32.toString();
        org.joda.time.Duration duration42 = minutes32.toStandardDuration();
        org.joda.time.Period period43 = minutes32.toPeriod();
        boolean boolean44 = minutes19.isLessThan(minutes32);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT2147483647M" + "'", str4, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2147483647 + "'", int10 == 2147483647);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483647 + "'", int18 == 2147483647);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT2147483647M" + "'", str23, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2147483647 + "'", int27 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2147483647 + "'", int38 == 2147483647);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "PT2147483647M" + "'", str41, "PT2147483647M");
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test0773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0773");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.minus((int) (short) 0);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes4 = minutes3.negated();
        org.joda.time.Minutes minutes5 = minutes3.negated();
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        boolean boolean7 = minutes0.isSupported(durationFieldType6);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = minutes8.plus(0);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = minutes16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = minutes16.getFieldType();
        int int20 = minutes15.get(durationFieldType19);
        org.joda.time.Minutes minutes22 = minutes15.plus((-1));
        org.joda.time.Minutes minutes24 = minutes15.minus((int) (short) 10);
        org.joda.time.Minutes minutes26 = minutes24.dividedBy((-2147483648));
        org.joda.time.Minutes minutes27 = minutes12.plus(minutes26);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes30 = minutes28.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = minutes31.get(durationFieldType32);
        org.joda.time.MutablePeriod mutablePeriod34 = minutes31.toMutablePeriod();
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes31);
        boolean boolean36 = minutes30.isLessThan(minutes35);
        org.joda.time.DurationFieldType durationFieldType37 = minutes35.getFieldType();
        boolean boolean38 = minutes27.isSupported(durationFieldType37);
        boolean boolean39 = minutes0.isSupported(durationFieldType37);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes40 = minutes0.negated();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Integer.MIN_VALUE cannot be negated");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-2) + "'", int20 == (-2));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test0774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0774");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes3 = minutes1.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        int int13 = minutes4.get(durationFieldType11);
        org.joda.time.PeriodType periodType14 = minutes4.getPeriodType();
        org.joda.time.Minutes minutes16 = minutes4.minus(3);
        // The following exception was thrown during execution in test generation
        try {
            int int18 = minutes4.getValue((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2147483647 + "'", int13 == 2147483647);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(minutes16);
    }

    @Test
    public void test0775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0775");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType1 = minutes0.getPeriodType();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes3 = minutes2.negated();
        org.joda.time.Minutes minutes4 = minutes2.negated();
        org.joda.time.DurationFieldType durationFieldType5 = minutes2.getFieldType();
        java.lang.String str6 = minutes2.toString();
        boolean boolean7 = minutes0.isGreaterThan(minutes2);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes9 = minutes8.negated();
        org.joda.time.Minutes minutes10 = minutes8.negated();
        java.lang.String str11 = minutes8.toString();
        int int12 = minutes8.size();
        org.joda.time.Period period13 = minutes8.toPeriod();
        org.joda.time.Minutes minutes14 = minutes2.minus(minutes8);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MAX_VALUE;
        int int16 = minutes15.size();
        int int18 = minutes15.getValue(0);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes15);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes21 = minutes20.negated();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes20);
        java.lang.String str23 = minutes20.toString();
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = minutes24.getFieldType();
        boolean boolean26 = minutes20.isSupported(durationFieldType25);
        int int27 = minutes19.get(durationFieldType25);
        int int28 = minutes2.get(durationFieldType25);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT2147483647M" + "'", str6, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "PT2147483647M" + "'", str11, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483647 + "'", int18 == 2147483647);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT2147483647M" + "'", str23, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2147483647 + "'", int27 == 2147483647);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2147483647 + "'", int28 == 2147483647);
    }

    @Test
    public void test0776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0776");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod5 = minutes4.toMutablePeriod();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes7 = minutes4.plus(minutes6);
        boolean boolean8 = minutes3.isLessThan(minutes4);
        org.joda.time.PeriodType periodType9 = minutes3.getPeriodType();
        org.joda.time.Minutes minutes10 = minutes3.negated();
        int int11 = minutes3.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-2147483645) + "'", int11 == (-2147483645));
    }

    @Test
    public void test0777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0777");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType2 = minutes1.getPeriodType();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes4 = minutes3.negated();
        org.joda.time.Minutes minutes5 = minutes3.negated();
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        java.lang.String str7 = minutes3.toString();
        boolean boolean8 = minutes1.isGreaterThan(minutes3);
        boolean boolean9 = minutes0.equals((java.lang.Object) minutes1);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes12 = minutes10.minus((int) (short) 1);
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy(0);
        boolean boolean15 = minutes0.isGreaterThan(minutes14);
        org.joda.time.DurationFieldType durationFieldType16 = minutes0.getFieldType();
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes18 = minutes17.negated();
        org.joda.time.Minutes minutes19 = minutes17.negated();
        java.lang.String str20 = minutes17.toString();
        org.joda.time.Minutes minutes22 = minutes17.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes26 = minutes24.multipliedBy((int) (byte) 0);
        boolean boolean27 = minutes22.equals((java.lang.Object) minutes24);
        java.lang.String str28 = minutes24.toString();
        boolean boolean29 = minutes0.isGreaterThan(minutes24);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT2147483647M" + "'", str7, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "PT2147483647M" + "'", str20, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "PT2147483647M" + "'", str28, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test0778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0778");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod2 = minutes0.toMutablePeriod();
        java.lang.String str3 = minutes0.toString();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = minutes4.plus(0);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = minutes12.getFieldType();
        int int16 = minutes11.get(durationFieldType15);
        org.joda.time.Minutes minutes18 = minutes11.plus((-1));
        org.joda.time.Minutes minutes20 = minutes11.minus((int) (short) 10);
        org.joda.time.Minutes minutes22 = minutes20.dividedBy((-2147483648));
        org.joda.time.Minutes minutes23 = minutes8.plus(minutes22);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType25 = minutes24.getPeriodType();
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes27 = minutes26.negated();
        org.joda.time.Minutes minutes28 = minutes26.negated();
        org.joda.time.DurationFieldType durationFieldType29 = minutes26.getFieldType();
        java.lang.String str30 = minutes26.toString();
        boolean boolean31 = minutes24.isGreaterThan(minutes26);
        boolean boolean32 = minutes8.isLessThan(minutes26);
        org.joda.time.PeriodType periodType33 = minutes26.getPeriodType();
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes37 = minutes35.plus(0);
        org.joda.time.DurationFieldType durationFieldType38 = minutes37.getFieldType();
        boolean boolean39 = minutes26.isSupported(durationFieldType38);
        org.joda.time.Duration duration40 = minutes26.toStandardDuration();
        boolean boolean41 = minutes0.equals((java.lang.Object) minutes26);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType43 = minutes26.getFieldType((-2147483548));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -2147483548");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2M" + "'", str3, "PT2M");
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "PT2147483647M" + "'", str30, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test0779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0779");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT-12M");
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration3 = minutes2.toStandardDuration();
        org.joda.time.Duration duration4 = minutes2.toStandardDuration();
        org.joda.time.Minutes minutes6 = minutes2.minus(2);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes9 = minutes7.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = minutes10.get(durationFieldType11);
        org.joda.time.MutablePeriod mutablePeriod13 = minutes10.toMutablePeriod();
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes10);
        boolean boolean15 = minutes9.isLessThan(minutes14);
        int int16 = minutes9.getMinutes();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean19 = minutes9.isLessThan(minutes18);
        org.joda.time.Minutes minutes20 = minutes6.minus(minutes18);
        int int21 = minutes18.getMinutes();
        org.joda.time.Minutes minutes22 = minutes1.minus(minutes18);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.minutes((int) (byte) -1);
        boolean boolean25 = minutes22.isLessThan(minutes24);
        org.joda.time.Minutes minutes27 = minutes22.dividedBy((-2147483646));
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-2147483645) + "'", int21 == (-2147483645));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(minutes27);
    }

    @Test
    public void test0780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0780");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = minutes0.get(durationFieldType1);
        org.joda.time.DurationFieldType durationFieldType3 = minutes0.getFieldType();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = minutes7.get(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType10 = minutes7.getFieldType();
        int int11 = minutes6.get(durationFieldType10);
        org.joda.time.Minutes minutes13 = minutes6.plus((-1));
        org.joda.time.Minutes minutes15 = minutes6.minus((int) (short) 10);
        org.joda.time.Minutes minutes17 = minutes15.dividedBy((-2147483648));
        org.joda.time.Minutes minutes18 = minutes17.negated();
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes20 = minutes19.negated();
        org.joda.time.Minutes minutes21 = minutes19.negated();
        org.joda.time.Minutes minutes22 = minutes17.minus(minutes21);
        org.joda.time.Minutes minutes24 = minutes21.plus((int) 'a');
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes24);
        org.joda.time.Minutes minutes27 = minutes24.dividedBy((int) (byte) 1);
        java.lang.String str28 = minutes24.toString();
        org.joda.time.Minutes minutes30 = minutes24.dividedBy(2);
        boolean boolean31 = minutes0.isLessThan(minutes24);
        int int32 = minutes0.size();
        org.joda.time.PeriodType periodType33 = minutes0.getPeriodType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-2) + "'", int11 == (-2));
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "PT-2147483550M" + "'", str28, "PT-2147483550M");
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(periodType33);
    }

    @Test
    public void test0781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0781");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        int int1 = minutes0.size();
        int int3 = minutes0.getValue(0);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes6 = minutes4.dividedBy((-1));
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod8 = minutes7.toMutablePeriod();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes13 = minutes9.plus(0);
        int int14 = minutes7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes9);
        org.joda.time.Minutes minutes16 = minutes9.plus((int) ' ');
        java.lang.String str17 = minutes9.toString();
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean20 = minutes9.isLessThan(minutes19);
        boolean boolean21 = minutes4.equals((java.lang.Object) minutes9);
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes24 = minutes22.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes26 = minutes22.plus(0);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.MIN_VALUE;
        boolean boolean28 = minutes22.isGreaterThan(minutes27);
        org.joda.time.Minutes minutes29 = minutes22.negated();
        org.joda.time.Minutes minutes30 = minutes9.plus(minutes22);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2147483647 + "'", int3 == 2147483647);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "PT2M" + "'", str17, "PT2M");
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
    }

    @Test
    public void test0782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0782");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        java.lang.String str3 = minutes0.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes5 = minutes0.plus((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 2147483647 + 10");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2147483647M" + "'", str3, "PT2147483647M");
    }

    @Test
    public void test0783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0783");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = minutes15.get(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = minutes15.getFieldType();
        int int19 = minutes14.get(durationFieldType18);
        boolean boolean20 = minutes3.isSupported(durationFieldType18);
        org.joda.time.Minutes minutes22 = minutes3.dividedBy(100);
        org.joda.time.Minutes minutes24 = minutes3.plus((-22139006));
        // The following exception was thrown during execution in test generation
        try {
            int int26 = minutes24.getValue((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2) + "'", int19 == (-2));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
    }

    @Test
    public void test0784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0784");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes(52);
        org.junit.Assert.assertNotNull(minutes1);
    }

    @Test
    public void test0785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0785");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes(4);
        org.junit.Assert.assertNotNull(minutes1);
    }

    @Test
    public void test0786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0786");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((-12));
        int int2 = minutes1.getMinutes();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes5 = minutes3.dividedBy((int) 'a');
        org.joda.time.Minutes minutes7 = minutes3.dividedBy((int) (short) 100);
        int int8 = minutes1.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes7);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-12) + "'", int2 == (-12));
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
    }

    @Test
    public void test0787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0787");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod5 = minutes4.toMutablePeriod();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes7 = minutes4.plus(minutes6);
        boolean boolean8 = minutes3.isLessThan(minutes4);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes12 = minutes3.multipliedBy(36);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: -2147483645 * 36");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes10);
    }

    @Test
    public void test0788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0788");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        java.lang.String str3 = minutes0.toString();
        org.joda.time.PeriodType periodType4 = minutes0.getPeriodType();
        org.joda.time.Minutes minutes5 = null;
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes9 = minutes7.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes10 = minutes7.negated();
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes13 = minutes7.minus(minutes12);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod15 = minutes14.toMutablePeriod();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod15);
        boolean boolean17 = minutes7.isLessThan(minutes16);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes16);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes21 = minutes19.minus((int) (short) 0);
        boolean boolean22 = minutes16.isLessThan(minutes21);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.minutes(2147483647);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes28 = minutes26.plus(0);
        org.joda.time.PeriodType periodType29 = minutes26.getPeriodType();
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes31 = minutes30.negated();
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod33 = minutes32.toMutablePeriod();
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes35 = minutes32.plus(minutes34);
        int int36 = minutes31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes34);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.MAX_VALUE;
        int int38 = minutes31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes37);
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes41 = minutes39.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = minutes42.get(durationFieldType43);
        org.joda.time.MutablePeriod mutablePeriod45 = minutes42.toMutablePeriod();
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes42);
        boolean boolean47 = minutes41.isLessThan(minutes46);
        org.joda.time.Minutes minutes48 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes50 = minutes48.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType52 = null;
        int int53 = minutes51.get(durationFieldType52);
        org.joda.time.DurationFieldType durationFieldType54 = minutes51.getFieldType();
        int int55 = minutes50.get(durationFieldType54);
        org.joda.time.Minutes minutes57 = minutes50.plus((-1));
        org.joda.time.Minutes minutes58 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod59 = minutes58.toMutablePeriod();
        org.joda.time.Minutes minutes60 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes62 = minutes60.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes64 = minutes60.plus(0);
        int int65 = minutes58.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes60);
        org.joda.time.Minutes minutes67 = minutes60.plus((int) ' ');
        java.lang.String str68 = minutes60.toString();
        org.joda.time.Minutes minutes70 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean71 = minutes60.isLessThan(minutes70);
        boolean boolean72 = minutes57.isLessThan(minutes60);
        org.joda.time.Minutes minutes73 = minutes41.minus(minutes57);
        org.joda.time.MutablePeriod mutablePeriod74 = minutes41.toMutablePeriod();
        org.joda.time.Minutes minutes76 = minutes41.dividedBy(2);
        org.joda.time.Minutes minutes77 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes79 = minutes77.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes80 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType81 = null;
        int int82 = minutes80.get(durationFieldType81);
        org.joda.time.DurationFieldType durationFieldType83 = minutes80.getFieldType();
        int int84 = minutes79.get(durationFieldType83);
        org.joda.time.Minutes minutes86 = minutes79.plus((-1));
        org.joda.time.Minutes minutes87 = minutes86.negated();
        org.joda.time.Minutes minutes88 = minutes76.plus(minutes87);
        org.joda.time.Minutes minutes90 = minutes76.minus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType91 = minutes90.getFieldType();
        int int92 = minutes37.get(durationFieldType91);
        int int93 = minutes26.get(durationFieldType91);
        int int94 = minutes24.get(durationFieldType91);
        int int95 = minutes16.get(durationFieldType91);
        int int96 = minutes0.get(durationFieldType91);
        org.joda.time.base.BaseSingleFieldPeriod baseSingleFieldPeriod97 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int98 = minutes0.compareTo(baseSingleFieldPeriod97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2147483647M" + "'", str3, "PT2147483647M");
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-2) + "'", int55 == (-2));
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(mutablePeriod59);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "PT2M" + "'", str68, "PT2M");
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(minutes73);
        org.junit.Assert.assertNotNull(mutablePeriod74);
        org.junit.Assert.assertNotNull(minutes76);
        org.junit.Assert.assertNotNull(minutes77);
        org.junit.Assert.assertNotNull(minutes79);
        org.junit.Assert.assertNotNull(minutes80);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(durationFieldType83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-2) + "'", int84 == (-2));
        org.junit.Assert.assertNotNull(minutes86);
        org.junit.Assert.assertNotNull(minutes87);
        org.junit.Assert.assertNotNull(minutes88);
        org.junit.Assert.assertNotNull(minutes90);
        org.junit.Assert.assertNotNull(durationFieldType91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 2147483647 + "'", int92 == 2147483647);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 2147483647 + "'", int94 == 2147483647);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-2147483648) + "'", int95 == (-2147483648));
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 2147483647 + "'", int96 == 2147483647);
    }

    @Test
    public void test0789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0789");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = minutes0.get(durationFieldType1);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType4 = minutes0.getFieldType();
        org.joda.time.Minutes minutes6 = minutes0.dividedBy((-1));
        org.joda.time.Minutes minutes8 = minutes0.dividedBy(2147483646);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes11 = minutes9.minus((int) (short) 1);
        org.joda.time.Minutes minutes13 = minutes11.multipliedBy(0);
        org.joda.time.Duration duration14 = minutes11.toStandardDuration();
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes16 = minutes15.negated();
        org.joda.time.DurationFieldType durationFieldType17 = minutes15.getFieldType();
        int int18 = minutes11.get(durationFieldType17);
        boolean boolean19 = minutes0.isSupported(durationFieldType17);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = minutes24.get(durationFieldType25);
        org.joda.time.DurationFieldType durationFieldType27 = minutes24.getFieldType();
        int int28 = minutes23.get(durationFieldType27);
        org.joda.time.Minutes minutes30 = minutes23.plus((-1));
        boolean boolean31 = minutes20.isGreaterThan(minutes23);
        org.joda.time.Minutes minutes33 = minutes23.plus(10);
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes23);
        int int35 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes34);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483646 + "'", int18 == 2147483646);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-2) + "'", int28 == (-2));
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
    }

    @Test
    public void test0790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0790");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod2 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        int int4 = minutes3.size();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes6 = minutes5.negated();
        org.joda.time.Minutes minutes8 = minutes6.dividedBy((int) (byte) -1);
        boolean boolean9 = minutes3.isLessThan(minutes6);
        boolean boolean10 = minutes0.isLessThan(minutes3);
        org.joda.time.Duration duration11 = minutes0.toStandardDuration();
        int int12 = minutes0.size();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
    }

    @Test
    public void test0791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0791");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = minutes0.get(durationFieldType1);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType4 = minutes0.getFieldType();
        org.joda.time.Minutes minutes6 = minutes0.dividedBy((-1));
        org.joda.time.Minutes minutes8 = minutes0.dividedBy(2147483646);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes11 = minutes9.minus((int) (short) 1);
        org.joda.time.Minutes minutes13 = minutes11.multipliedBy(0);
        org.joda.time.Duration duration14 = minutes11.toStandardDuration();
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes16 = minutes15.negated();
        org.joda.time.DurationFieldType durationFieldType17 = minutes15.getFieldType();
        int int18 = minutes11.get(durationFieldType17);
        boolean boolean19 = minutes0.isSupported(durationFieldType17);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes22 = minutes20.multipliedBy((int) (short) -1);
        org.joda.time.MutablePeriod mutablePeriod23 = minutes20.toMutablePeriod();
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod25 = minutes24.toMutablePeriod();
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes28 = minutes26.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes30 = minutes26.plus(0);
        int int31 = minutes24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes26);
        org.joda.time.Duration duration32 = minutes24.toStandardDuration();
        org.joda.time.Minutes minutes33 = minutes20.plus(minutes24);
        org.joda.time.Minutes minutes34 = minutes0.minus(minutes33);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483646 + "'", int18 == 2147483646);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
    }

    @Test
    public void test0792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0792");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = minutes0.negated();
        org.joda.time.PeriodType periodType3 = minutes0.getPeriodType();
        org.joda.time.Period period4 = minutes0.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod5 = minutes0.toMutablePeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
    }

    @Test
    public void test0793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0793");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType3 = minutes2.getFieldType();
        org.joda.time.Minutes minutes4 = minutes2.negated();
        org.joda.time.Minutes minutes6 = minutes2.plus((int) (short) 1);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes9 = minutes7.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = minutes10.get(durationFieldType11);
        org.joda.time.MutablePeriod mutablePeriod13 = minutes10.toMutablePeriod();
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes10);
        boolean boolean15 = minutes9.isLessThan(minutes14);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes18 = minutes16.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = minutes19.get(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType22 = minutes19.getFieldType();
        int int23 = minutes18.get(durationFieldType22);
        org.joda.time.Minutes minutes25 = minutes18.plus((-1));
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod27 = minutes26.toMutablePeriod();
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes30 = minutes28.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes32 = minutes28.plus(0);
        int int33 = minutes26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes28);
        org.joda.time.Minutes minutes35 = minutes28.plus((int) ' ');
        java.lang.String str36 = minutes28.toString();
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean39 = minutes28.isLessThan(minutes38);
        boolean boolean40 = minutes25.isLessThan(minutes28);
        org.joda.time.Minutes minutes41 = minutes9.minus(minutes25);
        org.joda.time.MutablePeriod mutablePeriod42 = minutes9.toMutablePeriod();
        org.joda.time.Minutes minutes44 = minutes9.dividedBy(2);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes47 = minutes45.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes48 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = minutes48.get(durationFieldType49);
        org.joda.time.DurationFieldType durationFieldType51 = minutes48.getFieldType();
        int int52 = minutes47.get(durationFieldType51);
        org.joda.time.Minutes minutes54 = minutes47.plus((-1));
        org.joda.time.Minutes minutes55 = minutes54.negated();
        org.joda.time.Minutes minutes56 = minutes44.plus(minutes55);
        org.joda.time.Minutes minutes58 = minutes44.minus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType59 = minutes58.getFieldType();
        boolean boolean60 = minutes2.isLessThan(minutes58);
        org.joda.time.Minutes minutes62 = minutes58.plus(100);
        org.joda.time.Minutes minutes63 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration64 = minutes63.toStandardDuration();
        org.joda.time.Duration duration65 = minutes63.toStandardDuration();
        org.joda.time.Minutes minutes67 = minutes63.minus(2);
        org.joda.time.Minutes minutes68 = org.joda.time.Minutes.MIN_VALUE;
        int int69 = minutes68.getMinutes();
        org.joda.time.PeriodType periodType70 = minutes68.getPeriodType();
        org.joda.time.Minutes minutes71 = null;
        org.joda.time.Minutes minutes72 = minutes68.plus(minutes71);
        boolean boolean73 = minutes63.isLessThan(minutes72);
        int int74 = minutes72.getMinutes();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes75 = minutes58.plus(minutes72);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: -2 + -2147483648");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-2) + "'", int23 == (-2));
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "PT2M" + "'", str36, "PT2M");
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-2) + "'", int52 == (-2));
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-2147483648) + "'", int69 == (-2147483648));
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-2147483648) + "'", int74 == (-2147483648));
    }

    @Test
    public void test0794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0794");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.dividedBy(2);
        int int3 = minutes0.size();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod5 = minutes4.toMutablePeriod();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes8 = minutes6.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes10 = minutes6.plus(0);
        int int11 = minutes4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes6);
        org.joda.time.Minutes minutes13 = minutes6.plus((int) ' ');
        int int14 = minutes13.size();
        org.joda.time.Minutes minutes16 = minutes13.minus(0);
        org.joda.time.Minutes minutes17 = minutes0.plus(minutes13);
        org.joda.time.Minutes minutes19 = minutes17.dividedBy((-2147483648));
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes21 = minutes20.negated();
        org.joda.time.Minutes minutes22 = minutes20.negated();
        java.lang.String str23 = minutes20.toString();
        org.joda.time.Minutes minutes25 = minutes20.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes29 = minutes27.multipliedBy((int) (byte) 0);
        boolean boolean30 = minutes25.equals((java.lang.Object) minutes27);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes32 = minutes31.negated();
        org.joda.time.DurationFieldType durationFieldType33 = minutes31.getFieldType();
        boolean boolean34 = minutes25.isSupported(durationFieldType33);
        int int35 = minutes17.get(durationFieldType33);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.parseMinutes("PT-12M");
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration39 = minutes38.toStandardDuration();
        org.joda.time.Duration duration40 = minutes38.toStandardDuration();
        org.joda.time.Minutes minutes42 = minutes38.minus(2);
        org.joda.time.Minutes minutes43 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes45 = minutes43.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = minutes46.get(durationFieldType47);
        org.joda.time.MutablePeriod mutablePeriod49 = minutes46.toMutablePeriod();
        org.joda.time.Minutes minutes50 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes46);
        boolean boolean51 = minutes45.isLessThan(minutes50);
        int int52 = minutes45.getMinutes();
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean55 = minutes45.isLessThan(minutes54);
        org.joda.time.Minutes minutes56 = minutes42.minus(minutes54);
        int int57 = minutes54.getMinutes();
        org.joda.time.Minutes minutes58 = minutes37.minus(minutes54);
        org.joda.time.Minutes minutes60 = org.joda.time.Minutes.minutes((int) (byte) -1);
        boolean boolean61 = minutes58.isLessThan(minutes60);
        boolean boolean62 = minutes17.isGreaterThan(minutes58);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds63 = minutes58.toStandardSeconds();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 2147483633 * 60");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT2147483647M" + "'", str23, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 36 + "'", int35 == 36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod49);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-2) + "'", int52 == (-2));
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-2147483645) + "'", int57 == (-2147483645));
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test0795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0795");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.DurationFieldType durationFieldType12 = minutes3.getFieldType();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType15 = minutes14.getPeriodType();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes17 = minutes16.negated();
        org.joda.time.Minutes minutes18 = minutes16.negated();
        org.joda.time.DurationFieldType durationFieldType19 = minutes16.getFieldType();
        java.lang.String str20 = minutes16.toString();
        boolean boolean21 = minutes14.isGreaterThan(minutes16);
        boolean boolean22 = minutes13.equals((java.lang.Object) minutes14);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes13);
        int int24 = minutes3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes13);
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod27 = minutes26.toMutablePeriod();
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes30 = minutes28.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes32 = minutes28.plus(0);
        int int33 = minutes26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes28);
        org.joda.time.Minutes minutes35 = minutes28.plus((int) ' ');
        java.lang.String str36 = minutes28.toString();
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod38 = minutes37.toMutablePeriod();
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes41 = minutes39.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes43 = minutes39.plus(0);
        int int44 = minutes37.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes39);
        org.joda.time.Minutes minutes46 = minutes39.plus((int) ' ');
        java.lang.String str47 = minutes39.toString();
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean50 = minutes39.isLessThan(minutes49);
        org.joda.time.Minutes minutes51 = minutes28.minus(minutes39);
        int int52 = minutes51.size();
        org.joda.time.Minutes minutes54 = minutes51.multipliedBy(0);
        boolean boolean55 = minutes25.equals((java.lang.Object) minutes51);
        org.joda.time.Minutes minutes56 = null;
        boolean boolean57 = minutes51.isGreaterThan(minutes56);
        org.joda.time.Minutes minutes58 = minutes13.minus(minutes56);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "PT2147483647M" + "'", str20, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "PT2M" + "'", str36, "PT2M");
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "PT2M" + "'", str47, "PT2M");
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(minutes58);
    }

    @Test
    public void test0796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0796");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes9 = minutes2.plus((-1));
        org.joda.time.Minutes minutes11 = minutes2.minus((int) (short) 10);
        org.joda.time.Duration duration12 = minutes2.toStandardDuration();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes2);
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy(3);
        org.joda.time.Minutes minutes17 = minutes15.minus(0);
        int int18 = minutes15.size();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
    }

    @Test
    public void test0797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0797");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod2 = minutes0.toMutablePeriod();
        java.lang.String str3 = minutes0.toString();
        int int4 = minutes0.size();
        org.joda.time.Minutes minutes5 = minutes0.negated();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType8 = minutes7.getPeriodType();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes10 = minutes9.negated();
        org.joda.time.Minutes minutes11 = minutes9.negated();
        org.joda.time.DurationFieldType durationFieldType12 = minutes9.getFieldType();
        java.lang.String str13 = minutes9.toString();
        boolean boolean14 = minutes7.isGreaterThan(minutes9);
        boolean boolean15 = minutes6.equals((java.lang.Object) minutes7);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes6);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes18 = minutes17.negated();
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes17);
        org.joda.time.Minutes minutes20 = minutes16.minus(minutes19);
        org.joda.time.Minutes minutes22 = minutes16.minus(34);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes24 = minutes23.negated();
        org.joda.time.Minutes minutes25 = minutes23.negated();
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.MAX_VALUE;
        int int27 = minutes26.size();
        int int29 = minutes26.getValue(0);
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes26);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes33 = minutes31.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = minutes34.get(durationFieldType35);
        org.joda.time.DurationFieldType durationFieldType37 = minutes34.getFieldType();
        int int38 = minutes33.get(durationFieldType37);
        org.joda.time.Minutes minutes40 = minutes33.plus((-1));
        org.joda.time.Minutes minutes42 = minutes33.minus((int) (short) 10);
        org.joda.time.Duration duration43 = minutes33.toStandardDuration();
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes45 = minutes44.negated();
        org.joda.time.Minutes minutes46 = minutes44.negated();
        java.lang.String str47 = minutes44.toString();
        org.joda.time.Minutes minutes49 = minutes44.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes53 = minutes51.multipliedBy((int) (byte) 0);
        boolean boolean54 = minutes49.equals((java.lang.Object) minutes51);
        boolean boolean55 = minutes33.isGreaterThan(minutes51);
        boolean boolean56 = minutes30.equals((java.lang.Object) boolean55);
        org.joda.time.Minutes minutes57 = minutes23.minus(minutes30);
        org.joda.time.Minutes minutes58 = minutes22.minus(minutes57);
        org.joda.time.Minutes minutes59 = minutes5.minus(minutes57);
        org.joda.time.DurationFieldType durationFieldType60 = null;
        boolean boolean61 = minutes59.isSupported(durationFieldType60);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2M" + "'", str3, "PT2M");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PT2147483647M" + "'", str13, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2147483647 + "'", int29 == 2147483647);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-2) + "'", int38 == (-2));
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "PT2147483647M" + "'", str47, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test0798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0798");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.minus((int) (short) 1);
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy(0);
        org.joda.time.Minutes minutes6 = minutes4.plus((-2147483648));
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes8 = minutes7.negated();
        org.joda.time.Minutes minutes9 = minutes7.negated();
        boolean boolean10 = minutes6.isGreaterThan(minutes9);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod12 = minutes11.toMutablePeriod();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes17 = minutes13.plus(0);
        int int18 = minutes11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes13);
        boolean boolean19 = minutes6.equals((java.lang.Object) minutes13);
        org.joda.time.MutablePeriod mutablePeriod20 = minutes6.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod21 = minutes6.toMutablePeriod();
        java.lang.String str22 = minutes6.toString();
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes26 = minutes24.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = minutes27.get(durationFieldType28);
        org.joda.time.DurationFieldType durationFieldType30 = minutes27.getFieldType();
        int int31 = minutes26.get(durationFieldType30);
        org.joda.time.Minutes minutes33 = minutes26.plus((-1));
        boolean boolean34 = minutes23.isGreaterThan(minutes26);
        org.joda.time.Minutes minutes36 = minutes26.multipliedBy(2);
        org.joda.time.Minutes minutes37 = minutes36.negated();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes38 = minutes6.plus(minutes36);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: -2147483648 + -4");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PT-2147483648M" + "'", str22, "PT-2147483648M");
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-2) + "'", int31 == (-2));
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes37);
    }

    @Test
    public void test0799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0799");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        org.joda.time.Minutes minutes14 = minutes7.plus((-1));
        org.joda.time.Minutes minutes16 = minutes7.minus((int) (short) 10);
        org.joda.time.Minutes minutes18 = minutes16.dividedBy((-2147483648));
        org.joda.time.Minutes minutes19 = minutes4.plus(minutes18);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes22 = minutes20.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = minutes23.get(durationFieldType24);
        org.joda.time.MutablePeriod mutablePeriod26 = minutes23.toMutablePeriod();
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes23);
        boolean boolean28 = minutes22.isLessThan(minutes27);
        org.joda.time.DurationFieldType durationFieldType29 = minutes27.getFieldType();
        boolean boolean30 = minutes19.isSupported(durationFieldType29);
        org.joda.time.Minutes minutes32 = minutes19.plus((int) (short) -1);
        org.joda.time.Minutes minutes34 = minutes32.minus((int) (short) 1);
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.THREE;
        int int36 = minutes35.size();
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod38 = minutes37.toMutablePeriod();
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes41 = minutes39.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes43 = minutes39.plus(0);
        int int44 = minutes37.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes39);
        org.joda.time.Minutes minutes46 = minutes39.plus((int) ' ');
        int int47 = minutes35.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes46);
        org.joda.time.Minutes minutes49 = minutes46.minus((int) (byte) 0);
        org.joda.time.Minutes minutes50 = org.joda.time.Minutes.THREE;
        org.joda.time.Duration duration51 = minutes50.toStandardDuration();
        org.joda.time.Minutes minutes52 = minutes46.plus(minutes50);
        org.joda.time.DurationFieldType durationFieldType53 = minutes50.getFieldType();
        boolean boolean54 = minutes34.isSupported(durationFieldType53);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test0800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0800");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT1M");
        org.junit.Assert.assertNotNull(minutes1);
    }

    @Test
    public void test0801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0801");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        int int4 = minutes3.getMinutes();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes6 = minutes3.plus((-2147483548));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: -2147483645 + -2147483548");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-2147483645) + "'", int4 == (-2147483645));
    }

    @Test
    public void test0802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0802");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        int int1 = minutes0.size();
        int int3 = minutes0.getValue(0);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes6 = minutes4.dividedBy((-1));
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod8 = minutes7.toMutablePeriod();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes13 = minutes9.plus(0);
        int int14 = minutes7.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes9);
        org.joda.time.Minutes minutes16 = minutes9.plus((int) ' ');
        java.lang.String str17 = minutes9.toString();
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean20 = minutes9.isLessThan(minutes19);
        boolean boolean21 = minutes4.equals((java.lang.Object) minutes9);
        org.joda.time.Duration duration22 = minutes4.toStandardDuration();
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes26 = minutes24.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = minutes27.get(durationFieldType28);
        org.joda.time.DurationFieldType durationFieldType30 = minutes27.getFieldType();
        int int31 = minutes26.get(durationFieldType30);
        org.joda.time.Minutes minutes33 = minutes26.plus((-1));
        boolean boolean34 = minutes23.isGreaterThan(minutes26);
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes37 = minutes35.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType39 = null;
        int int40 = minutes38.get(durationFieldType39);
        org.joda.time.DurationFieldType durationFieldType41 = minutes38.getFieldType();
        int int42 = minutes37.get(durationFieldType41);
        boolean boolean43 = minutes26.isSupported(durationFieldType41);
        org.joda.time.Period period44 = minutes26.toPeriod();
        org.joda.time.DurationFieldType durationFieldType45 = minutes26.getFieldType();
        int int46 = minutes4.get(durationFieldType45);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2147483647 + "'", int3 == 2147483647);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "PT2M" + "'", str17, "PT2M");
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-2) + "'", int31 == (-2));
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-2) + "'", int42 == (-2));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2147483647 + "'", int46 == 2147483647);
    }

    @Test
    public void test0803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0803");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        org.joda.time.Minutes minutes10 = minutes9.negated();
        // The following exception was thrown during execution in test generation
        try {
            int int12 = minutes9.getValue((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
    }

    @Test
    public void test0804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0804");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.MutablePeriod mutablePeriod15 = minutes12.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType16 = minutes12.getFieldType();
        boolean boolean17 = minutes3.isSupported(durationFieldType16);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test0805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0805");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod8 = minutes7.toMutablePeriod();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod8);
        boolean boolean10 = minutes0.isLessThan(minutes9);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = minutes15.get(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = minutes15.getFieldType();
        int int19 = minutes14.get(durationFieldType18);
        org.joda.time.Minutes minutes21 = minutes14.plus((-1));
        boolean boolean22 = minutes11.isGreaterThan(minutes14);
        org.joda.time.Minutes minutes24 = minutes14.multipliedBy(2);
        org.joda.time.Minutes minutes25 = minutes24.negated();
        org.joda.time.Minutes minutes26 = minutes25.negated();
        boolean boolean27 = minutes0.isLessThan(minutes25);
        org.joda.time.Minutes minutes29 = minutes25.dividedBy((int) (short) 1);
        org.joda.time.Duration duration30 = minutes25.toStandardDuration();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod32 = minutes31.toMutablePeriod();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes35 = minutes33.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes37 = minutes33.plus(0);
        int int38 = minutes31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes33);
        org.joda.time.Minutes minutes40 = minutes33.plus((int) ' ');
        java.lang.String str41 = minutes33.toString();
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod43 = minutes42.toMutablePeriod();
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes46 = minutes44.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes48 = minutes44.plus(0);
        int int49 = minutes42.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes44);
        org.joda.time.Minutes minutes51 = minutes44.plus((int) ' ');
        java.lang.String str52 = minutes44.toString();
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean55 = minutes44.isLessThan(minutes54);
        org.joda.time.Minutes minutes56 = minutes33.minus(minutes44);
        java.lang.String str57 = minutes44.toString();
        org.joda.time.Minutes minutes58 = minutes25.plus(minutes44);
        org.joda.time.Minutes minutes59 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes25);
        org.joda.time.Minutes minutes60 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes61 = minutes60.negated();
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod63 = minutes62.toMutablePeriod();
        org.joda.time.Minutes minutes64 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes65 = minutes62.plus(minutes64);
        int int66 = minutes61.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes64);
        org.joda.time.Minutes minutes67 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes68 = minutes67.negated();
        org.joda.time.Minutes minutes69 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes67);
        java.lang.String str70 = minutes67.toString();
        org.joda.time.Minutes minutes71 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType72 = minutes71.getFieldType();
        boolean boolean73 = minutes67.isSupported(durationFieldType72);
        org.joda.time.Minutes minutes74 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes67);
        org.joda.time.Minutes minutes75 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes76 = minutes75.negated();
        org.joda.time.Minutes minutes78 = minutes76.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes79 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes81 = minutes79.dividedBy((int) 'a');
        org.joda.time.Minutes minutes83 = minutes79.plus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType84 = minutes83.getFieldType();
        boolean boolean85 = minutes76.isSupported(durationFieldType84);
        org.joda.time.DurationFieldType durationFieldType86 = minutes76.getFieldType();
        boolean boolean87 = minutes67.isSupported(durationFieldType86);
        boolean boolean88 = minutes64.isSupported(durationFieldType86);
        boolean boolean89 = minutes25.isSupported(durationFieldType86);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2) + "'", int19 == (-2));
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "PT2M" + "'", str41, "PT2M");
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "PT2M" + "'", str52, "PT2M");
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "PT2M" + "'", str57, "PT2M");
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(mutablePeriod63);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "PT2147483647M" + "'", str70, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertNotNull(durationFieldType72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(minutes74);
        org.junit.Assert.assertNotNull(minutes75);
        org.junit.Assert.assertNotNull(minutes76);
        org.junit.Assert.assertNotNull(minutes78);
        org.junit.Assert.assertNotNull(minutes79);
        org.junit.Assert.assertNotNull(minutes81);
        org.junit.Assert.assertNotNull(minutes83);
        org.junit.Assert.assertNotNull(durationFieldType84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(durationFieldType86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test0806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0806");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod5 = minutes4.toMutablePeriod();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes7 = minutes4.plus(minutes6);
        boolean boolean8 = minutes3.isLessThan(minutes4);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        org.joda.time.Minutes minutes12 = minutes10.plus(0);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.MutablePeriod mutablePeriod16 = minutes13.toMutablePeriod();
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = minutes17.get(durationFieldType18);
        org.joda.time.DurationFieldType durationFieldType20 = minutes17.getFieldType();
        int int21 = minutes13.get(durationFieldType20);
        int int22 = minutes12.get(durationFieldType20);
        org.joda.time.Period period23 = minutes12.toPeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-2147483646) + "'", int22 == (-2147483646));
        org.junit.Assert.assertNotNull(period23);
    }

    @Test
    public void test0807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0807");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.DurationFieldType durationFieldType2 = minutes0.getFieldType();
        org.joda.time.DurationFieldType durationFieldType3 = minutes0.getFieldType();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        org.joda.time.Minutes minutes14 = minutes7.plus((-1));
        boolean boolean15 = minutes4.isGreaterThan(minutes7);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration17 = minutes16.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod18 = minutes16.toMutablePeriod();
        int int19 = minutes16.size();
        boolean boolean20 = minutes4.isGreaterThan(minutes16);
        org.joda.time.Minutes minutes21 = minutes0.minus(minutes16);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(minutes21);
    }

    @Test
    public void test0808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0808");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        java.lang.String str3 = minutes0.toString();
        org.joda.time.PeriodType periodType4 = minutes0.getPeriodType();
        org.joda.time.Minutes minutes5 = null;
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes9 = minutes7.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = minutes10.get(durationFieldType11);
        org.joda.time.DurationFieldType durationFieldType13 = minutes10.getFieldType();
        int int14 = minutes9.get(durationFieldType13);
        org.joda.time.Minutes minutes16 = minutes9.plus((-1));
        org.joda.time.Minutes minutes18 = minutes9.minus((int) (short) 10);
        org.joda.time.Minutes minutes20 = minutes18.dividedBy((-2147483648));
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod22 = minutes21.toMutablePeriod();
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes24 = minutes21.plus(minutes23);
        org.joda.time.Minutes minutes25 = minutes18.minus(minutes23);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes28 = minutes26.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes30 = minutes26.plus(0);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes33 = minutes31.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = minutes34.get(durationFieldType35);
        org.joda.time.DurationFieldType durationFieldType37 = minutes34.getFieldType();
        int int38 = minutes33.get(durationFieldType37);
        org.joda.time.Minutes minutes40 = minutes33.plus((-1));
        org.joda.time.Minutes minutes42 = minutes33.minus((int) (short) 10);
        org.joda.time.Minutes minutes44 = minutes42.dividedBy((-2147483648));
        org.joda.time.Minutes minutes45 = minutes30.plus(minutes44);
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes48 = minutes46.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = minutes49.get(durationFieldType50);
        org.joda.time.MutablePeriod mutablePeriod52 = minutes49.toMutablePeriod();
        org.joda.time.Minutes minutes53 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes49);
        boolean boolean54 = minutes48.isLessThan(minutes53);
        org.joda.time.DurationFieldType durationFieldType55 = minutes53.getFieldType();
        boolean boolean56 = minutes45.isSupported(durationFieldType55);
        int int57 = minutes18.get(durationFieldType55);
        int int58 = minutes6.get(durationFieldType55);
        org.joda.time.Minutes minutes59 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes60 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType61 = minutes60.getPeriodType();
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes63 = minutes62.negated();
        org.joda.time.Minutes minutes64 = minutes62.negated();
        org.joda.time.DurationFieldType durationFieldType65 = minutes62.getFieldType();
        java.lang.String str66 = minutes62.toString();
        boolean boolean67 = minutes60.isGreaterThan(minutes62);
        boolean boolean68 = minutes59.equals((java.lang.Object) minutes60);
        org.joda.time.Minutes minutes69 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes59);
        org.joda.time.Minutes minutes70 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes71 = minutes70.negated();
        org.joda.time.Minutes minutes72 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes70);
        org.joda.time.Minutes minutes73 = minutes69.minus(minutes72);
        boolean boolean74 = minutes6.equals((java.lang.Object) minutes72);
        int int75 = minutes72.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2147483647M" + "'", str3, "PT2147483647M");
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-2) + "'", int14 == (-2));
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-2) + "'", int38 == (-2));
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-12) + "'", int57 == (-12));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2147483647 + "'", int58 == 2147483647);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "PT2147483647M" + "'", str66, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertNotNull(minutes73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2147483647 + "'", int75 == 2147483647);
    }

    @Test
    public void test0809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0809");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes9 = minutes2.plus((-1));
        org.joda.time.Minutes minutes11 = minutes2.minus((int) (short) 10);
        org.joda.time.Minutes minutes13 = minutes11.dividedBy((-2147483648));
        org.joda.time.Minutes minutes15 = minutes13.plus((int) (short) 10);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = minutes16.get(durationFieldType17);
        org.joda.time.MutablePeriod mutablePeriod19 = minutes16.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType20 = minutes16.getFieldType();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = minutes24.get(durationFieldType25);
        org.joda.time.MutablePeriod mutablePeriod27 = minutes24.toMutablePeriod();
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes24);
        boolean boolean29 = minutes23.isLessThan(minutes28);
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes32 = minutes30.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType34 = null;
        int int35 = minutes33.get(durationFieldType34);
        org.joda.time.DurationFieldType durationFieldType36 = minutes33.getFieldType();
        int int37 = minutes32.get(durationFieldType36);
        org.joda.time.Minutes minutes39 = minutes32.plus((-1));
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod41 = minutes40.toMutablePeriod();
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes44 = minutes42.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes46 = minutes42.plus(0);
        int int47 = minutes40.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes42);
        org.joda.time.Minutes minutes49 = minutes42.plus((int) ' ');
        java.lang.String str50 = minutes42.toString();
        org.joda.time.Minutes minutes52 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean53 = minutes42.isLessThan(minutes52);
        boolean boolean54 = minutes39.isLessThan(minutes42);
        org.joda.time.Minutes minutes55 = minutes23.minus(minutes39);
        org.joda.time.MutablePeriod mutablePeriod56 = minutes23.toMutablePeriod();
        org.joda.time.Minutes minutes58 = minutes23.dividedBy(2);
        org.joda.time.Minutes minutes59 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes61 = minutes59.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType63 = null;
        int int64 = minutes62.get(durationFieldType63);
        org.joda.time.DurationFieldType durationFieldType65 = minutes62.getFieldType();
        int int66 = minutes61.get(durationFieldType65);
        org.joda.time.Minutes minutes68 = minutes61.plus((-1));
        org.joda.time.Minutes minutes69 = minutes68.negated();
        org.joda.time.Minutes minutes70 = minutes58.plus(minutes69);
        org.joda.time.Minutes minutes72 = minutes69.multipliedBy((-22139006));
        org.joda.time.Minutes minutes74 = org.joda.time.Minutes.minutes((int) ' ');
        org.joda.time.Minutes minutes75 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes76 = minutes75.negated();
        org.joda.time.PeriodType periodType77 = minutes76.getPeriodType();
        org.joda.time.Minutes minutes78 = minutes76.negated();
        org.joda.time.Minutes minutes80 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes82 = minutes80.plus(0);
        org.joda.time.DurationFieldType durationFieldType83 = minutes82.getFieldType();
        int int84 = minutes78.get(durationFieldType83);
        boolean boolean85 = minutes74.isSupported(durationFieldType83);
        boolean boolean86 = minutes72.isSupported(durationFieldType83);
        boolean boolean87 = minutes16.isSupported(durationFieldType83);
        int int88 = minutes13.get(durationFieldType83);
        org.joda.time.Minutes minutes90 = minutes13.plus((int) (byte) 100);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-2) + "'", int37 == (-2));
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "PT2M" + "'", str50, "PT2M");
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(mutablePeriod56);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-2) + "'", int66 == (-2));
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertNotNull(minutes74);
        org.junit.Assert.assertNotNull(minutes75);
        org.junit.Assert.assertNotNull(minutes76);
        org.junit.Assert.assertNotNull(periodType77);
        org.junit.Assert.assertNotNull(minutes78);
        org.junit.Assert.assertNotNull(minutes80);
        org.junit.Assert.assertNotNull(minutes82);
        org.junit.Assert.assertNotNull(durationFieldType83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 2147483647 + "'", int84 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNotNull(minutes90);
    }

    @Test
    public void test0810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0810");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((-4));
        org.joda.time.Period period2 = minutes1.toPeriod();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes4 = minutes3.negated();
        org.joda.time.Minutes minutes6 = minutes4.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes6);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = minutes11.get(durationFieldType12);
        org.joda.time.DurationFieldType durationFieldType14 = minutes11.getFieldType();
        int int15 = minutes10.get(durationFieldType14);
        int int16 = minutes7.get(durationFieldType14);
        org.joda.time.PeriodType periodType17 = minutes7.getPeriodType();
        int int18 = minutes7.getMinutes();
        boolean boolean19 = minutes1.isGreaterThan(minutes7);
        org.joda.time.Minutes minutes20 = minutes1.negated();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes22 = minutes21.negated();
        org.joda.time.PeriodType periodType23 = minutes22.getPeriodType();
        org.joda.time.Minutes minutes24 = minutes22.negated();
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes28 = minutes26.plus(0);
        org.joda.time.DurationFieldType durationFieldType29 = minutes28.getFieldType();
        int int30 = minutes24.get(durationFieldType29);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes33 = minutes31.minus((int) (short) 1);
        org.joda.time.Minutes minutes35 = minutes33.multipliedBy(0);
        org.joda.time.Duration duration36 = minutes33.toStandardDuration();
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes38 = minutes37.negated();
        org.joda.time.DurationFieldType durationFieldType39 = minutes37.getFieldType();
        int int40 = minutes33.get(durationFieldType39);
        boolean boolean41 = minutes24.isSupported(durationFieldType39);
        boolean boolean42 = minutes1.isGreaterThan(minutes24);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-2) + "'", int15 == (-2));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2147483647 + "'", int16 == 2147483647);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483647 + "'", int18 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2147483647 + "'", int30 == 2147483647);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2147483646 + "'", int40 == 2147483646);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test0811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0811");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        int int9 = minutes2.getMinutes();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean12 = minutes2.isLessThan(minutes11);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration14 = minutes13.toStandardDuration();
        org.joda.time.Duration duration15 = minutes13.toStandardDuration();
        org.joda.time.Minutes minutes17 = minutes13.minus(2);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes20 = minutes18.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes21 = minutes18.negated();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes23 = minutes22.negated();
        org.joda.time.Minutes minutes24 = minutes22.negated();
        boolean boolean25 = minutes18.equals((java.lang.Object) minutes24);
        boolean boolean26 = minutes17.isLessThan(minutes18);
        org.joda.time.Minutes minutes27 = minutes11.minus(minutes18);
        int int28 = minutes18.getMinutes();
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration30 = minutes29.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod31 = minutes29.toMutablePeriod();
        java.lang.String str32 = minutes29.toString();
        org.joda.time.PeriodType periodType33 = minutes29.getPeriodType();
        boolean boolean34 = minutes18.isGreaterThan(minutes29);
        // The following exception was thrown during execution in test generation
        try {
            int int36 = minutes18.getValue((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-2) + "'", int9 == (-2));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "PT2M" + "'", str32, "PT2M");
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test0812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0812");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = minutes0.negated();
        java.lang.String str3 = minutes0.toString();
        int int4 = minutes0.size();
        org.joda.time.Minutes minutes6 = minutes0.minus(0);
        org.joda.time.Minutes minutes8 = minutes0.plus((int) (short) 0);
        org.joda.time.Minutes minutes10 = minutes8.minus(214748366);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2147483647M" + "'", str3, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
    }

    @Test
    public void test0813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0813");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod2 = minutes0.toMutablePeriod();
        java.lang.String str3 = minutes0.toString();
        org.joda.time.PeriodType periodType4 = minutes0.getPeriodType();
        org.joda.time.Period period5 = minutes0.toPeriod();
        org.joda.time.Weeks weeks6 = minutes0.toStandardWeeks();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2M" + "'", str3, "PT2M");
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(weeks6);
    }

    @Test
    public void test0814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0814");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes9 = minutes2.plus((-1));
        org.joda.time.Minutes minutes11 = minutes2.minus((int) (short) 10);
        org.joda.time.DurationFieldType durationFieldType13 = minutes2.getFieldType((int) (short) 0);
        int int14 = minutes2.getMinutes();
        org.joda.time.Minutes minutes16 = minutes2.multipliedBy(10);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-2) + "'", int14 == (-2));
        org.junit.Assert.assertNotNull(minutes16);
    }

    @Test
    public void test0815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0815");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        org.joda.time.Minutes minutes14 = minutes7.plus((-1));
        org.joda.time.Minutes minutes16 = minutes7.minus((int) (short) 10);
        org.joda.time.Minutes minutes18 = minutes16.dividedBy((-2147483648));
        org.joda.time.Minutes minutes19 = minutes4.plus(minutes18);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes22 = minutes20.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = minutes23.get(durationFieldType24);
        org.joda.time.MutablePeriod mutablePeriod26 = minutes23.toMutablePeriod();
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes23);
        boolean boolean28 = minutes22.isLessThan(minutes27);
        org.joda.time.DurationFieldType durationFieldType29 = minutes27.getFieldType();
        boolean boolean30 = minutes19.isSupported(durationFieldType29);
        org.joda.time.Minutes minutes32 = minutes19.plus((int) (short) -1);
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes35 = minutes33.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes36 = minutes33.negated();
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes39 = minutes33.minus(minutes38);
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod41 = minutes40.toMutablePeriod();
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod41);
        boolean boolean43 = minutes33.isLessThan(minutes42);
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes42);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes47 = minutes45.minus((int) (short) 0);
        boolean boolean48 = minutes42.isLessThan(minutes47);
        org.joda.time.Minutes minutes50 = minutes47.multipliedBy((int) (short) 0);
        boolean boolean51 = minutes19.isGreaterThan(minutes50);
        org.joda.time.Minutes minutes52 = minutes19.negated();
        int int53 = minutes52.size();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
    }

    @Test
    public void test0816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0816");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = minutes12.getFieldType();
        int int16 = minutes11.get(durationFieldType15);
        org.joda.time.Minutes minutes18 = minutes11.plus((-1));
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = minutes21.plus(0);
        int int26 = minutes19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes21);
        org.joda.time.Minutes minutes28 = minutes21.plus((int) ' ');
        java.lang.String str29 = minutes21.toString();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean32 = minutes21.isLessThan(minutes31);
        boolean boolean33 = minutes18.isLessThan(minutes21);
        org.joda.time.Minutes minutes34 = minutes2.minus(minutes18);
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.ZERO;
        int int36 = minutes34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes35);
        org.joda.time.Minutes minutes38 = minutes34.minus(2147483647);
        org.joda.time.MutablePeriod mutablePeriod39 = minutes34.toMutablePeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2M" + "'", str29, "PT2M");
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
    }

    @Test
    public void test0817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0817");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes3 = minutes1.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes6 = minutes4.dividedBy((int) 'a');
        org.joda.time.Minutes minutes8 = minutes4.plus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType9 = minutes8.getFieldType();
        boolean boolean10 = minutes1.isSupported(durationFieldType9);
        org.joda.time.Period period11 = minutes1.toPeriod();
        org.joda.time.Minutes minutes13 = minutes1.minus(0);
        java.lang.String str14 = minutes13.toString();
        org.joda.time.Minutes minutes16 = minutes13.minus((-2147483645));
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "PT-2147483647M" + "'", str14, "PT-2147483647M");
        org.junit.Assert.assertNotNull(minutes16);
    }

    @Test
    public void test0818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0818");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((int) (byte) 0);
        org.joda.time.PeriodType periodType2 = minutes1.getPeriodType();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(periodType2);
    }

    @Test
    public void test0819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0819");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = minutes0.negated();
        java.lang.String str3 = minutes0.toString();
        org.joda.time.Minutes minutes5 = minutes0.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes8 = minutes6.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes11 = minutes9.minus((int) (short) 1);
        org.joda.time.Minutes minutes13 = minutes11.multipliedBy(0);
        org.joda.time.Minutes minutes15 = minutes13.plus((-2147483648));
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes17 = minutes16.negated();
        org.joda.time.Minutes minutes18 = minutes16.negated();
        boolean boolean19 = minutes15.isGreaterThan(minutes18);
        int int20 = minutes6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes15);
        org.joda.time.MutablePeriod mutablePeriod21 = minutes15.toMutablePeriod();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration23 = minutes22.toStandardDuration();
        org.joda.time.Duration duration24 = minutes22.toStandardDuration();
        org.joda.time.Minutes minutes26 = minutes22.minus(2);
        boolean boolean27 = minutes15.isGreaterThan(minutes26);
        int int28 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes26);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes30 = minutes29.negated();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes29);
        java.lang.String str32 = minutes29.toString();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType34 = minutes33.getFieldType();
        boolean boolean35 = minutes29.isSupported(durationFieldType34);
        org.joda.time.DurationFieldType durationFieldType36 = minutes29.getFieldType();
        boolean boolean37 = minutes0.isSupported(durationFieldType36);
        java.lang.Class<?> wildcardClass38 = minutes0.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2147483647M" + "'", str3, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "PT2147483647M" + "'", str32, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0820");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (byte) 0);
        org.joda.time.Minutes minutes4 = minutes1.negated();
        org.joda.time.Minutes minutes6 = minutes1.plus((-4));
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
    }

    @Test
    public void test0821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0821");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        int int4 = minutes2.getMinutes();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes8 = minutes6.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = minutes9.get(durationFieldType10);
        org.joda.time.DurationFieldType durationFieldType12 = minutes9.getFieldType();
        int int13 = minutes8.get(durationFieldType12);
        org.joda.time.Minutes minutes15 = minutes8.plus((-1));
        boolean boolean16 = minutes5.isGreaterThan(minutes8);
        org.joda.time.DurationFieldType durationFieldType17 = minutes8.getFieldType();
        org.joda.time.PeriodType periodType18 = minutes8.getPeriodType();
        boolean boolean19 = minutes2.equals((java.lang.Object) minutes8);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes22 = minutes20.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = minutes23.get(durationFieldType24);
        org.joda.time.MutablePeriod mutablePeriod26 = minutes23.toMutablePeriod();
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes23);
        boolean boolean28 = minutes22.isLessThan(minutes27);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes31 = minutes29.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType33 = null;
        int int34 = minutes32.get(durationFieldType33);
        org.joda.time.DurationFieldType durationFieldType35 = minutes32.getFieldType();
        int int36 = minutes31.get(durationFieldType35);
        org.joda.time.Minutes minutes38 = minutes31.plus((-1));
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod40 = minutes39.toMutablePeriod();
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes43 = minutes41.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes45 = minutes41.plus(0);
        int int46 = minutes39.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes41);
        org.joda.time.Minutes minutes48 = minutes41.plus((int) ' ');
        java.lang.String str49 = minutes41.toString();
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean52 = minutes41.isLessThan(minutes51);
        boolean boolean53 = minutes38.isLessThan(minutes41);
        org.joda.time.Minutes minutes54 = minutes22.minus(minutes38);
        org.joda.time.MutablePeriod mutablePeriod55 = minutes22.toMutablePeriod();
        org.joda.time.Minutes minutes57 = minutes22.dividedBy(2);
        org.joda.time.Minutes minutes58 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes60 = minutes58.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes61 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType62 = null;
        int int63 = minutes61.get(durationFieldType62);
        org.joda.time.DurationFieldType durationFieldType64 = minutes61.getFieldType();
        int int65 = minutes60.get(durationFieldType64);
        org.joda.time.Minutes minutes67 = minutes60.plus((-1));
        org.joda.time.Minutes minutes68 = minutes67.negated();
        org.joda.time.Minutes minutes69 = minutes57.plus(minutes68);
        org.joda.time.Minutes minutes71 = minutes68.multipliedBy((-22139006));
        org.joda.time.Minutes minutes73 = org.joda.time.Minutes.minutes((int) ' ');
        org.joda.time.Minutes minutes74 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes75 = minutes74.negated();
        org.joda.time.PeriodType periodType76 = minutes75.getPeriodType();
        org.joda.time.Minutes minutes77 = minutes75.negated();
        org.joda.time.Minutes minutes79 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes81 = minutes79.plus(0);
        org.joda.time.DurationFieldType durationFieldType82 = minutes81.getFieldType();
        int int83 = minutes77.get(durationFieldType82);
        boolean boolean84 = minutes73.isSupported(durationFieldType82);
        boolean boolean85 = minutes71.isSupported(durationFieldType82);
        int int86 = minutes8.get(durationFieldType82);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-2) + "'", int13 == (-2));
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-2) + "'", int36 == (-2));
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "PT2M" + "'", str49, "PT2M");
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(mutablePeriod55);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(durationFieldType64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-2) + "'", int65 == (-2));
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertNotNull(minutes73);
        org.junit.Assert.assertNotNull(minutes74);
        org.junit.Assert.assertNotNull(minutes75);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(minutes77);
        org.junit.Assert.assertNotNull(minutes79);
        org.junit.Assert.assertNotNull(minutes81);
        org.junit.Assert.assertNotNull(durationFieldType82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 2147483647 + "'", int83 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-2) + "'", int86 == (-2));
    }

    @Test
    public void test0822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0822");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.Minutes minutes13 = minutes3.plus(10);
        int int14 = minutes3.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-2) + "'", int14 == (-2));
    }

    @Test
    public void test0823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0823");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.DurationFieldType durationFieldType12 = minutes3.getFieldType();
        int int14 = minutes3.getValue((int) (short) 0);
        org.joda.time.Period period15 = minutes3.toPeriod();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes17 = minutes16.negated();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod19 = minutes18.toMutablePeriod();
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes21 = minutes18.plus(minutes20);
        int int22 = minutes17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes20);
        org.joda.time.Minutes minutes23 = minutes3.minus(minutes17);
        int int24 = minutes17.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-2) + "'", int14 == (-2));
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-2147483647) + "'", int24 == (-2147483647));
    }

    @Test
    public void test0824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0824");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = minutes12.getFieldType();
        int int16 = minutes11.get(durationFieldType15);
        org.joda.time.Minutes minutes18 = minutes11.plus((-1));
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = minutes21.plus(0);
        int int26 = minutes19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes21);
        org.joda.time.Minutes minutes28 = minutes21.plus((int) ' ');
        java.lang.String str29 = minutes21.toString();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean32 = minutes21.isLessThan(minutes31);
        boolean boolean33 = minutes18.isLessThan(minutes21);
        org.joda.time.Minutes minutes34 = minutes2.minus(minutes18);
        org.joda.time.DurationFieldType durationFieldType35 = minutes2.getFieldType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2M" + "'", str29, "PT2M");
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(durationFieldType35);
    }

    @Test
    public void test0825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0825");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod2 = minutes0.toMutablePeriod();
        java.lang.String str3 = minutes0.toString();
        int int4 = minutes0.size();
        int int5 = minutes0.getMinutes();
        java.lang.Class<?> wildcardClass6 = minutes0.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2M" + "'", str3, "PT2M");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0826");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        java.lang.String str10 = minutes2.toString();
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean13 = minutes2.isLessThan(minutes12);
        org.joda.time.MutablePeriod mutablePeriod14 = minutes12.toMutablePeriod();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes16 = minutes12.minus((-2147483645));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 2147483647 + 2147483645");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT2M" + "'", str10, "PT2M");
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(mutablePeriod14);
    }

    @Test
    public void test0827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0827");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.minus((int) (short) 1);
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy(0);
        org.joda.time.Minutes minutes6 = minutes4.plus((-2147483648));
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes8 = minutes7.negated();
        org.joda.time.Minutes minutes9 = minutes7.negated();
        boolean boolean10 = minutes6.isGreaterThan(minutes9);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes13 = minutes11.minus((int) (short) 1);
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy(0);
        int int16 = minutes9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes13);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes18 = minutes13.minus((-2147483548));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 2147483646 + 2147483548");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test0828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0828");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = minutes0.get(durationFieldType1);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType4 = minutes0.getFieldType();
        org.joda.time.Minutes minutes6 = minutes0.dividedBy((-1));
        org.joda.time.Minutes minutes8 = minutes0.dividedBy(2147483646);
        org.joda.time.Period period9 = minutes0.toPeriod();
        org.joda.time.Minutes minutes11 = minutes0.dividedBy((-2147483647));
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType13 = minutes11.getFieldType(3);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(minutes11);
    }

    @Test
    public void test0829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0829");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.Minutes minutes13 = minutes3.multipliedBy(2);
        org.joda.time.Minutes minutes14 = minutes13.negated();
        int int15 = minutes14.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 4 + "'", int15 == 4);
    }

    @Test
    public void test0830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0830");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes(10);
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod3 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = minutes4.plus(0);
        int int9 = minutes2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes4);
        org.joda.time.Minutes minutes11 = minutes4.plus((int) ' ');
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = minutes12.getFieldType();
        int int14 = minutes4.get(durationFieldType13);
        boolean boolean15 = minutes1.isSupported(durationFieldType13);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes17 = minutes16.negated();
        org.joda.time.DurationFieldType durationFieldType18 = minutes16.getFieldType();
        org.joda.time.MutablePeriod mutablePeriod19 = minutes16.toMutablePeriod();
        org.joda.time.Minutes minutes20 = minutes1.minus(minutes16);
        java.lang.Object obj21 = null;
        boolean boolean22 = minutes20.equals(obj21);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test0831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0831");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        int int1 = minutes0.size();
        org.joda.time.Duration duration2 = minutes0.toStandardDuration();
        java.lang.Class<?> wildcardClass3 = minutes0.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0832");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        org.joda.time.Minutes minutes14 = minutes7.plus((-1));
        org.joda.time.Minutes minutes16 = minutes7.minus((int) (short) 10);
        org.joda.time.Minutes minutes18 = minutes16.dividedBy((-2147483648));
        org.joda.time.Minutes minutes19 = minutes4.plus(minutes18);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType21 = minutes20.getPeriodType();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes23 = minutes22.negated();
        org.joda.time.Minutes minutes24 = minutes22.negated();
        org.joda.time.DurationFieldType durationFieldType25 = minutes22.getFieldType();
        java.lang.String str26 = minutes22.toString();
        boolean boolean27 = minutes20.isGreaterThan(minutes22);
        boolean boolean28 = minutes4.isLessThan(minutes22);
        org.joda.time.PeriodType periodType29 = minutes22.getPeriodType();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes33 = minutes31.plus(0);
        org.joda.time.DurationFieldType durationFieldType34 = minutes33.getFieldType();
        boolean boolean35 = minutes22.isSupported(durationFieldType34);
        org.joda.time.Minutes minutes37 = minutes22.dividedBy((int) (short) -1);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "PT2147483647M" + "'", str26, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(minutes37);
    }

    @Test
    public void test0833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0833");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType11 = minutes2.getFieldType((-3));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -3");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
    }

    @Test
    public void test0834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0834");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        org.joda.time.Minutes minutes14 = minutes7.plus((-1));
        org.joda.time.Minutes minutes16 = minutes7.minus((int) (short) 10);
        org.joda.time.Minutes minutes18 = minutes16.dividedBy((-2147483648));
        org.joda.time.Minutes minutes19 = minutes4.plus(minutes18);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes22 = minutes20.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = minutes23.get(durationFieldType24);
        org.joda.time.MutablePeriod mutablePeriod26 = minutes23.toMutablePeriod();
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes23);
        boolean boolean28 = minutes22.isLessThan(minutes27);
        org.joda.time.DurationFieldType durationFieldType29 = minutes27.getFieldType();
        boolean boolean30 = minutes19.isSupported(durationFieldType29);
        org.joda.time.Minutes minutes32 = minutes19.plus((int) (short) -1);
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes35 = minutes33.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes36 = minutes33.negated();
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes39 = minutes33.minus(minutes38);
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod41 = minutes40.toMutablePeriod();
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod41);
        boolean boolean43 = minutes33.isLessThan(minutes42);
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes42);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes47 = minutes45.minus((int) (short) 0);
        boolean boolean48 = minutes42.isLessThan(minutes47);
        org.joda.time.Minutes minutes50 = minutes47.multipliedBy((int) (short) 0);
        boolean boolean51 = minutes19.isGreaterThan(minutes50);
        org.joda.time.Minutes minutes52 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes54 = minutes52.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes55 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType56 = null;
        int int57 = minutes55.get(durationFieldType56);
        org.joda.time.MutablePeriod mutablePeriod58 = minutes55.toMutablePeriod();
        org.joda.time.Minutes minutes59 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes55);
        boolean boolean60 = minutes54.isLessThan(minutes59);
        int int61 = minutes54.getMinutes();
        org.joda.time.Minutes minutes63 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean64 = minutes54.isLessThan(minutes63);
        org.joda.time.Minutes minutes65 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes54);
        boolean boolean66 = minutes50.isGreaterThan(minutes65);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-2) + "'", int61 == (-2));
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
    }

    @Test
    public void test0835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0835");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        java.lang.String str3 = minutes0.toString();
        org.joda.time.PeriodType periodType4 = minutes0.getPeriodType();
        org.joda.time.Minutes minutes5 = null;
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes9 = minutes7.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = minutes10.get(durationFieldType11);
        org.joda.time.DurationFieldType durationFieldType13 = minutes10.getFieldType();
        int int14 = minutes9.get(durationFieldType13);
        org.joda.time.Minutes minutes16 = minutes9.plus((-1));
        org.joda.time.Minutes minutes18 = minutes9.minus((int) (short) 10);
        org.joda.time.Minutes minutes20 = minutes18.dividedBy((-2147483648));
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod22 = minutes21.toMutablePeriod();
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes24 = minutes21.plus(minutes23);
        org.joda.time.Minutes minutes25 = minutes18.minus(minutes23);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes28 = minutes26.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes30 = minutes26.plus(0);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes33 = minutes31.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = minutes34.get(durationFieldType35);
        org.joda.time.DurationFieldType durationFieldType37 = minutes34.getFieldType();
        int int38 = minutes33.get(durationFieldType37);
        org.joda.time.Minutes minutes40 = minutes33.plus((-1));
        org.joda.time.Minutes minutes42 = minutes33.minus((int) (short) 10);
        org.joda.time.Minutes minutes44 = minutes42.dividedBy((-2147483648));
        org.joda.time.Minutes minutes45 = minutes30.plus(minutes44);
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes48 = minutes46.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType50 = null;
        int int51 = minutes49.get(durationFieldType50);
        org.joda.time.MutablePeriod mutablePeriod52 = minutes49.toMutablePeriod();
        org.joda.time.Minutes minutes53 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes49);
        boolean boolean54 = minutes48.isLessThan(minutes53);
        org.joda.time.DurationFieldType durationFieldType55 = minutes53.getFieldType();
        boolean boolean56 = minutes45.isSupported(durationFieldType55);
        int int57 = minutes18.get(durationFieldType55);
        int int58 = minutes6.get(durationFieldType55);
        org.joda.time.PeriodType periodType59 = minutes6.getPeriodType();
        org.joda.time.Minutes minutes60 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod61 = minutes60.toMutablePeriod();
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes63 = minutes60.plus(minutes62);
        org.joda.time.Minutes minutes64 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod65 = minutes64.toMutablePeriod();
        org.joda.time.Minutes minutes66 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes67 = minutes64.plus(minutes66);
        boolean boolean68 = minutes63.isLessThan(minutes64);
        org.joda.time.PeriodType periodType69 = minutes63.getPeriodType();
        org.joda.time.Minutes minutes71 = minutes63.dividedBy(3);
        org.joda.time.Minutes minutes73 = minutes71.dividedBy(10);
        org.joda.time.Minutes minutes75 = minutes73.minus((-22139006));
        org.joda.time.MutablePeriod mutablePeriod76 = minutes75.toMutablePeriod();
        org.joda.time.Minutes minutes78 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes80 = minutes78.multipliedBy((int) (byte) 0);
        boolean boolean81 = minutes75.isGreaterThan(minutes78);
        int int82 = minutes6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes78);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2147483647M" + "'", str3, "PT2147483647M");
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-2) + "'", int14 == (-2));
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-2) + "'", int38 == (-2));
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-12) + "'", int57 == (-12));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2147483647 + "'", int58 == 2147483647);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(mutablePeriod61);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(mutablePeriod65);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertNotNull(minutes73);
        org.junit.Assert.assertNotNull(minutes75);
        org.junit.Assert.assertNotNull(mutablePeriod76);
        org.junit.Assert.assertNotNull(minutes78);
        org.junit.Assert.assertNotNull(minutes80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
    }

    @Test
    public void test0836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0836");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.PeriodType periodType2 = minutes1.getPeriodType();
        org.joda.time.Minutes minutes3 = minutes1.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes7 = minutes5.plus(0);
        org.joda.time.DurationFieldType durationFieldType8 = minutes7.getFieldType();
        int int9 = minutes3.get(durationFieldType8);
        int int11 = minutes3.getValue((int) (byte) 0);
        org.joda.time.Minutes minutes13 = minutes3.dividedBy(1);
        java.lang.Class<?> wildcardClass14 = minutes13.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2147483647 + "'", int9 == 2147483647);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2147483647 + "'", int11 == 2147483647);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0837");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        int int9 = minutes2.getMinutes();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean12 = minutes2.isLessThan(minutes11);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration14 = minutes13.toStandardDuration();
        org.joda.time.Duration duration15 = minutes13.toStandardDuration();
        org.joda.time.Minutes minutes17 = minutes13.minus(2);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes20 = minutes18.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes21 = minutes18.negated();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes23 = minutes22.negated();
        org.joda.time.Minutes minutes24 = minutes22.negated();
        boolean boolean25 = minutes18.equals((java.lang.Object) minutes24);
        boolean boolean26 = minutes17.isLessThan(minutes18);
        org.joda.time.Minutes minutes27 = minutes11.minus(minutes18);
        org.joda.time.Duration duration28 = minutes11.toStandardDuration();
        int int29 = minutes11.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-2) + "'", int9 == (-2));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-2147483645) + "'", int29 == (-2147483645));
    }

    @Test
    public void test0838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0838");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod3 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = minutes4.plus(0);
        int int9 = minutes2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes4);
        org.joda.time.Minutes minutes11 = minutes4.plus((int) ' ');
        java.lang.String str12 = minutes4.toString();
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean15 = minutes4.isLessThan(minutes14);
        org.joda.time.MutablePeriod mutablePeriod16 = minutes4.toMutablePeriod();
        boolean boolean17 = minutes0.isLessThan(minutes4);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MIN_VALUE;
        int int19 = minutes18.getMinutes();
        boolean boolean20 = minutes4.equals((java.lang.Object) minutes18);
        org.joda.time.Minutes minutes22 = minutes4.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration24 = minutes23.toStandardDuration();
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes23);
        org.joda.time.MutablePeriod mutablePeriod26 = minutes25.toMutablePeriod();
        boolean boolean27 = minutes22.equals((java.lang.Object) mutablePeriod26);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes29 = minutes28.negated();
        org.joda.time.Minutes minutes30 = minutes28.negated();
        java.lang.String str31 = minutes28.toString();
        org.joda.time.Minutes minutes33 = minutes28.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes37 = minutes35.multipliedBy((int) (byte) 0);
        boolean boolean38 = minutes33.equals((java.lang.Object) minutes35);
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes41 = minutes39.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes43 = minutes39.plus(0);
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes46 = minutes44.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes47 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType48 = null;
        int int49 = minutes47.get(durationFieldType48);
        org.joda.time.DurationFieldType durationFieldType50 = minutes47.getFieldType();
        int int51 = minutes46.get(durationFieldType50);
        org.joda.time.Minutes minutes53 = minutes46.plus((-1));
        org.joda.time.Minutes minutes55 = minutes46.minus((int) (short) 10);
        org.joda.time.Minutes minutes57 = minutes55.dividedBy((-2147483648));
        org.joda.time.Minutes minutes58 = minutes43.plus(minutes57);
        org.joda.time.Minutes minutes59 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes61 = minutes59.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType63 = null;
        int int64 = minutes62.get(durationFieldType63);
        org.joda.time.MutablePeriod mutablePeriod65 = minutes62.toMutablePeriod();
        org.joda.time.Minutes minutes66 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes62);
        boolean boolean67 = minutes61.isLessThan(minutes66);
        org.joda.time.DurationFieldType durationFieldType68 = minutes66.getFieldType();
        boolean boolean69 = minutes58.isSupported(durationFieldType68);
        org.joda.time.Minutes minutes71 = minutes58.plus((int) (short) -1);
        org.joda.time.Minutes minutes72 = minutes33.plus(minutes58);
        int int73 = minutes33.size();
        org.joda.time.MutablePeriod mutablePeriod74 = minutes33.toMutablePeriod();
        boolean boolean75 = minutes22.isLessThan(minutes33);
        org.joda.time.Minutes minutes77 = minutes22.minus((int) (short) 0);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PT2M" + "'", str12, "PT2M");
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2147483648) + "'", int19 == (-2147483648));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "PT2147483647M" + "'", str31, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-2) + "'", int51 == (-2));
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod65);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(durationFieldType68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(minutes77);
    }

    @Test
    public void test0839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0839");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        org.joda.time.Period period10 = minutes2.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod11 = minutes2.toMutablePeriod();
        org.joda.time.Period period12 = minutes2.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod13 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes15 = minutes2.plus((int) '4');
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes18 = minutes16.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = minutes19.get(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType22 = minutes19.getFieldType();
        int int23 = minutes18.get(durationFieldType22);
        org.joda.time.Minutes minutes25 = minutes18.plus((-1));
        org.joda.time.Minutes minutes27 = minutes18.minus((int) (short) 10);
        org.joda.time.Minutes minutes29 = minutes27.dividedBy((-2147483648));
        org.joda.time.Minutes minutes30 = minutes29.negated();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes32 = minutes31.negated();
        org.joda.time.Minutes minutes33 = minutes31.negated();
        org.joda.time.Minutes minutes34 = minutes29.minus(minutes33);
        org.joda.time.Minutes minutes36 = minutes33.plus((int) 'a');
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes36);
        org.joda.time.Minutes minutes39 = minutes36.dividedBy((int) (byte) 1);
        java.lang.String str40 = minutes36.toString();
        boolean boolean41 = minutes15.isLessThan(minutes36);
        // The following exception was thrown during execution in test generation
        try {
            int int43 = minutes36.getValue((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-2) + "'", int23 == (-2));
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "PT-2147483550M" + "'", str40, "PT-2147483550M");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test0840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0840");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        int int1 = minutes0.getMinutes();
        org.joda.time.PeriodType periodType2 = minutes0.getPeriodType();
        org.joda.time.Minutes minutes3 = null;
        org.joda.time.Minutes minutes4 = minutes0.plus(minutes3);
        int int5 = minutes0.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-2147483648) + "'", int1 == (-2147483648));
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-2147483648) + "'", int5 == (-2147483648));
    }

    @Test
    public void test0841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0841");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod1);
        // The following exception was thrown during execution in test generation
        try {
            int int4 = minutes2.getValue((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
    }

    @Test
    public void test0842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0842");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.minus((int) (short) 0);
        org.joda.time.PeriodType periodType3 = minutes2.getPeriodType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(periodType3);
    }

    @Test
    public void test0843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0843");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        int int1 = minutes0.getMinutes();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes7 = minutes4.negated();
        boolean boolean8 = minutes3.equals((java.lang.Object) minutes7);
        java.lang.String str9 = minutes7.toString();
        org.joda.time.DurationFieldType durationFieldType10 = minutes7.getFieldType();
        boolean boolean11 = minutes0.equals((java.lang.Object) minutes7);
        java.lang.Class<?> wildcardClass12 = minutes7.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-2147483648) + "'", int1 == (-2147483648));
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT-2M" + "'", str9, "PT-2M");
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0844");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType3 = minutes2.getFieldType();
        org.joda.time.Minutes minutes4 = minutes2.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes6 = minutes5.negated();
        org.joda.time.Minutes minutes7 = minutes5.negated();
        java.lang.String str8 = minutes5.toString();
        int int9 = minutes5.size();
        org.joda.time.Minutes minutes11 = minutes5.minus(0);
        org.joda.time.Minutes minutes13 = minutes5.plus((int) (short) 0);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes5);
        boolean boolean15 = minutes4.isLessThan(minutes5);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes18 = minutes16.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes20 = minutes16.plus(0);
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MIN_VALUE;
        boolean boolean22 = minutes16.isGreaterThan(minutes21);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes24 = minutes23.negated();
        org.joda.time.Minutes minutes26 = minutes24.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes26);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes30 = minutes28.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = minutes31.get(durationFieldType32);
        org.joda.time.DurationFieldType durationFieldType34 = minutes31.getFieldType();
        int int35 = minutes30.get(durationFieldType34);
        int int36 = minutes27.get(durationFieldType34);
        org.joda.time.PeriodType periodType37 = minutes27.getPeriodType();
        int int38 = minutes27.getMinutes();
        boolean boolean39 = minutes16.isLessThan(minutes27);
        int int40 = minutes27.getMinutes();
        org.joda.time.Period period41 = minutes27.toPeriod();
        boolean boolean42 = minutes4.equals((java.lang.Object) minutes27);
        org.joda.time.Period period43 = minutes4.toPeriod();
        java.lang.Class<?> wildcardClass44 = period43.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "PT2147483647M" + "'", str8, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-2) + "'", int35 == (-2));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2147483647 + "'", int36 == 2147483647);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2147483647 + "'", int38 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2147483647 + "'", int40 == 2147483647);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0845");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod8 = minutes7.toMutablePeriod();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod8);
        boolean boolean10 = minutes0.isLessThan(minutes9);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes9);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes14 = minutes12.minus((int) (short) 0);
        boolean boolean15 = minutes9.isLessThan(minutes14);
        java.lang.String str16 = minutes14.toString();
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes18 = minutes17.negated();
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes22 = minutes19.plus(minutes21);
        int int23 = minutes18.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes21);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes25 = minutes24.negated();
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes24);
        java.lang.String str27 = minutes24.toString();
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType29 = minutes28.getFieldType();
        boolean boolean30 = minutes24.isSupported(durationFieldType29);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes24);
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes33 = minutes32.negated();
        org.joda.time.Minutes minutes35 = minutes33.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes38 = minutes36.dividedBy((int) 'a');
        org.joda.time.Minutes minutes40 = minutes36.plus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType41 = minutes40.getFieldType();
        boolean boolean42 = minutes33.isSupported(durationFieldType41);
        org.joda.time.DurationFieldType durationFieldType43 = minutes33.getFieldType();
        boolean boolean44 = minutes24.isSupported(durationFieldType43);
        boolean boolean45 = minutes21.isSupported(durationFieldType43);
        int int46 = minutes14.get(durationFieldType43);
        org.joda.time.Minutes minutes48 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes51 = minutes49.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes52 = minutes49.negated();
        boolean boolean53 = minutes48.equals((java.lang.Object) minutes52);
        java.lang.String str54 = minutes52.toString();
        org.joda.time.Minutes minutes55 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes57 = minutes55.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes58 = minutes55.negated();
        org.joda.time.Minutes minutes59 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes60 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes62 = minutes60.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes63 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType64 = null;
        int int65 = minutes63.get(durationFieldType64);
        org.joda.time.DurationFieldType durationFieldType66 = minutes63.getFieldType();
        int int67 = minutes62.get(durationFieldType66);
        org.joda.time.Minutes minutes69 = minutes62.plus((-1));
        boolean boolean70 = minutes59.isGreaterThan(minutes62);
        org.joda.time.DurationFieldType durationFieldType71 = minutes62.getFieldType();
        boolean boolean72 = minutes58.isSupported(durationFieldType71);
        int int73 = minutes52.get(durationFieldType71);
        boolean boolean74 = minutes14.isSupported(durationFieldType71);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT-2147483648M" + "'", str16, "PT-2147483648M");
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "PT2147483647M" + "'", str27, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-2147483648) + "'", int46 == (-2147483648));
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "PT-2M" + "'", str54, "PT-2M");
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(durationFieldType66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-2) + "'", int67 == (-2));
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(durationFieldType71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-2) + "'", int73 == (-2));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
    }

    @Test
    public void test0846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0846");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType2 = minutes1.getPeriodType();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes4 = minutes3.negated();
        org.joda.time.Minutes minutes5 = minutes3.negated();
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        java.lang.String str7 = minutes3.toString();
        boolean boolean8 = minutes1.isGreaterThan(minutes3);
        boolean boolean9 = minutes0.equals((java.lang.Object) minutes1);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes12 = minutes11.negated();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes11);
        org.joda.time.Minutes minutes14 = minutes10.minus(minutes13);
        org.joda.time.Minutes minutes16 = minutes10.minus(34);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds17 = minutes16.toStandardSeconds();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 2147483613 * 60");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT2147483647M" + "'", str7, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
    }

    @Test
    public void test0847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0847");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = minutes12.getFieldType();
        int int16 = minutes11.get(durationFieldType15);
        org.joda.time.Minutes minutes18 = minutes11.plus((-1));
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = minutes21.plus(0);
        int int26 = minutes19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes21);
        org.joda.time.Minutes minutes28 = minutes21.plus((int) ' ');
        java.lang.String str29 = minutes21.toString();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean32 = minutes21.isLessThan(minutes31);
        boolean boolean33 = minutes18.isLessThan(minutes21);
        org.joda.time.Minutes minutes34 = minutes2.minus(minutes18);
        org.joda.time.MutablePeriod mutablePeriod35 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes37 = minutes2.dividedBy(2);
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes40 = minutes38.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.MAX_VALUE;
        int int42 = minutes41.size();
        int int43 = minutes38.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes41);
        org.joda.time.Minutes minutes44 = minutes2.plus(minutes38);
        org.joda.time.Minutes minutes46 = minutes38.minus(4);
        int int47 = minutes46.size();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2M" + "'", str29, "PT2M");
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
    }

    @Test
    public void test0848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0848");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.PeriodType periodType2 = minutes1.getPeriodType();
        org.joda.time.Minutes minutes3 = minutes1.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes7 = minutes5.plus(0);
        org.joda.time.DurationFieldType durationFieldType8 = minutes7.getFieldType();
        int int9 = minutes3.get(durationFieldType8);
        int int11 = minutes3.getValue((int) (byte) 0);
        org.joda.time.Minutes minutes13 = minutes3.dividedBy(1);
        int int14 = minutes13.size();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2147483647 + "'", int9 == 2147483647);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2147483647 + "'", int11 == 2147483647);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
    }

    @Test
    public void test0849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0849");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        int int1 = minutes0.size();
        int int3 = minutes0.getValue(0);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        org.joda.time.Minutes minutes14 = minutes7.plus((-1));
        org.joda.time.Minutes minutes16 = minutes7.minus((int) (short) 10);
        org.joda.time.Duration duration17 = minutes7.toStandardDuration();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes19 = minutes18.negated();
        org.joda.time.Minutes minutes20 = minutes18.negated();
        java.lang.String str21 = minutes18.toString();
        org.joda.time.Minutes minutes23 = minutes18.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes27 = minutes25.multipliedBy((int) (byte) 0);
        boolean boolean28 = minutes23.equals((java.lang.Object) minutes25);
        boolean boolean29 = minutes7.isGreaterThan(minutes25);
        boolean boolean30 = minutes4.equals((java.lang.Object) boolean29);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes33 = minutes31.multipliedBy((int) (short) -1);
        org.joda.time.MutablePeriod mutablePeriod34 = minutes31.toMutablePeriod();
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType36 = null;
        int int37 = minutes35.get(durationFieldType36);
        org.joda.time.DurationFieldType durationFieldType38 = minutes35.getFieldType();
        int int39 = minutes31.get(durationFieldType38);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes40 = minutes4.plus(minutes31);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 2147483647 + 2");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2147483647 + "'", int3 == 2147483647);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT2147483647M" + "'", str21, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
    }

    @Test
    public void test0850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0850");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = minutes12.getFieldType();
        int int16 = minutes11.get(durationFieldType15);
        org.joda.time.Minutes minutes18 = minutes11.plus((-1));
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = minutes21.plus(0);
        int int26 = minutes19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes21);
        org.joda.time.Minutes minutes28 = minutes21.plus((int) ' ');
        java.lang.String str29 = minutes21.toString();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean32 = minutes21.isLessThan(minutes31);
        boolean boolean33 = minutes18.isLessThan(minutes21);
        org.joda.time.Minutes minutes34 = minutes2.minus(minutes18);
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.ZERO;
        int int36 = minutes34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes35);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes38 = minutes37.negated();
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod40 = minutes39.toMutablePeriod();
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes42 = minutes39.plus(minutes41);
        int int43 = minutes38.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes41);
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.MAX_VALUE;
        int int45 = minutes38.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes44);
        boolean boolean46 = minutes34.isLessThan(minutes38);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes48 = minutes38.dividedBy(0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2M" + "'", str29, "PT2M");
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test0851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0851");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        java.lang.String str10 = minutes2.toString();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod12 = minutes11.toMutablePeriod();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes17 = minutes13.plus(0);
        int int18 = minutes11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes13);
        org.joda.time.Minutes minutes20 = minutes13.plus((int) ' ');
        java.lang.String str21 = minutes13.toString();
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean24 = minutes13.isLessThan(minutes23);
        org.joda.time.Minutes minutes25 = minutes2.minus(minutes13);
        org.joda.time.Minutes minutes27 = minutes2.dividedBy((-2147483548));
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT2M" + "'", str10, "PT2M");
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT2M" + "'", str21, "PT2M");
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
    }

    @Test
    public void test0852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0852");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.DurationFieldType durationFieldType12 = minutes3.getFieldType();
        int int14 = minutes3.getValue((int) (short) 0);
        org.joda.time.Period period15 = minutes3.toPeriod();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes17 = minutes16.negated();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod19 = minutes18.toMutablePeriod();
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes21 = minutes18.plus(minutes20);
        int int22 = minutes17.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes20);
        org.joda.time.Minutes minutes23 = minutes3.minus(minutes17);
        int int24 = minutes23.size();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-2) + "'", int14 == (-2));
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
    }

    @Test
    public void test0853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0853");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((int) (short) 0);
        org.junit.Assert.assertNotNull(minutes1);
    }

    @Test
    public void test0854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0854");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        int int1 = minutes0.size();
        int int3 = minutes0.getValue(0);
        org.joda.time.Minutes minutes4 = minutes0.negated();
        org.joda.time.MutablePeriod mutablePeriod5 = minutes0.toMutablePeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2147483647 + "'", int3 == 2147483647);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
    }

    @Test
    public void test0855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0855");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        int int4 = minutes3.size();
        int int5 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes3);
        org.joda.time.Minutes minutes7 = minutes3.dividedBy(2147483646);
        org.joda.time.MutablePeriod mutablePeriod8 = minutes7.toMutablePeriod();
        org.joda.time.Minutes minutes9 = null;
        org.joda.time.Minutes minutes10 = minutes7.minus(minutes9);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(minutes10);
    }

    @Test
    public void test0856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0856");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        org.joda.time.Period period10 = minutes2.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod11 = minutes2.toMutablePeriod();
        org.joda.time.Period period12 = minutes2.toPeriod();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = minutes16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = minutes16.getFieldType();
        int int20 = minutes15.get(durationFieldType19);
        org.joda.time.Minutes minutes21 = minutes15.negated();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType24 = minutes23.getPeriodType();
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes26 = minutes25.negated();
        org.joda.time.Minutes minutes27 = minutes25.negated();
        org.joda.time.DurationFieldType durationFieldType28 = minutes25.getFieldType();
        java.lang.String str29 = minutes25.toString();
        boolean boolean30 = minutes23.isGreaterThan(minutes25);
        boolean boolean31 = minutes22.equals((java.lang.Object) minutes23);
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes22);
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes36 = minutes34.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = minutes37.get(durationFieldType38);
        org.joda.time.DurationFieldType durationFieldType40 = minutes37.getFieldType();
        int int41 = minutes36.get(durationFieldType40);
        org.joda.time.Minutes minutes43 = minutes36.plus((-1));
        boolean boolean44 = minutes33.isGreaterThan(minutes36);
        org.joda.time.DurationFieldType durationFieldType45 = minutes36.getFieldType();
        boolean boolean46 = minutes32.isSupported(durationFieldType45);
        java.lang.String str47 = minutes32.toString();
        boolean boolean48 = minutes21.isLessThan(minutes32);
        boolean boolean49 = minutes2.equals((java.lang.Object) minutes21);
        org.joda.time.PeriodType periodType50 = minutes21.getPeriodType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-2) + "'", int20 == (-2));
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2147483647M" + "'", str29, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-2) + "'", int41 == (-2));
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "PT2147483647M" + "'", str47, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(periodType50);
    }

    @Test
    public void test0857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0857");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes3 = minutes1.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        int int13 = minutes4.get(durationFieldType11);
        int int14 = minutes4.getMinutes();
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration16 = minutes15.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod17 = minutes15.toMutablePeriod();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MAX_VALUE;
        int int19 = minutes18.size();
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes21 = minutes20.negated();
        org.joda.time.Minutes minutes23 = minutes21.dividedBy((int) (byte) -1);
        boolean boolean24 = minutes18.isLessThan(minutes21);
        boolean boolean25 = minutes15.isLessThan(minutes18);
        org.joda.time.Minutes minutes27 = minutes15.multipliedBy((int) (short) -1);
        org.joda.time.Period period28 = minutes15.toPeriod();
        boolean boolean29 = minutes4.isGreaterThan(minutes15);
        org.joda.time.Period period30 = minutes15.toPeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2147483647 + "'", int13 == 2147483647);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2147483647 + "'", int14 == 2147483647);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(period30);
    }

    @Test
    public void test0858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0858");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((-4));
        org.joda.time.Period period2 = minutes1.toPeriod();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes4 = minutes3.negated();
        org.joda.time.Minutes minutes6 = minutes4.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes6);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = minutes11.get(durationFieldType12);
        org.joda.time.DurationFieldType durationFieldType14 = minutes11.getFieldType();
        int int15 = minutes10.get(durationFieldType14);
        int int16 = minutes7.get(durationFieldType14);
        org.joda.time.PeriodType periodType17 = minutes7.getPeriodType();
        int int18 = minutes7.getMinutes();
        boolean boolean19 = minutes1.isGreaterThan(minutes7);
        org.joda.time.Minutes minutes20 = minutes1.negated();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.dividedBy(2);
        int int24 = minutes21.size();
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod26 = minutes25.toMutablePeriod();
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes29 = minutes27.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes31 = minutes27.plus(0);
        int int32 = minutes25.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes27);
        org.joda.time.Minutes minutes34 = minutes27.plus((int) ' ');
        int int35 = minutes34.size();
        org.joda.time.Minutes minutes37 = minutes34.minus(0);
        org.joda.time.Minutes minutes38 = minutes21.plus(minutes34);
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes40 = minutes39.negated();
        org.joda.time.Minutes minutes42 = minutes40.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes43 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes45 = minutes43.dividedBy((int) 'a');
        org.joda.time.Minutes minutes47 = minutes43.plus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType48 = minutes47.getFieldType();
        boolean boolean49 = minutes40.isSupported(durationFieldType48);
        org.joda.time.DurationFieldType durationFieldType50 = minutes40.getFieldType();
        boolean boolean51 = minutes34.equals((java.lang.Object) minutes40);
        boolean boolean52 = minutes1.equals((java.lang.Object) minutes40);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-2) + "'", int15 == (-2));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2147483647 + "'", int16 == 2147483647);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483647 + "'", int18 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test0859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0859");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        org.joda.time.Minutes minutes14 = minutes7.plus((-1));
        org.joda.time.Minutes minutes16 = minutes7.minus((int) (short) 10);
        org.joda.time.Minutes minutes18 = minutes16.dividedBy((-2147483648));
        org.joda.time.Minutes minutes19 = minutes4.plus(minutes18);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType21 = null;
        int int22 = minutes20.get(durationFieldType21);
        org.joda.time.MutablePeriod mutablePeriod23 = minutes20.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType24 = minutes20.getFieldType();
        boolean boolean25 = minutes19.isLessThan(minutes20);
        java.lang.Class<?> wildcardClass26 = minutes19.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0860");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        int int1 = minutes0.getMinutes();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = minutes5.get(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType8 = minutes5.getFieldType();
        int int9 = minutes4.get(durationFieldType8);
        org.joda.time.Minutes minutes11 = minutes4.plus((-1));
        org.joda.time.Minutes minutes13 = minutes4.minus((int) (short) 10);
        org.joda.time.Minutes minutes15 = minutes13.dividedBy((-2147483648));
        org.joda.time.Minutes minutes16 = minutes15.negated();
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes18 = minutes17.negated();
        org.joda.time.Minutes minutes19 = minutes17.negated();
        org.joda.time.Minutes minutes20 = minutes15.minus(minutes19);
        org.joda.time.Minutes minutes22 = minutes19.plus((int) 'a');
        boolean boolean23 = minutes0.isLessThan(minutes22);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes26 = minutes24.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = minutes27.get(durationFieldType28);
        org.joda.time.MutablePeriod mutablePeriod30 = minutes27.toMutablePeriod();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes27);
        boolean boolean32 = minutes26.isLessThan(minutes31);
        int int33 = minutes26.getMinutes();
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean36 = minutes26.isLessThan(minutes35);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration38 = minutes37.toStandardDuration();
        org.joda.time.Duration duration39 = minutes37.toStandardDuration();
        org.joda.time.Minutes minutes41 = minutes37.minus(2);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes44 = minutes42.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes45 = minutes42.negated();
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes47 = minutes46.negated();
        org.joda.time.Minutes minutes48 = minutes46.negated();
        boolean boolean49 = minutes42.equals((java.lang.Object) minutes48);
        boolean boolean50 = minutes41.isLessThan(minutes42);
        org.joda.time.Minutes minutes51 = minutes35.minus(minutes42);
        org.joda.time.Minutes minutes52 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes53 = minutes52.negated();
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes52);
        java.lang.String str55 = minutes52.toString();
        org.joda.time.Minutes minutes56 = minutes51.plus(minutes52);
        org.joda.time.Minutes minutes58 = org.joda.time.Minutes.minutes((int) (short) -1);
        int int59 = minutes58.size();
        boolean boolean60 = minutes56.isGreaterThan(minutes58);
        int int61 = minutes22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes58);
        java.lang.Class<?> wildcardClass62 = minutes58.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-2147483648) + "'", int1 == (-2147483648));
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-2) + "'", int9 == (-2));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-2) + "'", int33 == (-2));
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "PT2147483647M" + "'", str55, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0861");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = minutes8.plus(0);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = minutes16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = minutes16.getFieldType();
        int int20 = minutes15.get(durationFieldType19);
        org.joda.time.Minutes minutes22 = minutes15.plus((-1));
        org.joda.time.Minutes minutes24 = minutes15.minus((int) (short) 10);
        org.joda.time.Minutes minutes26 = minutes24.dividedBy((-2147483648));
        org.joda.time.Minutes minutes27 = minutes12.plus(minutes26);
        org.joda.time.Minutes minutes28 = minutes2.minus(minutes12);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod30 = minutes29.toMutablePeriod();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes33 = minutes31.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes35 = minutes31.plus(0);
        int int36 = minutes29.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes31);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes39 = minutes37.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes41 = minutes37.plus(0);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes44 = minutes42.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType46 = null;
        int int47 = minutes45.get(durationFieldType46);
        org.joda.time.DurationFieldType durationFieldType48 = minutes45.getFieldType();
        int int49 = minutes44.get(durationFieldType48);
        org.joda.time.Minutes minutes51 = minutes44.plus((-1));
        org.joda.time.Minutes minutes53 = minutes44.minus((int) (short) 10);
        org.joda.time.Minutes minutes55 = minutes53.dividedBy((-2147483648));
        org.joda.time.Minutes minutes56 = minutes41.plus(minutes55);
        org.joda.time.Minutes minutes57 = minutes31.minus(minutes41);
        org.joda.time.PeriodType periodType58 = minutes31.getPeriodType();
        boolean boolean59 = minutes12.isLessThan(minutes31);
        org.joda.time.Minutes minutes60 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType61 = minutes60.getPeriodType();
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes63 = minutes62.negated();
        org.joda.time.Minutes minutes64 = minutes62.negated();
        org.joda.time.DurationFieldType durationFieldType65 = minutes62.getFieldType();
        java.lang.String str66 = minutes62.toString();
        boolean boolean67 = minutes60.isGreaterThan(minutes62);
        boolean boolean68 = minutes31.isLessThan(minutes60);
        java.lang.String str69 = minutes31.toString();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-2) + "'", int20 == (-2));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-2) + "'", int49 == (-2));
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "PT2147483647M" + "'", str66, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "PT2M" + "'", str69, "PT2M");
    }

    @Test
    public void test0862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0862");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes4 = minutes3.negated();
        org.joda.time.Minutes minutes6 = minutes4.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes9 = minutes7.dividedBy((int) 'a');
        org.joda.time.Minutes minutes11 = minutes7.plus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType12 = minutes11.getFieldType();
        boolean boolean13 = minutes4.isSupported(durationFieldType12);
        org.joda.time.DurationFieldType durationFieldType14 = minutes4.getFieldType();
        boolean boolean15 = minutes2.equals((java.lang.Object) minutes4);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0863");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = minutes0.get(durationFieldType1);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType4 = minutes0.getFieldType();
        org.joda.time.Minutes minutes6 = minutes0.dividedBy((-1));
        org.joda.time.Minutes minutes8 = minutes0.dividedBy(2147483646);
        org.joda.time.Minutes minutes10 = minutes0.dividedBy((-3));
        org.joda.time.Minutes minutes12 = minutes0.multipliedBy(1);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes14 = minutes13.negated();
        org.joda.time.PeriodType periodType15 = minutes14.getPeriodType();
        org.joda.time.Minutes minutes16 = minutes14.negated();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes20 = minutes18.plus(0);
        org.joda.time.DurationFieldType durationFieldType21 = minutes20.getFieldType();
        int int22 = minutes16.get(durationFieldType21);
        org.joda.time.Minutes minutes24 = minutes16.dividedBy((int) ' ');
        java.lang.String str25 = minutes16.toString();
        org.joda.time.Duration duration26 = minutes16.toStandardDuration();
        org.joda.time.Period period27 = minutes16.toPeriod();
        int int28 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes16);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2147483647 + "'", int22 == 2147483647);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "PT2147483647M" + "'", str25, "PT2147483647M");
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
    }

    @Test
    public void test0864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0864");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes3 = minutes1.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        int int13 = minutes4.get(durationFieldType11);
        org.joda.time.PeriodType periodType14 = minutes4.getPeriodType();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.minutes(2);
        org.joda.time.Weeks weeks17 = minutes16.toStandardWeeks();
        // The following exception was thrown during execution in test generation
        try {
            int int18 = minutes4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) weeks17);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class org.joda.time.Minutes cannot be compared to class org.joda.time.Weeks");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2147483647 + "'", int13 == 2147483647);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(weeks17);
    }

    @Test
    public void test0865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0865");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((-2147483647));
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes3 = minutes1.multipliedBy(214748366);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: -2147483647 * 214748366");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes1);
    }

    @Test
    public void test0866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0866");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        int int4 = minutes2.getMinutes();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes8 = minutes6.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = minutes9.get(durationFieldType10);
        org.joda.time.DurationFieldType durationFieldType12 = minutes9.getFieldType();
        int int13 = minutes8.get(durationFieldType12);
        org.joda.time.Minutes minutes15 = minutes8.plus((-1));
        boolean boolean16 = minutes5.isGreaterThan(minutes8);
        org.joda.time.DurationFieldType durationFieldType17 = minutes8.getFieldType();
        org.joda.time.PeriodType periodType18 = minutes8.getPeriodType();
        boolean boolean19 = minutes2.equals((java.lang.Object) minutes8);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.MAX_VALUE;
        int int21 = minutes20.size();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes23 = minutes22.negated();
        org.joda.time.Minutes minutes25 = minutes23.dividedBy((int) (byte) -1);
        boolean boolean26 = minutes20.isLessThan(minutes23);
        boolean boolean27 = minutes8.isGreaterThan(minutes23);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType29 = minutes23.getFieldType(34);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 34");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-2) + "'", int13 == (-2));
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test0867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0867");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        org.joda.time.Minutes minutes14 = minutes7.plus((-1));
        org.joda.time.Minutes minutes16 = minutes7.minus((int) (short) 10);
        org.joda.time.Minutes minutes18 = minutes16.dividedBy((-2147483648));
        org.joda.time.Minutes minutes19 = minutes4.plus(minutes18);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes22 = minutes20.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = minutes23.get(durationFieldType24);
        org.joda.time.MutablePeriod mutablePeriod26 = minutes23.toMutablePeriod();
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes23);
        boolean boolean28 = minutes22.isLessThan(minutes27);
        org.joda.time.DurationFieldType durationFieldType29 = minutes27.getFieldType();
        boolean boolean30 = minutes19.isSupported(durationFieldType29);
        org.joda.time.Minutes minutes32 = minutes19.plus((int) (short) -1);
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes35 = minutes33.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes36 = minutes33.negated();
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes39 = minutes33.minus(minutes38);
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod41 = minutes40.toMutablePeriod();
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod41);
        boolean boolean43 = minutes33.isLessThan(minutes42);
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes42);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes47 = minutes45.minus((int) (short) 0);
        boolean boolean48 = minutes42.isLessThan(minutes47);
        org.joda.time.Minutes minutes50 = minutes47.multipliedBy((int) (short) 0);
        boolean boolean51 = minutes19.isGreaterThan(minutes50);
        java.lang.String str52 = minutes19.toString();
        org.joda.time.Period period53 = minutes19.toPeriod();
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod55 = minutes54.toMutablePeriod();
        org.joda.time.Minutes minutes56 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes58 = minutes56.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes60 = minutes56.plus(0);
        int int61 = minutes54.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes56);
        org.joda.time.Minutes minutes63 = minutes56.plus((int) ' ');
        org.joda.time.Period period64 = minutes56.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod65 = minutes56.toMutablePeriod();
        org.joda.time.Period period66 = minutes56.toPeriod();
        boolean boolean67 = minutes19.isGreaterThan(minutes56);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "PT2M" + "'", str52, "PT2M");
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(mutablePeriod55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(mutablePeriod65);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test0868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0868");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = minutes0.getFieldType();
        org.joda.time.Period period2 = minutes0.toPeriod();
        org.joda.time.Duration duration3 = minutes0.toStandardDuration();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod5 = minutes4.toMutablePeriod();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes7 = minutes4.plus(minutes6);
        int int8 = minutes6.getMinutes();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = minutes13.get(durationFieldType14);
        org.joda.time.DurationFieldType durationFieldType16 = minutes13.getFieldType();
        int int17 = minutes12.get(durationFieldType16);
        org.joda.time.Minutes minutes19 = minutes12.plus((-1));
        boolean boolean20 = minutes9.isGreaterThan(minutes12);
        org.joda.time.DurationFieldType durationFieldType21 = minutes12.getFieldType();
        org.joda.time.PeriodType periodType22 = minutes12.getPeriodType();
        boolean boolean23 = minutes6.equals((java.lang.Object) minutes12);
        int int24 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes12);
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes27 = minutes25.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType29 = null;
        int int30 = minutes28.get(durationFieldType29);
        org.joda.time.MutablePeriod mutablePeriod31 = minutes28.toMutablePeriod();
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes28);
        boolean boolean33 = minutes27.isLessThan(minutes32);
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes36 = minutes34.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = minutes37.get(durationFieldType38);
        org.joda.time.DurationFieldType durationFieldType40 = minutes37.getFieldType();
        int int41 = minutes36.get(durationFieldType40);
        org.joda.time.Minutes minutes43 = minutes36.plus((-1));
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod45 = minutes44.toMutablePeriod();
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes48 = minutes46.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes50 = minutes46.plus(0);
        int int51 = minutes44.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes46);
        org.joda.time.Minutes minutes53 = minutes46.plus((int) ' ');
        java.lang.String str54 = minutes46.toString();
        org.joda.time.Minutes minutes56 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean57 = minutes46.isLessThan(minutes56);
        boolean boolean58 = minutes43.isLessThan(minutes46);
        org.joda.time.Minutes minutes59 = minutes27.minus(minutes43);
        org.joda.time.MutablePeriod mutablePeriod60 = minutes27.toMutablePeriod();
        org.joda.time.Minutes minutes62 = minutes27.dividedBy(2);
        org.joda.time.Minutes minutes63 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes65 = minutes63.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes66 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType67 = null;
        int int68 = minutes66.get(durationFieldType67);
        org.joda.time.DurationFieldType durationFieldType69 = minutes66.getFieldType();
        int int70 = minutes65.get(durationFieldType69);
        org.joda.time.Minutes minutes72 = minutes65.plus((-1));
        org.joda.time.Minutes minutes73 = minutes72.negated();
        org.joda.time.Minutes minutes74 = minutes62.plus(minutes73);
        org.joda.time.Minutes minutes76 = minutes73.multipliedBy((-22139006));
        boolean boolean77 = minutes12.isLessThan(minutes76);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-2) + "'", int17 == (-2));
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-2) + "'", int41 == (-2));
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(mutablePeriod45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "PT2M" + "'", str54, "PT2M");
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(durationFieldType69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-2) + "'", int70 == (-2));
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertNotNull(minutes73);
        org.junit.Assert.assertNotNull(minutes74);
        org.junit.Assert.assertNotNull(minutes76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test0869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0869");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod8 = minutes7.toMutablePeriod();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod8);
        boolean boolean10 = minutes0.isLessThan(minutes9);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = minutes15.get(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = minutes15.getFieldType();
        int int19 = minutes14.get(durationFieldType18);
        org.joda.time.Minutes minutes21 = minutes14.plus((-1));
        boolean boolean22 = minutes11.isGreaterThan(minutes14);
        org.joda.time.Minutes minutes24 = minutes14.multipliedBy(2);
        org.joda.time.Minutes minutes25 = minutes24.negated();
        org.joda.time.Minutes minutes26 = minutes25.negated();
        boolean boolean27 = minutes0.isLessThan(minutes25);
        org.joda.time.Minutes minutes29 = minutes25.dividedBy((int) (short) 1);
        org.joda.time.Duration duration30 = minutes25.toStandardDuration();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod32 = minutes31.toMutablePeriod();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes35 = minutes33.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes37 = minutes33.plus(0);
        int int38 = minutes31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes33);
        org.joda.time.Minutes minutes40 = minutes33.plus((int) ' ');
        java.lang.String str41 = minutes33.toString();
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod43 = minutes42.toMutablePeriod();
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes46 = minutes44.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes48 = minutes44.plus(0);
        int int49 = minutes42.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes44);
        org.joda.time.Minutes minutes51 = minutes44.plus((int) ' ');
        java.lang.String str52 = minutes44.toString();
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean55 = minutes44.isLessThan(minutes54);
        org.joda.time.Minutes minutes56 = minutes33.minus(minutes44);
        java.lang.String str57 = minutes44.toString();
        org.joda.time.Minutes minutes58 = minutes25.plus(minutes44);
        org.joda.time.Minutes minutes60 = minutes58.dividedBy((-2147483548));
        org.joda.time.DurationFieldType durationFieldType61 = minutes58.getFieldType();
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes63 = minutes62.negated();
        org.joda.time.Minutes minutes64 = minutes62.negated();
        java.lang.String str65 = minutes62.toString();
        org.joda.time.Minutes minutes67 = minutes62.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes68 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes70 = minutes68.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes71 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes73 = minutes71.minus((int) (short) 1);
        org.joda.time.Minutes minutes75 = minutes73.multipliedBy(0);
        org.joda.time.Minutes minutes77 = minutes75.plus((-2147483648));
        org.joda.time.Minutes minutes78 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes79 = minutes78.negated();
        org.joda.time.Minutes minutes80 = minutes78.negated();
        boolean boolean81 = minutes77.isGreaterThan(minutes80);
        int int82 = minutes68.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes77);
        org.joda.time.MutablePeriod mutablePeriod83 = minutes77.toMutablePeriod();
        org.joda.time.Minutes minutes84 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration85 = minutes84.toStandardDuration();
        org.joda.time.Duration duration86 = minutes84.toStandardDuration();
        org.joda.time.Minutes minutes88 = minutes84.minus(2);
        boolean boolean89 = minutes77.isGreaterThan(minutes88);
        int int90 = minutes62.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes88);
        org.joda.time.PeriodType periodType91 = minutes62.getPeriodType();
        boolean boolean92 = minutes58.equals((java.lang.Object) minutes62);
        org.joda.time.Minutes minutes94 = minutes58.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes96 = minutes94.plus((int) '4');
        org.joda.time.PeriodType periodType97 = minutes94.getPeriodType();
        org.joda.time.Minutes minutes98 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes94);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2) + "'", int19 == (-2));
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "PT2M" + "'", str41, "PT2M");
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "PT2M" + "'", str52, "PT2M");
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "PT2M" + "'", str57, "PT2M");
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "PT2147483647M" + "'", str65, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertNotNull(minutes73);
        org.junit.Assert.assertNotNull(minutes75);
        org.junit.Assert.assertNotNull(minutes77);
        org.junit.Assert.assertNotNull(minutes78);
        org.junit.Assert.assertNotNull(minutes79);
        org.junit.Assert.assertNotNull(minutes80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod83);
        org.junit.Assert.assertNotNull(minutes84);
        org.junit.Assert.assertNotNull(duration85);
        org.junit.Assert.assertNotNull(duration86);
        org.junit.Assert.assertNotNull(minutes88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 1 + "'", int90 == 1);
        org.junit.Assert.assertNotNull(periodType91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(minutes94);
        org.junit.Assert.assertNotNull(minutes96);
        org.junit.Assert.assertNotNull(periodType97);
        org.junit.Assert.assertNotNull(minutes98);
    }

    @Test
    public void test0870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0870");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = minutes8.plus(0);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = minutes16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = minutes16.getFieldType();
        int int20 = minutes15.get(durationFieldType19);
        org.joda.time.Minutes minutes22 = minutes15.plus((-1));
        org.joda.time.Minutes minutes24 = minutes15.minus((int) (short) 10);
        org.joda.time.Minutes minutes26 = minutes24.dividedBy((-2147483648));
        org.joda.time.Minutes minutes27 = minutes12.plus(minutes26);
        org.joda.time.Minutes minutes28 = minutes2.minus(minutes12);
        org.joda.time.Minutes minutes30 = minutes2.dividedBy(3);
        org.joda.time.MutablePeriod mutablePeriod31 = minutes2.toMutablePeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-2) + "'", int20 == (-2));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
    }

    @Test
    public void test0871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0871");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = minutes12.getFieldType();
        int int16 = minutes11.get(durationFieldType15);
        org.joda.time.Minutes minutes18 = minutes11.plus((-1));
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = minutes21.plus(0);
        int int26 = minutes19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes21);
        org.joda.time.Minutes minutes28 = minutes21.plus((int) ' ');
        java.lang.String str29 = minutes21.toString();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean32 = minutes21.isLessThan(minutes31);
        boolean boolean33 = minutes18.isLessThan(minutes21);
        org.joda.time.Minutes minutes34 = minutes2.minus(minutes18);
        org.joda.time.MutablePeriod mutablePeriod35 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes37 = minutes2.dividedBy(2);
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes40 = minutes38.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType42 = null;
        int int43 = minutes41.get(durationFieldType42);
        org.joda.time.DurationFieldType durationFieldType44 = minutes41.getFieldType();
        int int45 = minutes40.get(durationFieldType44);
        org.joda.time.Minutes minutes47 = minutes40.plus((-1));
        org.joda.time.Minutes minutes48 = minutes47.negated();
        org.joda.time.Minutes minutes49 = minutes37.plus(minutes48);
        org.joda.time.Minutes minutes50 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes52 = minutes50.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes53 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType54 = null;
        int int55 = minutes53.get(durationFieldType54);
        org.joda.time.MutablePeriod mutablePeriod56 = minutes53.toMutablePeriod();
        org.joda.time.Minutes minutes57 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes53);
        boolean boolean58 = minutes52.isLessThan(minutes57);
        int int59 = minutes52.getMinutes();
        org.joda.time.Minutes minutes61 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean62 = minutes52.isLessThan(minutes61);
        org.joda.time.Minutes minutes63 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration64 = minutes63.toStandardDuration();
        org.joda.time.Duration duration65 = minutes63.toStandardDuration();
        org.joda.time.Minutes minutes67 = minutes63.minus(2);
        org.joda.time.Minutes minutes68 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes70 = minutes68.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes71 = minutes68.negated();
        org.joda.time.Minutes minutes72 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes73 = minutes72.negated();
        org.joda.time.Minutes minutes74 = minutes72.negated();
        boolean boolean75 = minutes68.equals((java.lang.Object) minutes74);
        boolean boolean76 = minutes67.isLessThan(minutes68);
        org.joda.time.Minutes minutes77 = minutes61.minus(minutes68);
        org.joda.time.Minutes minutes78 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes79 = minutes78.negated();
        org.joda.time.Minutes minutes80 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes78);
        java.lang.String str81 = minutes78.toString();
        org.joda.time.Minutes minutes82 = minutes77.plus(minutes78);
        int int83 = minutes48.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes77);
        org.joda.time.MutablePeriod mutablePeriod84 = minutes48.toMutablePeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2M" + "'", str29, "PT2M");
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-2) + "'", int45 == (-2));
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-2) + "'", int59 == (-2));
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertNotNull(minutes73);
        org.junit.Assert.assertNotNull(minutes74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(minutes77);
        org.junit.Assert.assertNotNull(minutes78);
        org.junit.Assert.assertNotNull(minutes79);
        org.junit.Assert.assertNotNull(minutes80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "PT2147483647M" + "'", str81, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod84);
    }

    @Test
    public void test0872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0872");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = minutes8.plus(0);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = minutes16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = minutes16.getFieldType();
        int int20 = minutes15.get(durationFieldType19);
        org.joda.time.Minutes minutes22 = minutes15.plus((-1));
        org.joda.time.Minutes minutes24 = minutes15.minus((int) (short) 10);
        org.joda.time.Minutes minutes26 = minutes24.dividedBy((-2147483648));
        org.joda.time.Minutes minutes27 = minutes12.plus(minutes26);
        org.joda.time.Minutes minutes28 = minutes2.minus(minutes12);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod30 = minutes29.toMutablePeriod();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes32 = minutes29.plus(minutes31);
        org.joda.time.Minutes minutes33 = minutes28.plus(minutes31);
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes36 = minutes34.multipliedBy((int) (short) -1);
        org.joda.time.MutablePeriod mutablePeriod37 = minutes34.toMutablePeriod();
        org.joda.time.Minutes minutes38 = minutes31.minus(minutes34);
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes40 = minutes39.negated();
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes39);
        java.lang.String str42 = minutes39.toString();
        org.joda.time.Minutes minutes43 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType44 = minutes43.getFieldType();
        boolean boolean45 = minutes39.isSupported(durationFieldType44);
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes39);
        org.joda.time.MutablePeriod mutablePeriod47 = minutes46.toMutablePeriod();
        boolean boolean48 = minutes34.isGreaterThan(minutes46);
        org.joda.time.Minutes minutes50 = minutes34.plus((int) (byte) -1);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-2) + "'", int20 == (-2));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT2147483647M" + "'", str42, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(mutablePeriod47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(minutes50);
    }

    @Test
    public void test0873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0873");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = minutes8.plus(0);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = minutes16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = minutes16.getFieldType();
        int int20 = minutes15.get(durationFieldType19);
        org.joda.time.Minutes minutes22 = minutes15.plus((-1));
        org.joda.time.Minutes minutes24 = minutes15.minus((int) (short) 10);
        org.joda.time.Minutes minutes26 = minutes24.dividedBy((-2147483648));
        org.joda.time.Minutes minutes27 = minutes12.plus(minutes26);
        org.joda.time.Minutes minutes28 = minutes2.minus(minutes12);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod30 = minutes29.toMutablePeriod();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes32 = minutes29.plus(minutes31);
        org.joda.time.Minutes minutes33 = minutes28.plus(minutes31);
        org.joda.time.MutablePeriod mutablePeriod34 = minutes28.toMutablePeriod();
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes37 = minutes35.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes39 = minutes35.plus(0);
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes42 = minutes40.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes43 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType44 = null;
        int int45 = minutes43.get(durationFieldType44);
        org.joda.time.DurationFieldType durationFieldType46 = minutes43.getFieldType();
        int int47 = minutes42.get(durationFieldType46);
        org.joda.time.Minutes minutes49 = minutes42.plus((-1));
        org.joda.time.Minutes minutes51 = minutes42.minus((int) (short) 10);
        org.joda.time.Minutes minutes53 = minutes51.dividedBy((-2147483648));
        org.joda.time.Minutes minutes54 = minutes39.plus(minutes53);
        org.joda.time.Minutes minutes55 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType56 = minutes55.getPeriodType();
        org.joda.time.Minutes minutes57 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes58 = minutes57.negated();
        org.joda.time.Minutes minutes59 = minutes57.negated();
        org.joda.time.DurationFieldType durationFieldType60 = minutes57.getFieldType();
        java.lang.String str61 = minutes57.toString();
        boolean boolean62 = minutes55.isGreaterThan(minutes57);
        boolean boolean63 = minutes39.isLessThan(minutes57);
        org.joda.time.PeriodType periodType64 = minutes57.getPeriodType();
        org.joda.time.Minutes minutes66 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes68 = minutes66.plus(0);
        org.joda.time.DurationFieldType durationFieldType69 = minutes68.getFieldType();
        boolean boolean70 = minutes57.isSupported(durationFieldType69);
        org.joda.time.Duration duration71 = minutes57.toStandardDuration();
        org.joda.time.Minutes minutes72 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType73 = minutes72.getPeriodType();
        org.joda.time.Minutes minutes74 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes75 = minutes74.negated();
        org.joda.time.Minutes minutes76 = minutes74.negated();
        org.joda.time.DurationFieldType durationFieldType77 = minutes74.getFieldType();
        java.lang.String str78 = minutes74.toString();
        boolean boolean79 = minutes72.isGreaterThan(minutes74);
        org.joda.time.Minutes minutes80 = minutes74.negated();
        boolean boolean81 = minutes57.isGreaterThan(minutes80);
        org.joda.time.Minutes minutes83 = minutes80.plus((int) (short) -1);
        java.lang.String str84 = minutes83.toString();
        boolean boolean85 = minutes28.isGreaterThan(minutes83);
        // The following exception was thrown during execution in test generation
        try {
            int int87 = minutes28.getValue((-2147483645));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -2147483645");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-2) + "'", int20 == (-2));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-2) + "'", int47 == (-2));
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(durationFieldType60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "PT2147483647M" + "'", str61, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(durationFieldType69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertNotNull(minutes74);
        org.junit.Assert.assertNotNull(minutes75);
        org.junit.Assert.assertNotNull(minutes76);
        org.junit.Assert.assertNotNull(durationFieldType77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "PT2147483647M" + "'", str78, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(minutes80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(minutes83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "PT-2147483648M" + "'", str84, "PT-2147483648M");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test0874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0874");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod2 = minutes0.toMutablePeriod();
        java.lang.String str3 = minutes0.toString();
        int int4 = minutes0.size();
        org.joda.time.Minutes minutes6 = minutes0.multipliedBy(0);
        org.joda.time.Period period7 = minutes0.toPeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2M" + "'", str3, "PT2M");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(period7);
    }

    @Test
    public void test0875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0875");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes3 = minutes1.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        java.lang.String str5 = minutes3.toString();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PT2147483647M" + "'", str5, "PT2147483647M");
    }

    @Test
    public void test0876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0876");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = minutes5.get(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType8 = minutes5.getFieldType();
        int int9 = minutes4.get(durationFieldType8);
        org.joda.time.Minutes minutes11 = minutes4.plus((-1));
        boolean boolean12 = minutes1.isGreaterThan(minutes4);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = minutes16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = minutes16.getFieldType();
        int int20 = minutes15.get(durationFieldType19);
        boolean boolean21 = minutes4.isSupported(durationFieldType19);
        boolean boolean22 = minutes0.isSupported(durationFieldType19);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod24 = minutes23.toMutablePeriod();
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes26 = minutes23.plus(minutes25);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod28 = minutes27.toMutablePeriod();
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes30 = minutes27.plus(minutes29);
        boolean boolean31 = minutes26.isLessThan(minutes27);
        org.joda.time.PeriodType periodType32 = minutes26.getPeriodType();
        org.joda.time.Minutes minutes34 = minutes26.dividedBy(3);
        org.joda.time.Minutes minutes36 = minutes34.dividedBy(10);
        org.joda.time.Duration duration37 = minutes34.toStandardDuration();
        boolean boolean38 = minutes0.equals((java.lang.Object) duration37);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-2) + "'", int9 == (-2));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-2) + "'", int20 == (-2));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test0877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0877");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.dividedBy(2);
        int int3 = minutes0.size();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod5 = minutes4.toMutablePeriod();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes8 = minutes6.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes10 = minutes6.plus(0);
        int int11 = minutes4.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes6);
        org.joda.time.Minutes minutes13 = minutes6.plus((int) ' ');
        int int14 = minutes13.size();
        org.joda.time.Minutes minutes16 = minutes13.minus(0);
        org.joda.time.Minutes minutes17 = minutes0.plus(minutes13);
        org.joda.time.PeriodType periodType18 = minutes17.getPeriodType();
        org.joda.time.Minutes minutes19 = minutes17.negated();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(minutes19);
    }

    @Test
    public void test0878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0878");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((-2147483648));
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds2 = minutes1.toStandardSeconds();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: -2147483648 * 60");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes1);
    }

    @Test
    public void test0879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0879");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod8 = minutes7.toMutablePeriod();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod8);
        boolean boolean10 = minutes0.isLessThan(minutes9);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes9);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes13 = minutes12.negated();
        org.joda.time.PeriodType periodType14 = minutes13.getPeriodType();
        org.joda.time.Minutes minutes16 = minutes13.minus(0);
        boolean boolean17 = minutes9.equals((java.lang.Object) 0);
        org.joda.time.Period period18 = minutes9.toPeriod();
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) period18);
        int int20 = minutes19.size();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes24 = minutes21.negated();
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes27 = minutes21.minus(minutes26);
        org.joda.time.Minutes minutes29 = minutes26.multipliedBy((int) (short) 1);
        org.joda.time.Minutes minutes31 = minutes26.multipliedBy(100);
        boolean boolean32 = minutes19.equals((java.lang.Object) minutes26);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test0880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0880");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.minus((int) (short) 1);
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy(0);
        org.joda.time.Minutes minutes6 = minutes4.plus((-2147483648));
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.TWO;
        boolean boolean8 = minutes4.isGreaterThan(minutes7);
        org.joda.time.DurationFieldType durationFieldType9 = minutes7.getFieldType();
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes7);
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy((int) (byte) 10);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
    }

    @Test
    public void test0881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0881");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes3 = minutes1.dividedBy((int) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes5 = minutes3.multipliedBy(2147483646);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 2147483647 * 2147483646");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
    }

    @Test
    public void test0882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0882");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((-2147483645));
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes1);
        org.joda.time.Period period3 = minutes1.toPeriod();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(period3);
    }

    @Test
    public void test0883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0883");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT-214748364M");
        org.junit.Assert.assertNotNull(minutes1);
    }

    @Test
    public void test0884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0884");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = minutes12.getFieldType();
        int int16 = minutes11.get(durationFieldType15);
        org.joda.time.Minutes minutes18 = minutes11.plus((-1));
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = minutes21.plus(0);
        int int26 = minutes19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes21);
        org.joda.time.Minutes minutes28 = minutes21.plus((int) ' ');
        java.lang.String str29 = minutes21.toString();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean32 = minutes21.isLessThan(minutes31);
        boolean boolean33 = minutes18.isLessThan(minutes21);
        org.joda.time.Minutes minutes34 = minutes2.minus(minutes18);
        org.joda.time.MutablePeriod mutablePeriod35 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes37 = minutes2.dividedBy(2);
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes40 = minutes38.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType42 = null;
        int int43 = minutes41.get(durationFieldType42);
        org.joda.time.DurationFieldType durationFieldType44 = minutes41.getFieldType();
        int int45 = minutes40.get(durationFieldType44);
        org.joda.time.Minutes minutes47 = minutes40.plus((-1));
        org.joda.time.Minutes minutes48 = minutes47.negated();
        org.joda.time.Minutes minutes49 = minutes37.plus(minutes48);
        org.joda.time.Minutes minutes51 = minutes49.multipliedBy((-12));
        java.lang.Class<?> wildcardClass52 = minutes49.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2M" + "'", str29, "PT2M");
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-2) + "'", int45 == (-2));
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0885");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        int int4 = minutes2.getMinutes();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod6 = minutes5.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes9 = minutes7.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes11 = minutes7.plus(0);
        int int12 = minutes5.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes7);
        org.joda.time.Minutes minutes14 = minutes7.plus((int) ' ');
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = minutes15.getFieldType();
        int int17 = minutes7.get(durationFieldType16);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes20 = minutes18.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes21 = minutes18.negated();
        org.joda.time.Minutes minutes22 = minutes7.plus(minutes18);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes25 = minutes23.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = minutes26.get(durationFieldType27);
        org.joda.time.MutablePeriod mutablePeriod29 = minutes26.toMutablePeriod();
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes26);
        boolean boolean31 = minutes25.isLessThan(minutes30);
        int int32 = minutes25.getMinutes();
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean35 = minutes25.isLessThan(minutes34);
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration37 = minutes36.toStandardDuration();
        org.joda.time.Duration duration38 = minutes36.toStandardDuration();
        org.joda.time.Minutes minutes40 = minutes36.minus(2);
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes43 = minutes41.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes44 = minutes41.negated();
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes46 = minutes45.negated();
        org.joda.time.Minutes minutes47 = minutes45.negated();
        boolean boolean48 = minutes41.equals((java.lang.Object) minutes47);
        boolean boolean49 = minutes40.isLessThan(minutes41);
        org.joda.time.Minutes minutes50 = minutes34.minus(minutes41);
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes52 = minutes51.negated();
        org.joda.time.Minutes minutes53 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes51);
        java.lang.String str54 = minutes51.toString();
        org.joda.time.Minutes minutes55 = minutes50.plus(minutes51);
        boolean boolean56 = minutes22.isGreaterThan(minutes55);
        int int57 = minutes55.size();
        org.joda.time.Minutes minutes58 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes60 = minutes58.minus((int) (short) 0);
        org.joda.time.Minutes minutes61 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes64 = minutes62.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes65 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType66 = null;
        int int67 = minutes65.get(durationFieldType66);
        org.joda.time.DurationFieldType durationFieldType68 = minutes65.getFieldType();
        int int69 = minutes64.get(durationFieldType68);
        org.joda.time.Minutes minutes71 = minutes64.plus((-1));
        boolean boolean72 = minutes61.isGreaterThan(minutes64);
        org.joda.time.DurationFieldType durationFieldType73 = minutes64.getFieldType();
        org.joda.time.PeriodType periodType74 = minutes64.getPeriodType();
        boolean boolean75 = minutes58.isLessThan(minutes64);
        org.joda.time.Minutes minutes76 = minutes64.negated();
        org.joda.time.MutablePeriod mutablePeriod77 = minutes64.toMutablePeriod();
        boolean boolean78 = minutes55.isGreaterThan(minutes64);
        int int79 = minutes2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes55);
        // The following exception was thrown during execution in test generation
        try {
            int int81 = minutes55.getValue((-2147483548));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -2147483548");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-2) + "'", int32 == (-2));
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "PT2147483647M" + "'", str54, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(durationFieldType68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-2) + "'", int69 == (-2));
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(durationFieldType73);
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(minutes76);
        org.junit.Assert.assertNotNull(mutablePeriod77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
    }

    @Test
    public void test0886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0886");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT-12M");
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration3 = minutes2.toStandardDuration();
        org.joda.time.Duration duration4 = minutes2.toStandardDuration();
        org.joda.time.Minutes minutes6 = minutes2.minus(2);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes9 = minutes7.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = minutes10.get(durationFieldType11);
        org.joda.time.MutablePeriod mutablePeriod13 = minutes10.toMutablePeriod();
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes10);
        boolean boolean15 = minutes9.isLessThan(minutes14);
        int int16 = minutes9.getMinutes();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean19 = minutes9.isLessThan(minutes18);
        org.joda.time.Minutes minutes20 = minutes6.minus(minutes18);
        int int21 = minutes18.getMinutes();
        org.joda.time.Minutes minutes22 = minutes1.minus(minutes18);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds23 = minutes22.toStandardSeconds();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 2147483633 * 60");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-2147483645) + "'", int21 == (-2147483645));
        org.junit.Assert.assertNotNull(minutes22);
    }

    @Test
    public void test0887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0887");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        org.joda.time.Minutes minutes14 = minutes7.plus((-1));
        org.joda.time.Minutes minutes16 = minutes7.minus((int) (short) 10);
        org.joda.time.Minutes minutes18 = minutes16.dividedBy((-2147483648));
        org.joda.time.Minutes minutes19 = minutes4.plus(minutes18);
        org.joda.time.Period period20 = minutes18.toPeriod();
        int int21 = minutes18.getMinutes();
        org.joda.time.Period period22 = minutes18.toPeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(period22);
    }

    @Test
    public void test0888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0888");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = minutes0.get(durationFieldType1);
        org.joda.time.DurationFieldType durationFieldType3 = minutes0.getFieldType();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = minutes7.get(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType10 = minutes7.getFieldType();
        int int11 = minutes6.get(durationFieldType10);
        org.joda.time.Minutes minutes13 = minutes6.plus((-1));
        org.joda.time.Minutes minutes15 = minutes6.minus((int) (short) 10);
        org.joda.time.Minutes minutes17 = minutes15.dividedBy((-2147483648));
        org.joda.time.Minutes minutes18 = minutes17.negated();
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes20 = minutes19.negated();
        org.joda.time.Minutes minutes21 = minutes19.negated();
        org.joda.time.Minutes minutes22 = minutes17.minus(minutes21);
        org.joda.time.Minutes minutes24 = minutes21.plus((int) 'a');
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes24);
        org.joda.time.Minutes minutes27 = minutes24.dividedBy((int) (byte) 1);
        java.lang.String str28 = minutes24.toString();
        org.joda.time.Minutes minutes30 = minutes24.dividedBy(2);
        boolean boolean31 = minutes0.isLessThan(minutes24);
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod35 = minutes34.toMutablePeriod();
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes38 = minutes36.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes40 = minutes36.plus(0);
        int int41 = minutes34.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes36);
        org.joda.time.Minutes minutes43 = minutes36.plus((int) ' ');
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType45 = minutes44.getFieldType();
        int int46 = minutes36.get(durationFieldType45);
        boolean boolean47 = minutes33.isSupported(durationFieldType45);
        org.joda.time.Minutes minutes48 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration49 = minutes48.toStandardDuration();
        org.joda.time.Duration duration50 = minutes48.toStandardDuration();
        org.joda.time.Minutes minutes52 = minutes48.minus(2);
        org.joda.time.DurationFieldType durationFieldType53 = minutes48.getFieldType();
        boolean boolean54 = minutes33.isSupported(durationFieldType53);
        boolean boolean55 = minutes0.isLessThan(minutes33);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-2) + "'", int11 == (-2));
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "PT-2147483550M" + "'", str28, "PT-2147483550M");
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test0889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0889");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = minutes12.getFieldType();
        int int16 = minutes11.get(durationFieldType15);
        org.joda.time.Minutes minutes18 = minutes11.plus((-1));
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = minutes21.plus(0);
        int int26 = minutes19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes21);
        org.joda.time.Minutes minutes28 = minutes21.plus((int) ' ');
        java.lang.String str29 = minutes21.toString();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean32 = minutes21.isLessThan(minutes31);
        boolean boolean33 = minutes18.isLessThan(minutes21);
        org.joda.time.Minutes minutes34 = minutes2.minus(minutes18);
        org.joda.time.MutablePeriod mutablePeriod35 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes37 = minutes2.dividedBy(2);
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes40 = minutes38.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType42 = null;
        int int43 = minutes41.get(durationFieldType42);
        org.joda.time.DurationFieldType durationFieldType44 = minutes41.getFieldType();
        int int45 = minutes40.get(durationFieldType44);
        org.joda.time.Minutes minutes47 = minutes40.plus((-1));
        org.joda.time.Minutes minutes48 = minutes47.negated();
        org.joda.time.Minutes minutes49 = minutes37.plus(minutes48);
        org.joda.time.Minutes minutes51 = minutes37.minus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType52 = minutes51.getFieldType();
        org.joda.time.Minutes minutes54 = minutes51.dividedBy((-2147483647));
        org.joda.time.Minutes minutes56 = minutes54.plus((-22139006));
        org.joda.time.PeriodType periodType57 = minutes56.getPeriodType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2M" + "'", str29, "PT2M");
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-2) + "'", int45 == (-2));
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(periodType57);
    }

    @Test
    public void test0890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0890");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        java.lang.String str10 = minutes2.toString();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = minutes11.get(durationFieldType12);
        org.joda.time.MutablePeriod mutablePeriod14 = minutes11.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType15 = minutes11.getFieldType();
        org.joda.time.Minutes minutes17 = minutes11.dividedBy((-1));
        org.joda.time.Minutes minutes19 = minutes11.dividedBy(2147483646);
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.minutes((int) (byte) 10);
        boolean boolean22 = minutes11.isLessThan(minutes21);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes25 = minutes23.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = minutes26.get(durationFieldType27);
        org.joda.time.MutablePeriod mutablePeriod29 = minutes26.toMutablePeriod();
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes26);
        boolean boolean31 = minutes25.isLessThan(minutes30);
        org.joda.time.Minutes minutes32 = minutes21.plus(minutes25);
        boolean boolean33 = minutes2.isGreaterThan(minutes21);
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.minutes((int) (byte) -1);
        org.joda.time.Minutes minutes36 = minutes21.minus(minutes35);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration38 = minutes37.toStandardDuration();
        org.joda.time.Duration duration39 = minutes37.toStandardDuration();
        org.joda.time.Minutes minutes41 = minutes37.minus(2);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes44 = minutes42.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType46 = null;
        int int47 = minutes45.get(durationFieldType46);
        org.joda.time.MutablePeriod mutablePeriod48 = minutes45.toMutablePeriod();
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes45);
        boolean boolean50 = minutes44.isLessThan(minutes49);
        int int51 = minutes44.getMinutes();
        org.joda.time.Minutes minutes53 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean54 = minutes44.isLessThan(minutes53);
        org.joda.time.Minutes minutes55 = minutes41.minus(minutes53);
        org.joda.time.Minutes minutes56 = minutes36.minus(minutes55);
        java.lang.Class<?> wildcardClass57 = minutes36.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT2M" + "'", str10, "PT2M");
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-2) + "'", int51 == (-2));
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0891");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        java.lang.String str10 = minutes2.toString();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod12 = minutes11.toMutablePeriod();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes17 = minutes13.plus(0);
        int int18 = minutes11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes13);
        org.joda.time.Minutes minutes20 = minutes13.plus((int) ' ');
        java.lang.String str21 = minutes13.toString();
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean24 = minutes13.isLessThan(minutes23);
        org.joda.time.Minutes minutes25 = minutes2.minus(minutes13);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes27 = minutes26.negated();
        org.joda.time.DurationFieldType durationFieldType28 = minutes26.getFieldType();
        org.joda.time.DurationFieldType durationFieldType29 = minutes26.getFieldType();
        boolean boolean30 = minutes2.isSupported(durationFieldType29);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = minutes31.get(durationFieldType32);
        org.joda.time.MutablePeriod mutablePeriod34 = minutes31.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType35 = minutes31.getFieldType();
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration37 = minutes36.toStandardDuration();
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes36);
        boolean boolean39 = minutes31.isGreaterThan(minutes36);
        org.joda.time.Minutes minutes40 = minutes2.plus(minutes36);
        org.joda.time.Minutes minutes42 = minutes2.plus(100);
        org.joda.time.PeriodType periodType43 = minutes42.getPeriodType();
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = minutes44.get(durationFieldType45);
        org.joda.time.DurationFieldType durationFieldType47 = minutes44.getFieldType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes48 = minutes42.minus(minutes44);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Integer.MIN_VALUE cannot be negated");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT2M" + "'", str10, "PT2M");
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT2M" + "'", str21, "PT2M");
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(durationFieldType47);
    }

    @Test
    public void test0892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0892");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT-12M");
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration3 = minutes2.toStandardDuration();
        org.joda.time.Duration duration4 = minutes2.toStandardDuration();
        org.joda.time.Minutes minutes6 = minutes2.minus(2);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes9 = minutes7.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = minutes10.get(durationFieldType11);
        org.joda.time.MutablePeriod mutablePeriod13 = minutes10.toMutablePeriod();
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes10);
        boolean boolean15 = minutes9.isLessThan(minutes14);
        int int16 = minutes9.getMinutes();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean19 = minutes9.isLessThan(minutes18);
        org.joda.time.Minutes minutes20 = minutes6.minus(minutes18);
        int int21 = minutes18.getMinutes();
        org.joda.time.Minutes minutes22 = minutes1.minus(minutes18);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes25 = minutes23.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = minutes26.get(durationFieldType27);
        org.joda.time.DurationFieldType durationFieldType29 = minutes26.getFieldType();
        int int30 = minutes25.get(durationFieldType29);
        org.joda.time.Minutes minutes32 = minutes25.plus((-1));
        org.joda.time.Minutes minutes33 = minutes32.negated();
        org.joda.time.Duration duration34 = minutes33.toStandardDuration();
        boolean boolean35 = minutes22.isGreaterThan(minutes33);
        org.joda.time.PeriodType periodType36 = minutes33.getPeriodType();
        org.joda.time.Minutes minutes38 = minutes33.plus((int) 'a');
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-2147483645) + "'", int21 == (-2147483645));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-2) + "'", int30 == (-2));
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(minutes38);
    }

    @Test
    public void test0893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0893");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        int int1 = minutes0.getMinutes();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes9 = minutes7.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = minutes10.get(durationFieldType11);
        org.joda.time.DurationFieldType durationFieldType13 = minutes10.getFieldType();
        int int14 = minutes9.get(durationFieldType13);
        org.joda.time.Minutes minutes16 = minutes9.plus((-1));
        org.joda.time.Minutes minutes18 = minutes9.minus((int) (short) 10);
        org.joda.time.Minutes minutes20 = minutes18.dividedBy((-2147483648));
        org.joda.time.Minutes minutes21 = minutes6.plus(minutes20);
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes24 = minutes22.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = minutes25.get(durationFieldType26);
        org.joda.time.MutablePeriod mutablePeriod28 = minutes25.toMutablePeriod();
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes25);
        boolean boolean30 = minutes24.isLessThan(minutes29);
        org.joda.time.DurationFieldType durationFieldType31 = minutes29.getFieldType();
        boolean boolean32 = minutes21.isSupported(durationFieldType31);
        boolean boolean33 = minutes0.isLessThan(minutes21);
        org.joda.time.Minutes minutes35 = minutes21.plus((int) ' ');
        int int36 = minutes35.size();
        org.joda.time.Minutes minutes37 = minutes35.negated();
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.minutes(1);
        org.joda.time.PeriodType periodType40 = minutes39.getPeriodType();
        org.joda.time.Period period41 = minutes39.toPeriod();
        java.lang.String str42 = minutes39.toString();
        org.joda.time.Minutes minutes43 = minutes35.plus(minutes39);
        org.joda.time.DurationFieldType durationFieldType44 = minutes35.getFieldType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-2147483648) + "'", int1 == (-2147483648));
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-2) + "'", int14 == (-2));
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT1M" + "'", str42, "PT1M");
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(durationFieldType44);
    }

    @Test
    public void test0894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0894");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.Minutes minutes13 = minutes3.plus(10);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType16 = minutes14.getFieldType(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
    }

    @Test
    public void test0895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0895");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        org.joda.time.Minutes minutes5 = minutes3.plus((int) 'a');
        org.joda.time.Period period6 = minutes3.toPeriod();
        org.joda.time.Duration duration7 = minutes3.toStandardDuration();
        int int8 = minutes3.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2147483645) + "'", int8 == (-2147483645));
    }

    @Test
    public void test0896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0896");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = minutes0.get(durationFieldType1);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType4 = minutes0.getFieldType();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration6 = minutes5.toStandardDuration();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes5);
        boolean boolean8 = minutes0.isGreaterThan(minutes5);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod10 = minutes9.toMutablePeriod();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes9);
        boolean boolean12 = minutes0.equals((java.lang.Object) minutes11);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test0897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0897");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = minutes5.get(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType8 = minutes5.getFieldType();
        int int9 = minutes4.get(durationFieldType8);
        org.joda.time.Minutes minutes11 = minutes4.plus((-1));
        boolean boolean12 = minutes1.isGreaterThan(minutes4);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = minutes16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = minutes16.getFieldType();
        int int20 = minutes15.get(durationFieldType19);
        boolean boolean21 = minutes4.isSupported(durationFieldType19);
        boolean boolean22 = minutes0.isSupported(durationFieldType19);
        java.lang.Class<?> wildcardClass23 = durationFieldType19.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-2) + "'", int9 == (-2));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-2) + "'", int20 == (-2));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0898");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.DurationFieldType durationFieldType12 = minutes3.getFieldType();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType15 = minutes14.getPeriodType();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes17 = minutes16.negated();
        org.joda.time.Minutes minutes18 = minutes16.negated();
        org.joda.time.DurationFieldType durationFieldType19 = minutes16.getFieldType();
        java.lang.String str20 = minutes16.toString();
        boolean boolean21 = minutes14.isGreaterThan(minutes16);
        boolean boolean22 = minutes13.equals((java.lang.Object) minutes14);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes13);
        int int24 = minutes3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes13);
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes27 = minutes25.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType28 = minutes27.getFieldType();
        org.joda.time.Minutes minutes29 = minutes27.negated();
        org.joda.time.Minutes minutes31 = minutes27.dividedBy((int) '4');
        org.joda.time.Minutes minutes32 = minutes13.plus(minutes27);
        org.joda.time.Minutes minutes34 = minutes27.multipliedBy((int) '#');
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes36 = minutes35.negated();
        org.joda.time.Minutes minutes38 = minutes36.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes41 = minutes39.dividedBy((int) 'a');
        org.joda.time.Minutes minutes43 = minutes39.plus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType44 = minutes43.getFieldType();
        boolean boolean45 = minutes36.isSupported(durationFieldType44);
        org.joda.time.Period period46 = minutes36.toPeriod();
        org.joda.time.Minutes minutes48 = minutes36.minus(0);
        java.lang.String str49 = minutes48.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes50 = minutes27.plus(minutes48);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: -2 + -2147483647");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "PT2147483647M" + "'", str20, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "PT-2147483647M" + "'", str49, "PT-2147483647M");
    }

    @Test
    public void test0899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0899");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = minutes12.getFieldType();
        int int16 = minutes11.get(durationFieldType15);
        org.joda.time.Minutes minutes18 = minutes11.plus((-1));
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = minutes21.plus(0);
        int int26 = minutes19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes21);
        org.joda.time.Minutes minutes28 = minutes21.plus((int) ' ');
        java.lang.String str29 = minutes21.toString();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean32 = minutes21.isLessThan(minutes31);
        boolean boolean33 = minutes18.isLessThan(minutes21);
        org.joda.time.Minutes minutes34 = minutes2.minus(minutes18);
        org.joda.time.MutablePeriod mutablePeriod35 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes37 = minutes2.dividedBy(2);
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes40 = minutes38.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType42 = null;
        int int43 = minutes41.get(durationFieldType42);
        org.joda.time.DurationFieldType durationFieldType44 = minutes41.getFieldType();
        int int45 = minutes40.get(durationFieldType44);
        org.joda.time.Minutes minutes47 = minutes40.plus((-1));
        org.joda.time.Minutes minutes48 = minutes47.negated();
        org.joda.time.Minutes minutes49 = minutes37.plus(minutes48);
        org.joda.time.Minutes minutes51 = minutes37.minus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType52 = minutes51.getFieldType();
        org.joda.time.MutablePeriod mutablePeriod53 = minutes51.toMutablePeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2M" + "'", str29, "PT2M");
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-2) + "'", int45 == (-2));
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertNotNull(mutablePeriod53);
    }

    @Test
    public void test0900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0900");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = minutes0.get(durationFieldType1);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType4 = minutes0.getFieldType();
        org.joda.time.Minutes minutes6 = minutes0.dividedBy((-1));
        org.joda.time.Minutes minutes8 = minutes0.dividedBy(2147483646);
        org.joda.time.Minutes minutes10 = minutes0.dividedBy((-3));
        org.joda.time.Minutes minutes12 = minutes0.multipliedBy(1);
        org.joda.time.MutablePeriod mutablePeriod13 = minutes12.toMutablePeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
    }

    @Test
    public void test0901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0901");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.THREE;
        int int1 = minutes0.size();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod3 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = minutes4.plus(0);
        int int9 = minutes2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes4);
        org.joda.time.Minutes minutes11 = minutes4.plus((int) ' ');
        int int12 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes11);
        org.joda.time.Minutes minutes14 = minutes11.minus((int) (byte) 0);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.THREE;
        org.joda.time.Duration duration16 = minutes15.toStandardDuration();
        org.joda.time.Minutes minutes17 = minutes11.plus(minutes15);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType19 = minutes17.getFieldType((-3));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -3");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(minutes17);
    }

    @Test
    public void test0902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0902");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        int int9 = minutes2.getMinutes();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean12 = minutes2.isLessThan(minutes11);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration14 = minutes13.toStandardDuration();
        org.joda.time.Duration duration15 = minutes13.toStandardDuration();
        org.joda.time.Minutes minutes17 = minutes13.minus(2);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes20 = minutes18.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes21 = minutes18.negated();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes23 = minutes22.negated();
        org.joda.time.Minutes minutes24 = minutes22.negated();
        boolean boolean25 = minutes18.equals((java.lang.Object) minutes24);
        boolean boolean26 = minutes17.isLessThan(minutes18);
        org.joda.time.Minutes minutes27 = minutes11.minus(minutes18);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes29 = minutes28.negated();
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes28);
        java.lang.String str31 = minutes28.toString();
        org.joda.time.Minutes minutes32 = minutes27.plus(minutes28);
        int int33 = minutes32.size();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-2) + "'", int9 == (-2));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "PT2147483647M" + "'", str31, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
    }

    @Test
    public void test0903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0903");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.dividedBy(2);
        int int3 = minutes0.size();
        org.joda.time.Minutes minutes5 = minutes0.minus((-12));
        org.joda.time.Minutes minutes7 = minutes5.dividedBy((int) (short) -1);
        org.joda.time.Minutes minutes9 = minutes7.dividedBy((int) (short) 100);
        org.joda.time.DurationFieldType durationFieldType10 = minutes9.getFieldType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(durationFieldType10);
    }

    @Test
    public void test0904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0904");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes9 = minutes2.plus((-1));
        org.joda.time.Minutes minutes11 = minutes2.minus((int) (short) 10);
        org.joda.time.Duration duration12 = minutes2.toStandardDuration();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes2);
        java.lang.String str14 = minutes13.toString();
        org.joda.time.Minutes minutes16 = minutes13.minus((-22139006));
        org.joda.time.Minutes minutes18 = minutes16.dividedBy((-24));
        org.joda.time.Duration duration19 = minutes16.toStandardDuration();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "PT-2M" + "'", str14, "PT-2M");
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(duration19);
    }

    @Test
    public void test0905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0905");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType3 = minutes2.getFieldType();
        org.joda.time.Period period4 = minutes2.toPeriod();
        org.joda.time.PeriodType periodType5 = minutes2.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            int int7 = minutes2.getValue((-214748364));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -214748364");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(periodType5);
    }

    @Test
    public void test0906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0906");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes8 = minutes5.plus(4);
        int int9 = minutes8.getMinutes();
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = minutes13.get(durationFieldType14);
        org.joda.time.MutablePeriod mutablePeriod16 = minutes13.toMutablePeriod();
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes13);
        boolean boolean18 = minutes12.isLessThan(minutes17);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes21 = minutes19.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType23 = null;
        int int24 = minutes22.get(durationFieldType23);
        org.joda.time.DurationFieldType durationFieldType25 = minutes22.getFieldType();
        int int26 = minutes21.get(durationFieldType25);
        org.joda.time.Minutes minutes28 = minutes21.plus((-1));
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod30 = minutes29.toMutablePeriod();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes33 = minutes31.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes35 = minutes31.plus(0);
        int int36 = minutes29.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes31);
        org.joda.time.Minutes minutes38 = minutes31.plus((int) ' ');
        java.lang.String str39 = minutes31.toString();
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean42 = minutes31.isLessThan(minutes41);
        boolean boolean43 = minutes28.isLessThan(minutes31);
        org.joda.time.Minutes minutes44 = minutes12.minus(minutes28);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes47 = minutes45.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType48 = minutes47.getFieldType();
        org.joda.time.Minutes minutes49 = minutes47.negated();
        org.joda.time.Minutes minutes50 = minutes44.minus(minutes49);
        org.joda.time.Minutes minutes51 = minutes49.negated();
        boolean boolean52 = minutes8.equals((java.lang.Object) minutes49);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-2) + "'", int26 == (-2));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "PT2M" + "'", str39, "PT2M");
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test0907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0907");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.PeriodType periodType2 = minutes1.getPeriodType();
        org.joda.time.Minutes minutes4 = minutes1.minus(0);
        org.joda.time.DurationFieldType durationFieldType5 = minutes4.getFieldType();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes8 = minutes6.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = minutes9.get(durationFieldType10);
        org.joda.time.MutablePeriod mutablePeriod12 = minutes9.toMutablePeriod();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes9);
        boolean boolean14 = minutes8.isLessThan(minutes13);
        org.joda.time.DurationFieldType durationFieldType15 = minutes13.getFieldType();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes17 = minutes16.negated();
        org.joda.time.Minutes minutes18 = minutes16.negated();
        int int19 = minutes18.getMinutes();
        org.joda.time.DurationFieldType durationFieldType20 = minutes18.getFieldType();
        boolean boolean21 = minutes13.equals((java.lang.Object) durationFieldType20);
        boolean boolean22 = minutes4.isSupported(durationFieldType20);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2147483647) + "'", int19 == (-2147483647));
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test0908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0908");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = minutes0.get(durationFieldType1);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType4 = minutes0.getFieldType();
        org.joda.time.Minutes minutes6 = minutes0.dividedBy((-1));
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MAX_VALUE;
        int int8 = minutes7.size();
        org.joda.time.Minutes minutes9 = minutes0.plus(minutes7);
        org.joda.time.Period period10 = minutes9.toPeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(period10);
    }

    @Test
    public void test0909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0909");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType2 = minutes1.getPeriodType();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes4 = minutes3.negated();
        org.joda.time.Minutes minutes5 = minutes3.negated();
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        java.lang.String str7 = minutes3.toString();
        boolean boolean8 = minutes1.isGreaterThan(minutes3);
        boolean boolean9 = minutes0.equals((java.lang.Object) minutes1);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes14 = minutes10.plus(0);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        boolean boolean16 = minutes10.isGreaterThan(minutes15);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes18 = minutes17.negated();
        org.joda.time.Minutes minutes20 = minutes18.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes20);
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes24 = minutes22.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType26 = null;
        int int27 = minutes25.get(durationFieldType26);
        org.joda.time.DurationFieldType durationFieldType28 = minutes25.getFieldType();
        int int29 = minutes24.get(durationFieldType28);
        int int30 = minutes21.get(durationFieldType28);
        org.joda.time.PeriodType periodType31 = minutes21.getPeriodType();
        int int32 = minutes21.getMinutes();
        boolean boolean33 = minutes10.isLessThan(minutes21);
        int int34 = minutes21.size();
        int int35 = minutes21.size();
        int int36 = minutes21.getMinutes();
        org.joda.time.Minutes minutes37 = minutes21.negated();
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes37);
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes41 = minutes39.minus((int) (short) 1);
        org.joda.time.Minutes minutes43 = minutes41.multipliedBy(0);
        org.joda.time.Duration duration44 = minutes41.toStandardDuration();
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes46 = minutes45.negated();
        org.joda.time.DurationFieldType durationFieldType47 = minutes45.getFieldType();
        int int48 = minutes41.get(durationFieldType47);
        boolean boolean49 = minutes38.isSupported(durationFieldType47);
        int int50 = minutes0.get(durationFieldType47);
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.MAX_VALUE;
        int int52 = minutes51.size();
        org.joda.time.Minutes minutes53 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes54 = minutes53.negated();
        org.joda.time.Minutes minutes56 = minutes54.dividedBy((int) (byte) -1);
        boolean boolean57 = minutes51.isLessThan(minutes54);
        org.joda.time.Minutes minutes58 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes54);
        org.joda.time.Minutes minutes59 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes54);
        int int60 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes59);
        // The following exception was thrown during execution in test generation
        try {
            int int62 = minutes0.getValue(2147483645);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 2147483645");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT2147483647M" + "'", str7, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-2) + "'", int29 == (-2));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2147483647 + "'", int30 == 2147483647);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2147483647 + "'", int32 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2147483647 + "'", int36 == 2147483647);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2147483646 + "'", int48 == 2147483646);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2147483647 + "'", int50 == 2147483647);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
    }

    @Test
    public void test0910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0910");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.Duration duration2 = minutes0.toStandardDuration();
        org.joda.time.Minutes minutes4 = minutes0.minus(2);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.MutablePeriod mutablePeriod11 = minutes8.toMutablePeriod();
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes8);
        boolean boolean13 = minutes7.isLessThan(minutes12);
        int int14 = minutes7.getMinutes();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean17 = minutes7.isLessThan(minutes16);
        org.joda.time.Minutes minutes18 = minutes4.minus(minutes16);
        org.joda.time.PeriodType periodType19 = minutes16.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes21 = minutes16.minus((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: -2147483645 + -10");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-2) + "'", int14 == (-2));
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(periodType19);
    }

    @Test
    public void test0911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0911");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType3 = minutes2.getFieldType();
        org.joda.time.Minutes minutes4 = minutes2.negated();
        org.joda.time.Minutes minutes6 = minutes2.plus((int) (short) 1);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes9 = minutes7.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = minutes10.get(durationFieldType11);
        org.joda.time.MutablePeriod mutablePeriod13 = minutes10.toMutablePeriod();
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes10);
        boolean boolean15 = minutes9.isLessThan(minutes14);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes18 = minutes16.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = minutes19.get(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType22 = minutes19.getFieldType();
        int int23 = minutes18.get(durationFieldType22);
        org.joda.time.Minutes minutes25 = minutes18.plus((-1));
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod27 = minutes26.toMutablePeriod();
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes30 = minutes28.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes32 = minutes28.plus(0);
        int int33 = minutes26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes28);
        org.joda.time.Minutes minutes35 = minutes28.plus((int) ' ');
        java.lang.String str36 = minutes28.toString();
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean39 = minutes28.isLessThan(minutes38);
        boolean boolean40 = minutes25.isLessThan(minutes28);
        org.joda.time.Minutes minutes41 = minutes9.minus(minutes25);
        org.joda.time.MutablePeriod mutablePeriod42 = minutes9.toMutablePeriod();
        org.joda.time.Minutes minutes44 = minutes9.dividedBy(2);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes47 = minutes45.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes48 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = minutes48.get(durationFieldType49);
        org.joda.time.DurationFieldType durationFieldType51 = minutes48.getFieldType();
        int int52 = minutes47.get(durationFieldType51);
        org.joda.time.Minutes minutes54 = minutes47.plus((-1));
        org.joda.time.Minutes minutes55 = minutes54.negated();
        org.joda.time.Minutes minutes56 = minutes44.plus(minutes55);
        org.joda.time.Minutes minutes58 = minutes44.minus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType59 = minutes58.getFieldType();
        boolean boolean60 = minutes2.isLessThan(minutes58);
        int int61 = minutes2.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-2) + "'", int23 == (-2));
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "PT2M" + "'", str36, "PT2M");
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-2) + "'", int52 == (-2));
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-2) + "'", int61 == (-2));
    }

    @Test
    public void test0912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0912");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod8 = minutes7.toMutablePeriod();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod8);
        boolean boolean10 = minutes0.isLessThan(minutes9);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = minutes15.get(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = minutes15.getFieldType();
        int int19 = minutes14.get(durationFieldType18);
        org.joda.time.Minutes minutes21 = minutes14.plus((-1));
        boolean boolean22 = minutes11.isGreaterThan(minutes14);
        org.joda.time.Minutes minutes24 = minutes14.multipliedBy(2);
        org.joda.time.Minutes minutes25 = minutes24.negated();
        org.joda.time.Minutes minutes26 = minutes25.negated();
        boolean boolean27 = minutes0.isLessThan(minutes25);
        org.joda.time.Minutes minutes29 = minutes25.dividedBy((int) (short) 1);
        org.joda.time.Duration duration30 = minutes25.toStandardDuration();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod32 = minutes31.toMutablePeriod();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes35 = minutes33.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes37 = minutes33.plus(0);
        int int38 = minutes31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes33);
        org.joda.time.Minutes minutes40 = minutes33.plus((int) ' ');
        java.lang.String str41 = minutes33.toString();
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod43 = minutes42.toMutablePeriod();
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes46 = minutes44.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes48 = minutes44.plus(0);
        int int49 = minutes42.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes44);
        org.joda.time.Minutes minutes51 = minutes44.plus((int) ' ');
        java.lang.String str52 = minutes44.toString();
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean55 = minutes44.isLessThan(minutes54);
        org.joda.time.Minutes minutes56 = minutes33.minus(minutes44);
        java.lang.String str57 = minutes44.toString();
        org.joda.time.Minutes minutes58 = minutes25.plus(minutes44);
        org.joda.time.Minutes minutes60 = minutes58.dividedBy((-2147483548));
        org.joda.time.Minutes minutes62 = minutes60.minus((-2147483548));
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds63 = minutes62.toStandardSeconds();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 2147483548 * 60");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2) + "'", int19 == (-2));
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "PT2M" + "'", str41, "PT2M");
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "PT2M" + "'", str52, "PT2M");
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "PT2M" + "'", str57, "PT2M");
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(minutes62);
    }

    @Test
    public void test0913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0913");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes(2147483647);
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes4 = minutes2.minus((int) (short) 1);
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy(0);
        org.joda.time.Minutes minutes8 = minutes6.plus((-2147483648));
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        boolean boolean10 = minutes6.isGreaterThan(minutes9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes9.getFieldType();
        org.joda.time.DurationFieldType durationFieldType12 = minutes9.getFieldType();
        int int13 = minutes1.get(durationFieldType12);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2147483647 + "'", int13 == 2147483647);
    }

    @Test
    public void test0914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0914");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT-2M");
        org.joda.time.Seconds seconds2 = minutes1.toStandardSeconds();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(seconds2);
    }

    @Test
    public void test0915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0915");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod2 = minutes0.toMutablePeriod();
        java.lang.String str3 = minutes0.toString();
        int int4 = minutes0.size();
        org.joda.time.Minutes minutes5 = minutes0.negated();
        org.joda.time.Minutes minutes6 = null;
        org.joda.time.Minutes minutes7 = minutes0.minus(minutes6);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes9 = minutes8.negated();
        org.joda.time.DurationFieldType durationFieldType10 = minutes8.getFieldType();
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes13 = minutes12.negated();
        org.joda.time.Minutes minutes14 = minutes12.negated();
        java.lang.String str15 = minutes12.toString();
        int int16 = minutes12.size();
        org.joda.time.Minutes minutes18 = minutes12.minus(0);
        org.joda.time.Minutes minutes20 = minutes12.plus((int) (short) 0);
        boolean boolean21 = minutes8.isLessThan(minutes12);
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes23 = minutes22.negated();
        org.joda.time.Minutes minutes24 = minutes22.negated();
        boolean boolean25 = minutes12.isGreaterThan(minutes22);
        org.joda.time.Minutes minutes26 = minutes7.minus(minutes22);
        int int27 = minutes22.size();
        java.lang.String str28 = minutes22.toString();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2M" + "'", str3, "PT2M");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PT2147483647M" + "'", str15, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "PT2147483647M" + "'", str28, "PT2147483647M");
    }

    @Test
    public void test0916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0916");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        int int9 = minutes2.getMinutes();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean12 = minutes2.isLessThan(minutes11);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration14 = minutes13.toStandardDuration();
        org.joda.time.Duration duration15 = minutes13.toStandardDuration();
        org.joda.time.Minutes minutes17 = minutes13.minus(2);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes20 = minutes18.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes21 = minutes18.negated();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes23 = minutes22.negated();
        org.joda.time.Minutes minutes24 = minutes22.negated();
        boolean boolean25 = minutes18.equals((java.lang.Object) minutes24);
        boolean boolean26 = minutes17.isLessThan(minutes18);
        org.joda.time.Minutes minutes27 = minutes11.minus(minutes18);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes29 = minutes28.negated();
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes28);
        java.lang.String str31 = minutes28.toString();
        org.joda.time.Minutes minutes32 = minutes27.plus(minutes28);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes34 = minutes28.multipliedBy((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 2147483647 * 35");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-2) + "'", int9 == (-2));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "PT2147483647M" + "'", str31, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes32);
    }

    @Test
    public void test0917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0917");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes8 = minutes2.negated();
        org.joda.time.Minutes minutes10 = minutes8.plus((-2));
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy(0);
        org.joda.time.Duration duration13 = minutes12.toStandardDuration();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(duration13);
    }

    @Test
    public void test0918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0918");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes3 = minutes1.dividedBy((int) (byte) -1);
        java.lang.Class<?> wildcardClass4 = minutes3.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0919");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = minutes8.plus(0);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = minutes16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = minutes16.getFieldType();
        int int20 = minutes15.get(durationFieldType19);
        org.joda.time.Minutes minutes22 = minutes15.plus((-1));
        org.joda.time.Minutes minutes24 = minutes15.minus((int) (short) 10);
        org.joda.time.Minutes minutes26 = minutes24.dividedBy((-2147483648));
        org.joda.time.Minutes minutes27 = minutes12.plus(minutes26);
        org.joda.time.Minutes minutes28 = minutes2.minus(minutes12);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod30 = minutes29.toMutablePeriod();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes33 = minutes31.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes35 = minutes31.plus(0);
        int int36 = minutes29.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes31);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes39 = minutes37.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes41 = minutes37.plus(0);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes44 = minutes42.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType46 = null;
        int int47 = minutes45.get(durationFieldType46);
        org.joda.time.DurationFieldType durationFieldType48 = minutes45.getFieldType();
        int int49 = minutes44.get(durationFieldType48);
        org.joda.time.Minutes minutes51 = minutes44.plus((-1));
        org.joda.time.Minutes minutes53 = minutes44.minus((int) (short) 10);
        org.joda.time.Minutes minutes55 = minutes53.dividedBy((-2147483648));
        org.joda.time.Minutes minutes56 = minutes41.plus(minutes55);
        org.joda.time.Minutes minutes57 = minutes31.minus(minutes41);
        org.joda.time.PeriodType periodType58 = minutes31.getPeriodType();
        boolean boolean59 = minutes12.isLessThan(minutes31);
        org.joda.time.Minutes minutes60 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes31);
        // The following exception was thrown during execution in test generation
        try {
            int int62 = minutes31.getValue((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-2) + "'", int20 == (-2));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-2) + "'", int49 == (-2));
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(minutes60);
    }

    @Test
    public void test0920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0920");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = minutes0.get(durationFieldType1);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType4 = minutes0.getFieldType();
        org.joda.time.Minutes minutes6 = minutes0.dividedBy((-1));
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MAX_VALUE;
        int int8 = minutes7.size();
        org.joda.time.Minutes minutes9 = minutes0.plus(minutes7);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes11 = minutes10.negated();
        org.joda.time.PeriodType periodType12 = minutes11.getPeriodType();
        org.joda.time.Minutes minutes13 = minutes11.negated();
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes17 = minutes15.plus(0);
        org.joda.time.DurationFieldType durationFieldType18 = minutes17.getFieldType();
        int int19 = minutes13.get(durationFieldType18);
        boolean boolean20 = minutes7.isSupported(durationFieldType18);
        org.joda.time.DurationFieldType durationFieldType21 = minutes7.getFieldType();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes7);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2147483647 + "'", int19 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(minutes22);
    }

    @Test
    public void test0921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0921");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        org.joda.time.Period period10 = minutes2.toPeriod();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = minutes15.get(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = minutes15.getFieldType();
        int int19 = minutes14.get(durationFieldType18);
        org.joda.time.Minutes minutes21 = minutes14.plus((-1));
        boolean boolean22 = minutes11.isGreaterThan(minutes14);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes25 = minutes23.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = minutes26.get(durationFieldType27);
        org.joda.time.DurationFieldType durationFieldType29 = minutes26.getFieldType();
        int int30 = minutes25.get(durationFieldType29);
        boolean boolean31 = minutes14.isSupported(durationFieldType29);
        org.joda.time.Period period32 = minutes14.toPeriod();
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.minutes((int) (short) -1);
        int int35 = minutes34.size();
        int int36 = minutes34.getMinutes();
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod38 = minutes37.toMutablePeriod();
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes40 = minutes37.plus(minutes39);
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod42 = minutes41.toMutablePeriod();
        org.joda.time.Minutes minutes43 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes44 = minutes41.plus(minutes43);
        boolean boolean45 = minutes40.isLessThan(minutes41);
        java.lang.String str46 = minutes40.toString();
        boolean boolean47 = minutes34.equals((java.lang.Object) minutes40);
        org.joda.time.Minutes minutes48 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes50 = minutes48.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType52 = null;
        int int53 = minutes51.get(durationFieldType52);
        org.joda.time.MutablePeriod mutablePeriod54 = minutes51.toMutablePeriod();
        org.joda.time.Minutes minutes55 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes51);
        boolean boolean56 = minutes50.isLessThan(minutes55);
        org.joda.time.Minutes minutes57 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes59 = minutes57.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes60 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType61 = null;
        int int62 = minutes60.get(durationFieldType61);
        org.joda.time.DurationFieldType durationFieldType63 = minutes60.getFieldType();
        int int64 = minutes59.get(durationFieldType63);
        org.joda.time.Minutes minutes66 = minutes59.plus((-1));
        org.joda.time.Minutes minutes67 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod68 = minutes67.toMutablePeriod();
        org.joda.time.Minutes minutes69 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes71 = minutes69.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes73 = minutes69.plus(0);
        int int74 = minutes67.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes69);
        org.joda.time.Minutes minutes76 = minutes69.plus((int) ' ');
        java.lang.String str77 = minutes69.toString();
        org.joda.time.Minutes minutes79 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean80 = minutes69.isLessThan(minutes79);
        boolean boolean81 = minutes66.isLessThan(minutes69);
        org.joda.time.Minutes minutes82 = minutes50.minus(minutes66);
        org.joda.time.Minutes minutes83 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes85 = minutes83.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType86 = minutes85.getFieldType();
        org.joda.time.Minutes minutes87 = minutes85.negated();
        org.joda.time.Minutes minutes88 = minutes82.minus(minutes87);
        org.joda.time.Minutes minutes89 = minutes34.plus(minutes82);
        boolean boolean90 = minutes14.isGreaterThan(minutes34);
        int int91 = minutes14.getMinutes();
        int int92 = minutes2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes14);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2) + "'", int19 == (-2));
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-2) + "'", int30 == (-2));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "PT-2147483645M" + "'", str46, "PT-2147483645M");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-2) + "'", int64 == (-2));
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(mutablePeriod68);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertNotNull(minutes73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(minutes76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "PT2M" + "'", str77, "PT2M");
        org.junit.Assert.assertNotNull(minutes79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(minutes82);
        org.junit.Assert.assertNotNull(minutes83);
        org.junit.Assert.assertNotNull(minutes85);
        org.junit.Assert.assertNotNull(durationFieldType86);
        org.junit.Assert.assertNotNull(minutes87);
        org.junit.Assert.assertNotNull(minutes88);
        org.junit.Assert.assertNotNull(minutes89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-2) + "'", int91 == (-2));
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 1 + "'", int92 == 1);
    }

    @Test
    public void test0922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0922");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        org.joda.time.Minutes minutes11 = minutes2.multipliedBy((int) 'a');
        int int12 = minutes2.size();
        java.lang.String str13 = minutes2.toString();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PT2M" + "'", str13, "PT2M");
    }

    @Test
    public void test0923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0923");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod5 = minutes4.toMutablePeriod();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes7 = minutes4.plus(minutes6);
        boolean boolean8 = minutes3.isLessThan(minutes4);
        org.joda.time.PeriodType periodType9 = minutes3.getPeriodType();
        org.joda.time.Minutes minutes11 = minutes3.dividedBy(3);
        org.joda.time.Minutes minutes13 = minutes11.dividedBy(10);
        org.joda.time.Minutes minutes15 = minutes13.minus((-22139006));
        org.joda.time.Minutes minutes17 = minutes15.plus((-22139006));
        org.joda.time.Minutes minutes18 = minutes17.negated();
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        int int20 = minutes19.getMinutes();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = minutes24.get(durationFieldType25);
        org.joda.time.DurationFieldType durationFieldType27 = minutes24.getFieldType();
        int int28 = minutes23.get(durationFieldType27);
        org.joda.time.Minutes minutes30 = minutes23.plus((-1));
        org.joda.time.Minutes minutes32 = minutes23.minus((int) (short) 10);
        org.joda.time.Minutes minutes34 = minutes32.dividedBy((-2147483648));
        org.joda.time.Minutes minutes35 = minutes34.negated();
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes37 = minutes36.negated();
        org.joda.time.Minutes minutes38 = minutes36.negated();
        org.joda.time.Minutes minutes39 = minutes34.minus(minutes38);
        org.joda.time.Minutes minutes41 = minutes38.plus((int) 'a');
        boolean boolean42 = minutes19.isLessThan(minutes41);
        org.joda.time.Minutes minutes43 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes45 = minutes43.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = minutes46.get(durationFieldType47);
        org.joda.time.MutablePeriod mutablePeriod49 = minutes46.toMutablePeriod();
        org.joda.time.Minutes minutes50 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes46);
        boolean boolean51 = minutes45.isLessThan(minutes50);
        int int52 = minutes45.getMinutes();
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean55 = minutes45.isLessThan(minutes54);
        org.joda.time.Minutes minutes56 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration57 = minutes56.toStandardDuration();
        org.joda.time.Duration duration58 = minutes56.toStandardDuration();
        org.joda.time.Minutes minutes60 = minutes56.minus(2);
        org.joda.time.Minutes minutes61 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes63 = minutes61.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes64 = minutes61.negated();
        org.joda.time.Minutes minutes65 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes66 = minutes65.negated();
        org.joda.time.Minutes minutes67 = minutes65.negated();
        boolean boolean68 = minutes61.equals((java.lang.Object) minutes67);
        boolean boolean69 = minutes60.isLessThan(minutes61);
        org.joda.time.Minutes minutes70 = minutes54.minus(minutes61);
        org.joda.time.Minutes minutes71 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes72 = minutes71.negated();
        org.joda.time.Minutes minutes73 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes71);
        java.lang.String str74 = minutes71.toString();
        org.joda.time.Minutes minutes75 = minutes70.plus(minutes71);
        org.joda.time.Minutes minutes77 = org.joda.time.Minutes.minutes((int) (short) -1);
        int int78 = minutes77.size();
        boolean boolean79 = minutes75.isGreaterThan(minutes77);
        int int80 = minutes41.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes77);
        org.joda.time.Minutes minutes81 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes41);
        boolean boolean82 = minutes18.equals((java.lang.Object) minutes41);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-2147483648) + "'", int20 == (-2147483648));
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-2) + "'", int28 == (-2));
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod49);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-2) + "'", int52 == (-2));
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertNotNull(minutes73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "PT2147483647M" + "'", str74, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes75);
        org.junit.Assert.assertNotNull(minutes77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(minutes81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test0924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0924");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod8 = minutes7.toMutablePeriod();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod8);
        boolean boolean10 = minutes0.isLessThan(minutes9);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = minutes15.get(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = minutes15.getFieldType();
        int int19 = minutes14.get(durationFieldType18);
        org.joda.time.Minutes minutes21 = minutes14.plus((-1));
        boolean boolean22 = minutes11.isGreaterThan(minutes14);
        org.joda.time.Minutes minutes24 = minutes14.multipliedBy(2);
        org.joda.time.Minutes minutes25 = minutes24.negated();
        org.joda.time.Minutes minutes26 = minutes25.negated();
        boolean boolean27 = minutes0.isLessThan(minutes25);
        org.joda.time.Minutes minutes29 = minutes25.dividedBy((int) (short) 1);
        org.joda.time.Duration duration30 = minutes25.toStandardDuration();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod32 = minutes31.toMutablePeriod();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes35 = minutes33.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes37 = minutes33.plus(0);
        int int38 = minutes31.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes33);
        org.joda.time.Minutes minutes40 = minutes33.plus((int) ' ');
        java.lang.String str41 = minutes33.toString();
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod43 = minutes42.toMutablePeriod();
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes46 = minutes44.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes48 = minutes44.plus(0);
        int int49 = minutes42.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes44);
        org.joda.time.Minutes minutes51 = minutes44.plus((int) ' ');
        java.lang.String str52 = minutes44.toString();
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean55 = minutes44.isLessThan(minutes54);
        org.joda.time.Minutes minutes56 = minutes33.minus(minutes44);
        java.lang.String str57 = minutes44.toString();
        org.joda.time.Minutes minutes58 = minutes25.plus(minutes44);
        org.joda.time.Minutes minutes60 = minutes58.dividedBy((-2147483548));
        org.joda.time.Minutes minutes62 = minutes60.minus((-2147483548));
        org.joda.time.Minutes minutes64 = minutes62.plus((-41297760));
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2) + "'", int19 == (-2));
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "PT2M" + "'", str41, "PT2M");
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "PT2M" + "'", str52, "PT2M");
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "PT2M" + "'", str57, "PT2M");
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(minutes64);
    }

    @Test
    public void test0925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0925");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.THREE;
        int int1 = minutes0.size();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod3 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = minutes4.plus(0);
        int int9 = minutes2.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes4);
        org.joda.time.Minutes minutes11 = minutes4.plus((int) ' ');
        int int12 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes11);
        org.joda.time.Minutes minutes14 = minutes11.minus((int) (byte) 0);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.THREE;
        org.joda.time.Duration duration16 = minutes15.toStandardDuration();
        org.joda.time.Minutes minutes17 = minutes11.plus(minutes15);
        org.joda.time.DurationFieldType durationFieldType18 = minutes15.getFieldType();
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes21 = minutes19.multipliedBy((int) (short) -1);
        org.joda.time.MutablePeriod mutablePeriod22 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod24 = minutes23.toMutablePeriod();
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes27 = minutes25.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes29 = minutes25.plus(0);
        int int30 = minutes23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes25);
        org.joda.time.Duration duration31 = minutes23.toStandardDuration();
        org.joda.time.Minutes minutes32 = minutes19.plus(minutes23);
        org.joda.time.DurationFieldType durationFieldType33 = minutes23.getFieldType();
        int int34 = minutes15.get(durationFieldType33);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 3 + "'", int34 == 3);
    }

    @Test
    public void test0926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0926");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT-1073741775M");
        org.junit.Assert.assertNotNull(minutes1);
    }

    @Test
    public void test0927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0927");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = minutes0.get(durationFieldType1);
        org.joda.time.DurationFieldType durationFieldType3 = minutes0.getFieldType();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = minutes7.get(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType10 = minutes7.getFieldType();
        int int11 = minutes6.get(durationFieldType10);
        org.joda.time.Minutes minutes13 = minutes6.plus((-1));
        org.joda.time.Minutes minutes15 = minutes6.minus((int) (short) 10);
        org.joda.time.Minutes minutes17 = minutes15.dividedBy((-2147483648));
        org.joda.time.Minutes minutes18 = minutes17.negated();
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes20 = minutes19.negated();
        org.joda.time.Minutes minutes21 = minutes19.negated();
        org.joda.time.Minutes minutes22 = minutes17.minus(minutes21);
        org.joda.time.Minutes minutes24 = minutes21.plus((int) 'a');
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes24);
        org.joda.time.Minutes minutes27 = minutes24.dividedBy((int) (byte) 1);
        java.lang.String str28 = minutes24.toString();
        org.joda.time.Minutes minutes30 = minutes24.dividedBy(2);
        boolean boolean31 = minutes0.isLessThan(minutes24);
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes34 = minutes32.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType36 = null;
        int int37 = minutes35.get(durationFieldType36);
        org.joda.time.MutablePeriod mutablePeriod38 = minutes35.toMutablePeriod();
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes35);
        boolean boolean40 = minutes34.isLessThan(minutes39);
        org.joda.time.DurationFieldType durationFieldType41 = minutes39.getFieldType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes42 = minutes0.minus(minutes39);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Integer.MIN_VALUE cannot be negated");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-2) + "'", int11 == (-2));
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "PT-2147483550M" + "'", str28, "PT-2147483550M");
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(durationFieldType41);
    }

    @Test
    public void test0928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0928");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        org.joda.time.Minutes minutes14 = minutes7.plus((-1));
        org.joda.time.Minutes minutes16 = minutes7.minus((int) (short) 10);
        org.joda.time.Minutes minutes18 = minutes16.dividedBy((-2147483648));
        org.joda.time.Minutes minutes19 = minutes4.plus(minutes18);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes22 = minutes20.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = minutes23.get(durationFieldType24);
        org.joda.time.DurationFieldType durationFieldType26 = minutes23.getFieldType();
        int int27 = minutes22.get(durationFieldType26);
        org.joda.time.Minutes minutes29 = minutes22.plus((-1));
        org.joda.time.Minutes minutes31 = minutes22.minus((int) (short) 10);
        org.joda.time.DurationFieldType durationFieldType33 = minutes22.getFieldType((int) (short) 0);
        int int34 = minutes19.get(durationFieldType33);
        org.joda.time.Minutes minutes36 = minutes19.minus(4);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes38 = minutes37.negated();
        org.joda.time.PeriodType periodType39 = minutes38.getPeriodType();
        org.joda.time.Minutes minutes40 = minutes38.negated();
        org.joda.time.DurationFieldType durationFieldType41 = minutes40.getFieldType();
        boolean boolean42 = minutes19.isSupported(durationFieldType41);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-2) + "'", int27 == (-2));
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test0929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0929");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes0.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes0.minus(minutes5);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod8 = minutes7.toMutablePeriod();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod8);
        boolean boolean10 = minutes0.isLessThan(minutes9);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod12 = minutes11.toMutablePeriod();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes14 = minutes11.plus(minutes13);
        org.joda.time.Period period15 = minutes14.toPeriod();
        int int16 = minutes9.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes14);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration18 = minutes17.toStandardDuration();
        org.joda.time.Duration duration19 = minutes17.toStandardDuration();
        org.joda.time.Minutes minutes21 = minutes17.minus(2);
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes24 = minutes22.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = minutes22.negated();
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes27 = minutes26.negated();
        org.joda.time.Minutes minutes28 = minutes26.negated();
        boolean boolean29 = minutes22.equals((java.lang.Object) minutes28);
        boolean boolean30 = minutes21.isLessThan(minutes22);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes33 = minutes31.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType35 = null;
        int int36 = minutes34.get(durationFieldType35);
        org.joda.time.MutablePeriod mutablePeriod37 = minutes34.toMutablePeriod();
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes34);
        boolean boolean39 = minutes33.isLessThan(minutes38);
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes42 = minutes40.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes43 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType44 = null;
        int int45 = minutes43.get(durationFieldType44);
        org.joda.time.DurationFieldType durationFieldType46 = minutes43.getFieldType();
        int int47 = minutes42.get(durationFieldType46);
        org.joda.time.Minutes minutes49 = minutes42.plus((-1));
        org.joda.time.Minutes minutes50 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod51 = minutes50.toMutablePeriod();
        org.joda.time.Minutes minutes52 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes54 = minutes52.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes56 = minutes52.plus(0);
        int int57 = minutes50.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes52);
        org.joda.time.Minutes minutes59 = minutes52.plus((int) ' ');
        java.lang.String str60 = minutes52.toString();
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean63 = minutes52.isLessThan(minutes62);
        boolean boolean64 = minutes49.isLessThan(minutes52);
        org.joda.time.Minutes minutes65 = minutes33.minus(minutes49);
        org.joda.time.MutablePeriod mutablePeriod66 = minutes33.toMutablePeriod();
        org.joda.time.Minutes minutes68 = minutes33.dividedBy(2);
        org.joda.time.Minutes minutes69 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes71 = minutes69.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes72 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType73 = null;
        int int74 = minutes72.get(durationFieldType73);
        org.joda.time.DurationFieldType durationFieldType75 = minutes72.getFieldType();
        int int76 = minutes71.get(durationFieldType75);
        org.joda.time.Minutes minutes78 = minutes71.plus((-1));
        org.joda.time.Minutes minutes79 = minutes78.negated();
        org.joda.time.Minutes minutes80 = minutes68.plus(minutes79);
        org.joda.time.Minutes minutes82 = minutes68.minus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType83 = minutes82.getFieldType();
        int int84 = minutes21.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes82);
        boolean boolean85 = minutes14.isGreaterThan(minutes21);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-2) + "'", int47 == (-2));
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "PT2M" + "'", str60, "PT2M");
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(mutablePeriod66);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(durationFieldType75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-2) + "'", int76 == (-2));
        org.junit.Assert.assertNotNull(minutes78);
        org.junit.Assert.assertNotNull(minutes79);
        org.junit.Assert.assertNotNull(minutes80);
        org.junit.Assert.assertNotNull(minutes82);
        org.junit.Assert.assertNotNull(durationFieldType83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test0930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0930");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod5 = minutes4.toMutablePeriod();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes7 = minutes4.plus(minutes6);
        boolean boolean8 = minutes3.isLessThan(minutes4);
        org.joda.time.PeriodType periodType9 = minutes3.getPeriodType();
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = minutes13.get(durationFieldType14);
        org.joda.time.MutablePeriod mutablePeriod16 = minutes13.toMutablePeriod();
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes13);
        boolean boolean18 = minutes12.isLessThan(minutes17);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes21 = minutes19.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType23 = null;
        int int24 = minutes22.get(durationFieldType23);
        org.joda.time.DurationFieldType durationFieldType25 = minutes22.getFieldType();
        int int26 = minutes21.get(durationFieldType25);
        org.joda.time.Minutes minutes28 = minutes21.plus((-1));
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod30 = minutes29.toMutablePeriod();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes33 = minutes31.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes35 = minutes31.plus(0);
        int int36 = minutes29.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes31);
        org.joda.time.Minutes minutes38 = minutes31.plus((int) ' ');
        java.lang.String str39 = minutes31.toString();
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean42 = minutes31.isLessThan(minutes41);
        boolean boolean43 = minutes28.isLessThan(minutes31);
        org.joda.time.Minutes minutes44 = minutes12.minus(minutes28);
        org.joda.time.MutablePeriod mutablePeriod45 = minutes12.toMutablePeriod();
        org.joda.time.Minutes minutes47 = minutes12.dividedBy(2);
        org.joda.time.Minutes minutes48 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes50 = minutes48.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType52 = null;
        int int53 = minutes51.get(durationFieldType52);
        org.joda.time.DurationFieldType durationFieldType54 = minutes51.getFieldType();
        int int55 = minutes50.get(durationFieldType54);
        org.joda.time.Minutes minutes57 = minutes50.plus((-1));
        org.joda.time.Minutes minutes58 = minutes57.negated();
        org.joda.time.Minutes minutes59 = minutes47.plus(minutes58);
        org.joda.time.Minutes minutes61 = minutes47.minus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType62 = minutes61.getFieldType();
        org.joda.time.Minutes minutes63 = minutes3.plus(minutes61);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes65 = minutes63.multipliedBy((-4));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: -2147483647 * -4");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-2) + "'", int26 == (-2));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "PT2M" + "'", str39, "PT2M");
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(mutablePeriod45);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-2) + "'", int55 == (-2));
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertNotNull(minutes63);
    }

    @Test
    public void test0931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0931");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        int int1 = minutes0.getMinutes();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = minutes5.get(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType8 = minutes5.getFieldType();
        int int9 = minutes4.get(durationFieldType8);
        org.joda.time.Minutes minutes11 = minutes4.plus((-1));
        org.joda.time.Minutes minutes13 = minutes4.minus((int) (short) 10);
        org.joda.time.Minutes minutes15 = minutes13.dividedBy((-2147483648));
        org.joda.time.Minutes minutes16 = minutes15.negated();
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes18 = minutes17.negated();
        org.joda.time.Minutes minutes19 = minutes17.negated();
        org.joda.time.Minutes minutes20 = minutes15.minus(minutes19);
        org.joda.time.Minutes minutes22 = minutes19.plus((int) 'a');
        boolean boolean23 = minutes0.isLessThan(minutes22);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes26 = minutes24.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = minutes27.get(durationFieldType28);
        org.joda.time.MutablePeriod mutablePeriod30 = minutes27.toMutablePeriod();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes27);
        boolean boolean32 = minutes26.isLessThan(minutes31);
        int int33 = minutes26.getMinutes();
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean36 = minutes26.isLessThan(minutes35);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration38 = minutes37.toStandardDuration();
        org.joda.time.Duration duration39 = minutes37.toStandardDuration();
        org.joda.time.Minutes minutes41 = minutes37.minus(2);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes44 = minutes42.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes45 = minutes42.negated();
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes47 = minutes46.negated();
        org.joda.time.Minutes minutes48 = minutes46.negated();
        boolean boolean49 = minutes42.equals((java.lang.Object) minutes48);
        boolean boolean50 = minutes41.isLessThan(minutes42);
        org.joda.time.Minutes minutes51 = minutes35.minus(minutes42);
        org.joda.time.Minutes minutes52 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes53 = minutes52.negated();
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes52);
        java.lang.String str55 = minutes52.toString();
        org.joda.time.Minutes minutes56 = minutes51.plus(minutes52);
        org.joda.time.Minutes minutes58 = org.joda.time.Minutes.minutes((int) (short) -1);
        int int59 = minutes58.size();
        boolean boolean60 = minutes56.isGreaterThan(minutes58);
        int int61 = minutes22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes58);
        org.joda.time.PeriodType periodType62 = minutes58.getPeriodType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-2147483648) + "'", int1 == (-2147483648));
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-2) + "'", int9 == (-2));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-2) + "'", int33 == (-2));
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "PT2147483647M" + "'", str55, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(periodType62);
    }

    @Test
    public void test0932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0932");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = minutes0.get(durationFieldType1);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType4 = minutes0.getFieldType();
        org.joda.time.Minutes minutes6 = minutes0.dividedBy((-1));
        org.joda.time.Minutes minutes8 = minutes0.dividedBy(2147483646);
        org.joda.time.Period period9 = minutes8.toPeriod();
        org.joda.time.DurationFieldType durationFieldType10 = minutes8.getFieldType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType10);
    }

    @Test
    public void test0933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0933");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.Minutes minutes13 = minutes3.multipliedBy(2);
        org.joda.time.Minutes minutes14 = minutes13.negated();
        org.joda.time.Minutes minutes15 = minutes14.negated();
        org.joda.time.Duration duration16 = minutes14.toStandardDuration();
        org.joda.time.Minutes minutes18 = minutes14.multipliedBy(0);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(minutes18);
    }

    @Test
    public void test0934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0934");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = minutes0.negated();
        org.joda.time.DurationFieldType durationFieldType3 = minutes0.getFieldType();
        java.lang.String str4 = minutes0.toString();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes6 = minutes5.negated();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes5);
        int int8 = minutes5.size();
        org.joda.time.MutablePeriod mutablePeriod9 = minutes5.toMutablePeriod();
        boolean boolean10 = minutes0.equals((java.lang.Object) minutes5);
        org.joda.time.DurationFieldType durationFieldType12 = minutes5.getFieldType((int) (short) 0);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod14 = minutes13.toMutablePeriod();
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes17 = minutes15.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes19 = minutes15.plus(0);
        int int20 = minutes13.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes15);
        org.joda.time.Minutes minutes22 = minutes15.plus((int) ' ');
        java.lang.String str23 = minutes15.toString();
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean26 = minutes15.isLessThan(minutes25);
        org.joda.time.Period period27 = minutes25.toPeriod();
        boolean boolean28 = minutes5.isGreaterThan(minutes25);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes5);
        org.joda.time.MutablePeriod mutablePeriod30 = minutes5.toMutablePeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT2147483647M" + "'", str4, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT2M" + "'", str23, "PT2M");
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
    }

    @Test
    public void test0935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0935");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        org.joda.time.Minutes minutes14 = minutes7.plus((-1));
        org.joda.time.Minutes minutes16 = minutes7.minus((int) (short) 10);
        org.joda.time.Minutes minutes18 = minutes16.dividedBy((-2147483648));
        org.joda.time.Minutes minutes19 = minutes4.plus(minutes18);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes22 = minutes20.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = minutes23.get(durationFieldType24);
        org.joda.time.MutablePeriod mutablePeriod26 = minutes23.toMutablePeriod();
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes23);
        boolean boolean28 = minutes22.isLessThan(minutes27);
        org.joda.time.DurationFieldType durationFieldType29 = minutes27.getFieldType();
        boolean boolean30 = minutes19.isSupported(durationFieldType29);
        org.joda.time.Minutes minutes32 = minutes19.plus((int) (short) -1);
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes35 = minutes33.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes36 = minutes33.negated();
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes39 = minutes33.minus(minutes38);
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod41 = minutes40.toMutablePeriod();
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod41);
        boolean boolean43 = minutes33.isLessThan(minutes42);
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes42);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes47 = minutes45.minus((int) (short) 0);
        boolean boolean48 = minutes42.isLessThan(minutes47);
        org.joda.time.Minutes minutes50 = minutes47.multipliedBy((int) (short) 0);
        boolean boolean51 = minutes19.isGreaterThan(minutes50);
        int int52 = minutes19.size();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
    }

    @Test
    public void test0936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0936");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        org.joda.time.Minutes minutes10 = minutes9.negated();
        org.joda.time.Period period11 = minutes9.toPeriod();
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = minutes12.negated();
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes18 = minutes12.minus(minutes17);
        boolean boolean19 = minutes9.isLessThan(minutes17);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod21 = minutes20.toMutablePeriod();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes24 = minutes22.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes26 = minutes22.plus(0);
        int int27 = minutes20.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes22);
        org.joda.time.Minutes minutes29 = minutes22.plus((int) ' ');
        java.lang.String str30 = minutes22.toString();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = minutes31.get(durationFieldType32);
        org.joda.time.MutablePeriod mutablePeriod34 = minutes31.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType35 = minutes31.getFieldType();
        org.joda.time.Minutes minutes37 = minutes31.dividedBy((-1));
        org.joda.time.Minutes minutes39 = minutes31.dividedBy(2147483646);
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.minutes((int) (byte) 10);
        boolean boolean42 = minutes31.isLessThan(minutes41);
        org.joda.time.Minutes minutes43 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes45 = minutes43.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType47 = null;
        int int48 = minutes46.get(durationFieldType47);
        org.joda.time.MutablePeriod mutablePeriod49 = minutes46.toMutablePeriod();
        org.joda.time.Minutes minutes50 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes46);
        boolean boolean51 = minutes45.isLessThan(minutes50);
        org.joda.time.Minutes minutes52 = minutes41.plus(minutes45);
        boolean boolean53 = minutes22.isGreaterThan(minutes41);
        org.joda.time.Minutes minutes55 = org.joda.time.Minutes.minutes((int) (byte) -1);
        org.joda.time.Minutes minutes56 = minutes41.minus(minutes55);
        org.joda.time.Minutes minutes57 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration58 = minutes57.toStandardDuration();
        org.joda.time.Duration duration59 = minutes57.toStandardDuration();
        org.joda.time.Minutes minutes61 = minutes57.minus(2);
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes64 = minutes62.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes65 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType66 = null;
        int int67 = minutes65.get(durationFieldType66);
        org.joda.time.MutablePeriod mutablePeriod68 = minutes65.toMutablePeriod();
        org.joda.time.Minutes minutes69 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes65);
        boolean boolean70 = minutes64.isLessThan(minutes69);
        int int71 = minutes64.getMinutes();
        org.joda.time.Minutes minutes73 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean74 = minutes64.isLessThan(minutes73);
        org.joda.time.Minutes minutes75 = minutes61.minus(minutes73);
        org.joda.time.Minutes minutes76 = minutes56.minus(minutes75);
        org.joda.time.Minutes minutes77 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration78 = minutes77.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod79 = minutes77.toMutablePeriod();
        org.joda.time.Minutes minutes80 = org.joda.time.Minutes.MAX_VALUE;
        int int81 = minutes80.size();
        org.joda.time.Minutes minutes82 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes83 = minutes82.negated();
        org.joda.time.Minutes minutes85 = minutes83.dividedBy((int) (byte) -1);
        boolean boolean86 = minutes80.isLessThan(minutes83);
        boolean boolean87 = minutes77.isLessThan(minutes80);
        org.joda.time.Duration duration88 = minutes77.toStandardDuration();
        org.joda.time.Minutes minutes89 = minutes76.minus(minutes77);
        boolean boolean90 = minutes17.isGreaterThan(minutes77);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "PT2M" + "'", str30, "PT2M");
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod49);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod68);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-2) + "'", int71 == (-2));
        org.junit.Assert.assertNotNull(minutes73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(minutes75);
        org.junit.Assert.assertNotNull(minutes76);
        org.junit.Assert.assertNotNull(minutes77);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertNotNull(mutablePeriod79);
        org.junit.Assert.assertNotNull(minutes80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertNotNull(minutes82);
        org.junit.Assert.assertNotNull(minutes83);
        org.junit.Assert.assertNotNull(minutes85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(duration88);
        org.junit.Assert.assertNotNull(minutes89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test0937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0937");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = minutes0.negated();
        org.joda.time.DurationFieldType durationFieldType3 = minutes0.getFieldType();
        java.lang.String str4 = minutes0.toString();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = minutes5.get(durationFieldType6);
        org.joda.time.MutablePeriod mutablePeriod8 = minutes5.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType9 = minutes5.getFieldType();
        int int10 = minutes0.get(durationFieldType9);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MAX_VALUE;
        boolean boolean12 = minutes0.isLessThan(minutes11);
        org.joda.time.Minutes minutes14 = minutes0.plus((-12));
        // The following exception was thrown during execution in test generation
        try {
            int int16 = minutes14.getValue((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT2147483647M" + "'", str4, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2147483647 + "'", int10 == 2147483647);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes14);
    }

    @Test
    public void test0938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0938");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes5 = minutes2.plus(0);
        int int6 = minutes5.size();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
    }

    @Test
    public void test0939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0939");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes3 = minutes0.plus(minutes2);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod5 = minutes4.toMutablePeriod();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes7 = minutes4.plus(minutes6);
        boolean boolean8 = minutes3.isLessThan(minutes4);
        org.joda.time.PeriodType periodType9 = minutes3.getPeriodType();
        org.joda.time.Minutes minutes11 = minutes3.dividedBy(3);
        org.joda.time.Minutes minutes13 = minutes11.dividedBy(10);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod15 = minutes14.toMutablePeriod();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes18 = minutes16.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes20 = minutes16.plus(0);
        int int21 = minutes14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes16);
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes24 = minutes22.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes26 = minutes22.plus(0);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes29 = minutes27.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType31 = null;
        int int32 = minutes30.get(durationFieldType31);
        org.joda.time.DurationFieldType durationFieldType33 = minutes30.getFieldType();
        int int34 = minutes29.get(durationFieldType33);
        org.joda.time.Minutes minutes36 = minutes29.plus((-1));
        org.joda.time.Minutes minutes38 = minutes29.minus((int) (short) 10);
        org.joda.time.Minutes minutes40 = minutes38.dividedBy((-2147483648));
        org.joda.time.Minutes minutes41 = minutes26.plus(minutes40);
        org.joda.time.Minutes minutes42 = minutes16.minus(minutes26);
        org.joda.time.Minutes minutes43 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod44 = minutes43.toMutablePeriod();
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes46 = minutes43.plus(minutes45);
        org.joda.time.Minutes minutes47 = minutes42.plus(minutes45);
        org.joda.time.Minutes minutes48 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes50 = minutes48.multipliedBy((int) (short) -1);
        org.joda.time.MutablePeriod mutablePeriod51 = minutes48.toMutablePeriod();
        org.joda.time.Minutes minutes52 = minutes45.minus(minutes48);
        org.joda.time.Minutes minutes53 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes55 = minutes53.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes56 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType57 = null;
        int int58 = minutes56.get(durationFieldType57);
        org.joda.time.DurationFieldType durationFieldType59 = minutes56.getFieldType();
        int int60 = minutes55.get(durationFieldType59);
        org.joda.time.Minutes minutes62 = minutes55.plus((-1));
        org.joda.time.Minutes minutes64 = minutes55.minus((int) (short) 10);
        org.joda.time.Minutes minutes66 = minutes64.dividedBy((-2147483648));
        org.joda.time.Minutes minutes67 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes64);
        java.lang.Class<?> wildcardClass68 = minutes64.getClass();
        boolean boolean69 = minutes45.equals((java.lang.Object) minutes64);
        boolean boolean70 = minutes13.equals((java.lang.Object) minutes45);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType72 = minutes45.getFieldType((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-2) + "'", int34 == (-2));
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(mutablePeriod44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-2) + "'", int60 == (-2));
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test0940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0940");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT2M");
        int int2 = minutes1.getMinutes();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes5 = minutes3.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType7 = null;
        int int8 = minutes6.get(durationFieldType7);
        org.joda.time.MutablePeriod mutablePeriod9 = minutes6.toMutablePeriod();
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes6);
        boolean boolean11 = minutes5.isLessThan(minutes10);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = minutes15.get(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = minutes15.getFieldType();
        int int19 = minutes14.get(durationFieldType18);
        org.joda.time.Minutes minutes21 = minutes14.plus((-1));
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod23 = minutes22.toMutablePeriod();
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes26 = minutes24.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes28 = minutes24.plus(0);
        int int29 = minutes22.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes24);
        org.joda.time.Minutes minutes31 = minutes24.plus((int) ' ');
        java.lang.String str32 = minutes24.toString();
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean35 = minutes24.isLessThan(minutes34);
        boolean boolean36 = minutes21.isLessThan(minutes24);
        org.joda.time.Minutes minutes37 = minutes5.minus(minutes21);
        org.joda.time.MutablePeriod mutablePeriod38 = minutes5.toMutablePeriod();
        org.joda.time.Minutes minutes40 = minutes5.dividedBy(2);
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes43 = minutes41.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = minutes44.get(durationFieldType45);
        org.joda.time.DurationFieldType durationFieldType47 = minutes44.getFieldType();
        int int48 = minutes43.get(durationFieldType47);
        org.joda.time.Minutes minutes50 = minutes43.plus((-1));
        org.joda.time.Minutes minutes51 = minutes50.negated();
        org.joda.time.Minutes minutes52 = minutes40.plus(minutes51);
        org.joda.time.Minutes minutes54 = minutes40.minus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType55 = minutes54.getFieldType();
        org.joda.time.Minutes minutes57 = minutes54.dividedBy((-2147483647));
        boolean boolean58 = minutes1.isGreaterThan(minutes54);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2) + "'", int19 == (-2));
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "PT2M" + "'", str32, "PT2M");
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-2) + "'", int48 == (-2));
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test0941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0941");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Duration duration8 = minutes2.toStandardDuration();
        org.joda.time.Minutes minutes10 = minutes2.dividedBy((-22139006));
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType12 = minutes2.getFieldType((-24));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -24");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(minutes10);
    }

    @Test
    public void test0942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0942");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        java.lang.String str10 = minutes2.toString();
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean13 = minutes2.isLessThan(minutes12);
        org.joda.time.Duration duration14 = minutes2.toStandardDuration();
        int int15 = minutes2.size();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes18 = minutes16.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes20 = minutes16.plus(0);
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType25 = null;
        int int26 = minutes24.get(durationFieldType25);
        org.joda.time.DurationFieldType durationFieldType27 = minutes24.getFieldType();
        int int28 = minutes23.get(durationFieldType27);
        org.joda.time.Minutes minutes30 = minutes23.plus((-1));
        org.joda.time.Minutes minutes32 = minutes23.minus((int) (short) 10);
        org.joda.time.Minutes minutes34 = minutes32.dividedBy((-2147483648));
        org.joda.time.Minutes minutes35 = minutes20.plus(minutes34);
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes37 = minutes36.negated();
        org.joda.time.Minutes minutes38 = minutes36.negated();
        java.lang.String str39 = minutes36.toString();
        org.joda.time.Minutes minutes41 = minutes36.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes42 = minutes20.minus(minutes36);
        org.joda.time.Minutes minutes43 = minutes2.minus(minutes42);
        org.joda.time.MutablePeriod mutablePeriod44 = minutes42.toMutablePeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT2M" + "'", str10, "PT2M");
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-2) + "'", int28 == (-2));
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "PT2147483647M" + "'", str39, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(mutablePeriod44);
    }

    @Test
    public void test0943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0943");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes2.toMutablePeriod();
        org.joda.time.PeriodType periodType4 = minutes2.getPeriodType();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes2);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(minutes5);
    }

    @Test
    public void test0944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0944");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes3 = minutes1.plus(0);
        org.joda.time.Minutes minutes5 = minutes3.multipliedBy((int) (byte) -1);
        java.lang.Class<?> wildcardClass6 = minutes5.getClass();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0945");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.DurationFieldType durationFieldType2 = minutes0.getFieldType();
        org.joda.time.DurationFieldType durationFieldType3 = minutes0.getFieldType();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes5 = minutes4.negated();
        org.joda.time.Minutes minutes6 = minutes4.negated();
        java.lang.String str7 = minutes4.toString();
        int int8 = minutes4.size();
        org.joda.time.Minutes minutes10 = minutes4.minus(0);
        org.joda.time.Minutes minutes12 = minutes4.plus((int) (short) 0);
        boolean boolean13 = minutes0.isLessThan(minutes4);
        org.joda.time.Minutes minutes15 = minutes0.dividedBy((int) (byte) 1);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT2147483647M" + "'", str7, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(minutes15);
    }

    @Test
    public void test0946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0946");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = minutes12.getFieldType();
        int int16 = minutes11.get(durationFieldType15);
        org.joda.time.Minutes minutes18 = minutes11.plus((-1));
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = minutes21.plus(0);
        int int26 = minutes19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes21);
        org.joda.time.Minutes minutes28 = minutes21.plus((int) ' ');
        java.lang.String str29 = minutes21.toString();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean32 = minutes21.isLessThan(minutes31);
        boolean boolean33 = minutes18.isLessThan(minutes21);
        org.joda.time.Minutes minutes34 = minutes2.minus(minutes18);
        org.joda.time.MutablePeriod mutablePeriod35 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod37 = minutes36.toMutablePeriod();
        boolean boolean38 = minutes2.isLessThan(minutes36);
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration40 = minutes39.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod41 = minutes39.toMutablePeriod();
        java.lang.String str42 = minutes39.toString();
        int int43 = minutes39.size();
        org.joda.time.Minutes minutes44 = minutes39.negated();
        org.joda.time.Minutes minutes45 = null;
        org.joda.time.Minutes minutes46 = minutes39.minus(minutes45);
        boolean boolean47 = minutes36.isGreaterThan(minutes45);
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.minutes((int) (short) -1);
        int int50 = minutes49.size();
        int int51 = minutes49.getMinutes();
        org.joda.time.Minutes minutes52 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod53 = minutes52.toMutablePeriod();
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes55 = minutes52.plus(minutes54);
        org.joda.time.Minutes minutes56 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod57 = minutes56.toMutablePeriod();
        org.joda.time.Minutes minutes58 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes59 = minutes56.plus(minutes58);
        boolean boolean60 = minutes55.isLessThan(minutes56);
        java.lang.String str61 = minutes55.toString();
        boolean boolean62 = minutes49.equals((java.lang.Object) minutes55);
        org.joda.time.Minutes minutes63 = org.joda.time.Minutes.MAX_VALUE;
        int int64 = minutes63.size();
        int int66 = minutes63.getValue(0);
        org.joda.time.Minutes minutes67 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes63);
        org.joda.time.Minutes minutes68 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes70 = minutes68.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes71 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType72 = null;
        int int73 = minutes71.get(durationFieldType72);
        org.joda.time.DurationFieldType durationFieldType74 = minutes71.getFieldType();
        int int75 = minutes70.get(durationFieldType74);
        org.joda.time.Minutes minutes77 = minutes70.plus((-1));
        org.joda.time.Minutes minutes79 = minutes70.minus((int) (short) 10);
        org.joda.time.Duration duration80 = minutes70.toStandardDuration();
        org.joda.time.Minutes minutes81 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes82 = minutes81.negated();
        org.joda.time.Minutes minutes83 = minutes81.negated();
        java.lang.String str84 = minutes81.toString();
        org.joda.time.Minutes minutes86 = minutes81.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes88 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes90 = minutes88.multipliedBy((int) (byte) 0);
        boolean boolean91 = minutes86.equals((java.lang.Object) minutes88);
        boolean boolean92 = minutes70.isGreaterThan(minutes88);
        boolean boolean93 = minutes67.equals((java.lang.Object) boolean92);
        org.joda.time.Minutes minutes94 = minutes67.negated();
        boolean boolean95 = minutes55.equals((java.lang.Object) minutes67);
        boolean boolean96 = minutes36.isGreaterThan(minutes55);
        org.joda.time.DurationFieldType durationFieldType98 = minutes36.getFieldType(0);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2M" + "'", str29, "PT2M");
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT2M" + "'", str42, "PT2M");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(mutablePeriod53);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(mutablePeriod57);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "PT-2147483645M" + "'", str61, "PT-2147483645M");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2147483647 + "'", int66 == 2147483647);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(durationFieldType74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-2) + "'", int75 == (-2));
        org.junit.Assert.assertNotNull(minutes77);
        org.junit.Assert.assertNotNull(minutes79);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertNotNull(minutes81);
        org.junit.Assert.assertNotNull(minutes82);
        org.junit.Assert.assertNotNull(minutes83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "PT2147483647M" + "'", str84, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes86);
        org.junit.Assert.assertNotNull(minutes88);
        org.junit.Assert.assertNotNull(minutes90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(minutes94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(durationFieldType98);
    }

    @Test
    public void test0947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0947");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes5 = minutes3.minus((int) (short) 1);
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy(0);
        org.joda.time.Minutes minutes9 = minutes7.plus((-2147483648));
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes11 = minutes10.negated();
        org.joda.time.Minutes minutes12 = minutes10.negated();
        boolean boolean13 = minutes9.isGreaterThan(minutes12);
        int int14 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes9);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Duration duration16 = minutes15.toStandardDuration();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.minutes((int) (short) -1);
        int int19 = minutes18.size();
        int int20 = minutes18.getMinutes();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod22 = minutes21.toMutablePeriod();
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes24 = minutes21.plus(minutes23);
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod26 = minutes25.toMutablePeriod();
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes28 = minutes25.plus(minutes27);
        boolean boolean29 = minutes24.isLessThan(minutes25);
        java.lang.String str30 = minutes24.toString();
        boolean boolean31 = minutes18.equals((java.lang.Object) minutes24);
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes34 = minutes32.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType36 = null;
        int int37 = minutes35.get(durationFieldType36);
        org.joda.time.MutablePeriod mutablePeriod38 = minutes35.toMutablePeriod();
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes35);
        boolean boolean40 = minutes34.isLessThan(minutes39);
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes43 = minutes41.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType45 = null;
        int int46 = minutes44.get(durationFieldType45);
        org.joda.time.DurationFieldType durationFieldType47 = minutes44.getFieldType();
        int int48 = minutes43.get(durationFieldType47);
        org.joda.time.Minutes minutes50 = minutes43.plus((-1));
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod52 = minutes51.toMutablePeriod();
        org.joda.time.Minutes minutes53 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes55 = minutes53.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes57 = minutes53.plus(0);
        int int58 = minutes51.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes53);
        org.joda.time.Minutes minutes60 = minutes53.plus((int) ' ');
        java.lang.String str61 = minutes53.toString();
        org.joda.time.Minutes minutes63 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean64 = minutes53.isLessThan(minutes63);
        boolean boolean65 = minutes50.isLessThan(minutes53);
        org.joda.time.Minutes minutes66 = minutes34.minus(minutes50);
        org.joda.time.Minutes minutes67 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes69 = minutes67.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType70 = minutes69.getFieldType();
        org.joda.time.Minutes minutes71 = minutes69.negated();
        org.joda.time.Minutes minutes72 = minutes66.minus(minutes71);
        org.joda.time.Minutes minutes73 = minutes18.plus(minutes66);
        boolean boolean74 = minutes15.isLessThan(minutes66);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "PT-2147483645M" + "'", str30, "PT-2147483645M");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-2) + "'", int48 == (-2));
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(mutablePeriod52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "PT2M" + "'", str61, "PT2M");
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(durationFieldType70);
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertNotNull(minutes73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test0948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0948");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        int int1 = minutes0.getMinutes();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = minutes5.get(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType8 = minutes5.getFieldType();
        int int9 = minutes4.get(durationFieldType8);
        org.joda.time.Minutes minutes11 = minutes4.plus((-1));
        org.joda.time.Minutes minutes13 = minutes4.minus((int) (short) 10);
        org.joda.time.Minutes minutes15 = minutes13.dividedBy((-2147483648));
        org.joda.time.Minutes minutes16 = minutes15.negated();
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes18 = minutes17.negated();
        org.joda.time.Minutes minutes19 = minutes17.negated();
        org.joda.time.Minutes minutes20 = minutes15.minus(minutes19);
        org.joda.time.Minutes minutes22 = minutes19.plus((int) 'a');
        boolean boolean23 = minutes0.isLessThan(minutes22);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes26 = minutes24.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes29 = minutes27.minus((int) (short) 1);
        org.joda.time.Minutes minutes31 = minutes29.multipliedBy(0);
        org.joda.time.Minutes minutes33 = minutes31.plus((-2147483648));
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes35 = minutes34.negated();
        org.joda.time.Minutes minutes36 = minutes34.negated();
        boolean boolean37 = minutes33.isGreaterThan(minutes36);
        int int38 = minutes24.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes33);
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes24);
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.THREE;
        int int41 = minutes40.size();
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod43 = minutes42.toMutablePeriod();
        org.joda.time.Minutes minutes44 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes46 = minutes44.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes48 = minutes44.plus(0);
        int int49 = minutes42.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes44);
        org.joda.time.Minutes minutes51 = minutes44.plus((int) ' ');
        int int52 = minutes40.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes51);
        org.joda.time.Minutes minutes53 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes56 = minutes54.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes57 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType58 = null;
        int int59 = minutes57.get(durationFieldType58);
        org.joda.time.DurationFieldType durationFieldType60 = minutes57.getFieldType();
        int int61 = minutes56.get(durationFieldType60);
        org.joda.time.Minutes minutes63 = minutes56.plus((-1));
        boolean boolean64 = minutes53.isGreaterThan(minutes56);
        org.joda.time.DurationFieldType durationFieldType65 = minutes56.getFieldType();
        int int67 = minutes56.getValue((int) (short) 0);
        org.joda.time.Period period68 = minutes56.toPeriod();
        org.joda.time.Minutes minutes69 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes70 = minutes69.negated();
        org.joda.time.Minutes minutes71 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod72 = minutes71.toMutablePeriod();
        org.joda.time.Minutes minutes73 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes74 = minutes71.plus(minutes73);
        int int75 = minutes70.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes73);
        org.joda.time.Minutes minutes76 = minutes56.minus(minutes70);
        boolean boolean77 = minutes40.isGreaterThan(minutes70);
        org.joda.time.Minutes minutes78 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod79 = minutes78.toMutablePeriod();
        org.joda.time.Minutes minutes80 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes81 = minutes78.plus(minutes80);
        org.joda.time.Minutes minutes83 = minutes81.plus((int) 'a');
        org.joda.time.Duration duration84 = minutes81.toStandardDuration();
        int int85 = minutes40.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes81);
        boolean boolean86 = minutes39.isLessThan(minutes40);
        boolean boolean87 = minutes22.isLessThan(minutes39);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-2147483648) + "'", int1 == (-2147483648));
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-2) + "'", int9 == (-2));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(durationFieldType60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-2) + "'", int61 == (-2));
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-2) + "'", int67 == (-2));
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertNotNull(mutablePeriod72);
        org.junit.Assert.assertNotNull(minutes73);
        org.junit.Assert.assertNotNull(minutes74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(minutes76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(minutes78);
        org.junit.Assert.assertNotNull(mutablePeriod79);
        org.junit.Assert.assertNotNull(minutes80);
        org.junit.Assert.assertNotNull(minutes81);
        org.junit.Assert.assertNotNull(minutes83);
        org.junit.Assert.assertNotNull(duration84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test0949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0949");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType2 = minutes1.getPeriodType();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes4 = minutes3.negated();
        org.joda.time.Minutes minutes5 = minutes3.negated();
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        java.lang.String str7 = minutes3.toString();
        boolean boolean8 = minutes1.isGreaterThan(minutes3);
        boolean boolean9 = minutes0.equals((java.lang.Object) minutes1);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes12 = minutes10.minus((int) (short) 1);
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy(0);
        boolean boolean15 = minutes0.isGreaterThan(minutes14);
        org.joda.time.Minutes minutes17 = minutes0.multipliedBy((-1));
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes19 = minutes17.multipliedBy((-4));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: -2147483647 * -4");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT2147483647M" + "'", str7, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(minutes17);
    }

    @Test
    public void test0950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0950");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType3 = minutes2.getFieldType();
        org.joda.time.Minutes minutes4 = minutes2.negated();
        org.joda.time.Minutes minutes6 = minutes2.plus((int) (short) 1);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes9 = minutes7.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = minutes10.get(durationFieldType11);
        org.joda.time.MutablePeriod mutablePeriod13 = minutes10.toMutablePeriod();
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes10);
        boolean boolean15 = minutes9.isLessThan(minutes14);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes18 = minutes16.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = minutes19.get(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType22 = minutes19.getFieldType();
        int int23 = minutes18.get(durationFieldType22);
        org.joda.time.Minutes minutes25 = minutes18.plus((-1));
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod27 = minutes26.toMutablePeriod();
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes30 = minutes28.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes32 = minutes28.plus(0);
        int int33 = minutes26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes28);
        org.joda.time.Minutes minutes35 = minutes28.plus((int) ' ');
        java.lang.String str36 = minutes28.toString();
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean39 = minutes28.isLessThan(minutes38);
        boolean boolean40 = minutes25.isLessThan(minutes28);
        org.joda.time.Minutes minutes41 = minutes9.minus(minutes25);
        org.joda.time.MutablePeriod mutablePeriod42 = minutes9.toMutablePeriod();
        org.joda.time.Minutes minutes44 = minutes9.dividedBy(2);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes47 = minutes45.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes48 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = minutes48.get(durationFieldType49);
        org.joda.time.DurationFieldType durationFieldType51 = minutes48.getFieldType();
        int int52 = minutes47.get(durationFieldType51);
        org.joda.time.Minutes minutes54 = minutes47.plus((-1));
        org.joda.time.Minutes minutes55 = minutes54.negated();
        org.joda.time.Minutes minutes56 = minutes44.plus(minutes55);
        org.joda.time.Minutes minutes58 = minutes44.minus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType59 = minutes58.getFieldType();
        boolean boolean60 = minutes2.isLessThan(minutes58);
        org.joda.time.Minutes minutes62 = minutes58.plus(100);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType64 = minutes58.getFieldType((-41297760));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -41297760");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-2) + "'", int23 == (-2));
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "PT2M" + "'", str36, "PT2M");
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-2) + "'", int52 == (-2));
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(minutes62);
    }

    @Test
    public void test0951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0951");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = minutes0.negated();
        java.lang.String str3 = minutes0.toString();
        org.joda.time.Minutes minutes5 = minutes0.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes8 = minutes6.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes11 = minutes9.minus((int) (short) 1);
        org.joda.time.Minutes minutes13 = minutes11.multipliedBy(0);
        org.joda.time.Minutes minutes15 = minutes13.plus((-2147483648));
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes17 = minutes16.negated();
        org.joda.time.Minutes minutes18 = minutes16.negated();
        boolean boolean19 = minutes15.isGreaterThan(minutes18);
        int int20 = minutes6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes15);
        org.joda.time.MutablePeriod mutablePeriod21 = minutes15.toMutablePeriod();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration23 = minutes22.toStandardDuration();
        org.joda.time.Duration duration24 = minutes22.toStandardDuration();
        org.joda.time.Minutes minutes26 = minutes22.minus(2);
        boolean boolean27 = minutes15.isGreaterThan(minutes26);
        int int28 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes26);
        org.joda.time.PeriodType periodType29 = minutes0.getPeriodType();
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType32 = minutes31.getPeriodType();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes34 = minutes33.negated();
        org.joda.time.Minutes minutes35 = minutes33.negated();
        org.joda.time.DurationFieldType durationFieldType36 = minutes33.getFieldType();
        java.lang.String str37 = minutes33.toString();
        boolean boolean38 = minutes31.isGreaterThan(minutes33);
        boolean boolean39 = minutes30.equals((java.lang.Object) minutes31);
        int int40 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes30);
        org.joda.time.Period period41 = minutes0.toPeriod();
        org.joda.time.Minutes minutes42 = minutes0.negated();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2147483647M" + "'", str3, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "PT2147483647M" + "'", str37, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(minutes42);
    }

    @Test
    public void test0952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0952");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes(2147483645);
        org.junit.Assert.assertNotNull(minutes1);
    }

    @Test
    public void test0953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0953");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        boolean boolean6 = minutes0.isGreaterThan(minutes5);
        org.joda.time.PeriodType periodType7 = minutes0.getPeriodType();
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType10 = minutes9.getPeriodType();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes12 = minutes11.negated();
        org.joda.time.Minutes minutes13 = minutes11.negated();
        org.joda.time.DurationFieldType durationFieldType14 = minutes11.getFieldType();
        java.lang.String str15 = minutes11.toString();
        boolean boolean16 = minutes9.isGreaterThan(minutes11);
        boolean boolean17 = minutes8.equals((java.lang.Object) minutes9);
        org.joda.time.Minutes minutes19 = minutes9.minus(1);
        org.joda.time.Minutes minutes20 = minutes0.minus(minutes19);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType22 = minutes19.getFieldType((-24));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -24");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PT2147483647M" + "'", str15, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
    }

    @Test
    public void test0954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0954");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Period period1 = minutes0.toPeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Period period3 = minutes0.toPeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(period3);
    }

    @Test
    public void test0955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0955");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes9 = minutes2.plus((-1));
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod11 = minutes10.toMutablePeriod();
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes16 = minutes12.plus(0);
        int int17 = minutes10.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes12);
        org.joda.time.Minutes minutes19 = minutes12.plus((int) ' ');
        java.lang.String str20 = minutes12.toString();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean23 = minutes12.isLessThan(minutes22);
        boolean boolean24 = minutes9.isLessThan(minutes12);
        int int25 = minutes9.getMinutes();
        org.joda.time.DurationFieldType durationFieldType26 = minutes9.getFieldType();
        org.joda.time.Minutes minutes27 = minutes9.negated();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "PT2M" + "'", str20, "PT2M");
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-3) + "'", int25 == (-3));
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(minutes27);
    }

    @Test
    public void test0956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0956");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((-4));
        org.joda.time.Period period2 = minutes1.toPeriod();
        java.lang.String str3 = minutes1.toString();
        org.joda.time.Hours hours4 = minutes1.toStandardHours();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT-4M" + "'", str3, "PT-4M");
        org.junit.Assert.assertNotNull(hours4);
    }

    @Test
    public void test0957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0957");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.PeriodType periodType2 = minutes0.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes4 = minutes0.plus((-4));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: -2147483648 + -4");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(periodType2);
    }

    @Test
    public void test0958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0958");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes9 = minutes2.plus((-1));
        org.joda.time.Minutes minutes11 = minutes2.minus((int) (short) 10);
        org.joda.time.Minutes minutes13 = minutes11.dividedBy((-2147483648));
        org.joda.time.Minutes minutes14 = minutes13.negated();
        int int15 = minutes14.getMinutes();
        int int16 = minutes14.size();
        org.joda.time.Minutes minutes18 = minutes14.dividedBy((-4));
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(minutes18);
    }

    @Test
    public void test0959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0959");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = minutes0.negated();
        java.lang.String str3 = minutes0.toString();
        org.joda.time.Minutes minutes5 = minutes0.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes8 = minutes6.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes11 = minutes9.minus((int) (short) 1);
        org.joda.time.Minutes minutes13 = minutes11.multipliedBy(0);
        org.joda.time.Minutes minutes15 = minutes13.plus((-2147483648));
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes17 = minutes16.negated();
        org.joda.time.Minutes minutes18 = minutes16.negated();
        boolean boolean19 = minutes15.isGreaterThan(minutes18);
        int int20 = minutes6.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes15);
        org.joda.time.MutablePeriod mutablePeriod21 = minutes15.toMutablePeriod();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration23 = minutes22.toStandardDuration();
        org.joda.time.Duration duration24 = minutes22.toStandardDuration();
        org.joda.time.Minutes minutes26 = minutes22.minus(2);
        boolean boolean27 = minutes15.isGreaterThan(minutes26);
        int int28 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes26);
        org.joda.time.PeriodType periodType29 = minutes0.getPeriodType();
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType32 = minutes31.getPeriodType();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes34 = minutes33.negated();
        org.joda.time.Minutes minutes35 = minutes33.negated();
        org.joda.time.DurationFieldType durationFieldType36 = minutes33.getFieldType();
        java.lang.String str37 = minutes33.toString();
        boolean boolean38 = minutes31.isGreaterThan(minutes33);
        boolean boolean39 = minutes30.equals((java.lang.Object) minutes31);
        int int40 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes30);
        org.joda.time.DurationFieldType durationFieldType41 = minutes0.getFieldType();
        org.joda.time.PeriodType periodType42 = minutes0.getPeriodType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2147483647M" + "'", str3, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "PT2147483647M" + "'", str37, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertNotNull(periodType42);
    }

    @Test
    public void test0960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0960");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.minus((int) (short) 1);
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy(0);
        org.joda.time.Duration duration5 = minutes4.toStandardDuration();
        org.joda.time.Minutes minutes7 = minutes4.dividedBy((-2147483648));
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = minutes11.get(durationFieldType12);
        org.joda.time.DurationFieldType durationFieldType14 = minutes11.getFieldType();
        int int15 = minutes10.get(durationFieldType14);
        org.joda.time.Minutes minutes17 = minutes10.plus((-1));
        org.joda.time.Minutes minutes19 = minutes10.minus((int) (short) 10);
        org.joda.time.Minutes minutes21 = minutes19.dividedBy((-2147483648));
        org.joda.time.Minutes minutes23 = minutes19.plus(100);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes26 = minutes24.minus((int) (short) 1);
        org.joda.time.Minutes minutes28 = minutes26.multipliedBy(0);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes31 = minutes29.dividedBy((int) 'a');
        org.joda.time.Minutes minutes33 = minutes29.plus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType34 = minutes33.getFieldType();
        boolean boolean35 = minutes26.isSupported(durationFieldType34);
        boolean boolean36 = minutes19.isSupported(durationFieldType34);
        int int37 = minutes7.get(durationFieldType34);
        java.lang.String str38 = minutes7.toString();
        org.joda.time.PeriodType periodType39 = minutes7.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod40 = minutes7.toMutablePeriod();
        org.joda.time.Duration duration41 = minutes7.toStandardDuration();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-2) + "'", int15 == (-2));
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "PT0M" + "'", str38, "PT0M");
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertNotNull(duration41);
    }

    @Test
    public void test0961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0961");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        boolean boolean6 = minutes0.isGreaterThan(minutes5);
        org.joda.time.PeriodType periodType7 = minutes0.getPeriodType();
        int int8 = minutes0.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
    }

    @Test
    public void test0962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0962");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        org.joda.time.Minutes minutes14 = minutes7.plus((-1));
        org.joda.time.Minutes minutes16 = minutes7.minus((int) (short) 10);
        org.joda.time.Minutes minutes18 = minutes16.dividedBy((-2147483648));
        org.joda.time.Minutes minutes19 = minutes4.plus(minutes18);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType21 = minutes20.getPeriodType();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes23 = minutes22.negated();
        org.joda.time.Minutes minutes24 = minutes22.negated();
        org.joda.time.DurationFieldType durationFieldType25 = minutes22.getFieldType();
        java.lang.String str26 = minutes22.toString();
        boolean boolean27 = minutes20.isGreaterThan(minutes22);
        boolean boolean28 = minutes4.isLessThan(minutes22);
        int int29 = minutes4.getMinutes();
        org.joda.time.base.BaseSingleFieldPeriod baseSingleFieldPeriod30 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int31 = minutes4.compareTo(baseSingleFieldPeriod30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "PT2147483647M" + "'", str26, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
    }

    @Test
    public void test0963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0963");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT-2147483548M");
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration3 = minutes2.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod4 = minutes2.toMutablePeriod();
        java.lang.String str5 = minutes2.toString();
        int int6 = minutes2.size();
        org.joda.time.Minutes minutes7 = minutes2.negated();
        org.joda.time.Minutes minutes8 = minutes1.plus(minutes2);
        org.joda.time.Period period9 = minutes2.toPeriod();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PT2M" + "'", str5, "PT2M");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(period9);
    }

    @Test
    public void test0964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0964");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType3 = minutes2.getFieldType();
        org.joda.time.Minutes minutes4 = minutes2.negated();
        org.joda.time.Minutes minutes6 = minutes2.plus((int) (short) 1);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes9 = minutes7.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType11 = null;
        int int12 = minutes10.get(durationFieldType11);
        org.joda.time.MutablePeriod mutablePeriod13 = minutes10.toMutablePeriod();
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes10);
        boolean boolean15 = minutes9.isLessThan(minutes14);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes18 = minutes16.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType20 = null;
        int int21 = minutes19.get(durationFieldType20);
        org.joda.time.DurationFieldType durationFieldType22 = minutes19.getFieldType();
        int int23 = minutes18.get(durationFieldType22);
        org.joda.time.Minutes minutes25 = minutes18.plus((-1));
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod27 = minutes26.toMutablePeriod();
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes30 = minutes28.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes32 = minutes28.plus(0);
        int int33 = minutes26.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes28);
        org.joda.time.Minutes minutes35 = minutes28.plus((int) ' ');
        java.lang.String str36 = minutes28.toString();
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean39 = minutes28.isLessThan(minutes38);
        boolean boolean40 = minutes25.isLessThan(minutes28);
        org.joda.time.Minutes minutes41 = minutes9.minus(minutes25);
        org.joda.time.MutablePeriod mutablePeriod42 = minutes9.toMutablePeriod();
        org.joda.time.Minutes minutes44 = minutes9.dividedBy(2);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes47 = minutes45.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes48 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType49 = null;
        int int50 = minutes48.get(durationFieldType49);
        org.joda.time.DurationFieldType durationFieldType51 = minutes48.getFieldType();
        int int52 = minutes47.get(durationFieldType51);
        org.joda.time.Minutes minutes54 = minutes47.plus((-1));
        org.joda.time.Minutes minutes55 = minutes54.negated();
        org.joda.time.Minutes minutes56 = minutes44.plus(minutes55);
        org.joda.time.Minutes minutes58 = minutes44.minus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType59 = minutes58.getFieldType();
        boolean boolean60 = minutes2.isLessThan(minutes58);
        org.joda.time.Minutes minutes62 = minutes58.plus(100);
        int int63 = minutes62.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-2) + "'", int23 == (-2));
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "PT2M" + "'", str36, "PT2M");
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-2) + "'", int52 == (-2));
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 98 + "'", int63 == 98);
    }

    @Test
    public void test0965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0965");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = minutes0.negated();
        java.lang.String str3 = minutes0.toString();
        int int4 = minutes0.size();
        org.joda.time.Minutes minutes6 = minutes0.minus(0);
        org.joda.time.Duration duration7 = minutes6.toStandardDuration();
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = minutes8.plus(0);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MIN_VALUE;
        boolean boolean14 = minutes8.isGreaterThan(minutes13);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes16 = minutes15.negated();
        org.joda.time.Minutes minutes18 = minutes16.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes18);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes22 = minutes20.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType24 = null;
        int int25 = minutes23.get(durationFieldType24);
        org.joda.time.DurationFieldType durationFieldType26 = minutes23.getFieldType();
        int int27 = minutes22.get(durationFieldType26);
        int int28 = minutes19.get(durationFieldType26);
        org.joda.time.PeriodType periodType29 = minutes19.getPeriodType();
        int int30 = minutes19.getMinutes();
        boolean boolean31 = minutes8.isLessThan(minutes19);
        int int32 = minutes19.getMinutes();
        org.joda.time.Period period33 = minutes19.toPeriod();
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes19);
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes36 = minutes35.negated();
        org.joda.time.PeriodType periodType37 = minutes36.getPeriodType();
        org.joda.time.Minutes minutes38 = minutes36.negated();
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes42 = minutes40.plus(0);
        org.joda.time.DurationFieldType durationFieldType43 = minutes42.getFieldType();
        int int44 = minutes38.get(durationFieldType43);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes47 = minutes45.minus((int) (short) 1);
        org.joda.time.Minutes minutes49 = minutes47.multipliedBy(0);
        org.joda.time.Duration duration50 = minutes47.toStandardDuration();
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes52 = minutes51.negated();
        org.joda.time.DurationFieldType durationFieldType53 = minutes51.getFieldType();
        int int54 = minutes47.get(durationFieldType53);
        boolean boolean55 = minutes38.isSupported(durationFieldType53);
        int int56 = minutes19.get(durationFieldType53);
        boolean boolean57 = minutes6.isSupported(durationFieldType53);
        org.joda.time.MutablePeriod mutablePeriod58 = minutes6.toMutablePeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2147483647M" + "'", str3, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-2) + "'", int27 == (-2));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2147483647 + "'", int28 == 2147483647);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2147483647 + "'", int30 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2147483647 + "'", int32 == 2147483647);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2147483647 + "'", int44 == 2147483647);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2147483646 + "'", int54 == 2147483646);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2147483647 + "'", int56 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(mutablePeriod58);
    }

    @Test
    public void test0966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0966");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.DurationFieldType durationFieldType12 = minutes3.getFieldType();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType15 = minutes14.getPeriodType();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes17 = minutes16.negated();
        org.joda.time.Minutes minutes18 = minutes16.negated();
        org.joda.time.DurationFieldType durationFieldType19 = minutes16.getFieldType();
        java.lang.String str20 = minutes16.toString();
        boolean boolean21 = minutes14.isGreaterThan(minutes16);
        boolean boolean22 = minutes13.equals((java.lang.Object) minutes14);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes13);
        int int24 = minutes3.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes13);
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes27 = minutes25.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType28 = minutes27.getFieldType();
        org.joda.time.Minutes minutes29 = minutes27.negated();
        org.joda.time.Minutes minutes31 = minutes27.dividedBy((int) '4');
        org.joda.time.Minutes minutes32 = minutes13.plus(minutes27);
        int int33 = minutes13.size();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "PT2147483647M" + "'", str20, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
    }

    @Test
    public void test0967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0967");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = minutes0.get(durationFieldType1);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes6 = minutes4.dividedBy(10);
        int int7 = minutes6.getMinutes();
        org.joda.time.Minutes minutes8 = null;
        boolean boolean9 = minutes6.isLessThan(minutes8);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes11 = minutes6.multipliedBy((-41297760));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: -214748364 * -41297760");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-214748364) + "'", int7 == (-214748364));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0968");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT-12M");
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod3 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes5 = minutes2.plus(minutes4);
        org.joda.time.Minutes minutes7 = minutes5.plus((int) 'a');
        org.joda.time.Minutes minutes9 = minutes7.minus(4);
        org.joda.time.Minutes minutes10 = minutes1.plus(minutes9);
        org.joda.time.PeriodType periodType11 = minutes1.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes13 = minutes1.multipliedBy(2147483646);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: -12 * 2147483646");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(periodType11);
    }

    @Test
    public void test0969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0969");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((-1));
        java.lang.String str2 = minutes1.toString();
        org.joda.time.Weeks weeks3 = minutes1.toStandardWeeks();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "PT-1M" + "'", str2, "PT-1M");
        org.junit.Assert.assertNotNull(weeks3);
    }

    @Test
    public void test0970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0970");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        int int9 = minutes2.getMinutes();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean12 = minutes2.isLessThan(minutes11);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration14 = minutes13.toStandardDuration();
        org.joda.time.Duration duration15 = minutes13.toStandardDuration();
        org.joda.time.Minutes minutes17 = minutes13.minus(2);
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes20 = minutes18.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes21 = minutes18.negated();
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes23 = minutes22.negated();
        org.joda.time.Minutes minutes24 = minutes22.negated();
        boolean boolean25 = minutes18.equals((java.lang.Object) minutes24);
        boolean boolean26 = minutes17.isLessThan(minutes18);
        org.joda.time.Minutes minutes27 = minutes11.minus(minutes18);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes29 = minutes28.negated();
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes28);
        java.lang.String str31 = minutes28.toString();
        org.joda.time.Minutes minutes32 = minutes27.plus(minutes28);
        int int33 = minutes28.getMinutes();
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes36 = minutes34.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes38 = minutes34.plus(0);
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes41 = minutes39.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = minutes42.get(durationFieldType43);
        org.joda.time.DurationFieldType durationFieldType45 = minutes42.getFieldType();
        int int46 = minutes41.get(durationFieldType45);
        org.joda.time.Minutes minutes48 = minutes41.plus((-1));
        org.joda.time.Minutes minutes50 = minutes41.minus((int) (short) 10);
        org.joda.time.Minutes minutes52 = minutes50.dividedBy((-2147483648));
        org.joda.time.Minutes minutes53 = minutes38.plus(minutes52);
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType55 = null;
        int int56 = minutes54.get(durationFieldType55);
        org.joda.time.MutablePeriod mutablePeriod57 = minutes54.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType58 = minutes54.getFieldType();
        boolean boolean59 = minutes53.isLessThan(minutes54);
        boolean boolean60 = minutes28.equals((java.lang.Object) boolean59);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-2) + "'", int9 == (-2));
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "PT2147483647M" + "'", str31, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2147483647 + "'", int33 == 2147483647);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-2) + "'", int46 == (-2));
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod57);
        org.junit.Assert.assertNotNull(durationFieldType58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test0971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0971");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT-3M");
        int int3 = minutes1.getValue(0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-3) + "'", int3 == (-3));
    }

    @Test
    public void test0972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0972");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes3 = minutes1.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        int int13 = minutes4.get(durationFieldType11);
        org.joda.time.PeriodType periodType14 = minutes4.getPeriodType();
        int int15 = minutes4.getMinutes();
        org.joda.time.Duration duration16 = minutes4.toStandardDuration();
        int int17 = minutes4.size();
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.MAX_VALUE;
        int int19 = minutes18.size();
        int int21 = minutes18.getValue(0);
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes18);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes25 = minutes23.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType27 = null;
        int int28 = minutes26.get(durationFieldType27);
        org.joda.time.DurationFieldType durationFieldType29 = minutes26.getFieldType();
        int int30 = minutes25.get(durationFieldType29);
        org.joda.time.Minutes minutes32 = minutes25.plus((-1));
        org.joda.time.Minutes minutes34 = minutes25.minus((int) (short) 10);
        org.joda.time.Duration duration35 = minutes25.toStandardDuration();
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes37 = minutes36.negated();
        org.joda.time.Minutes minutes38 = minutes36.negated();
        java.lang.String str39 = minutes36.toString();
        org.joda.time.Minutes minutes41 = minutes36.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes43 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes45 = minutes43.multipliedBy((int) (byte) 0);
        boolean boolean46 = minutes41.equals((java.lang.Object) minutes43);
        boolean boolean47 = minutes25.isGreaterThan(minutes43);
        boolean boolean48 = minutes22.equals((java.lang.Object) boolean47);
        org.joda.time.Minutes minutes49 = minutes22.negated();
        org.joda.time.Duration duration50 = minutes22.toStandardDuration();
        boolean boolean51 = minutes4.equals((java.lang.Object) duration50);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2147483647 + "'", int13 == 2147483647);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2147483647 + "'", int21 == 2147483647);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-2) + "'", int30 == (-2));
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "PT2147483647M" + "'", str39, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test0973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0973");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        int int1 = minutes0.size();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes3 = minutes2.negated();
        org.joda.time.Minutes minutes5 = minutes3.dividedBy((int) (byte) -1);
        boolean boolean6 = minutes0.isLessThan(minutes3);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        org.joda.time.Minutes minutes10 = minutes8.minus(1);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = minutes15.get(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = minutes15.getFieldType();
        int int19 = minutes14.get(durationFieldType18);
        org.joda.time.Minutes minutes21 = minutes14.plus((-1));
        boolean boolean22 = minutes11.isGreaterThan(minutes14);
        org.joda.time.DurationFieldType durationFieldType23 = minutes14.getFieldType();
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType26 = minutes25.getPeriodType();
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes28 = minutes27.negated();
        org.joda.time.Minutes minutes29 = minutes27.negated();
        org.joda.time.DurationFieldType durationFieldType30 = minutes27.getFieldType();
        java.lang.String str31 = minutes27.toString();
        boolean boolean32 = minutes25.isGreaterThan(minutes27);
        boolean boolean33 = minutes24.equals((java.lang.Object) minutes25);
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes24);
        int int35 = minutes14.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes24);
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes38 = minutes36.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType39 = minutes38.getFieldType();
        org.joda.time.Minutes minutes40 = minutes38.negated();
        org.joda.time.Minutes minutes42 = minutes38.dividedBy((int) '4');
        org.joda.time.Minutes minutes43 = minutes24.plus(minutes38);
        org.joda.time.Minutes minutes45 = minutes38.multipliedBy((int) '#');
        org.joda.time.Minutes minutes46 = minutes10.minus(minutes38);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2) + "'", int19 == (-2));
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "PT2147483647M" + "'", str31, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
    }

    @Test
    public void test0974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0974");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = minutes0.get(durationFieldType1);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType6 = null;
        int int7 = minutes5.get(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType8 = minutes5.getFieldType();
        boolean boolean9 = minutes0.isLessThan(minutes5);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = minutes13.get(durationFieldType14);
        org.joda.time.MutablePeriod mutablePeriod16 = minutes13.toMutablePeriod();
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes13);
        boolean boolean18 = minutes12.isLessThan(minutes17);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes21 = minutes19.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType23 = null;
        int int24 = minutes22.get(durationFieldType23);
        org.joda.time.DurationFieldType durationFieldType25 = minutes22.getFieldType();
        int int26 = minutes21.get(durationFieldType25);
        org.joda.time.Minutes minutes28 = minutes21.plus((-1));
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod30 = minutes29.toMutablePeriod();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes33 = minutes31.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes35 = minutes31.plus(0);
        int int36 = minutes29.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes31);
        org.joda.time.Minutes minutes38 = minutes31.plus((int) ' ');
        java.lang.String str39 = minutes31.toString();
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean42 = minutes31.isLessThan(minutes41);
        boolean boolean43 = minutes28.isLessThan(minutes31);
        org.joda.time.Minutes minutes44 = minutes12.minus(minutes28);
        org.joda.time.MutablePeriod mutablePeriod45 = minutes12.toMutablePeriod();
        org.joda.time.Minutes minutes47 = minutes12.dividedBy(2);
        org.joda.time.Minutes minutes48 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes50 = minutes48.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType52 = null;
        int int53 = minutes51.get(durationFieldType52);
        org.joda.time.DurationFieldType durationFieldType54 = minutes51.getFieldType();
        int int55 = minutes50.get(durationFieldType54);
        org.joda.time.Minutes minutes57 = minutes50.plus((-1));
        org.joda.time.Minutes minutes58 = minutes57.negated();
        org.joda.time.Minutes minutes59 = minutes47.plus(minutes58);
        org.joda.time.Minutes minutes61 = minutes59.multipliedBy((-12));
        boolean boolean62 = minutes5.isLessThan(minutes59);
        int int63 = minutes5.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-2) + "'", int26 == (-2));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "PT2M" + "'", str39, "PT2M");
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(mutablePeriod45);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-2) + "'", int55 == (-2));
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-2147483648) + "'", int63 == (-2147483648));
    }

    @Test
    public void test0975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0975");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType3 = minutes2.getFieldType();
        org.joda.time.Minutes minutes4 = minutes2.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes6 = minutes5.negated();
        org.joda.time.Minutes minutes7 = minutes5.negated();
        java.lang.String str8 = minutes5.toString();
        int int9 = minutes5.size();
        org.joda.time.Minutes minutes11 = minutes5.minus(0);
        org.joda.time.Minutes minutes13 = minutes5.plus((int) (short) 0);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes5);
        boolean boolean15 = minutes4.isLessThan(minutes5);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes18 = minutes16.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes20 = minutes16.plus(0);
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MIN_VALUE;
        boolean boolean22 = minutes16.isGreaterThan(minutes21);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes24 = minutes23.negated();
        org.joda.time.Minutes minutes26 = minutes24.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes26);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes30 = minutes28.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType32 = null;
        int int33 = minutes31.get(durationFieldType32);
        org.joda.time.DurationFieldType durationFieldType34 = minutes31.getFieldType();
        int int35 = minutes30.get(durationFieldType34);
        int int36 = minutes27.get(durationFieldType34);
        org.joda.time.PeriodType periodType37 = minutes27.getPeriodType();
        int int38 = minutes27.getMinutes();
        boolean boolean39 = minutes16.isLessThan(minutes27);
        int int40 = minutes27.getMinutes();
        org.joda.time.Period period41 = minutes27.toPeriod();
        boolean boolean42 = minutes4.equals((java.lang.Object) minutes27);
        org.joda.time.Minutes minutes43 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes44 = minutes43.negated();
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes43);
        java.lang.String str46 = minutes43.toString();
        org.joda.time.Minutes minutes47 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType48 = minutes47.getFieldType();
        boolean boolean49 = minutes43.isSupported(durationFieldType48);
        org.joda.time.Minutes minutes50 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes43);
        org.joda.time.MutablePeriod mutablePeriod51 = minutes50.toMutablePeriod();
        boolean boolean52 = minutes27.isGreaterThan(minutes50);
        org.joda.time.PeriodType periodType53 = minutes50.getPeriodType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "PT2147483647M" + "'", str8, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-2) + "'", int35 == (-2));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2147483647 + "'", int36 == 2147483647);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2147483647 + "'", int38 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2147483647 + "'", int40 == 2147483647);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "PT2147483647M" + "'", str46, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(periodType53);
    }

    @Test
    public void test0976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0976");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("PT-2147483646M");
        org.junit.Assert.assertNotNull(minutes1);
    }

    @Test
    public void test0977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0977");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.PeriodType periodType2 = minutes1.getPeriodType();
        org.joda.time.Minutes minutes3 = minutes1.negated();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes7 = minutes5.plus(0);
        org.joda.time.DurationFieldType durationFieldType8 = minutes7.getFieldType();
        int int9 = minutes3.get(durationFieldType8);
        int int11 = minutes3.getValue((int) (byte) 0);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = minutes16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = minutes16.getFieldType();
        int int20 = minutes15.get(durationFieldType19);
        org.joda.time.Minutes minutes22 = minutes15.plus((-1));
        boolean boolean23 = minutes12.isGreaterThan(minutes15);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes26 = minutes24.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = minutes27.get(durationFieldType28);
        org.joda.time.DurationFieldType durationFieldType30 = minutes27.getFieldType();
        int int31 = minutes26.get(durationFieldType30);
        boolean boolean32 = minutes15.isSupported(durationFieldType30);
        org.joda.time.Minutes minutes34 = minutes15.dividedBy((-2));
        org.joda.time.Minutes minutes35 = null;
        org.joda.time.Minutes minutes36 = minutes34.minus(minutes35);
        org.joda.time.Minutes minutes38 = minutes36.plus((-3));
        boolean boolean39 = minutes3.isGreaterThan(minutes38);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2147483647 + "'", int9 == 2147483647);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2147483647 + "'", int11 == 2147483647);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-2) + "'", int20 == (-2));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-2) + "'", int31 == (-2));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test0978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0978");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        java.lang.String str10 = minutes2.toString();
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod12 = minutes11.toMutablePeriod();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes17 = minutes13.plus(0);
        int int18 = minutes11.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes13);
        org.joda.time.Minutes minutes20 = minutes13.plus((int) ' ');
        java.lang.String str21 = minutes13.toString();
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean24 = minutes13.isLessThan(minutes23);
        org.joda.time.Minutes minutes25 = minutes2.minus(minutes13);
        int int26 = minutes25.size();
        org.joda.time.Minutes minutes28 = minutes25.multipliedBy(0);
        org.joda.time.PeriodType periodType29 = minutes25.getPeriodType();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.minutes((int) (short) -1);
        int int32 = minutes31.size();
        int int33 = minutes31.getMinutes();
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod35 = minutes34.toMutablePeriod();
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes37 = minutes34.plus(minutes36);
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod39 = minutes38.toMutablePeriod();
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes41 = minutes38.plus(minutes40);
        boolean boolean42 = minutes37.isLessThan(minutes38);
        java.lang.String str43 = minutes37.toString();
        boolean boolean44 = minutes31.equals((java.lang.Object) minutes37);
        org.joda.time.Duration duration45 = minutes31.toStandardDuration();
        boolean boolean46 = minutes25.isGreaterThan(minutes31);
        org.joda.time.Minutes minutes48 = minutes25.multipliedBy(2147483645);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT2M" + "'", str10, "PT2M");
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT2M" + "'", str21, "PT2M");
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "PT-2147483645M" + "'", str43, "PT-2147483645M");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(minutes48);
    }

    @Test
    public void test0979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0979");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod2 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        int int4 = minutes3.size();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes6 = minutes5.negated();
        org.joda.time.Minutes minutes8 = minutes6.dividedBy((int) (byte) -1);
        boolean boolean9 = minutes3.isLessThan(minutes6);
        boolean boolean10 = minutes0.isLessThan(minutes3);
        org.joda.time.Minutes minutes12 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes13 = minutes0.negated();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
    }

    @Test
    public void test0980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0980");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod2 = minutes0.toMutablePeriod();
        java.lang.String str3 = minutes0.toString();
        int int4 = minutes0.size();
        org.joda.time.Minutes minutes5 = minutes0.negated();
        org.joda.time.Minutes minutes6 = null;
        org.joda.time.Minutes minutes7 = minutes0.minus(minutes6);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod9 = minutes8.toMutablePeriod();
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes14 = minutes10.plus(0);
        int int15 = minutes8.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes10);
        org.joda.time.Minutes minutes17 = minutes10.plus((int) ' ');
        org.joda.time.Period period18 = minutes10.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod19 = minutes10.toMutablePeriod();
        org.joda.time.Period period20 = minutes10.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod21 = minutes10.toMutablePeriod();
        org.joda.time.Minutes minutes23 = minutes10.multipliedBy(100);
        org.joda.time.Minutes minutes25 = minutes23.minus((int) (short) 0);
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes27 = minutes26.negated();
        org.joda.time.Minutes minutes28 = minutes26.negated();
        org.joda.time.DurationFieldType durationFieldType29 = minutes26.getFieldType();
        java.lang.String str30 = minutes26.toString();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes32 = minutes31.negated();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes31);
        int int34 = minutes31.size();
        org.joda.time.MutablePeriod mutablePeriod35 = minutes31.toMutablePeriod();
        boolean boolean36 = minutes26.equals((java.lang.Object) minutes31);
        org.joda.time.DurationFieldType durationFieldType38 = minutes31.getFieldType((int) (short) 0);
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod40 = minutes39.toMutablePeriod();
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes43 = minutes41.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes45 = minutes41.plus(0);
        int int46 = minutes39.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes41);
        org.joda.time.Minutes minutes48 = minutes41.plus((int) ' ');
        java.lang.String str49 = minutes41.toString();
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean52 = minutes41.isLessThan(minutes51);
        org.joda.time.Period period53 = minutes51.toPeriod();
        boolean boolean54 = minutes31.isGreaterThan(minutes51);
        boolean boolean55 = minutes25.equals((java.lang.Object) minutes31);
        boolean boolean56 = minutes7.isLessThan(minutes31);
        org.joda.time.Minutes minutes57 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes59 = minutes57.minus((int) (short) 1);
        org.joda.time.Minutes minutes61 = minutes59.multipliedBy(0);
        org.joda.time.Duration duration62 = minutes59.toStandardDuration();
        org.joda.time.Minutes minutes63 = org.joda.time.Minutes.MAX_VALUE;
        int int64 = minutes63.size();
        int int66 = minutes63.getValue(0);
        org.joda.time.Minutes minutes67 = minutes63.negated();
        org.joda.time.DurationFieldType durationFieldType69 = minutes63.getFieldType(0);
        boolean boolean70 = minutes59.equals((java.lang.Object) 0);
        boolean boolean71 = minutes31.equals((java.lang.Object) minutes59);
        org.joda.time.MutablePeriod mutablePeriod72 = minutes59.toMutablePeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2M" + "'", str3, "PT2M");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "PT2147483647M" + "'", str30, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "PT2M" + "'", str49, "PT2M");
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2147483647 + "'", int66 == 2147483647);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(durationFieldType69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(mutablePeriod72);
    }

    @Test
    public void test0981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0981");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType3 = minutes2.getFieldType();
        org.joda.time.Period period4 = minutes2.toPeriod();
        org.joda.time.PeriodType periodType5 = minutes2.getPeriodType();
        int int7 = minutes2.getValue((int) (byte) 0);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod9 = minutes8.toMutablePeriod();
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes11 = minutes8.plus(minutes10);
        int int12 = minutes10.getMinutes();
        org.joda.time.PeriodType periodType13 = minutes10.getPeriodType();
        org.joda.time.Period period14 = minutes10.toPeriod();
        boolean boolean15 = minutes2.isLessThan(minutes10);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test0982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0982");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        int int3 = minutes0.size();
        org.joda.time.MutablePeriod mutablePeriod4 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes0);
        org.joda.time.Minutes minutes7 = minutes5.minus((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType8 = minutes5.getFieldType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(durationFieldType8);
    }

    @Test
    public void test0983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0983");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes9 = minutes2.plus((-1));
        org.joda.time.Minutes minutes11 = minutes2.minus((int) (short) 10);
        org.joda.time.Duration duration12 = minutes2.toStandardDuration();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes2);
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy(3);
        org.joda.time.Minutes minutes17 = minutes15.minus(0);
        int int18 = minutes15.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-6) + "'", int18 == (-6));
    }

    @Test
    public void test0984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0984");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes2 = minutes0.negated();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        int int4 = minutes3.size();
        int int6 = minutes3.getValue(0);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = minutes11.get(durationFieldType12);
        org.joda.time.DurationFieldType durationFieldType14 = minutes11.getFieldType();
        int int15 = minutes10.get(durationFieldType14);
        org.joda.time.Minutes minutes17 = minutes10.plus((-1));
        org.joda.time.Minutes minutes19 = minutes10.minus((int) (short) 10);
        org.joda.time.Duration duration20 = minutes10.toStandardDuration();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes22 = minutes21.negated();
        org.joda.time.Minutes minutes23 = minutes21.negated();
        java.lang.String str24 = minutes21.toString();
        org.joda.time.Minutes minutes26 = minutes21.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes30 = minutes28.multipliedBy((int) (byte) 0);
        boolean boolean31 = minutes26.equals((java.lang.Object) minutes28);
        boolean boolean32 = minutes10.isGreaterThan(minutes28);
        boolean boolean33 = minutes7.equals((java.lang.Object) boolean32);
        org.joda.time.Minutes minutes34 = minutes0.minus(minutes7);
        org.joda.time.Minutes minutes36 = minutes0.plus((-22139006));
        org.joda.time.Duration duration37 = minutes36.toStandardDuration();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2147483647 + "'", int6 == 2147483647);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-2) + "'", int15 == (-2));
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "PT2147483647M" + "'", str24, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(duration37);
    }

    @Test
    public void test0985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0985");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Minutes minutes3 = minutes1.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType9 = null;
        int int10 = minutes8.get(durationFieldType9);
        org.joda.time.DurationFieldType durationFieldType11 = minutes8.getFieldType();
        int int12 = minutes7.get(durationFieldType11);
        int int13 = minutes4.get(durationFieldType11);
        org.joda.time.PeriodType periodType14 = minutes4.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType16 = minutes4.getFieldType((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-2) + "'", int12 == (-2));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2147483647 + "'", int13 == 2147483647);
        org.junit.Assert.assertNotNull(periodType14);
    }

    @Test
    public void test0986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0986");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.Minutes minutes13 = minutes3.multipliedBy(2);
        org.joda.time.Minutes minutes14 = minutes13.negated();
        org.joda.time.DurationFieldType durationFieldType15 = minutes14.getFieldType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(durationFieldType15);
    }

    @Test
    public void test0987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0987");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = minutes8.plus(0);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = minutes16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = minutes16.getFieldType();
        int int20 = minutes15.get(durationFieldType19);
        org.joda.time.Minutes minutes22 = minutes15.plus((-1));
        org.joda.time.Minutes minutes24 = minutes15.minus((int) (short) 10);
        org.joda.time.Minutes minutes26 = minutes24.dividedBy((-2147483648));
        org.joda.time.Minutes minutes27 = minutes12.plus(minutes26);
        org.joda.time.Minutes minutes28 = minutes2.minus(minutes12);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod30 = minutes29.toMutablePeriod();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes33 = minutes31.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes35 = minutes31.plus(0);
        int int36 = minutes29.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes31);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes39 = minutes37.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes41 = minutes37.plus(0);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes44 = minutes42.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType46 = null;
        int int47 = minutes45.get(durationFieldType46);
        org.joda.time.DurationFieldType durationFieldType48 = minutes45.getFieldType();
        int int49 = minutes44.get(durationFieldType48);
        org.joda.time.Minutes minutes51 = minutes44.plus((-1));
        org.joda.time.Minutes minutes53 = minutes44.minus((int) (short) 10);
        org.joda.time.Minutes minutes55 = minutes53.dividedBy((-2147483648));
        org.joda.time.Minutes minutes56 = minutes41.plus(minutes55);
        org.joda.time.Minutes minutes57 = minutes31.minus(minutes41);
        org.joda.time.PeriodType periodType58 = minutes31.getPeriodType();
        boolean boolean59 = minutes12.isLessThan(minutes31);
        org.joda.time.Minutes minutes60 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType61 = minutes60.getPeriodType();
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes63 = minutes62.negated();
        org.joda.time.Minutes minutes64 = minutes62.negated();
        org.joda.time.DurationFieldType durationFieldType65 = minutes62.getFieldType();
        java.lang.String str66 = minutes62.toString();
        boolean boolean67 = minutes60.isGreaterThan(minutes62);
        boolean boolean68 = minutes31.isLessThan(minutes60);
        java.lang.String str69 = minutes60.toString();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-2) + "'", int20 == (-2));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-2) + "'", int49 == (-2));
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "PT2147483647M" + "'", str66, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "PT3M" + "'", str69, "PT3M");
    }

    @Test
    public void test0988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0988");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        int int8 = minutes2.size();
        org.joda.time.Minutes minutes10 = minutes2.minus((-24));
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(minutes10);
    }

    @Test
    public void test0989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0989");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = minutes8.plus(0);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = minutes16.get(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = minutes16.getFieldType();
        int int20 = minutes15.get(durationFieldType19);
        org.joda.time.Minutes minutes22 = minutes15.plus((-1));
        org.joda.time.Minutes minutes24 = minutes15.minus((int) (short) 10);
        org.joda.time.Minutes minutes26 = minutes24.dividedBy((-2147483648));
        org.joda.time.Minutes minutes27 = minutes12.plus(minutes26);
        org.joda.time.Minutes minutes28 = minutes2.minus(minutes12);
        org.joda.time.Minutes minutes29 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes31 = minutes29.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes33 = minutes29.plus(0);
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes36 = minutes34.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType38 = null;
        int int39 = minutes37.get(durationFieldType38);
        org.joda.time.DurationFieldType durationFieldType40 = minutes37.getFieldType();
        int int41 = minutes36.get(durationFieldType40);
        org.joda.time.Minutes minutes43 = minutes36.plus((-1));
        org.joda.time.Minutes minutes45 = minutes36.minus((int) (short) 10);
        org.joda.time.Minutes minutes47 = minutes45.dividedBy((-2147483648));
        org.joda.time.Minutes minutes48 = minutes33.plus(minutes47);
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.THREE;
        org.joda.time.PeriodType periodType50 = minutes49.getPeriodType();
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes52 = minutes51.negated();
        org.joda.time.Minutes minutes53 = minutes51.negated();
        org.joda.time.DurationFieldType durationFieldType54 = minutes51.getFieldType();
        java.lang.String str55 = minutes51.toString();
        boolean boolean56 = minutes49.isGreaterThan(minutes51);
        boolean boolean57 = minutes33.isLessThan(minutes51);
        int int58 = minutes12.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes51);
        org.joda.time.Minutes minutes60 = minutes51.dividedBy((-2147483647));
        org.joda.time.Minutes minutes61 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes63 = minutes61.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes64 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType65 = null;
        int int66 = minutes64.get(durationFieldType65);
        org.joda.time.MutablePeriod mutablePeriod67 = minutes64.toMutablePeriod();
        org.joda.time.Minutes minutes68 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes64);
        boolean boolean69 = minutes63.isLessThan(minutes68);
        int int70 = minutes63.getMinutes();
        org.joda.time.Minutes minutes72 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean73 = minutes63.isLessThan(minutes72);
        org.joda.time.Minutes minutes74 = org.joda.time.Minutes.TWO;
        org.joda.time.Duration duration75 = minutes74.toStandardDuration();
        org.joda.time.Duration duration76 = minutes74.toStandardDuration();
        org.joda.time.Minutes minutes78 = minutes74.minus(2);
        org.joda.time.Minutes minutes79 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes81 = minutes79.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes82 = minutes79.negated();
        org.joda.time.Minutes minutes83 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes84 = minutes83.negated();
        org.joda.time.Minutes minutes85 = minutes83.negated();
        boolean boolean86 = minutes79.equals((java.lang.Object) minutes85);
        boolean boolean87 = minutes78.isLessThan(minutes79);
        org.joda.time.Minutes minutes88 = minutes72.minus(minutes79);
        org.joda.time.Minutes minutes90 = minutes72.dividedBy((-12));
        int int91 = minutes90.size();
        int int92 = minutes60.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes90);
        org.joda.time.MutablePeriod mutablePeriod93 = minutes90.toMutablePeriod();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-2) + "'", int20 == (-2));
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-2) + "'", int41 == (-2));
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "PT2147483647M" + "'", str55, "PT2147483647M");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod67);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-2) + "'", int70 == (-2));
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(minutes74);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertNotNull(minutes78);
        org.junit.Assert.assertNotNull(minutes79);
        org.junit.Assert.assertNotNull(minutes81);
        org.junit.Assert.assertNotNull(minutes82);
        org.junit.Assert.assertNotNull(minutes83);
        org.junit.Assert.assertNotNull(minutes84);
        org.junit.Assert.assertNotNull(minutes85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(minutes88);
        org.junit.Assert.assertNotNull(minutes90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 1 + "'", int91 == 1);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod93);
    }

    @Test
    public void test0990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0990");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes9 = minutes2.plus((-1));
        org.joda.time.Minutes minutes11 = minutes2.minus((int) (short) 10);
        org.joda.time.Duration duration12 = minutes2.toStandardDuration();
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes14 = minutes13.negated();
        org.joda.time.Minutes minutes15 = minutes13.negated();
        java.lang.String str16 = minutes13.toString();
        org.joda.time.Minutes minutes18 = minutes13.dividedBy((int) (byte) 10);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        org.joda.time.Minutes minutes22 = minutes20.multipliedBy((int) (byte) 0);
        boolean boolean23 = minutes18.equals((java.lang.Object) minutes20);
        boolean boolean24 = minutes2.isGreaterThan(minutes20);
        org.joda.time.Minutes minutes25 = minutes20.negated();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType27 = minutes20.getFieldType(2);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT2147483647M" + "'", str16, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(minutes25);
    }

    @Test
    public void test0991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0991");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = minutes12.getFieldType();
        int int16 = minutes11.get(durationFieldType15);
        org.joda.time.Minutes minutes18 = minutes11.plus((-1));
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = minutes21.plus(0);
        int int26 = minutes19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes21);
        org.joda.time.Minutes minutes28 = minutes21.plus((int) ' ');
        java.lang.String str29 = minutes21.toString();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean32 = minutes21.isLessThan(minutes31);
        boolean boolean33 = minutes18.isLessThan(minutes21);
        org.joda.time.Minutes minutes34 = minutes2.minus(minutes18);
        org.joda.time.MutablePeriod mutablePeriod35 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes37 = minutes2.dividedBy(2);
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes40 = minutes38.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType42 = null;
        int int43 = minutes41.get(durationFieldType42);
        org.joda.time.DurationFieldType durationFieldType44 = minutes41.getFieldType();
        int int45 = minutes40.get(durationFieldType44);
        org.joda.time.Minutes minutes47 = minutes40.plus((-1));
        org.joda.time.Minutes minutes48 = minutes47.negated();
        org.joda.time.Minutes minutes49 = minutes37.plus(minutes48);
        int int50 = minutes49.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2M" + "'", str29, "PT2M");
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-2) + "'", int45 == (-2));
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
    }

    @Test
    public void test0992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0992");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.MutablePeriod mutablePeriod6 = minutes3.toMutablePeriod();
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes3);
        boolean boolean8 = minutes2.isLessThan(minutes7);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes11 = minutes9.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType13 = null;
        int int14 = minutes12.get(durationFieldType13);
        org.joda.time.DurationFieldType durationFieldType15 = minutes12.getFieldType();
        int int16 = minutes11.get(durationFieldType15);
        org.joda.time.Minutes minutes18 = minutes11.plus((-1));
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod20 = minutes19.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes25 = minutes21.plus(0);
        int int26 = minutes19.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes21);
        org.joda.time.Minutes minutes28 = minutes21.plus((int) ' ');
        java.lang.String str29 = minutes21.toString();
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean32 = minutes21.isLessThan(minutes31);
        boolean boolean33 = minutes18.isLessThan(minutes21);
        org.joda.time.Minutes minutes34 = minutes2.minus(minutes18);
        org.joda.time.MutablePeriod mutablePeriod35 = minutes2.toMutablePeriod();
        org.joda.time.Minutes minutes37 = minutes2.dividedBy(2);
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes40 = minutes38.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes41 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType42 = null;
        int int43 = minutes41.get(durationFieldType42);
        org.joda.time.DurationFieldType durationFieldType44 = minutes41.getFieldType();
        int int45 = minutes40.get(durationFieldType44);
        org.joda.time.Minutes minutes47 = minutes40.plus((-1));
        org.joda.time.Minutes minutes48 = minutes47.negated();
        org.joda.time.Minutes minutes49 = minutes37.plus(minutes48);
        org.joda.time.Minutes minutes51 = minutes37.minus((int) (short) 1);
        org.joda.time.Duration duration52 = minutes51.toStandardDuration();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-2) + "'", int16 == (-2));
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT2M" + "'", str29, "PT2M");
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-2) + "'", int45 == (-2));
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(duration52);
    }

    @Test
    public void test0993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0993");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((-4));
        org.joda.time.Period period2 = minutes1.toPeriod();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes4 = minutes3.negated();
        org.joda.time.Minutes minutes6 = minutes4.dividedBy((int) (byte) -1);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes6);
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = minutes11.get(durationFieldType12);
        org.joda.time.DurationFieldType durationFieldType14 = minutes11.getFieldType();
        int int15 = minutes10.get(durationFieldType14);
        int int16 = minutes7.get(durationFieldType14);
        org.joda.time.PeriodType periodType17 = minutes7.getPeriodType();
        int int18 = minutes7.getMinutes();
        boolean boolean19 = minutes1.isGreaterThan(minutes7);
        org.joda.time.Minutes minutes20 = minutes1.negated();
        org.joda.time.Minutes minutes22 = minutes20.minus((int) '#');
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-2) + "'", int15 == (-2));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2147483647 + "'", int16 == 2147483647);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483647 + "'", int18 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
    }

    @Test
    public void test0994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0994");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType4 = null;
        int int5 = minutes3.get(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = minutes3.getFieldType();
        int int7 = minutes2.get(durationFieldType6);
        org.joda.time.Minutes minutes9 = minutes2.plus((-1));
        org.joda.time.Minutes minutes11 = minutes2.minus((int) (short) 10);
        org.joda.time.Minutes minutes13 = minutes11.dividedBy((-2147483648));
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod15 = minutes14.toMutablePeriod();
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes17 = minutes14.plus(minutes16);
        org.joda.time.Minutes minutes18 = minutes11.minus(minutes16);
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes21 = minutes19.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes23 = minutes19.plus(0);
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes26 = minutes24.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType28 = null;
        int int29 = minutes27.get(durationFieldType28);
        org.joda.time.DurationFieldType durationFieldType30 = minutes27.getFieldType();
        int int31 = minutes26.get(durationFieldType30);
        org.joda.time.Minutes minutes33 = minutes26.plus((-1));
        org.joda.time.Minutes minutes35 = minutes26.minus((int) (short) 10);
        org.joda.time.Minutes minutes37 = minutes35.dividedBy((-2147483648));
        org.joda.time.Minutes minutes38 = minutes23.plus(minutes37);
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes41 = minutes39.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = minutes42.get(durationFieldType43);
        org.joda.time.MutablePeriod mutablePeriod45 = minutes42.toMutablePeriod();
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes42);
        boolean boolean47 = minutes41.isLessThan(minutes46);
        org.joda.time.DurationFieldType durationFieldType48 = minutes46.getFieldType();
        boolean boolean49 = minutes38.isSupported(durationFieldType48);
        int int50 = minutes11.get(durationFieldType48);
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes11);
        java.lang.Class<?> wildcardClass52 = minutes11.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-2) + "'", int7 == (-2));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-2) + "'", int31 == (-2));
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-12) + "'", int50 == (-12));
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0995");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = minutes4.get(durationFieldType5);
        org.joda.time.DurationFieldType durationFieldType7 = minutes4.getFieldType();
        int int8 = minutes3.get(durationFieldType7);
        org.joda.time.Minutes minutes10 = minutes3.plus((-1));
        boolean boolean11 = minutes0.isGreaterThan(minutes3);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = minutes15.get(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = minutes15.getFieldType();
        int int19 = minutes14.get(durationFieldType18);
        boolean boolean20 = minutes3.isSupported(durationFieldType18);
        org.joda.time.Minutes minutes22 = minutes3.dividedBy(100);
        java.lang.String str23 = minutes22.toString();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-2) + "'", int8 == (-2));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2) + "'", int19 == (-2));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT0M" + "'", str23, "PT0M");
    }

    @Test
    public void test0996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0996");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes4 = minutes0.plus(0);
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType8 = minutes7.getFieldType();
        org.joda.time.Minutes minutes9 = minutes7.negated();
        org.joda.time.Minutes minutes11 = minutes7.plus((int) (short) 1);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType16 = null;
        int int17 = minutes15.get(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = minutes15.getFieldType();
        int int19 = minutes14.get(durationFieldType18);
        org.joda.time.Minutes minutes21 = minutes14.plus((-1));
        org.joda.time.Minutes minutes23 = minutes14.minus((int) (short) 10);
        org.joda.time.Minutes minutes25 = minutes23.dividedBy((-2147483648));
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod27 = minutes26.toMutablePeriod();
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes29 = minutes26.plus(minutes28);
        org.joda.time.Minutes minutes30 = minutes23.minus(minutes28);
        org.joda.time.Minutes minutes31 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes33 = minutes31.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes35 = minutes31.plus(0);
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes38 = minutes36.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType40 = null;
        int int41 = minutes39.get(durationFieldType40);
        org.joda.time.DurationFieldType durationFieldType42 = minutes39.getFieldType();
        int int43 = minutes38.get(durationFieldType42);
        org.joda.time.Minutes minutes45 = minutes38.plus((-1));
        org.joda.time.Minutes minutes47 = minutes38.minus((int) (short) 10);
        org.joda.time.Minutes minutes49 = minutes47.dividedBy((-2147483648));
        org.joda.time.Minutes minutes50 = minutes35.plus(minutes49);
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes53 = minutes51.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType55 = null;
        int int56 = minutes54.get(durationFieldType55);
        org.joda.time.MutablePeriod mutablePeriod57 = minutes54.toMutablePeriod();
        org.joda.time.Minutes minutes58 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes54);
        boolean boolean59 = minutes53.isLessThan(minutes58);
        org.joda.time.DurationFieldType durationFieldType60 = minutes58.getFieldType();
        boolean boolean61 = minutes50.isSupported(durationFieldType60);
        int int62 = minutes23.get(durationFieldType60);
        org.joda.time.Minutes minutes63 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes23);
        org.joda.time.Minutes minutes64 = minutes11.plus(minutes63);
        boolean boolean65 = minutes0.isGreaterThan(minutes64);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-2) + "'", int19 == (-2));
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-2) + "'", int43 == (-2));
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod57);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(durationFieldType60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-12) + "'", int62 == (-12));
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test0997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0997");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = minutes0.get(durationFieldType1);
        org.joda.time.MutablePeriod mutablePeriod3 = minutes0.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType4 = minutes0.getFieldType();
        org.joda.time.Minutes minutes6 = minutes0.dividedBy((-1));
        org.joda.time.Minutes minutes8 = minutes0.dividedBy(2147483646);
        org.joda.time.Period period9 = minutes0.toPeriod();
        org.joda.time.Minutes minutes11 = minutes0.dividedBy((-2147483647));
        // The following exception was thrown during execution in test generation
        try {
            int int13 = minutes11.getValue((-4));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -4");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(minutes11);
    }

    @Test
    public void test0998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0998");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType1 = null;
        int int2 = minutes0.get(durationFieldType1);
        org.joda.time.DurationFieldType durationFieldType3 = minutes0.getFieldType();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes7 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType8 = null;
        int int9 = minutes7.get(durationFieldType8);
        org.joda.time.DurationFieldType durationFieldType10 = minutes7.getFieldType();
        int int11 = minutes6.get(durationFieldType10);
        org.joda.time.Minutes minutes13 = minutes6.plus((-1));
        org.joda.time.Minutes minutes15 = minutes6.minus((int) (short) 10);
        org.joda.time.Minutes minutes17 = minutes15.dividedBy((-2147483648));
        org.joda.time.Minutes minutes18 = minutes17.negated();
        org.joda.time.Minutes minutes19 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes20 = minutes19.negated();
        org.joda.time.Minutes minutes21 = minutes19.negated();
        org.joda.time.Minutes minutes22 = minutes17.minus(minutes21);
        org.joda.time.Minutes minutes24 = minutes21.plus((int) 'a');
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes24);
        org.joda.time.Minutes minutes27 = minutes24.dividedBy((int) (byte) 1);
        java.lang.String str28 = minutes24.toString();
        org.joda.time.Minutes minutes30 = minutes24.dividedBy(2);
        boolean boolean31 = minutes0.isLessThan(minutes24);
        int int32 = minutes0.size();
        org.joda.time.DurationFieldType durationFieldType34 = minutes0.getFieldType(0);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-2) + "'", int11 == (-2));
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "PT-2147483550M" + "'", str28, "PT-2147483550M");
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(durationFieldType34);
    }

    @Test
    public void test0999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0999");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod1 = minutes0.toMutablePeriod();
        org.joda.time.Minutes minutes2 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes6 = minutes2.plus(0);
        int int7 = minutes0.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes2);
        org.joda.time.Minutes minutes9 = minutes2.plus((int) ' ');
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes11 = minutes10.negated();
        org.joda.time.Minutes minutes12 = minutes10.negated();
        org.joda.time.DurationFieldType durationFieldType13 = minutes10.getFieldType();
        java.lang.String str14 = minutes10.toString();
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes16 = minutes15.negated();
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes15);
        int int18 = minutes15.size();
        org.joda.time.MutablePeriod mutablePeriod19 = minutes15.toMutablePeriod();
        boolean boolean20 = minutes10.equals((java.lang.Object) minutes15);
        org.joda.time.DurationFieldType durationFieldType22 = minutes15.getFieldType((int) (short) 0);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod24 = minutes23.toMutablePeriod();
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes27 = minutes25.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes29 = minutes25.plus(0);
        int int30 = minutes23.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes25);
        org.joda.time.Minutes minutes32 = minutes25.plus((int) ' ');
        java.lang.String str33 = minutes25.toString();
        org.joda.time.Minutes minutes35 = org.joda.time.Minutes.parseMinutes("PT2147483647M");
        boolean boolean36 = minutes25.isLessThan(minutes35);
        org.joda.time.Period period37 = minutes35.toPeriod();
        boolean boolean38 = minutes15.isGreaterThan(minutes35);
        org.joda.time.Period period39 = minutes15.toPeriod();
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) period39);
        org.joda.time.Minutes minutes41 = minutes9.minus(minutes40);
        org.joda.time.Period period42 = minutes40.toPeriod();
        org.joda.time.Minutes minutes43 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod44 = minutes43.toMutablePeriod();
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes46 = minutes43.plus(minutes45);
        org.joda.time.Minutes minutes47 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod48 = minutes47.toMutablePeriod();
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes50 = minutes47.plus(minutes49);
        boolean boolean51 = minutes46.isLessThan(minutes47);
        org.joda.time.PeriodType periodType52 = minutes46.getPeriodType();
        org.joda.time.Minutes minutes54 = minutes46.dividedBy(3);
        org.joda.time.Minutes minutes56 = minutes54.dividedBy(10);
        org.joda.time.Minutes minutes58 = minutes56.minus((-22139006));
        org.joda.time.Minutes minutes60 = minutes58.plus((-22139006));
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes61 = minutes40.minus(minutes58);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 2147483647 + 49443782");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "PT2147483647M" + "'", str14, "PT2147483647M");
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "PT2M" + "'", str33, "PT2M");
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(mutablePeriod44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertNotNull(minutes50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes60);
    }

    @Test
    public void test1000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test1000");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.minus((int) (short) 1);
        org.joda.time.Minutes minutes4 = minutes2.multipliedBy(0);
        org.joda.time.Duration duration5 = minutes2.toStandardDuration();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.MAX_VALUE;
        int int7 = minutes6.size();
        int int9 = minutes6.getValue(0);
        org.joda.time.Minutes minutes10 = minutes6.negated();
        org.joda.time.DurationFieldType durationFieldType12 = minutes6.getFieldType(0);
        boolean boolean13 = minutes2.equals((java.lang.Object) 0);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes16 = minutes14.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType18 = null;
        int int19 = minutes17.get(durationFieldType18);
        org.joda.time.MutablePeriod mutablePeriod20 = minutes17.toMutablePeriod();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes17);
        boolean boolean22 = minutes16.isLessThan(minutes21);
        int int23 = minutes16.getMinutes();
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.parseMinutes("PT-2147483645M");
        boolean boolean26 = minutes16.isLessThan(minutes25);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes16);
        org.joda.time.Minutes minutes28 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes30 = minutes28.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes31 = minutes28.negated();
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes34 = minutes28.minus(minutes33);
        boolean boolean35 = minutes16.isLessThan(minutes28);
        boolean boolean36 = minutes2.isLessThan(minutes16);
        org.joda.time.Minutes minutes37 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes2);
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes41 = minutes39.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.DurationFieldType durationFieldType43 = null;
        int int44 = minutes42.get(durationFieldType43);
        org.joda.time.DurationFieldType durationFieldType45 = minutes42.getFieldType();
        int int46 = minutes41.get(durationFieldType45);
        org.joda.time.Minutes minutes48 = minutes41.plus((-1));
        boolean boolean49 = minutes38.isGreaterThan(minutes41);
        org.joda.time.DurationFieldType durationFieldType50 = minutes41.getFieldType();
        int int52 = minutes41.getValue((int) (short) 0);
        org.joda.time.Period period53 = minutes41.toPeriod();
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes55 = minutes54.negated();
        org.joda.time.Minutes minutes56 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod57 = minutes56.toMutablePeriod();
        org.joda.time.Minutes minutes58 = org.joda.time.Minutes.THREE;
        org.joda.time.Minutes minutes59 = minutes56.plus(minutes58);
        int int60 = minutes55.compareTo((org.joda.time.base.BaseSingleFieldPeriod) minutes58);
        org.joda.time.Minutes minutes61 = minutes41.minus(minutes55);
        org.joda.time.Minutes minutes62 = org.joda.time.Minutes.TWO;
        org.joda.time.Minutes minutes64 = minutes62.multipliedBy((int) (short) -1);
        org.joda.time.Minutes minutes65 = minutes62.negated();
        org.joda.time.Minutes minutes67 = org.joda.time.Minutes.minutes((int) (short) -1);
        org.joda.time.Minutes minutes68 = minutes62.minus(minutes67);
        org.joda.time.Minutes minutes69 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.MutablePeriod mutablePeriod70 = minutes69.toMutablePeriod();
        org.joda.time.Minutes minutes71 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) mutablePeriod70);
        boolean boolean72 = minutes62.isLessThan(minutes71);
        org.joda.time.Minutes minutes73 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) minutes71);
        org.joda.time.DurationFieldType durationFieldType74 = minutes71.getFieldType();
        boolean boolean75 = minutes41.isSupported(durationFieldType74);
        int int76 = minutes2.get(durationFieldType74);
        java.lang.Class<?> wildcardClass77 = minutes2.getClass();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2147483647 + "'", int9 == 2147483647);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-2) + "'", int23 == (-2));
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-2) + "'", int46 == (-2));
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-2) + "'", int52 == (-2));
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(mutablePeriod57);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(mutablePeriod70);
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(minutes73);
        org.junit.Assert.assertNotNull(durationFieldType74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2147483646 + "'", int76 == 2147483646);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }
}

